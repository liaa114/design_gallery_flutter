// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const io = dart_sdk.io;
  const _internal = dart_sdk._internal;
  const typed_data = dart_sdk.typed_data;
  const html = dart_sdk.html;
  const js_util = dart_sdk.js_util;
  const collection = dart_sdk.collection;
  const developer = dart_sdk.developer;
  const _http = dart_sdk._http;
  const math = dart_sdk.math;
  const convert = dart_sdk.convert;
  const _native_typed_data = dart_sdk._native_typed_data;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const framework = flutter_sdk.src__widgets__framework;
  const app = flutter_sdk.src__material__app;
  const async$ = flutter_sdk.src__widgets__async;
  const basic = flutter_sdk.src__widgets__basic;
  const text$ = flutter_sdk.src__widgets__text;
  const progress_indicator = flutter_sdk.src__material__progress_indicator;
  const alignment = flutter_sdk.src__painting__alignment;
  const binding = flutter_sdk.src__widgets__binding;
  const plugin_registry = flutter_sdk.src__plugin_registry;
  const platform = flutter_sdk.src__foundation__platform;
  const change_notifier = flutter_sdk.src__foundation__change_notifier;
  const page_view = flutter_sdk.src__widgets__page_view;
  const scaffold = flutter_sdk.src__material__scaffold;
  const bottom_tab_bar = flutter_sdk.src__cupertino__bottom_tab_bar;
  const bottom_navigation_bar_item = flutter_sdk.src__widgets__bottom_navigation_bar_item;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const icon = flutter_sdk.src__widgets__icon;
  const icons = flutter_sdk.src__material__icons;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const safe_area = flutter_sdk.src__widgets__safe_area;
  const container = flutter_sdk.src__widgets__container;
  const flex = flutter_sdk.src__rendering__flex;
  const text_style = flutter_sdk.src__painting__text_style;
  const colors = flutter_sdk.src__material__colors;
  const colors$ = flutter_sdk.src__painting__colors;
  const text_field = flutter_sdk.src__material__text_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const borders = flutter_sdk.src__painting__borders;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const gesture_detector = flutter_sdk.src__widgets__gesture_detector;
  const equality = flutter_sdk.src__equality;
  const assertions = flutter_sdk.src__foundation__assertions;
  const diagnostics = flutter_sdk.src__foundation__diagnostics;
  const sliver = flutter_sdk.src__widgets__sliver;
  const layout_builder = flutter_sdk.src__widgets__layout_builder;
  const value_listenable_builder = flutter_sdk.src__widgets__value_listenable_builder;
  const snack_bar = flutter_sdk.src__material__snack_bar;
  const circle_avatar = flutter_sdk.src__material__circle_avatar;
  const image_provider = flutter_sdk.src__painting__image_provider;
  const _network_image_web = flutter_sdk.src__painting___network_image_web;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const iterable_extensions = flutter_sdk.src__iterable_extensions;
  const message_codecs = flutter_sdk.src__services__message_codecs;
  const platform_channel = flutter_sdk.src__services__platform_channel;
  const message_codec = flutter_sdk.src__services__message_codec;
  const binary_messenger = flutter_sdk.src__services__binary_messenger;
  const binding$ = flutter_sdk.src__binding;
  const dialog = flutter_sdk.src__material__dialog;
  const app_bar = flutter_sdk.src__material__app_bar;
  const text_button = flutter_sdk.src__material__text_button;
  const divider = flutter_sdk.src__material__divider;
  const media_query = flutter_sdk.src__widgets__media_query;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const decoration_image = flutter_sdk.src__painting__decoration_image;
  const box_fit = flutter_sdk.src__painting__box_fit;
  const fractional_offset = flutter_sdk.src__painting__fractional_offset;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const sliver_grid = flutter_sdk.src__rendering__sliver_grid;
  const image = flutter_sdk.src__widgets__image;
  const form = flutter_sdk.src__widgets__form;
  const text_form_field = flutter_sdk.src__material__text_form_field;
  const ink_well = flutter_sdk.src__material__ink_well;
  const list_tile = flutter_sdk.src__material__list_tile;
  const serialization = flutter_sdk.src__foundation__serialization;
  const collections = flutter_sdk.src__foundation__collections;
  const box_border = flutter_sdk.src__painting__box_border;
  const implicit_animations = flutter_sdk.src__widgets__implicit_animations;
  const theme = flutter_sdk.src__material__theme;
  const text_span = flutter_sdk.src__painting__text_span;
  const inline_span = flutter_sdk.src__painting__inline_span;
  const date_format = flutter_sdk.src__intl__date_format;
  const string_scanner = flutter_sdk.src__string_scanner;
  const canonicalized_map = flutter_sdk.src__canonicalized_map;
  const stream_group = flutter_sdk.src__stream_group;
  const animation_controller = flutter_sdk.src__animation__animation_controller;
  const tween = flutter_sdk.src__animation__tween;
  const transitions = flutter_sdk.src__widgets__transitions;
  const ticker_provider = flutter_sdk.src__widgets__ticker_provider;
  const animation = flutter_sdk.src__animation__animation;
  const basic_types = flutter_sdk.src__painting__basic_types;
  const sliver$ = flutter_sdk.src__rendering__sliver;
  const sliver_multi_box_adaptor = flutter_sdk.src__rendering__sliver_multi_box_adaptor;
  const object = flutter_sdk.src__rendering__object;
  const box = flutter_sdk.src__rendering__box;
  const recognizer = flutter_sdk.src__gestures__recognizer;
  const sliver_layout_builder = flutter_sdk.src__widgets__sliver_layout_builder;
  const scrollable = flutter_sdk.src__widgets__scrollable;
  const path = flutter_sdk.path;
  const span_exception = flutter_sdk.src__span_exception;
  const layout_helper = flutter_sdk.src__rendering__layout_helper;
  const queue_list = flutter_sdk.src__queue_list;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var firebase_auth = Object.create(dart.library);
  var firebase_core = Object.create(dart.library);
  var provider = Object.create(dart.library);
  var user_provider = Object.create(dart.library);
  var mobile_screen_layout = Object.create(dart.library);
  var login_screen = Object.create(dart.library);
  var cloud_firestore_web = Object.create(dart.library);
  var file_picker_web = Object.create(dart.library);
  var firebase_auth_web = Object.create(dart.library);
  var firebase_core_web = Object.create(dart.library);
  var firebase_storage_web = Object.create(dart.library);
  var image_picker_for_web = Object.create(dart.library);
  var firebase_auth_platform_interface = Object.create(dart.library);
  var firebase_core_platform_interface = Object.create(dart.library);
  var async_provider = Object.create(dart.library);
  var change_notifier_provider = Object.create(dart.library);
  var consumer = Object.create(dart.library);
  var listenable_provider = Object.create(dart.library);
  var provider$ = Object.create(dart.library);
  var proxy_provider = Object.create(dart.library);
  var reassemble_handler = Object.create(dart.library);
  var selector$ = Object.create(dart.library);
  var value_listenable_provider = Object.create(dart.library);
  var user$ = Object.create(dart.library);
  var auth_methods = Object.create(dart.library);
  var colors$0 = Object.create(dart.library);
  var global_variable = Object.create(dart.library);
  var utils = Object.create(dart.library);
  var signup_screen = Object.create(dart.library);
  var cloud_firestore_platform_interface = Object.create(dart.library);
  var internals = Object.create(dart.library);
  var load_bundle_task_web = Object.create(dart.library);
  var web_utils = Object.create(dart.library);
  var firebase_core_web_interop = Object.create(dart.library);
  var collection_reference_web = Object.create(dart.library);
  var document_reference_web = Object.create(dart.library);
  var field_value_factory_web = Object.create(dart.library);
  var firestore$ = Object.create(dart.library);
  var query_web = Object.create(dart.library);
  var transaction_web = Object.create(dart.library);
  var write_batch_web = Object.create(dart.library);
  var file_picker = Object.create(dart.library);
  var firebase_auth_web_multi_factor = Object.create(dart.library);
  var utils$ = Object.create(dart.library);
  var web_utils$ = Object.create(dart.library);
  var firebase_auth_web_confirmation_result = Object.create(dart.library);
  var firebase_auth_web_recaptcha_verifier_factory = Object.create(dart.library);
  var firebase_auth_web_user = Object.create(dart.library);
  var firebase_auth_web_user_credential = Object.create(dart.library);
  var auth$ = Object.create(dart.library);
  var multi_factor = Object.create(dart.library);
  var js$ = Object.create(dart.library);
  var core$ = Object.create(dart.library);
  var firebase_storage_web$ = Object.create(dart.library);
  var image_picker_platform_interface = Object.create(dart.library);
  var mime = Object.create(dart.library);
  var image_resizer = Object.create(dart.library);
  var action_code_info = Object.create(dart.library);
  var action_code_settings = Object.create(dart.library);
  var additional_user_info = Object.create(dart.library);
  var auth_credential = Object.create(dart.library);
  var auth_provider = Object.create(dart.library);
  var firebase_auth_exception = Object.create(dart.library);
  var firebase_auth_multi_factor_exception = Object.create(dart.library);
  var id_token_result = Object.create(dart.library);
  var messages$46pigeon = Object.create(dart.library);
  var platform_interface_confirmation_result = Object.create(dart.library);
  var platform_interface_firebase_auth = Object.create(dart.library);
  var platform_interface_multi_factor = Object.create(dart.library);
  var platform_interface_recaptcha_verifier_factory = Object.create(dart.library);
  var platform_interface_user = Object.create(dart.library);
  var platform_interface_user_credential = Object.create(dart.library);
  var apple_auth = Object.create(dart.library);
  var email_auth = Object.create(dart.library);
  var facebook_auth = Object.create(dart.library);
  var github_auth = Object.create(dart.library);
  var google_auth = Object.create(dart.library);
  var microsoft_auth = Object.create(dart.library);
  var oauth = Object.create(dart.library);
  var phone_auth = Object.create(dart.library);
  var saml_auth = Object.create(dart.library);
  var twitter_auth = Object.create(dart.library);
  var yahoo_auth = Object.create(dart.library);
  var types = Object.create(dart.library);
  var user_info = Object.create(dart.library);
  var user_metadata = Object.create(dart.library);
  var messages$46pigeon$ = Object.create(dart.library);
  var plugin_platform_interface = Object.create(dart.library);
  var mocks = Object.create(dart.library);
  var test_api = Object.create(dart.library);
  var nested = Object.create(dart.library);
  var cloud_firestore = Object.create(dart.library);
  var storage_methods = Object.create(dart.library);
  var add_post_screen = Object.create(dart.library);
  var feed_screen = Object.create(dart.library);
  var profile_screen = Object.create(dart.library);
  var search_screen = Object.create(dart.library);
  var image_picker = Object.create(dart.library);
  var pointer = Object.create(dart.library);
  var messages$46pigeon$0 = Object.create(dart.library);
  var blob = Object.create(dart.library);
  var field_path = Object.create(dart.library);
  var field_path_type = Object.create(dart.library);
  var filters = Object.create(dart.library);
  var geo_point = Object.create(dart.library);
  var get_options = Object.create(dart.library);
  var load_bundle_task_state = Object.create(dart.library);
  var persistence_settings = Object.create(dart.library);
  var platform_interface_aggregate_query = Object.create(dart.library);
  var platform_interface_aggregate_query_snapshot = Object.create(dart.library);
  var platform_interface_collection_reference = Object.create(dart.library);
  var platform_interface_document_change = Object.create(dart.library);
  var platform_interface_document_reference = Object.create(dart.library);
  var platform_interface_document_snapshot = Object.create(dart.library);
  var platform_interface_field_value = Object.create(dart.library);
  var platform_interface_field_value_factory = Object.create(dart.library);
  var platform_interface_firestore = Object.create(dart.library);
  var platform_interface_index_definitions = Object.create(dart.library);
  var platform_interface_load_bundle_task = Object.create(dart.library);
  var platform_interface_load_bundle_task_snapshot = Object.create(dart.library);
  var platform_interface_query = Object.create(dart.library);
  var platform_interface_query_snapshot = Object.create(dart.library);
  var platform_interface_transaction = Object.create(dart.library);
  var platform_interface_write_batch = Object.create(dart.library);
  var load_bundle_task_state$ = Object.create(dart.library);
  var set_options = Object.create(dart.library);
  var settings = Object.create(dart.library);
  var snapshot_metadata = Object.create(dart.library);
  var timestamp = Object.create(dart.library);
  var _flutterfire_internals = Object.create(dart.library);
  var firestore_interop = Object.create(dart.library);
  var decode_utility = Object.create(dart.library);
  var es6_interop = Object.create(dart.library);
  var func = Object.create(dart.library);
  var js$0 = Object.create(dart.library);
  var js_interop = Object.create(dart.library);
  var utils$0 = Object.create(dart.library);
  var encode_utility = Object.create(dart.library);
  var field_value_web = Object.create(dart.library);
  var utils$1 = Object.create(dart.library);
  var aggregate_query_web = Object.create(dart.library);
  var file_picker$ = Object.create(dart.library);
  var platform_file = Object.create(dart.library);
  var file_picker_result = Object.create(dart.library);
  var window_interop = Object.create(dart.library);
  var http_parser = Object.create(dart.library);
  var auth_interop = Object.create(dart.library);
  var app$ = Object.create(dart.library);
  var core_interop = Object.create(dart.library);
  var app_interop = Object.create(dart.library);
  var firebase_storage_platform_interface = Object.create(dart.library);
  var storage = Object.create(dart.library);
  var reference_web = Object.create(dart.library);
  var errors = Object.create(dart.library);
  var cross_file = Object.create(dart.library);
  var image_picker_platform = Object.create(dart.library);
  var types$ = Object.create(dart.library);
  var mime_multipart_transformer = Object.create(dart.library);
  var mime_shared = Object.create(dart.library);
  var mime_type = Object.create(dart.library);
  var image_resizer_utils = Object.create(dart.library);
  var method_channel_firebase_auth = Object.create(dart.library);
  var method_channel_multi_factor = Object.create(dart.library);
  var firebase_storage = Object.create(dart.library);
  var uuid = Object.create(dart.library);
  var firestore_methods = Object.create(dart.library);
  var dimensions = Object.create(dart.library);
  var post_card = Object.create(dart.library);
  var follow_button = Object.create(dart.library);
  var flutter_staggered_grid_view = Object.create(dart.library);
  var firestore_message_codec = Object.create(dart.library);
  var method_channel_field_value_factory = Object.create(dart.library);
  var method_channel_firestore = Object.create(dart.library);
  var exception$ = Object.create(dart.library);
  var file_picker_io = Object.create(dart.library);
  var file_picker_macos = Object.create(dart.library);
  var file_picker_linux = Object.create(dart.library);
  var stub = Object.create(dart.library);
  var authentication_challenge = Object.create(dart.library);
  var case_insensitive_map = Object.create(dart.library);
  var chunked_coding = Object.create(dart.library);
  var http_date = Object.create(dart.library);
  var media_type = Object.create(dart.library);
  var full_metadata = Object.create(dart.library);
  var list_options = Object.create(dart.library);
  var platform_interface_firebase_storage = Object.create(dart.library);
  var platform_interface_list_result = Object.create(dart.library);
  var platform_interface_reference = Object.create(dart.library);
  var platform_interface_task = Object.create(dart.library);
  var platform_interface_task_snapshot = Object.create(dart.library);
  var put_string_format = Object.create(dart.library);
  var settable_metadata = Object.create(dart.library);
  var task_state = Object.create(dart.library);
  var storage_interop = Object.create(dart.library);
  var http = Object.create(dart.library);
  var metadata$ = Object.create(dart.library);
  var task_web = Object.create(dart.library);
  var list = Object.create(dart.library);
  var metadata_cache = Object.create(dart.library);
  var x_file = Object.create(dart.library);
  var method_channel_image_picker = Object.create(dart.library);
  var camera_delegate = Object.create(dart.library);
  var camera_device = Object.create(dart.library);
  var image_options = Object.create(dart.library);
  var image_source = Object.create(dart.library);
  var lost_data_response = Object.create(dart.library);
  var media_options = Object.create(dart.library);
  var media_selection_type = Object.create(dart.library);
  var multi_image_picker_options = Object.create(dart.library);
  var picked_file = Object.create(dart.library);
  var retrieve_type = Object.create(dart.library);
  var bound_multipart_stream = Object.create(dart.library);
  var char_code = Object.create(dart.library);
  var default_extension_map = Object.create(dart.library);
  var magic_number = Object.create(dart.library);
  var convert_auth_provider = Object.create(dart.library);
  var method_channel_user = Object.create(dart.library);
  var method_channel_user_credential = Object.create(dart.library);
  var exception$0 = Object.create(dart.library);
  var pigeon_helper = Object.create(dart.library);
  var utils$2 = Object.create(dart.library);
  var data = Object.create(dart.library);
  var rng$ = Object.create(dart.library);
  var validation = Object.create(dart.library);
  var enums = Object.create(dart.library);
  var parsing = Object.create(dart.library);
  var uuid_value = Object.create(dart.library);
  var v1 = Object.create(dart.library);
  var v4 = Object.create(dart.library);
  var v5 = Object.create(dart.library);
  var v6 = Object.create(dart.library);
  var v7 = Object.create(dart.library);
  var v8 = Object.create(dart.library);
  var post$ = Object.create(dart.library);
  var comments_screen = Object.create(dart.library);
  var like_animation = Object.create(dart.library);
  var quilted = Object.create(dart.library);
  var staired = Object.create(dart.library);
  var woven = Object.create(dart.library);
  var sliver_masonry_grid = Object.create(dart.library);
  var sliver_simple_grid_delegate = Object.create(dart.library);
  var aligned_grid_view = Object.create(dart.library);
  var masonry_grid_view = Object.create(dart.library);
  var sliver_aligned_grid = Object.create(dart.library);
  var sliver_masonry_grid$ = Object.create(dart.library);
  var staggered_grid = Object.create(dart.library);
  var staggered_grid_tile = Object.create(dart.library);
  var method_channel_field_value = Object.create(dart.library);
  var method_channel_query = Object.create(dart.library);
  var method_channel_load_bundle_task = Object.create(dart.library);
  var method_channel_query_snapshot = Object.create(dart.library);
  var method_channel_collection_reference = Object.create(dart.library);
  var method_channel_document_reference = Object.create(dart.library);
  var method_channel_transaction = Object.create(dart.library);
  var method_channel_write_batch = Object.create(dart.library);
  var exception = Object.create(dart.library);
  var utils$3 = Object.create(dart.library);
  var dialog_handler = Object.create(dart.library);
  var scan = Object.create(dart.library);
  var utils$4 = Object.create(dart.library);
  var decoder = Object.create(dart.library);
  var encoder = Object.create(dart.library);
  var method_channel_firebase_storage = Object.create(dart.library);
  var pointer$ = Object.create(dart.library);
  var client$ = Object.create(dart.library);
  var exception$1 = Object.create(dart.library);
  var request$ = Object.create(dart.library);
  var response$ = Object.create(dart.library);
  var streamed_request = Object.create(dart.library);
  var base_client = Object.create(dart.library);
  var base_request = Object.create(dart.library);
  var base_response = Object.create(dart.library);
  var byte_stream = Object.create(dart.library);
  var multipart_file = Object.create(dart.library);
  var multipart_request = Object.create(dart.library);
  var streamed_response = Object.create(dart.library);
  var task = Object.create(dart.library);
  var list_result_web = Object.create(dart.library);
  var html$ = Object.create(dart.library);
  var lost_data = Object.create(dart.library);
  var html$0 = Object.create(dart.library);
  var crypto = Object.create(dart.library);
  var sprintf = Object.create(dart.library);
  var comment_card = Object.create(dart.library);
  var extensions = Object.create(dart.library);
  var constants = Object.create(dart.library);
  var sliver_patterned_grid_delegate = Object.create(dart.library);
  var uniform_track = Object.create(dart.library);
  var staggered_grid$ = Object.create(dart.library);
  var method_channel_aggregate_query = Object.create(dart.library);
  var method_channel_document_change = Object.create(dart.library);
  var auto_id_generator = Object.create(dart.library);
  var kdialog_handler = Object.create(dart.library);
  var qarma_and_zenity_handler = Object.create(dart.library);
  var typed_data$ = Object.create(dart.library);
  var charcodes = Object.create(dart.library);
  var messages$46pigeon$1 = Object.create(dart.library);
  var exception$2 = Object.create(dart.library);
  var method_channel_reference = Object.create(dart.library);
  var browser_client = Object.create(dart.library);
  var utils$5 = Object.create(dart.library);
  var multipart_file_stub = Object.create(dart.library);
  var boundary_characters = Object.create(dart.library);
  var task_snapshot_web = Object.create(dart.library);
  var web_helpers = Object.create(dart.library);
  var base = Object.create(dart.library);
  var base$ = Object.create(dart.library);
  var digest = Object.create(dart.library);
  var hash = Object.create(dart.library);
  var hmac = Object.create(dart.library);
  var md5 = Object.create(dart.library);
  var sha1 = Object.create(dart.library);
  var sha256 = Object.create(dart.library);
  var sha512 = Object.create(dart.library);
  var uniform_track$ = Object.create(dart.library);
  var typed_queue = Object.create(dart.library);
  var typed_buffers = Object.create(dart.library);
  var method_channel_list_result = Object.create(dart.library);
  var method_channel_task = Object.create(dart.library);
  var digest_sink = Object.create(dart.library);
  var hash_sink = Object.create(dart.library);
  var utils$6 = Object.create(dart.library);
  var sha512_slowsinks = Object.create(dart.library);
  var typed_buffer = Object.create(dart.library);
  var method_channel_task_snapshot = Object.create(dart.library);
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T$.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ListOfString()])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T$.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T$.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    ChangeNotifierProviderOfUserProvider: () => (T$.ChangeNotifierProviderOfUserProvider = dart.constFn(change_notifier_provider.ChangeNotifierProvider$(user_provider.UserProvider)))(),
    BuildContextToUserProvider: () => (T$.BuildContextToUserProvider = dart.constFn(dart.fnType(user_provider.UserProvider, [framework.BuildContext])))(),
    JSArrayOfSingleChildWidget: () => (T$.JSArrayOfSingleChildWidget = dart.constFn(_interceptors.JSArray$(nested.SingleChildWidget)))(),
    UserN: () => (T$.UserN = dart.constFn(dart.nullable(firebase_auth.User)))(),
    StreamBuilderOfUserN: () => (T$.StreamBuilderOfUserN = dart.constFn(async$.StreamBuilder$(T$.UserN())))(),
    AsyncSnapshotOfUserN: () => (T$.AsyncSnapshotOfUserN = dart.constFn(async$.AsyncSnapshot$(T$.UserN())))(),
    BuildContextAndAsyncSnapshotOfUserNToWidget: () => (T$.BuildContextAndAsyncSnapshotOfUserNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AsyncSnapshotOfUserN()])))(),
    VoidToFirebaseAuth: () => (T$.VoidToFirebaseAuth = dart.constFn(dart.fnType(firebase_auth.FirebaseAuth, [])))(),
    UserPlatformN: () => (T$.UserPlatformN = dart.constFn(dart.nullable(platform_interface_user.UserPlatform)))(),
    UserPlatformNToUserN: () => (T$.UserPlatformNToUserN = dart.constFn(dart.fnType(T$.UserN(), [T$.UserPlatformN()])))(),
    StreamSubscriptionOfUserN: () => (T$.StreamSubscriptionOfUserN = dart.constFn(async.StreamSubscription$(T$.UserN())))(),
    StreamSubscriptionOfUserNTovoid: () => (T$.StreamSubscriptionOfUserNTovoid = dart.constFn(dart.fnType(dart.void, [T$.StreamSubscriptionOfUserN()])))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    MapOfObjectN$ObjectN: () => (T$.MapOfObjectN$ObjectN = dart.constFn(core.Map$(T$.ObjectN(), T$.ObjectN())))(),
    MapNOfObjectN$ObjectN: () => (T$.MapNOfObjectN$ObjectN = dart.constFn(dart.nullable(T$.MapOfObjectN$ObjectN())))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    ExpandoOfObject: () => (T$.ExpandoOfObject = dart.constFn(core.Expando$(core.Object)))(),
    IdentityMapOfString$FirebaseAuth: () => (T$.IdentityMapOfString$FirebaseAuth = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_auth.FirebaseAuth)))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    IdentityMapOfString$StringN: () => (T$.IdentityMapOfString$StringN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StringN())))(),
    FirebaseAppPlatformToFirebaseApp: () => (T$.FirebaseAppPlatformToFirebaseApp = dart.constFn(dart.fnType(firebase_core.FirebaseApp, [firebase_core_platform_interface.FirebaseAppPlatform])))(),
    JSArrayOfBottomNavigationBarItem: () => (T$.JSArrayOfBottomNavigationBarItem = dart.constFn(_interceptors.JSArray$(bottom_navigation_bar_item.BottomNavigationBarItem)))(),
    BuildContextToMobileScreenLayout: () => (T$.BuildContextToMobileScreenLayout = dart.constFn(dart.fnType(mobile_screen_layout.MobileScreenLayout, [framework.BuildContext])))(),
    RouteTobool: () => (T$.RouteTobool = dart.constFn(dart.fnType(core.bool, [navigator.Route])))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextToSignupScreen: () => (T$.BuildContextToSignupScreen = dart.constFn(dart.fnType(signup_screen.SignupScreen, [framework.BuildContext])))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    TransactionN: () => (T$.TransactionN = dart.constFn(dart.nullable(firestore$.Transaction)))(),
    VoidToFuture: () => (T$.VoidToFuture = dart.constFn(dart.fnType(async.Future, [])))(),
    VoidToFutureOfvoid: () => (T$.VoidToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [])))(),
    ListOfPlatformFile: () => (T$.ListOfPlatformFile = dart.constFn(core.List$(platform_file.PlatformFile)))(),
    ListNOfPlatformFile: () => (T$.ListNOfPlatformFile = dart.constFn(dart.nullable(T$.ListOfPlatformFile())))(),
    CompleterOfListNOfPlatformFile: () => (T$.CompleterOfListNOfPlatformFile = dart.constFn(async.Completer$(T$.ListNOfPlatformFile())))(),
    JSArrayOfPlatformFile: () => (T$.JSArrayOfPlatformFile = dart.constFn(_interceptors.JSArray$(platform_file.PlatformFile)))(),
    Uint8ListN: () => (T$.Uint8ListN = dart.constFn(dart.nullable(typed_data.Uint8List)))(),
    ListOfint: () => (T$.ListOfint = dart.constFn(core.List$(core.int)))(),
    StreamOfListOfint: () => (T$.StreamOfListOfint = dart.constFn(async.Stream$(T$.ListOfint())))(),
    StreamNOfListOfint: () => (T$.StreamNOfListOfint = dart.constFn(dart.nullable(T$.StreamOfListOfint())))(),
    FileAndUint8ListNAndStringN__Tovoid: () => (T$.FileAndUint8ListNAndStringN__Tovoid = dart.constFn(dart.fnType(dart.void, [html.File, T$.Uint8ListN(), T$.StringN(), T$.StreamNOfListOfint()])))(),
    ProgressEventTovoid: () => (T$.ProgressEventTovoid = dart.constFn(dart.fnType(dart.void, [html.ProgressEvent])))(),
    dynamicTovoid: () => (T$.dynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic])))(),
    FilePickerResultN: () => (T$.FilePickerResultN = dart.constFn(dart.nullable(file_picker_result.FilePickerResult)))(),
    StringAndStringToString: () => (T$.StringAndStringToString = dart.constFn(dart.fnType(core.String, [core.String, core.String])))(),
    _AsyncStarImplOfListOfint: () => (T$._AsyncStarImplOfListOfint = dart.constFn(async._AsyncStarImpl$(T$.ListOfint())))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    CompleterOfvoid: () => (T$.CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))(),
    StreamControllerOfUserPlatformN: () => (T$.StreamControllerOfUserPlatformN = dart.constFn(async.StreamController$(T$.UserPlatformN())))(),
    UserWebN: () => (T$.UserWebN = dart.constFn(dart.nullable(firebase_auth_web_user.UserWeb)))(),
    UserN$1: () => (T$.UserN$1 = dart.constFn(dart.nullable(auth$.User)))(),
    UserNToUserWebN: () => (T$.UserNToUserWebN = dart.constFn(dart.fnType(T$.UserWebN(), [T$.UserN$1()])))(),
    UserWebNTovoid: () => (T$.UserWebNTovoid = dart.constFn(dart.fnType(dart.void, [T$.UserWebN()])))(),
    AppToFutureOfvoid: () => (T$.AppToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [app$.App])))(),
    _AsyncStarImplOfUserPlatformN: () => (T$._AsyncStarImplOfUserPlatformN = dart.constFn(async._AsyncStarImpl$(T$.UserPlatformN())))(),
    IdentityMapOfString$dynamic: () => (T$.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    ObjectNToObjectN: () => (T$.ObjectNToObjectN = dart.constFn(dart.fnType(T$.ObjectN(), [T$.ObjectN()])))(),
    ListOfObjectN: () => (T$.ListOfObjectN = dart.constFn(core.List$(T$.ObjectN())))(),
    PigeonUserDetailsN: () => (T$.PigeonUserDetailsN = dart.constFn(dart.nullable(messages$46pigeon.PigeonUserDetails)))(),
    IdentityMapOfString$StreamControllerOfUserPlatformN: () => (T$.IdentityMapOfString$StreamControllerOfUserPlatformN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StreamControllerOfUserPlatformN())))(),
    VoidToFirebaseWebService: () => (T$.VoidToFirebaseWebService = dart.constFn(dart.fnType(firebase_core_web.FirebaseWebService, [])))(),
    dynamicToString: () => (T$.dynamicToString = dart.constFn(dart.fnType(core.String, [dart.dynamic])))(),
    StringToString: () => (T$.StringToString = dart.constFn(dart.fnType(core.String, [core.String])))(),
    FirebaseWebServiceToFutureOfvoid: () => (T$.FirebaseWebServiceToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [firebase_core_web.FirebaseWebService])))(),
    ListOfFirebaseAppPlatform: () => (T$.ListOfFirebaseAppPlatform = dart.constFn(core.List$(firebase_core_platform_interface.FirebaseAppPlatform)))(),
    AppToFirebaseAppPlatform: () => (T$.AppToFirebaseAppPlatform = dart.constFn(dart.fnType(firebase_core_platform_interface.FirebaseAppPlatform, [app$.App])))(),
    VoidToListOfFirebaseAppPlatform: () => (T$.VoidToListOfFirebaseAppPlatform = dart.constFn(dart.fnType(T$.ListOfFirebaseAppPlatform(), [])))(),
    VoidToString: () => (T$.VoidToString = dart.constFn(dart.fnType(core.String, [])))(),
    VoidToApp: () => (T$.VoidToApp = dart.constFn(dart.fnType(app$.App, [])))(),
    IdentityMapOfString$FirebaseWebService: () => (T$.IdentityMapOfString$FirebaseWebService = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_core_web.FirebaseWebService)))(),
    ObjectAndStackTraceToNever: () => (T$.ObjectAndStackTraceToNever = dart.constFn(dart.fnType(dart.Never, [core.Object, core.StackTrace])))(),
    XFileN: () => (T$.XFileN = dart.constFn(dart.nullable(html$.XFile)))(),
    FutureOfXFile: () => (T$.FutureOfXFile = dart.constFn(async.Future$(html$.XFile)))(),
    XFileToFutureOfXFile: () => (T$.XFileToFutureOfXFile = dart.constFn(dart.fnType(T$.FutureOfXFile(), [html$.XFile])))(),
    ListOfXFile: () => (T$.ListOfXFile = dart.constFn(core.List$(html$.XFile)))(),
    FileUploadInputElementN: () => (T$.FileUploadInputElementN = dart.constFn(dart.nullable(html.FileUploadInputElement)))(),
    CompleterOfListOfXFile: () => (T$.CompleterOfListOfXFile = dart.constFn(async.Completer$(T$.ListOfXFile())))(),
    FileToXFile: () => (T$.FileToXFile = dart.constFn(dart.fnType(html$.XFile, [html.File])))(),
    EventToNull: () => (T$.EventToNull = dart.constFn(dart.fnType(core.Null, [html.Event])))(),
    JSArrayOfXFile: () => (T$.JSArrayOfXFile = dart.constFn(_interceptors.JSArray$(html$.XFile)))(),
    DefaultEqualityOfNever: () => (T$.DefaultEqualityOfNever = dart.constFn(equality.DefaultEquality$(dart.Never)))(),
    PigeonInitializeResponseN: () => (T$.PigeonInitializeResponseN = dart.constFn(dart.nullable(messages$46pigeon$.PigeonInitializeResponse)))(),
    PigeonInitializeResponseNTobool: () => (T$.PigeonInitializeResponseNTobool = dart.constFn(dart.fnType(core.bool, [T$.PigeonInitializeResponseN()])))(),
    IdentityMapOfString$MethodChannelFirebaseApp: () => (T$.IdentityMapOfString$MethodChannelFirebaseApp = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_core_platform_interface.MethodChannelFirebaseApp)))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    ObjectNToNull: () => (T$.ObjectNToNull = dart.constFn(dart.fnType(core.Null, [T$.ObjectN()])))(),
    ChangeNotifierN: () => (T$.ChangeNotifierN = dart.constFn(dart.nullable(change_notifier.ChangeNotifier)))(),
    BuildContextAndChangeNotifierNTovoid: () => (T$.BuildContextAndChangeNotifierNTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T$.ChangeNotifierN()])))(),
    ListenableN: () => (T$.ListenableN = dart.constFn(dart.nullable(change_notifier.Listenable)))(),
    InheritedContextOfListenableN: () => (T$.InheritedContextOfListenableN = dart.constFn(provider$.InheritedContext$(T$.ListenableN())))(),
    InheritedContextOfListenableNAndListenableNToFn: () => (T$.InheritedContextOfListenableNAndListenableNToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [T$.InheritedContextOfListenableN(), T$.ListenableN()])))(),
    TTovoid$1: () => (T$.TTovoid$1 = dart.constFn(dart.gFnType(T => [dart.void, [T]], T => [T$.ObjectN()])))(),
    JSArrayOfPostEventCall: () => (T$.JSArrayOfPostEventCall = dart.constFn(_interceptors.JSArray$(provider$.PostEventCall)))(),
    IdentityMapOfString$ProviderNode: () => (T$.IdentityMapOfString$ProviderNode = dart.constFn(_js_helper.IdentityMap$(core.String, provider$.ProviderNode)))(),
    ElementTovoid: () => (T$.ElementTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element])))(),
    _NestedHookElementN: () => (T$._NestedHookElementN = dart.constFn(dart.nullable(nested._NestedHookElement)))(),
    ElementTobool: () => (T$.ElementTobool = dart.constFn(dart.fnType(core.bool, [framework.Element])))(),
    LinkedHashMapOfString$ProviderNode: () => (T$.LinkedHashMapOfString$ProviderNode = dart.constFn(collection.LinkedHashMap$(core.String, provider$.ProviderNode)))(),
    FutureOfNull: () => (T$.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    FnToR: () => (T$.FnToR = dart.constFn(dart.gFnType((T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [R, [__t$TToR()]];
    }, (T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [T$.ObjectN(), T$.ObjectN()];
    })))(),
    VoidToT: () => (T$.VoidToT = dart.constFn(dart.gFnType(T => [T, []], T => [T$.ObjectN()])))(),
    intN: () => (T$.intN = dart.constFn(dart.nullable(core.int)))(),
    JSArrayOfintN: () => (T$.JSArrayOfintN = dart.constFn(_interceptors.JSArray$(T$.intN())))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    MapOfString$dynamic: () => (T$.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    BuildContextToLoginScreen: () => (T$.BuildContextToLoginScreen = dart.constFn(dart.fnType(login_screen.LoginScreen, [framework.BuildContext])))(),
    StreamSubscriptionOfLoadBundleTaskProgress: () => (T$.StreamSubscriptionOfLoadBundleTaskProgress = dart.constFn(async.StreamSubscription$(firestore$.LoadBundleTaskProgress)))(),
    StreamSubscriptionOfLoadBundleTaskProgressTovoid: () => (T$.StreamSubscriptionOfLoadBundleTaskProgressTovoid = dart.constFn(dart.fnType(dart.void, [T$.StreamSubscriptionOfLoadBundleTaskProgress()])))(),
    LoadBundleTaskProgressToLoadBundleTaskSnapshotPlatform: () => (T$.LoadBundleTaskProgressToLoadBundleTaskSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, [firestore$.LoadBundleTaskProgress])))(),
    DocumentSnapshotN: () => (T$.DocumentSnapshotN = dart.constFn(dart.nullable(firestore$.DocumentSnapshot)))(),
    DocumentSnapshotNToDocumentSnapshotPlatform: () => (T$.DocumentSnapshotNToDocumentSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_document_snapshot.DocumentSnapshotPlatform, [T$.DocumentSnapshotN()])))(),
    DocumentChangeToDocumentChangePlatform: () => (T$.DocumentChangeToDocumentChangePlatform = dart.constFn(dart.fnType(platform_interface_document_change.DocumentChangePlatform, [firestore$.DocumentChange])))(),
    FieldPathToString: () => (T$.FieldPathToString = dart.constFn(dart.fnType(core.String, [field_path.FieldPath])))(),
    LinkedHashMapOfString$dynamic: () => (T$.LinkedHashMapOfString$dynamic = dart.constFn(collection.LinkedHashMap$(core.String, dart.dynamic)))(),
    ListN: () => (T$.ListN = dart.constFn(dart.nullable(core.List)))(),
    MapOfString$ObjectN: () => (T$.MapOfString$ObjectN = dart.constFn(core.Map$(core.String, T$.ObjectN())))(),
    FutureOfQuerySnapshotPlatform: () => (T$.FutureOfQuerySnapshotPlatform = dart.constFn(async.Future$(platform_interface_query_snapshot.QuerySnapshotPlatform)))(),
    VoidToFutureOfQuerySnapshotPlatform: () => (T$.VoidToFutureOfQuerySnapshotPlatform = dart.constFn(dart.fnType(T$.FutureOfQuerySnapshotPlatform(), [])))(),
    StreamOfQuerySnapshotPlatform: () => (T$.StreamOfQuerySnapshotPlatform = dart.constFn(async.Stream$(platform_interface_query_snapshot.QuerySnapshotPlatform)))(),
    QuerySnapshotToQuerySnapshotPlatform: () => (T$.QuerySnapshotToQuerySnapshotPlatform = dart.constFn(dart.fnType(platform_interface_query_snapshot.QuerySnapshotPlatform, [firestore$.QuerySnapshot])))(),
    VoidToStreamOfQuerySnapshotPlatform: () => (T$.VoidToStreamOfQuerySnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfQuerySnapshotPlatform(), [])))(),
    JSArrayOfAggregateQuery: () => (T$.JSArrayOfAggregateQuery = dart.constFn(_interceptors.JSArray$(messages$46pigeon$0.AggregateQuery)))(),
    AggregateFieldN: () => (T$.AggregateFieldN = dart.constFn(dart.nullable(platform_interface_query.AggregateField)))(),
    JSArrayOfAggregateFieldN: () => (T$.JSArrayOfAggregateFieldN = dart.constFn(_interceptors.JSArray$(T$.AggregateFieldN())))(),
    AggregateFieldToAggregateQuery: () => (T$.AggregateFieldToAggregateQuery = dart.constFn(dart.fnType(messages$46pigeon$0.AggregateQuery, [platform_interface_query.AggregateField])))(),
    FutureOrOfDocumentSnapshot: () => (T$.FutureOrOfDocumentSnapshot = dart.constFn(async.FutureOr$(firestore$.DocumentSnapshot)))(),
    FutureOfDocumentSnapshot: () => (T$.FutureOfDocumentSnapshot = dart.constFn(async.Future$(firestore$.DocumentSnapshot)))(),
    VoidToFutureOfDocumentSnapshot: () => (T$.VoidToFutureOfDocumentSnapshot = dart.constFn(dart.fnType(T$.FutureOfDocumentSnapshot(), [])))(),
    StreamOfDocumentSnapshotPlatform: () => (T$.StreamOfDocumentSnapshotPlatform = dart.constFn(async.Stream$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    DocumentSnapshotToDocumentSnapshotPlatform: () => (T$.DocumentSnapshotToDocumentSnapshotPlatform = dart.constFn(dart.fnType(platform_interface_document_snapshot.DocumentSnapshotPlatform, [firestore$.DocumentSnapshot])))(),
    VoidToStreamOfDocumentSnapshotPlatform: () => (T$.VoidToStreamOfDocumentSnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfDocumentSnapshotPlatform(), [])))(),
    QueryOfQueryJsImpl: () => (T$.QueryOfQueryJsImpl = dart.constFn(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false))))(),
    StreamControllerOfvoid: () => (T$.StreamControllerOfvoid = dart.constFn(async.StreamController$(dart.void)))(),
    dynamicToPromiseJsImpl: () => (T$.dynamicToPromiseJsImpl = dart.constFn(dart.fnType(dart.packageJSType("Promise", false), [dart.dynamic])))(),
    FutureOfObjectN: () => (T$.FutureOfObjectN = dart.constFn(async.Future$(T$.ObjectN())))(),
    ObjectNTodynamic: () => (T$.ObjectNTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ObjectN()])))(),
    voidTodynamic: () => (T$.voidTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.void])))(),
    ExpandoOfFirestore: () => (T$.ExpandoOfFirestore = dart.constFn(core.Expando$(firestore$.Firestore)))(),
    StreamControllerOfLoadBundleTaskProgress: () => (T$.StreamControllerOfLoadBundleTaskProgress = dart.constFn(async.StreamController$(firestore$.LoadBundleTaskProgress)))(),
    LoadBundleTaskProgressJsImplTovoid: () => (T$.LoadBundleTaskProgressJsImplTovoid = dart.constFn(dart.fnType(dart.void, [dart.packageJSType("LoadBundleTaskProgressJsImpl", false)])))(),
    dynamicTodynamic: () => (T$.dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.dynamic])))(),
    FirestoreErrorTodynamic: () => (T$.FirestoreErrorTodynamic = dart.constFn(dart.fnType(dart.dynamic, [dart.packageJSType("FirestoreError", false)])))(),
    FirestoreErrorToNull: () => (T$.FirestoreErrorToNull = dart.constFn(dart.fnType(core.Null, [dart.packageJSType("FirestoreError", false)])))(),
    ExpandoOfLoadBundleTask: () => (T$.ExpandoOfLoadBundleTask = dart.constFn(core.Expando$(firestore$.LoadBundleTask)))(),
    ExpandoOfLoadBundleTaskProgress: () => (T$.ExpandoOfLoadBundleTaskProgress = dart.constFn(core.Expando$(firestore$.LoadBundleTaskProgress)))(),
    ExpandoOfWriteBatch: () => (T$.ExpandoOfWriteBatch = dart.constFn(core.Expando$(firestore$.WriteBatch)))(),
    DocumentSnapshotJsImplToDocumentSnapshot: () => (T$.DocumentSnapshotJsImplToDocumentSnapshot = dart.constFn(dart.fnType(firestore$.DocumentSnapshot, [dart.packageJSType("firebase_firestore.DocumentSnapshot", false)])))(),
    DocumentSnapshotJsImplToNull: () => (T$.DocumentSnapshotJsImplToNull = dart.constFn(dart.fnType(core.Null, [dart.packageJSType("firebase_firestore.DocumentSnapshot", false)])))(),
    StreamControllerOfDocumentSnapshot: () => (T$.StreamControllerOfDocumentSnapshot = dart.constFn(async.StreamController$(firestore$.DocumentSnapshot)))(),
    FieldPathToList: () => (T$.FieldPathToList = dart.constFn(dart.fnType(core.List, [dart.packageJSType("firebase_firestore.FieldPath", false)])))(),
    ListToList: () => (T$.ListToList = dart.constFn(dart.fnType(core.List, [core.List])))(),
    ExpandoOfDocumentReference: () => (T$.ExpandoOfDocumentReference = dart.constFn(core.Expando$(firestore$.DocumentReference)))(),
    QuerySnapshotJsImplToQuerySnapshot: () => (T$.QuerySnapshotJsImplToQuerySnapshot = dart.constFn(dart.fnType(firestore$.QuerySnapshot, [dart.packageJSType("firebase_firestore.QuerySnapshot", false)])))(),
    QuerySnapshotJsImplToNull: () => (T$.QuerySnapshotJsImplToNull = dart.constFn(dart.fnType(core.Null, [dart.packageJSType("firebase_firestore.QuerySnapshot", false)])))(),
    StreamControllerOfQuerySnapshot: () => (T$.StreamControllerOfQuerySnapshot = dart.constFn(async.StreamController$(firestore$.QuerySnapshot)))(),
    JSArrayOfDocumentSnapshotJsImpl: () => (T$.JSArrayOfDocumentSnapshotJsImpl = dart.constFn(_interceptors.JSArray$(dart.packageJSType("firebase_firestore.DocumentSnapshot", false))))(),
    CollectionReferenceOfCollectionReferenceJsImpl: () => (T$.CollectionReferenceOfCollectionReferenceJsImpl = dart.constFn(firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))))(),
    DocumentReferenceJsImplToDocumentReference: () => (T$.DocumentReferenceJsImplToDocumentReference = dart.constFn(dart.fnType(firestore$.DocumentReference, [dart.packageJSType("firebase_firestore.DocumentReference", false)])))(),
    ExpandoOfCollectionReferenceOfCollectionReferenceJsImpl: () => (T$.ExpandoOfCollectionReferenceOfCollectionReferenceJsImpl = dart.constFn(core.Expando$(T$.CollectionReferenceOfCollectionReferenceJsImpl())))(),
    ExpandoOfDocumentChange: () => (T$.ExpandoOfDocumentChange = dart.constFn(core.Expando$(firestore$.DocumentChange)))(),
    MapNOfString$dynamic: () => (T$.MapNOfString$dynamic = dart.constFn(dart.nullable(T$.MapOfString$dynamic())))(),
    ExpandoOfDocumentSnapshot: () => (T$.ExpandoOfDocumentSnapshot = dart.constFn(core.Expando$(firestore$.DocumentSnapshot)))(),
    dynamicToDocumentChange: () => (T$.dynamicToDocumentChange = dart.constFn(dart.fnType(firestore$.DocumentChange, [dart.dynamic])))(),
    dynamicToDocumentSnapshot: () => (T$.dynamicToDocumentSnapshot = dart.constFn(dart.fnType(firestore$.DocumentSnapshot, [dart.dynamic])))(),
    ExpandoOfQuerySnapshot: () => (T$.ExpandoOfQuerySnapshot = dart.constFn(core.Expando$(firestore$.QuerySnapshot)))(),
    ExpandoOfTransaction: () => (T$.ExpandoOfTransaction = dart.constFn(core.Expando$(firestore$.Transaction)))(),
    IdentityMapOfString$Object: () => (T$.IdentityMapOfString$Object = dart.constFn(_js_helper.IdentityMap$(core.String, core.Object)))(),
    AggregateQuerySnapshotJsImplToAggregateQuerySnapshot: () => (T$.AggregateQuerySnapshotJsImplToAggregateQuerySnapshot = dart.constFn(dart.fnType(firestore$.AggregateQuerySnapshot, [dart.packageJSType("firebase_firestore.AggregateQuerySnapshot", false)])))(),
    LinkedHashMapOfString$Object: () => (T$.LinkedHashMapOfString$Object = dart.constFn(collection.LinkedHashMap$(core.String, core.Object)))(),
    ExpandoOfAggregateQuerySnapshot: () => (T$.ExpandoOfAggregateQuerySnapshot = dart.constFn(core.Expando$(firestore$.AggregateQuerySnapshot)))(),
    FutureOfDocumentSnapshotPlatform: () => (T$.FutureOfDocumentSnapshotPlatform = dart.constFn(async.Future$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    VoidToFutureOfDocumentSnapshotPlatform: () => (T$.VoidToFutureOfDocumentSnapshotPlatform = dart.constFn(dart.fnType(T$.FutureOfDocumentSnapshotPlatform(), [])))(),
    MultiFactorInfoOfMultiFactorInfoJsImpl: () => (T$.MultiFactorInfoOfMultiFactorInfoJsImpl = dart.constFn(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))))(),
    MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo: () => (T$.MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo = dart.constFn(dart.fnType(platform_interface_multi_factor.MultiFactorInfo, [T$.MultiFactorInfoOfMultiFactorInfoJsImpl()])))(),
    ListOfMultiFactorInfo: () => (T$.ListOfMultiFactorInfo = dart.constFn(core.List$(platform_interface_multi_factor.MultiFactorInfo)))(),
    FutureOfString: () => (T$.FutureOfString = dart.constFn(async.Future$(core.String)))(),
    ObjectToNull: () => (T$.ObjectToNull = dart.constFn(dart.fnType(core.Null, [core.Object])))(),
    JSArrayOfStringN: () => (T$.JSArrayOfStringN = dart.constFn(_interceptors.JSArray$(T$.StringN())))(),
    UserInfoOfUserInfoJsImpl: () => (T$.UserInfoOfUserInfoJsImpl = dart.constFn(auth$.UserInfo$(dart.packageJSType("UserInfoJsImpl", false))))(),
    UserInfoOfUserInfoJsImplToMapOfString$dynamic: () => (T$.UserInfoOfUserInfoJsImplToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [T$.UserInfoOfUserInfoJsImpl()])))(),
    JSArrayOfUserInfo: () => (T$.JSArrayOfUserInfo = dart.constFn(_interceptors.JSArray$(user_info.UserInfo)))(),
    dynamicToUserInfoOfUserInfoJsImpl: () => (T$.dynamicToUserInfoOfUserInfoJsImpl = dart.constFn(dart.fnType(T$.UserInfoOfUserInfoJsImpl(), [dart.dynamic])))(),
    UserCredentialJsImplToUserCredential: () => (T$.UserCredentialJsImplToUserCredential = dart.constFn(dart.fnType(auth$.UserCredential, [dart.packageJSType("UserCredentialJsImpl", false)])))(),
    ConfirmationResultJsImplToConfirmationResult: () => (T$.ConfirmationResultJsImplToConfirmationResult = dart.constFn(dart.fnType(auth$.ConfirmationResult, [dart.packageJSType("firebase_auth.ConfirmationResult", false)])))(),
    UserJsImplToUser: () => (T$.UserJsImplToUser = dart.constFn(dart.fnType(auth$.User, [dart.packageJSType("UserJsImpl", false)])))(),
    IdTokenResultImplToIdTokenResult: () => (T$.IdTokenResultImplToIdTokenResult = dart.constFn(dart.fnType(auth$.IdTokenResult, [dart.packageJSType("IdTokenResultImpl", false)])))(),
    ExpandoOfUser: () => (T$.ExpandoOfUser = dart.constFn(core.Expando$(auth$.User)))(),
    UserJsImplNToNull: () => (T$.UserJsImplNToNull = dart.constFn(dart.fnType(core.Null, [dart.nullable(dart.packageJSType("UserJsImpl", false))])))(),
    StreamControllerOfUserN: () => (T$.StreamControllerOfUserN = dart.constFn(async.StreamController$(T$.UserN$1())))(),
    Iterable__ToListOfE: () => (T$.Iterable__ToListOfE = dart.constFn(dart.gFnType(E => [core.List$(E), [core.Iterable], {growable: core.bool}, {}], E => [T$.ObjectN()])))(),
    UserCredentialN: () => (T$.UserCredentialN = dart.constFn(dart.nullable(auth$.UserCredential)))(),
    UserCredentialJsImplNToUserCredentialN: () => (T$.UserCredentialJsImplNToUserCredentialN = dart.constFn(dart.fnType(T$.UserCredentialN(), [dart.nullable(dart.packageJSType("UserCredentialJsImpl", false))])))(),
    ExpandoOfAuth: () => (T$.ExpandoOfAuth = dart.constFn(core.Expando$(auth$.Auth)))(),
    JSArrayOfPersistence: () => (T$.JSArrayOfPersistence = dart.constFn(_interceptors.JSArray$(dart.packageJSType("firebase_auth.Persistence", false))))(),
    MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl: () => (T$.MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl = dart.constFn(dart.fnType(T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), [dart.packageJSType("MultiFactorInfoJsImpl", false)])))(),
    MultiFactorSessionJsImplToMultiFactorSession: () => (T$.MultiFactorSessionJsImplToMultiFactorSession = dart.constFn(dart.fnType(multi_factor.MultiFactorSession, [dart.packageJSType("MultiFactorSessionJsImpl", false)])))(),
    ExpandoOfMultiFactorUser: () => (T$.ExpandoOfMultiFactorUser = dart.constFn(core.Expando$(multi_factor.MultiFactorUser)))(),
    TotpSecretJsImplToTotpSecret: () => (T$.TotpSecretJsImplToTotpSecret = dart.constFn(dart.fnType(multi_factor.TotpSecret, [dart.packageJSType("firebase_auth.TotpSecret", false)])))(),
    ObjectNAndObjectNAndObjectN__Tovoid: () => (T$.ObjectNAndObjectNAndObjectN__Tovoid = dart.constFn(dart.fnType(dart.void, [T$.ObjectN()], [T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN(), T$.ObjectN()])))(),
    StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy: () => (T$.StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy = dart.constFn(dart.fnType(dart.packageJSType("DomTrustedTypePolicy", true), [core.String, dart.nullable(dart.packageJSType("DomTrustedTypePolicyOptions", true))])))(),
    StringToDomTrustedScriptUrl: () => (T$.StringToDomTrustedScriptUrl = dart.constFn(dart.fnType(dart.packageJSType("DomTrustedScriptUrl", true), [core.String])))(),
    dynamicToApp: () => (T$.dynamicToApp = dart.constFn(dart.fnType(app$.App, [dart.dynamic])))(),
    VoidToReferencePlatform: () => (T$.VoidToReferencePlatform = dart.constFn(dart.fnType(platform_interface_reference.ReferencePlatform, [])))(),
    CompleterOfImageElement: () => (T$.CompleterOfImageElement = dart.constFn(async.Completer$(html.ImageElement)))(),
    EventTovoid: () => (T$.EventTovoid = dart.constFn(dart.fnType(dart.void, [html.Event])))(),
    IdentityMapOfString$ObjectN: () => (T$.IdentityMapOfString$ObjectN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.ObjectN())))(),
    JSArrayOfObjectN: () => (T$.JSArrayOfObjectN = dart.constFn(_interceptors.JSArray$(T$.ObjectN())))(),
    ListNOfObjectN: () => (T$.ListNOfObjectN = dart.constFn(dart.nullable(T$.ListOfObjectN())))(),
    BasicMessageChannelOfObjectN: () => (T$.BasicMessageChannelOfObjectN = dart.constFn(platform_channel.BasicMessageChannel$(T$.ObjectN())))(),
    PigeonActionCodeInfoN: () => (T$.PigeonActionCodeInfoN = dart.constFn(dart.nullable(messages$46pigeon.PigeonActionCodeInfo)))(),
    PigeonUserCredentialN: () => (T$.PigeonUserCredentialN = dart.constFn(dart.nullable(messages$46pigeon.PigeonUserCredential)))(),
    ListOfStringN: () => (T$.ListOfStringN = dart.constFn(core.List$(T$.StringN())))(),
    PigeonIdTokenResultN: () => (T$.PigeonIdTokenResultN = dart.constFn(dart.nullable(messages$46pigeon.PigeonIdTokenResult)))(),
    PigeonMultiFactorSessionN: () => (T$.PigeonMultiFactorSessionN = dart.constFn(dart.nullable(messages$46pigeon.PigeonMultiFactorSession)))(),
    PigeonMultiFactorInfoN: () => (T$.PigeonMultiFactorInfoN = dart.constFn(dart.nullable(messages$46pigeon.PigeonMultiFactorInfo)))(),
    ListOfPigeonMultiFactorInfoN: () => (T$.ListOfPigeonMultiFactorInfoN = dart.constFn(core.List$(T$.PigeonMultiFactorInfoN())))(),
    PigeonTotpSecretN: () => (T$.PigeonTotpSecretN = dart.constFn(dart.nullable(messages$46pigeon.PigeonTotpSecret)))(),
    IdentityMapOfString$String: () => (T$.IdentityMapOfString$String = dart.constFn(_js_helper.IdentityMap$(core.String, core.String)))(),
    ListOfPigeonInitializeResponseN: () => (T$.ListOfPigeonInitializeResponseN = dart.constFn(core.List$(T$.PigeonInitializeResponseN())))(),
    PigeonFirebaseOptionsN: () => (T$.PigeonFirebaseOptionsN = dart.constFn(dart.nullable(messages$46pigeon$.PigeonFirebaseOptions)))(),
    IdentityMapOfStringN$ObjectN: () => (T$.IdentityMapOfStringN$ObjectN = dart.constFn(_js_helper.IdentityMap$(T$.StringN(), T$.ObjectN())))(),
    JSArrayOfPigeonInitializeResponseN: () => (T$.JSArrayOfPigeonInitializeResponseN = dart.constFn(_interceptors.JSArray$(T$.PigeonInitializeResponseN())))(),
    FutureOfListOfObjectN: () => (T$.FutureOfListOfObjectN = dart.constFn(async.Future$(T$.ListOfObjectN())))(),
    ObjectNToFutureOfListOfObjectN: () => (T$.ObjectNToFutureOfListOfObjectN = dart.constFn(dart.fnType(T$.FutureOfListOfObjectN(), [T$.ObjectN()])))(),
    LinkedHashSetOf_NestedHookElement: () => (T$.LinkedHashSetOf_NestedHookElement = dart.constFn(collection.LinkedHashSet$(nested._NestedHookElement)))(),
    SingleChildStateOfSingleChildStatefulWidget: () => (T$.SingleChildStateOfSingleChildStatefulWidget = dart.constFn(nested.SingleChildState$(nested.SingleChildStatefulWidget)))(),
    SingleChildStateMixinOfStatefulWidget: () => (T$.SingleChildStateMixinOfStatefulWidget = dart.constFn(nested.SingleChildStateMixin$(framework.StatefulWidget)))(),
    DocumentReferenceOfMapOfString$dynamic: () => (T$.DocumentReferenceOfMapOfString$dynamic = dart.constFn(cloud_firestore.DocumentReference$(T$.MapOfString$dynamic())))(),
    ListOfList: () => (T$.ListOfList = dart.constFn(core.List$(core.List)))(),
    ListOfListOfObjectN: () => (T$.ListOfListOfObjectN = dart.constFn(core.List$(T$.ListOfObjectN())))(),
    QuerySnapshotOfMapOfString$dynamic: () => (T$.QuerySnapshotOfMapOfString$dynamic = dart.constFn(cloud_firestore.QuerySnapshot$(T$.MapOfString$dynamic())))(),
    QuerySnapshotPlatformTo_JsonQuerySnapshot: () => (T$.QuerySnapshotPlatformTo_JsonQuerySnapshot = dart.constFn(dart.fnType(cloud_firestore._JsonQuerySnapshot, [platform_interface_query_snapshot.QuerySnapshotPlatform])))(),
    ListTobool: () => (T$.ListTobool = dart.constFn(dart.fnType(core.bool, [core.List])))(),
    dynamicAndStringAnddynamicTovoid: () => (T$.dynamicAndStringAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic, core.String, dart.dynamic])))(),
    dynamicTobool: () => (T$.dynamicTobool = dart.constFn(dart.fnType(core.bool, [dart.dynamic])))(),
    CollectionReferenceOfMapOfString$dynamic: () => (T$.CollectionReferenceOfMapOfString$dynamic = dart.constFn(cloud_firestore.CollectionReference$(T$.MapOfString$dynamic())))(),
    SetOptionsN: () => (T$.SetOptionsN = dart.constFn(dart.nullable(set_options.SetOptions)))(),
    DocumentSnapshotOfMapOfString$dynamic: () => (T$.DocumentSnapshotOfMapOfString$dynamic = dart.constFn(cloud_firestore.DocumentSnapshot$(T$.MapOfString$dynamic())))(),
    DocumentSnapshotPlatformTo_JsonDocumentSnapshot: () => (T$.DocumentSnapshotPlatformTo_JsonDocumentSnapshot = dart.constFn(dart.fnType(cloud_firestore._JsonDocumentSnapshot, [platform_interface_document_snapshot.DocumentSnapshotPlatform])))(),
    DocumentReferenceOfObjectN: () => (T$.DocumentReferenceOfObjectN = dart.constFn(cloud_firestore.DocumentReference$(T$.ObjectN())))(),
    _FilterObjectToMapOfString$ObjectN: () => (T$._FilterObjectToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [cloud_firestore._FilterObject])))(),
    ObjectNTobool: () => (T$.ObjectNTobool = dart.constFn(dart.fnType(core.bool, [T$.ObjectN()])))(),
    FilterN: () => (T$.FilterN = dart.constFn(dart.nullable(cloud_firestore.Filter)))(),
    JSArrayOfFilterN: () => (T$.JSArrayOfFilterN = dart.constFn(_interceptors.JSArray$(T$.FilterN())))(),
    FilterNTobool: () => (T$.FilterNTobool = dart.constFn(dart.fnType(core.bool, [T$.FilterN()])))(),
    JSArrayOf_FilterObject: () => (T$.JSArrayOf_FilterObject = dart.constFn(_interceptors.JSArray$(cloud_firestore._FilterObject)))(),
    TransactionPlatformToFutureOfNull: () => (T$.TransactionPlatformToFutureOfNull = dart.constFn(dart.fnType(T$.FutureOfNull(), [platform_interface_transaction.TransactionPlatform])))(),
    IndexToMapOfString$dynamic: () => (T$.IndexToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [platform_interface_index_definitions.Index])))(),
    FieldOverridesToMapOfString$dynamic: () => (T$.FieldOverridesToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [platform_interface_index_definitions.FieldOverrides])))(),
    JSArrayOfMapOfString$dynamic: () => (T$.JSArrayOfMapOfString$dynamic = dart.constFn(_interceptors.JSArray$(T$.MapOfString$dynamic())))(),
    ListOfMapOfString$dynamic: () => (T$.ListOfMapOfString$dynamic = dart.constFn(core.List$(T$.MapOfString$dynamic())))(),
    IdentityMapOfString$ListOfMapOfString$dynamic: () => (T$.IdentityMapOfString$ListOfMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, T$.ListOfMapOfString$dynamic())))(),
    IdentityMapOfString$FirebaseFirestore: () => (T$.IdentityMapOfString$FirebaseFirestore = dart.constFn(_js_helper.IdentityMap$(core.String, cloud_firestore.FirebaseFirestore)))(),
    dynamicToLoadBundleTaskSnapshot: () => (T$.dynamicToLoadBundleTaskSnapshot = dart.constFn(dart.fnType(cloud_firestore.LoadBundleTaskSnapshot, [dart.dynamic])))(),
    DocumentSnapshotPlatformTo_JsonQueryDocumentSnapshot: () => (T$.DocumentSnapshotPlatformTo_JsonQueryDocumentSnapshot = dart.constFn(dart.fnType(cloud_firestore._JsonQueryDocumentSnapshot, [platform_interface_document_snapshot.DocumentSnapshotPlatform])))(),
    DocumentChangePlatformTo_JsonDocumentChange: () => (T$.DocumentChangePlatformTo_JsonDocumentChange = dart.constFn(dart.fnType(cloud_firestore._JsonDocumentChange, [platform_interface_document_change.DocumentChangePlatform])))(),
    StringAnddynamicTodynamic: () => (T$.StringAnddynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.String, dart.dynamic])))(),
    LinkedMapOfFieldPath$dynamic: () => (T$.LinkedMapOfFieldPath$dynamic = dart.constFn(_js_helper.LinkedMap$(field_path.FieldPath, dart.dynamic)))(),
    ObjectAnddynamicTovoid: () => (T$.ObjectAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, dart.dynamic])))(),
    BuildContextToSimpleDialog: () => (T$.BuildContextToSimpleDialog = dart.constFn(dart.fnType(dialog.SimpleDialog, [framework.BuildContext])))(),
    ColorN: () => (T$.ColorN = dart.constFn(dart.nullable(ui.Color)))(),
    StreamBuilderOfQuerySnapshotOfMapOfString$dynamic: () => (T$.StreamBuilderOfQuerySnapshotOfMapOfString$dynamic = dart.constFn(async$.StreamBuilder$(T$.QuerySnapshotOfMapOfString$dynamic())))(),
    BuildContextAndintToContainer: () => (T$.BuildContextAndintToContainer = dart.constFn(dart.fnType(container.Container, [framework.BuildContext, core.int])))(),
    AsyncSnapshotOfQuerySnapshotOfMapOfString$dynamic: () => (T$.AsyncSnapshotOfQuerySnapshotOfMapOfString$dynamic = dart.constFn(async$.AsyncSnapshot$(T$.QuerySnapshotOfMapOfString$dynamic())))(),
    BuildContextAndAsyncSnapshotOfQuerySnapshotOfMapOfString$dynamicToWidget: () => (T$.BuildContextAndAsyncSnapshotOfQuerySnapshotOfMapOfString$dynamicToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T$.AsyncSnapshotOfQuerySnapshotOfMapOfString$dynamic()])))(),
    VoidToFutureOfNull: () => (T$.VoidToFutureOfNull = dart.constFn(dart.fnType(T$.FutureOfNull(), [])))(),
    FutureBuilderOfQuerySnapshotOfMapOfString$dynamic: () => (T$.FutureBuilderOfQuerySnapshotOfMapOfString$dynamic = dart.constFn(async$.FutureBuilder$(T$.QuerySnapshotOfMapOfString$dynamic())))(),
    DocumentSnapshotOfObjectN: () => (T$.DocumentSnapshotOfObjectN = dart.constFn(cloud_firestore.DocumentSnapshot$(T$.ObjectN())))(),
    BuildContextAndintToSizedBox: () => (T$.BuildContextAndintToSizedBox = dart.constFn(dart.fnType(basic.SizedBox, [framework.BuildContext, core.int])))(),
    StringTovoid: () => (T$.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    BuildContextToProfileScreen: () => (T$.BuildContextToProfileScreen = dart.constFn(dart.fnType(profile_screen.ProfileScreen, [framework.BuildContext])))(),
    BuildContextAndintToInkWell: () => (T$.BuildContextAndintToInkWell = dart.constFn(dart.fnType(ink_well.InkWell, [framework.BuildContext, core.int])))(),
    BuildContextAndintToImage: () => (T$.BuildContextAndintToImage = dart.constFn(dart.fnType(image.Image, [framework.BuildContext, core.int])))(),
    StringTobool: () => (T$.StringTobool = dart.constFn(dart.fnType(core.bool, [core.String])))(),
    PigeonDocumentSnapshotN: () => (T$.PigeonDocumentSnapshotN = dart.constFn(dart.nullable(messages$46pigeon$0.PigeonDocumentSnapshot)))(),
    PigeonDocumentChangeN: () => (T$.PigeonDocumentChangeN = dart.constFn(dart.nullable(messages$46pigeon$0.PigeonDocumentChange)))(),
    ListNOfStringN: () => (T$.ListNOfStringN = dart.constFn(dart.nullable(T$.ListOfStringN())))(),
    PigeonQuerySnapshotN: () => (T$.PigeonQuerySnapshotN = dart.constFn(dart.nullable(messages$46pigeon$0.PigeonQuerySnapshot)))(),
    AggregateQueryResponseN: () => (T$.AggregateQueryResponseN = dart.constFn(dart.nullable(messages$46pigeon$0.AggregateQueryResponse)))(),
    ListOfAggregateQueryResponseN: () => (T$.ListOfAggregateQueryResponseN = dart.constFn(core.List$(T$.AggregateQueryResponseN())))(),
    AggregateQueryResponseTobool: () => (T$.AggregateQueryResponseTobool = dart.constFn(dart.fnType(core.bool, [messages$46pigeon$0.AggregateQueryResponse])))(),
    StringAndMapOfString$dynamicTodynamic: () => (T$.StringAndMapOfString$dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.String, T$.MapOfString$dynamic()])))(),
    intAndMapNOfString$dynamicTodynamic: () => (T$.intAndMapNOfString$dynamicTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.int, T$.MapNOfString$dynamic()])))(),
    IndexFieldToMapOfString$dynamic: () => (T$.IndexFieldToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [platform_interface_index_definitions.IndexField])))(),
    FieldOverrideIndexToMapOfString$dynamic: () => (T$.FieldOverrideIndexToMapOfString$dynamic = dart.constFn(dart.fnType(T$.MapOfString$dynamic(), [platform_interface_index_definitions.FieldOverrideIndex])))(),
    ObjectToFieldPath: () => (T$.ObjectToFieldPath = dart.constFn(dart.fnType(field_path.FieldPath, [core.Object])))(),
    VoidToRN: () => (T$.VoidToRN = dart.constFn(dart.gFnType(R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [__t$RN(), []];
    }, R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [T$.ObjectN()];
    })))(),
    dynamicAnddynamicToNever: () => (T$.dynamicAnddynamicToNever = dart.constFn(dart.fnType(dart.Never, [dart.dynamic, dart.dynamic])))(),
    dynamicAnddynamicTovoid: () => (T$.dynamicAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic, dart.dynamic])))(),
    ObjectTodynamic: () => (T$.ObjectTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.Object])))(),
    LinkedMapOfFieldPath$dynamic$1: () => (T$.LinkedMapOfFieldPath$dynamic$1 = dart.constFn(_js_helper.LinkedMap$(dart.packageJSType("firebase_firestore.FieldPath", false), dart.dynamic)))(),
    JSArrayOfAggregateQueryResponse: () => (T$.JSArrayOfAggregateQueryResponse = dart.constFn(_interceptors.JSArray$(messages$46pigeon$0.AggregateQueryResponse)))(),
    ListOfAggregateQuery: () => (T$.ListOfAggregateQuery = dart.constFn(core.List$(messages$46pigeon$0.AggregateQuery)))(),
    PlatformFileToStringN: () => (T$.PlatformFileToStringN = dart.constFn(dart.fnType(T$.StringN(), [platform_file.PlatformFile])))(),
    PlatformFileToString: () => (T$.PlatformFileToString = dart.constFn(dart.fnType(core.String, [platform_file.PlatformFile])))(),
    ExpandoOfApp: () => (T$.ExpandoOfApp = dart.constFn(core.Expando$(app$.App)))(),
    ExpandoOfStorage: () => (T$.ExpandoOfStorage = dart.constFn(core.Expando$(storage.Storage)))(),
    FullMetadataJsImplToFullMetadata: () => (T$.FullMetadataJsImplToFullMetadata = dart.constFn(dart.fnType(storage.FullMetadata, [dart.packageJSType("FullMetadataJsImpl", false)])))(),
    ListResultJsImplToListResult: () => (T$.ListResultJsImplToListResult = dart.constFn(dart.fnType(storage.ListResult, [dart.packageJSType("ListResultJsImpl", false)])))(),
    ExpandoOfStorageReference: () => (T$.ExpandoOfStorageReference = dart.constFn(core.Expando$(storage.StorageReference)))(),
    LinkedHashMapOfString$String: () => (T$.LinkedHashMapOfString$String = dart.constFn(collection.LinkedHashMap$(core.String, core.String)))(),
    ExpandoOfFullMetadata: () => (T$.ExpandoOfFullMetadata = dart.constFn(core.Expando$(storage.FullMetadata)))(),
    UploadTaskSnapshotJsImplToUploadTaskSnapshot: () => (T$.UploadTaskSnapshotJsImplToUploadTaskSnapshot = dart.constFn(dart.fnType(storage.UploadTaskSnapshot, [dart.packageJSType("UploadTaskSnapshotJsImpl", false)])))(),
    UploadTaskSnapshotJsImplToNull: () => (T$.UploadTaskSnapshotJsImplToNull = dart.constFn(dart.fnType(core.Null, [dart.packageJSType("UploadTaskSnapshotJsImpl", false)])))(),
    StreamControllerOfUploadTaskSnapshot: () => (T$.StreamControllerOfUploadTaskSnapshot = dart.constFn(async.StreamController$(storage.UploadTaskSnapshot)))(),
    ExpandoOfUploadTask: () => (T$.ExpandoOfUploadTask = dart.constFn(core.Expando$(storage.UploadTask)))(),
    ExpandoOfUploadTaskSnapshot: () => (T$.ExpandoOfUploadTaskSnapshot = dart.constFn(core.Expando$(storage.UploadTaskSnapshot)))(),
    dynamicToStorageReference: () => (T$.dynamicToStorageReference = dart.constFn(dart.fnType(storage.StorageReference, [dart.dynamic])))(),
    ExpandoOfListResult: () => (T$.ExpandoOfListResult = dart.constFn(core.Expando$(storage.ListResult)))(),
    VoidToFutureOfString: () => (T$.VoidToFutureOfString = dart.constFn(dart.fnType(T$.FutureOfString(), [])))(),
    FutureOfFullMetadata: () => (T$.FutureOfFullMetadata = dart.constFn(async.Future$(full_metadata.FullMetadata)))(),
    VoidToFutureOfFullMetadata: () => (T$.VoidToFutureOfFullMetadata = dart.constFn(dart.fnType(T$.FutureOfFullMetadata(), [])))(),
    FutureOrOfListResultPlatform: () => (T$.FutureOrOfListResultPlatform = dart.constFn(async.FutureOr$(platform_interface_list_result.ListResultPlatform)))(),
    FutureOfListResultWeb: () => (T$.FutureOfListResultWeb = dart.constFn(async.Future$(list_result_web.ListResultWeb)))(),
    VoidToFutureOfListResultWeb: () => (T$.VoidToFutureOfListResultWeb = dart.constFn(dart.fnType(T$.FutureOfListResultWeb(), [])))(),
    FutureOfListResultPlatform: () => (T$.FutureOfListResultPlatform = dart.constFn(async.Future$(platform_interface_list_result.ListResultPlatform)))(),
    FutureOfUint8List: () => (T$.FutureOfUint8List = dart.constFn(async.Future$(typed_data.Uint8List)))(),
    MapOfString$String: () => (T$.MapOfString$String = dart.constFn(core.Map$(core.String, core.String)))(),
    MapNOfString$String: () => (T$.MapNOfString$String = dart.constFn(dart.nullable(T$.MapOfString$String())))(),
    Uri__ToFutureOfUint8List: () => (T$.Uri__ToFutureOfUint8List = dart.constFn(dart.fnType(T$.FutureOfUint8List(), [core.Uri], {headers: T$.MapNOfString$String()}, {})))(),
    FutureOrOfUint8ListN: () => (T$.FutureOrOfUint8ListN = dart.constFn(async.FutureOr$(T$.Uint8ListN())))(),
    VoidToFutureOfUint8List: () => (T$.VoidToFutureOfUint8List = dart.constFn(dart.fnType(T$.FutureOfUint8List(), [])))(),
    JSArrayOfMagicNumber: () => (T$.JSArrayOfMagicNumber = dart.constFn(_interceptors.JSArray$(magic_number.MagicNumber)))(),
    ObjectAndStackTrace__ToNever: () => (T$.ObjectAndStackTrace__ToNever = dart.constFn(dart.fnType(dart.Never, [core.Object, core.StackTrace], {fromPigeon: core.bool}, {})))(),
    StringToNull: () => (T$.StringToNull = dart.constFn(dart.fnType(core.Null, [core.String])))(),
    _ValueWrapperOfUserPlatform: () => (T$._ValueWrapperOfUserPlatform = dart.constFn(method_channel_firebase_auth._ValueWrapper$(platform_interface_user.UserPlatform)))(),
    VoidToMethodChannelFirebaseAuth: () => (T$.VoidToMethodChannelFirebaseAuth = dart.constFn(dart.fnType(method_channel_firebase_auth.MethodChannelFirebaseAuth, [])))(),
    _ValueWrapperOfUserPlatformToUserPlatformN: () => (T$._ValueWrapperOfUserPlatformToUserPlatformN = dart.constFn(dart.fnType(T$.UserPlatformN(), [T$._ValueWrapperOfUserPlatform()])))(),
    MapN: () => (T$.MapN = dart.constFn(dart.nullable(core.Map)))(),
    IdentityMapOfString$MethodChannelFirebaseAuth: () => (T$.IdentityMapOfString$MethodChannelFirebaseAuth = dart.constFn(_js_helper.IdentityMap$(core.String, method_channel_firebase_auth.MethodChannelFirebaseAuth)))(),
    IdentityMapOfString$MethodChannelMultiFactor: () => (T$.IdentityMapOfString$MethodChannelMultiFactor = dart.constFn(_js_helper.IdentityMap$(core.String, method_channel_multi_factor.MethodChannelMultiFactor)))(),
    StreamControllerOf_ValueWrapperOfUserPlatform: () => (T$.StreamControllerOf_ValueWrapperOfUserPlatform = dart.constFn(async.StreamController$(T$._ValueWrapperOfUserPlatform())))(),
    IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform: () => (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform = dart.constFn(_js_helper.IdentityMap$(core.String, T$.StreamControllerOf_ValueWrapperOfUserPlatform())))(),
    IdentityMapOfString$FirebaseStorage: () => (T$.IdentityMapOfString$FirebaseStorage = dart.constFn(_js_helper.IdentityMap$(core.String, firebase_storage.FirebaseStorage)))(),
    ReferencePlatformToReference: () => (T$.ReferencePlatformToReference = dart.constFn(dart.fnType(firebase_storage.Reference, [platform_interface_reference.ReferencePlatform])))(),
    TaskSnapshotPlatformToTaskSnapshot: () => (T$.TaskSnapshotPlatformToTaskSnapshot = dart.constFn(dart.fnType(firebase_storage.TaskSnapshot, [platform_interface_task_snapshot.TaskSnapshotPlatform])))(),
    FutureOrOfTaskSnapshot: () => (T$.FutureOrOfTaskSnapshot = dart.constFn(async.FutureOr$(firebase_storage.TaskSnapshot)))(),
    VoidToFutureOrOfTaskSnapshot: () => (T$.VoidToFutureOrOfTaskSnapshot = dart.constFn(dart.fnType(T$.FutureOrOfTaskSnapshot(), [])))(),
    VoidToNFutureOrOfTaskSnapshot: () => (T$.VoidToNFutureOrOfTaskSnapshot = dart.constFn(dart.nullable(T$.VoidToFutureOrOfTaskSnapshot())))(),
    ListNOfint: () => (T$.ListNOfint = dart.constFn(dart.nullable(T$.ListOfint())))(),
    MapOfSymbol$dynamic: () => (T$.MapOfSymbol$dynamic = dart.constFn(core.Map$(core.Symbol, dart.dynamic)))(),
    RNGN: () => (T$.RNGN = dart.constFn(dart.nullable(rng$.RNG)))(),
    LinkedMapOfObject$ObjectN: () => (T$.LinkedMapOfObject$ObjectN = dart.constFn(_js_helper.LinkedMap$(core.Object, T$.ObjectN())))(),
    StringToInkWell: () => (T$.StringToInkWell = dart.constFn(dart.fnType(ink_well.InkWell, [core.String])))(),
    BuildContextToDialog: () => (T$.BuildContextToDialog = dart.constFn(dart.fnType(dialog.Dialog, [framework.BuildContext])))(),
    BuildContextToCommentsScreen: () => (T$.BuildContextToCommentsScreen = dart.constFn(dart.fnType(comments_screen.CommentsScreen, [framework.BuildContext])))(),
    JSArrayOfInlineSpan: () => (T$.JSArrayOfInlineSpan = dart.constFn(_interceptors.JSArray$(inline_span.InlineSpan)))(),
    dynamicToFutureOfvoid: () => (T$.dynamicToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [dart.dynamic])))(),
    ObjectAndStackTraceTodynamic: () => (T$.ObjectAndStackTraceTodynamic = dart.constFn(dart.fnType(dart.dynamic, [core.Object, core.StackTrace])))(),
    __ToStream: () => (T$.__ToStream = dart.constFn(dart.fnType(async.Stream, [], {arguments: dart.dynamic, onError: T$.ObjectAndStackTraceTodynamic()}, {})))(),
    dynamicToNever: () => (T$.dynamicToNever = dart.constFn(dart.fnType(dart.Never, [dart.dynamic])))(),
    UnmodifiableMapViewOfString$String: () => (T$.UnmodifiableMapViewOfString$String = dart.constFn(collection.UnmodifiableMapView$(core.String, core.String)))(),
    CaseInsensitiveMapOfString: () => (T$.CaseInsensitiveMapOfString = dart.constFn(case_insensitive_map.CaseInsensitiveMap$(core.String)))(),
    ListOfAuthenticationChallenge: () => (T$.ListOfAuthenticationChallenge = dart.constFn(core.List$(authentication_challenge.AuthenticationChallenge)))(),
    VoidToAuthenticationChallenge: () => (T$.VoidToAuthenticationChallenge = dart.constFn(dart.fnType(authentication_challenge.AuthenticationChallenge, [])))(),
    VoidToListOfAuthenticationChallenge: () => (T$.VoidToListOfAuthenticationChallenge = dart.constFn(dart.fnType(T$.ListOfAuthenticationChallenge(), [])))(),
    VoidToDateTime: () => (T$.VoidToDateTime = dart.constFn(dart.fnType(core.DateTime, [])))(),
    VoidToMediaType: () => (T$.VoidToMediaType = dart.constFn(dart.fnType(media_type.MediaType, [])))(),
    MatchToString: () => (T$.MatchToString = dart.constFn(dart.fnType(core.String, [core.Match])))(),
    StringAndStringTovoid: () => (T$.StringAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.String, core.String])))(),
    FutureOfResponse: () => (T$.FutureOfResponse = dart.constFn(async.Future$(response$.Response)))(),
    ClientToFutureOfResponse: () => (T$.ClientToFutureOfResponse = dart.constFn(dart.fnType(T$.FutureOfResponse(), [client$.Client])))(),
    ClientToFutureOfString: () => (T$.ClientToFutureOfString = dart.constFn(dart.fnType(T$.FutureOfString(), [client$.Client])))(),
    ClientToFutureOfUint8List: () => (T$.ClientToFutureOfUint8List = dart.constFn(dart.fnType(T$.FutureOfUint8List(), [client$.Client])))(),
    LinkedMapOfPutStringFormat$String: () => (T$.LinkedMapOfPutStringFormat$String = dart.constFn(_js_helper.LinkedMap$(put_string_format.PutStringFormat, core.String)))(),
    StreamOfTaskSnapshotPlatform: () => (T$.StreamOfTaskSnapshotPlatform = dart.constFn(async.Stream$(platform_interface_task_snapshot.TaskSnapshotPlatform)))(),
    StreamGroupOfTaskSnapshotPlatform: () => (T$.StreamGroupOfTaskSnapshotPlatform = dart.constFn(stream_group.StreamGroup$(platform_interface_task_snapshot.TaskSnapshotPlatform)))(),
    UploadTaskSnapshotToTaskSnapshotWeb: () => (T$.UploadTaskSnapshotToTaskSnapshotWeb = dart.constFn(dart.fnType(task_snapshot_web.TaskSnapshotWeb, [storage.UploadTaskSnapshot])))(),
    VoidToStreamOfTaskSnapshotPlatform: () => (T$.VoidToStreamOfTaskSnapshotPlatform = dart.constFn(dart.fnType(T$.StreamOfTaskSnapshotPlatform(), [])))(),
    FutureOfTaskSnapshotPlatform: () => (T$.FutureOfTaskSnapshotPlatform = dart.constFn(async.Future$(platform_interface_task_snapshot.TaskSnapshotPlatform)))(),
    FutureOfTaskSnapshotWeb: () => (T$.FutureOfTaskSnapshotWeb = dart.constFn(async.Future$(task_snapshot_web.TaskSnapshotWeb)))()
  };
  var T = {
    VoidToFutureOfTaskSnapshotWeb: () => (T.VoidToFutureOfTaskSnapshotWeb = dart.constFn(dart.fnType(T$.FutureOfTaskSnapshotWeb(), [])))(),
    TaskSnapshotPlatformTobool: () => (T.TaskSnapshotPlatformTobool = dart.constFn(dart.fnType(core.bool, [platform_interface_task_snapshot.TaskSnapshotPlatform])))(),
    StorageReferenceToString: () => (T.StorageReferenceToString = dart.constFn(dart.fnType(core.String, [storage.StorageReference])))(),
    PickedFileN: () => (T.PickedFileN = dart.constFn(dart.nullable(html$0.PickedFile)))(),
    dynamicToPickedFile: () => (T.dynamicToPickedFile = dart.constFn(dart.fnType(html$0.PickedFile, [dart.dynamic])))(),
    ListOfPickedFile: () => (T.ListOfPickedFile = dart.constFn(core.List$(html$0.PickedFile)))(),
    ListNOfPickedFile: () => (T.ListNOfPickedFile = dart.constFn(dart.nullable(T.ListOfPickedFile())))(),
    dynamicToXFile: () => (T.dynamicToXFile = dart.constFn(dart.fnType(html$.XFile, [dart.dynamic])))(),
    ListNOfXFile: () => (T.ListNOfXFile = dart.constFn(dart.nullable(T$.ListOfXFile())))(),
    ListNToListNOfXFile: () => (T.ListNToListNOfXFile = dart.constFn(dart.fnType(T.ListNOfXFile(), [T$.ListN()])))(),
    JSArrayOfint: () => (T.JSArrayOfint = dart.constFn(_interceptors.JSArray$(core.int)))(),
    StreamControllerOfMimeMultipart: () => (T.StreamControllerOfMimeMultipart = dart.constFn(async.StreamController$(mime_shared.MimeMultipart)))(),
    ListOfintTovoid: () => (T.ListOfintTovoid = dart.constFn(dart.fnType(dart.void, [T$.ListOfint()])))(),
    StreamControllerOfListOfint: () => (T.StreamControllerOfListOfint = dart.constFn(async.StreamController$(T$.ListOfint())))(),
    MethodChannelUserN: () => (T.MethodChannelUserN = dart.constFn(dart.nullable(method_channel_user.MethodChannelUser)))(),
    ObjectToPigeonMultiFactorInfo: () => (T.ObjectToPigeonMultiFactorInfo = dart.constFn(dart.fnType(messages$46pigeon.PigeonMultiFactorInfo, [core.Object])))(),
    PigeonMultiFactorInfoToMultiFactorInfo: () => (T.PigeonMultiFactorInfoToMultiFactorInfo = dart.constFn(dart.fnType(platform_interface_multi_factor.MultiFactorInfo, [messages$46pigeon.PigeonMultiFactorInfo])))(),
    intToString: () => (T.intToString = dart.constFn(dart.fnType(core.String, [core.int])))(),
    BuildContextAndintToCommentCard: () => (T.BuildContextAndintToCommentCard = dart.constFn(dart.fnType(comment_card.CommentCard, [framework.BuildContext, core.int])))(),
    TweenOfdouble: () => (T.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    LinkedHashSetOfint: () => (T.LinkedHashSetOfint = dart.constFn(collection.LinkedHashSet$(core.int)))(),
    IdentityMapOfint$int: () => (T.IdentityMapOfint$int = dart.constFn(_js_helper.IdentityMap$(core.int, core.int)))(),
    intToint: () => (T.intToint = dart.constFn(dart.fnType(core.int, [core.int])))(),
    TAndTToT: () => (T.TAndTToT = dart.constFn(dart.gFnType(T => [T, [T, T]], T => [core.num])))(),
    ListOfQuiltedGridTile: () => (T.ListOfQuiltedGridTile = dart.constFn(core.List$(quilted.QuiltedGridTile)))(),
    MapOfint$int: () => (T.MapOfint$int = dart.constFn(core.Map$(core.int, core.int)))(),
    MapNOfint$int: () => (T.MapNOfint$int = dart.constFn(dart.nullable(T.MapOfint$int())))(),
    ListOfQuiltedGridTileAndMapNOfint$intAndintTovoid: () => (T.ListOfQuiltedGridTileAndMapNOfint$intAndintTovoid = dart.constFn(dart.fnType(dart.void, [T.ListOfQuiltedGridTile(), T.MapNOfint$int(), core.int])))(),
    intToQuiltedGridTile: () => (T.intToQuiltedGridTile = dart.constFn(dart.fnType(quilted.QuiltedGridTile, [core.int])))(),
    intAndQuiltedGridRepeatPatternTo_QuiltedTilePattern: () => (T.intAndQuiltedGridRepeatPatternTo_QuiltedTilePattern = dart.constFn(dart.fnType(quilted._QuiltedTilePattern, [core.int, quilted.QuiltedGridRepeatPattern])))(),
    ListOfSliverGridGeometry: () => (T.ListOfSliverGridGeometry = dart.constFn(core.List$(sliver_grid.SliverGridGeometry)))(),
    WovenGridTileTodouble: () => (T.WovenGridTileTodouble = dart.constFn(dart.fnType(core.double, [woven.WovenGridTile])))(),
    JSArrayOfdouble: () => (T.JSArrayOfdouble = dart.constFn(_interceptors.JSArray$(core.double)))(),
    ListOfdouble: () => (T.ListOfdouble = dart.constFn(core.List$(core.double)))(),
    RenderBoxTodouble: () => (T.RenderBoxTodouble = dart.constFn(dart.fnType(core.double, [box.RenderBox])))(),
    VoidToSliverMasonryGridParentData: () => (T.VoidToSliverMasonryGridParentData = dart.constFn(dart.fnType(sliver_masonry_grid.SliverMasonryGridParentData, [])))(),
    doubleTobool: () => (T.doubleTobool = dart.constFn(dart.fnType(core.bool, [core.double])))(),
    TAndTToT$1: () => (T.TAndTToT$1 = dart.constFn(dart.gFnType(T => [T, [T, T]], T => [core.num])))(),
    SliverMasonryGridParentDataTovoid: () => (T.SliverMasonryGridParentDataTovoid = dart.constFn(dart.fnType(dart.void, [sliver_masonry_grid.SliverMasonryGridParentData])))(),
    JSArrayOfWidgetN: () => (T.JSArrayOfWidgetN = dart.constFn(_interceptors.JSArray$(T$.WidgetN())))(),
    ListOfWidget: () => (T.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    BuildContextAndintToWidgetN: () => (T.BuildContextAndintToWidgetN = dart.constFn(dart.fnType(T$.WidgetN(), [framework.BuildContext, core.int])))(),
    BuildContextAndSliverConstraintsToSliverList: () => (T.BuildContextAndSliverConstraintsToSliverList = dart.constFn(dart.fnType(sliver.SliverList, [framework.BuildContext, sliver$.SliverConstraints])))(),
    ListOfListNOfObjectN: () => (T.ListOfListNOfObjectN = dart.constFn(core.List$(T$.ListNOfObjectN())))(),
    ListNOfListNOfObjectN: () => (T.ListNOfListNOfObjectN = dart.constFn(dart.nullable(T.ListOfListNOfObjectN())))(),
    MapOfStringN$ObjectN: () => (T.MapOfStringN$ObjectN = dart.constFn(core.Map$(T$.StringN(), T$.ObjectN())))(),
    MapNOfStringN$ObjectN: () => (T.MapNOfStringN$ObjectN = dart.constFn(dart.nullable(T.MapOfStringN$ObjectN())))(),
    StreamControllerOfQuerySnapshotPlatform: () => (T.StreamControllerOfQuerySnapshotPlatform = dart.constFn(async.StreamController$(platform_interface_query_snapshot.QuerySnapshotPlatform)))(),
    dynamicToPigeonDocumentSnapshot: () => (T.dynamicToPigeonDocumentSnapshot = dart.constFn(dart.fnType(messages$46pigeon$0.PigeonDocumentSnapshot, [dart.dynamic])))(),
    dynamicToPigeonDocumentChange: () => (T.dynamicToPigeonDocumentChange = dart.constFn(dart.fnType(messages$46pigeon$0.PigeonDocumentChange, [dart.dynamic])))(),
    _AsyncStarImplOfLoadBundleTaskSnapshotPlatform: () => (T._AsyncStarImplOfLoadBundleTaskSnapshotPlatform = dart.constFn(async._AsyncStarImpl$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))(),
    StreamOfLoadBundleTaskSnapshotPlatform: () => (T.StreamOfLoadBundleTaskSnapshotPlatform = dart.constFn(async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))(),
    VoidToStreamOfLoadBundleTaskSnapshotPlatform: () => (T.VoidToStreamOfLoadBundleTaskSnapshotPlatform = dart.constFn(dart.fnType(T.StreamOfLoadBundleTaskSnapshotPlatform(), [])))(),
    StreamSubscriptionOfLoadBundleTaskSnapshotPlatform: () => (T.StreamSubscriptionOfLoadBundleTaskSnapshotPlatform = dart.constFn(async.StreamSubscription$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))(),
    StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid: () => (T.StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid = dart.constFn(dart.fnType(dart.void, [T.StreamSubscriptionOfLoadBundleTaskSnapshotPlatform()])))(),
    DocumentSnapshotPlatformN: () => (T.DocumentSnapshotPlatformN = dart.constFn(dart.nullable(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    PigeonDocumentSnapshotNToDocumentSnapshotPlatformN: () => (T.PigeonDocumentSnapshotNToDocumentSnapshotPlatformN = dart.constFn(dart.fnType(T.DocumentSnapshotPlatformN(), [T$.PigeonDocumentSnapshotN()])))(),
    MethodChannelDocumentChangeN: () => (T.MethodChannelDocumentChangeN = dart.constFn(dart.nullable(method_channel_document_change.MethodChannelDocumentChange)))(),
    PigeonDocumentChangeNToMethodChannelDocumentChangeN: () => (T.PigeonDocumentChangeNToMethodChannelDocumentChangeN = dart.constFn(dart.fnType(T.MethodChannelDocumentChangeN(), [T$.PigeonDocumentChangeN()])))(),
    FieldPathToListOfString: () => (T.FieldPathToListOfString = dart.constFn(dart.fnType(T$.ListOfString(), [field_path.FieldPath])))(),
    StreamControllerOfDocumentSnapshotPlatform: () => (T.StreamControllerOfDocumentSnapshotPlatform = dart.constFn(async.StreamController$(platform_interface_document_snapshot.DocumentSnapshotPlatform)))(),
    JSArrayOfPigeonTransactionCommand: () => (T.JSArrayOfPigeonTransactionCommand = dart.constFn(_interceptors.JSArray$(messages$46pigeon$0.PigeonTransactionCommand)))(),
    FutureOfPlatformFile: () => (T.FutureOfPlatformFile = dart.constFn(async.Future$(platform_file.PlatformFile)))(),
    StringToFutureOfPlatformFile: () => (T.StringToFutureOfPlatformFile = dart.constFn(dart.fnType(T.FutureOfPlatformFile(), [core.String])))(),
    SinkOfListOfint: () => (T.SinkOfListOfint = dart.constFn(core.Sink$(T$.ListOfint())))(),
    intAndStringTovoid: () => (T.intAndStringTovoid = dart.constFn(dart.fnType(dart.void, [core.int, core.String])))(),
    IdentityMapOfString$MethodChannelFirebaseStorage: () => (T.IdentityMapOfString$MethodChannelFirebaseStorage = dart.constFn(_js_helper.IdentityMap$(core.String, method_channel_firebase_storage.MethodChannelFirebaseStorage)))(),
    LinkedMapOfObjectN$ObjectN: () => (T.LinkedMapOfObjectN$ObjectN = dart.constFn(_js_helper.LinkedMap$(T$.ObjectN(), T$.ObjectN())))(),
    VoidToClient: () => (T.VoidToClient = dart.constFn(dart.fnType(client$.Client, [])))(),
    StringAndStringTobool: () => (T.StringAndStringTobool = dart.constFn(dart.fnType(core.bool, [core.String, core.String])))(),
    StringToint: () => (T.StringToint = dart.constFn(dart.fnType(core.int, [core.String])))(),
    _EmptyStreamOfListOfint: () => (T._EmptyStreamOfListOfint = dart.constFn(async._EmptyStream$(T$.ListOfint())))(),
    CompleterOfUint8List: () => (T.CompleterOfUint8List = dart.constFn(async.Completer$(typed_data.Uint8List)))(),
    JSArrayOfMultipartFile: () => (T.JSArrayOfMultipartFile = dart.constFn(_interceptors.JSArray$(multipart_file.MultipartFile)))(),
    LinkedMapOfTaskState$TaskState: () => (T.LinkedMapOfTaskState$TaskState = dart.constFn(_js_helper.LinkedMap$(storage.TaskState, task_state.TaskState)))(),
    BlobN: () => (T.BlobN = dart.constFn(dart.nullable(html.Blob)))(),
    ListOfintToString: () => (T.ListOfintToString = dart.constFn(dart.fnType(core.String, [T$.ListOfint()])))(),
    _AsyncStarImplOfUint8List: () => (T._AsyncStarImplOfUint8List = dart.constFn(async._AsyncStarImpl$(typed_data.Uint8List)))(),
    StringToNint: () => (T.StringToNint = dart.constFn(dart.nullable(T.StringToint())))(),
    String__Toint: () => (T.String__Toint = dart.constFn(dart.fnType(core.int, [core.String], {onError: T.StringToNint(), radix: T$.intN()}, {})))(),
    ObjectNAndintToString: () => (T.ObjectNAndintToString = dart.constFn(dart.fnType(core.String, [T$.ObjectN(), core.int])))(),
    StringAndintToString: () => (T.StringAndintToString = dart.constFn(dart.fnType(core.String, [core.String, core.int])))(),
    dynamicAnddynamicToIntFormatter: () => (T.dynamicAnddynamicToIntFormatter = dart.constFn(dart.fnType(sprintf.IntFormatter, [dart.dynamic, dart.dynamic])))(),
    dynamicAnddynamicToFloatFormatter: () => (T.dynamicAnddynamicToFloatFormatter = dart.constFn(dart.fnType(sprintf.FloatFormatter, [dart.dynamic, dart.dynamic])))(),
    dynamicAnddynamicToStringFormatter: () => (T.dynamicAnddynamicToStringFormatter = dart.constFn(dart.fnType(sprintf.StringFormatter, [dart.dynamic, dart.dynamic])))(),
    dynamicAnddynamicToFormatter: () => (T.dynamicAnddynamicToFormatter = dart.constFn(dart.fnType(sprintf.Formatter, [dart.dynamic, dart.dynamic])))(),
    IdentityMapOfString$dynamicAnddynamicToFormatter: () => (T.IdentityMapOfString$dynamicAnddynamicToFormatter = dart.constFn(_js_helper.IdentityMap$(core.String, T.dynamicAnddynamicToFormatter())))(),
    VoidToint: () => (T.VoidToint = dart.constFn(dart.fnType(core.int, [])))(),
    SliverGridGeometryTodouble: () => (T.SliverGridGeometryTodouble = dart.constFn(dart.fnType(core.double, [sliver_grid.SliverGridGeometry])))(),
    doubleToSliverGridGeometry: () => (T.doubleToSliverGridGeometry = dart.constFn(dart.fnType(sliver_grid.SliverGridGeometry, [core.double])))(),
    RenderBoxAndBoxConstraints__Tovoid: () => (T.RenderBoxAndBoxConstraints__Tovoid = dart.constFn(dart.fnType(dart.void, [box.RenderBox, box.BoxConstraints], {parentUsesSize: core.bool}, {})))(),
    StaggeredGridParentDataAndintToint: () => (T.StaggeredGridParentDataAndintToint = dart.constFn(dart.fnType(core.int, [staggered_grid$.StaggeredGridParentData, core.int])))(),
    AxisTodouble: () => (T.AxisTodouble = dart.constFn(dart.fnType(core.double, [basic_types.Axis])))(),
    PigeonStorageReferenceN: () => (T.PigeonStorageReferenceN = dart.constFn(dart.nullable(messages$46pigeon$1.PigeonStorageReference)))(),
    PigeonFullMetaDataN: () => (T.PigeonFullMetaDataN = dart.constFn(dart.nullable(messages$46pigeon$1.PigeonFullMetaData)))(),
    PigeonListResultN: () => (T.PigeonListResultN = dart.constFn(dart.nullable(messages$46pigeon$1.PigeonListResult)))(),
    StringNAndObjectNTovoid: () => (T.StringNAndObjectNTovoid = dart.constFn(dart.fnType(dart.void, [T$.StringN(), T$.ObjectN()])))(),
    LinkedHashSetOfHttpRequest: () => (T.LinkedHashSetOfHttpRequest = dart.constFn(collection.LinkedHashSet$(html.HttpRequest)))(),
    CompleterOfStreamedResponse: () => (T.CompleterOfStreamedResponse = dart.constFn(async.Completer$(streamed_response.StreamedResponse)))(),
    ProgressEventToNull: () => (T.ProgressEventToNull = dart.constFn(dart.fnType(core.Null, [html.ProgressEvent])))(),
    JSArrayOfListOfString: () => (T.JSArrayOfListOfString = dart.constFn(_interceptors.JSArray$(T$.ListOfString())))(),
    ListOfStringToString: () => (T.ListOfStringToString = dart.constFn(dart.fnType(core.String, [T$.ListOfString()])))(),
    SinkOfDigest: () => (T.SinkOfDigest = dart.constFn(core.Sink$(digest.Digest)))(),
    RenderBoxAndBoxConstraintsToSize: () => (T.RenderBoxAndBoxConstraintsToSize = dart.constFn(dart.fnType(ui.Size, [box.RenderBox, box.BoxConstraints])))(),
    SizeTodouble: () => (T.SizeTodouble = dart.constFn(dart.fnType(core.double, [ui.Size])))(),
    intTodouble: () => (T.intTodouble = dart.constFn(dart.fnType(core.double, [core.int])))(),
    StringToMethodChannelReference: () => (T.StringToMethodChannelReference = dart.constFn(dart.fnType(method_channel_reference.MethodChannelReference, [core.String])))(),
    _AsyncStarImplOfTaskSnapshotPlatform: () => (T._AsyncStarImplOfTaskSnapshotPlatform = dart.constFn(async._AsyncStarImpl$(platform_interface_task_snapshot.TaskSnapshotPlatform)))(),
    StreamSubscriptionOfTaskSnapshotPlatform: () => (T.StreamSubscriptionOfTaskSnapshotPlatform = dart.constFn(async.StreamSubscription$(platform_interface_task_snapshot.TaskSnapshotPlatform)))(),
    StreamSubscriptionOfTaskSnapshotPlatformTovoid: () => (T.StreamSubscriptionOfTaskSnapshotPlatformTovoid = dart.constFn(dart.fnType(dart.void, [T.StreamSubscriptionOfTaskSnapshotPlatform()])))(),
    CompleterOfTaskSnapshotPlatform: () => (T.CompleterOfTaskSnapshotPlatform = dart.constFn(async.Completer$(platform_interface_task_snapshot.TaskSnapshotPlatform)))(),
    FutureOrOfbool: () => (T.FutureOrOfbool = dart.constFn(async.FutureOr$(core.bool)))()
  };
  var S$ = {
    $toString: dartx.toString,
    Widget_key: dart.privateName(framework, "Widget.key"),
    ProgressIndicator_semanticsValue: dart.privateName(progress_indicator, "ProgressIndicator.semanticsValue"),
    ProgressIndicator_semanticsLabel: dart.privateName(progress_indicator, "ProgressIndicator.semanticsLabel"),
    ProgressIndicator_valueColor: dart.privateName(progress_indicator, "ProgressIndicator.valueColor"),
    ProgressIndicator_color: dart.privateName(progress_indicator, "ProgressIndicator.color"),
    ProgressIndicator_backgroundColor: dart.privateName(progress_indicator, "ProgressIndicator.backgroundColor"),
    ProgressIndicator_value: dart.privateName(progress_indicator, "ProgressIndicator.value"),
    CircularProgressIndicator_strokeWidth: dart.privateName(progress_indicator, "CircularProgressIndicator.strokeWidth"),
    _Enum__name: dart.privateName(core, "_Enum._name"),
    _Enum_index: dart.privateName(core, "_Enum.index"),
    CircularProgressIndicator__indicatorType: dart.privateName(progress_indicator, "CircularProgressIndicator._indicatorType"),
    SingleChildRenderObjectWidget_child: dart.privateName(framework, "SingleChildRenderObjectWidget.child"),
    Align_heightFactor: dart.privateName(basic, "Align.heightFactor"),
    Align_widthFactor: dart.privateName(basic, "Align.widthFactor"),
    Alignment_y: dart.privateName(alignment, "Alignment.y"),
    Alignment_x: dart.privateName(alignment, "Alignment.x"),
    Align_alignment: dart.privateName(basic, "Align.alignment"),
    FirebaseOptions_appGroupId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appGroupId"),
    FirebaseOptions_iosBundleId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosBundleId"),
    FirebaseOptions_iosClientId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosClientId"),
    FirebaseOptions_androidClientId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.androidClientId"),
    FirebaseOptions_deepLinkURLScheme: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.deepLinkURLScheme"),
    FirebaseOptions_trackingId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.trackingId"),
    FirebaseOptions_measurementId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.measurementId"),
    FirebaseOptions_storageBucket: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.storageBucket"),
    FirebaseOptions_databaseURL: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.databaseURL"),
    FirebaseOptions_authDomain: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.authDomain"),
    FirebaseOptions_projectId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.projectId"),
    FirebaseOptions_messagingSenderId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.messagingSenderId"),
    FirebaseOptions_appId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appId"),
    FirebaseOptions_apiKey: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.apiKey"),
    _auth: dart.privateName(firebase_auth, "_auth"),
    _delegate: dart.privateName(firebase_auth, "_delegate"),
    app: dart.privateName(firebase_auth, "FirebaseAuth.app"),
    _delegatePackingProperty: dart.privateName(firebase_auth, "_delegatePackingProperty"),
    $putIfAbsent: dartx.putIfAbsent,
    $isNotEmpty: dartx.isNotEmpty,
    $startsWith: dartx.startsWith,
    $replaceFirst: dartx.replaceFirst,
    _pipeStreamChanges: dart.privateName(firebase_auth, "_pipeStreamChanges"),
    Duration__duration: dart.privateName(core, "Duration._duration"),
    _appName: dart.privateName(firebase_core_platform_interface, "_appName"),
    _methodChannelName: dart.privateName(firebase_core_platform_interface, "_methodChannelName"),
    $_get: dartx._get,
    _instance: dart.privateName(firebase_auth, "_instance"),
    codeIntervalSeconds: dart.privateName(firebase_auth, "TotpSecret.codeIntervalSeconds"),
    codeLength: dart.privateName(firebase_auth, "TotpSecret.codeLength"),
    enrollmentCompletionDeadline: dart.privateName(firebase_auth, "TotpSecret.enrollmentCompletionDeadline"),
    hashingAlgorithm: dart.privateName(firebase_auth, "TotpSecret.hashingAlgorithm"),
    secretKey: dart.privateName(firebase_auth, "TotpSecret.secretKey"),
    email: dart.privateName(firebase_auth_exception, "FirebaseAuthException.email"),
    credential: dart.privateName(firebase_auth_exception, "FirebaseAuthException.credential"),
    phoneNumber: dart.privateName(firebase_auth_exception, "FirebaseAuthException.phoneNumber"),
    tenantId: dart.privateName(firebase_auth_exception, "FirebaseAuthException.tenantId"),
    plugin: dart.privateName(firebase_core_platform_interface, "FirebaseException.plugin"),
    message: dart.privateName(firebase_core_platform_interface, "FirebaseException.message"),
    code: dart.privateName(firebase_core_platform_interface, "FirebaseException.code"),
    stackTrace: dart.privateName(firebase_core_platform_interface, "FirebaseException.stackTrace"),
    _multiFactor: dart.privateName(firebase_auth, "_multiFactor"),
    _delegate$1: dart.privateName(firebase_core, "_delegate"),
    $map: dartx.map,
    $toList: dartx.toList,
    $hashCode: dartx.hashCode,
    _user: dart.privateName(user_provider, "_user"),
    _authMethods: dart.privateName(user_provider, "_authMethods"),
    _page: dart.privateName(mobile_screen_layout, "_page"),
    ___MobileScreenLayoutState_pageController: dart.privateName(mobile_screen_layout, "_#_MobileScreenLayoutState#pageController"),
    EdgeInsets_bottom: dart.privateName(edge_insets, "EdgeInsets.bottom"),
    EdgeInsets_right: dart.privateName(edge_insets, "EdgeInsets.right"),
    EdgeInsets_top: dart.privateName(edge_insets, "EdgeInsets.top"),
    EdgeInsets_left: dart.privateName(edge_insets, "EdgeInsets.left"),
    _emailController: dart.privateName(login_screen, "_emailController"),
    _passwordController: dart.privateName(login_screen, "_passwordController"),
    _isLoading: dart.privateName(login_screen, "_isLoading"),
    Text_selectionColor: dart.privateName(text$, "Text.selectionColor"),
    Text_textHeightBehavior: dart.privateName(text$, "Text.textHeightBehavior"),
    Text_textWidthBasis: dart.privateName(text$, "Text.textWidthBasis"),
    Text_semanticsLabel: dart.privateName(text$, "Text.semanticsLabel"),
    Text_maxLines: dart.privateName(text$, "Text.maxLines"),
    Text_textScaleFactor: dart.privateName(text$, "Text.textScaleFactor"),
    Text_overflow: dart.privateName(text$, "Text.overflow"),
    Text_softWrap: dart.privateName(text$, "Text.softWrap"),
    Text_locale: dart.privateName(text$, "Text.locale"),
    Text_textDirection: dart.privateName(text$, "Text.textDirection"),
    Text_textAlign: dart.privateName(text$, "Text.textAlign"),
    Text_strutStyle: dart.privateName(text$, "Text.strutStyle"),
    TextStyle_overflow: dart.privateName(text_style, "TextStyle.overflow"),
    TextStyle_fontVariations: dart.privateName(text_style, "TextStyle.fontVariations"),
    TextStyle_fontFeatures: dart.privateName(text_style, "TextStyle.fontFeatures"),
    TextStyle_shadows: dart.privateName(text_style, "TextStyle.shadows"),
    TextStyle_debugLabel: dart.privateName(text_style, "TextStyle.debugLabel"),
    TextStyle_decorationThickness: dart.privateName(text_style, "TextStyle.decorationThickness"),
    TextStyle_decorationStyle: dart.privateName(text_style, "TextStyle.decorationStyle"),
    TextStyle_decorationColor: dart.privateName(text_style, "TextStyle.decorationColor"),
    TextStyle_decoration: dart.privateName(text_style, "TextStyle.decoration"),
    TextStyle_background: dart.privateName(text_style, "TextStyle.background"),
    TextStyle_foreground: dart.privateName(text_style, "TextStyle.foreground"),
    TextStyle_locale: dart.privateName(text_style, "TextStyle.locale"),
    TextStyle_leadingDistribution: dart.privateName(text_style, "TextStyle.leadingDistribution"),
    TextStyle_height: dart.privateName(text_style, "TextStyle.height"),
    TextStyle_textBaseline: dart.privateName(text_style, "TextStyle.textBaseline"),
    TextStyle_wordSpacing: dart.privateName(text_style, "TextStyle.wordSpacing"),
    TextStyle_letterSpacing: dart.privateName(text_style, "TextStyle.letterSpacing"),
    TextStyle_fontStyle: dart.privateName(text_style, "TextStyle.fontStyle"),
    FontWeight_value: dart.privateName(ui, "FontWeight.value"),
    FontWeight_index: dart.privateName(ui, "FontWeight.index"),
    TextStyle_fontWeight: dart.privateName(text_style, "TextStyle.fontWeight"),
    TextStyle_fontSize: dart.privateName(text_style, "TextStyle.fontSize"),
    TextStyle__package: dart.privateName(text_style, "TextStyle._package"),
    TextStyle__fontFamilyFallback: dart.privateName(text_style, "TextStyle._fontFamilyFallback"),
    TextStyle_fontFamily: dart.privateName(text_style, "TextStyle.fontFamily"),
    TextStyle_backgroundColor: dart.privateName(text_style, "TextStyle.backgroundColor"),
    Color_value: dart.privateName(ui, "Color.value"),
    ColorSwatch__swatch: dart.privateName(colors$, "ColorSwatch._swatch"),
    TextStyle_color: dart.privateName(text_style, "TextStyle.color"),
    TextStyle_inherit: dart.privateName(text_style, "TextStyle.inherit"),
    Text_style: dart.privateName(text$, "Text.style"),
    Text_textSpan: dart.privateName(text$, "Text.textSpan"),
    Text_data: dart.privateName(text$, "Text.data"),
    SizedBox_height: dart.privateName(basic, "SizedBox.height"),
    SizedBox_width: dart.privateName(basic, "SizedBox.width"),
    InputDecoration_constraints: dart.privateName(input_decorator, "InputDecoration.constraints"),
    InputDecoration_alignLabelWithHint: dart.privateName(input_decorator, "InputDecoration.alignLabelWithHint"),
    InputDecoration_semanticCounterText: dart.privateName(input_decorator, "InputDecoration.semanticCounterText"),
    InputDecoration_enabled: dart.privateName(input_decorator, "InputDecoration.enabled"),
    BorderSide_strokeAlign: dart.privateName(borders, "BorderSide.strokeAlign"),
    BorderSide_style: dart.privateName(borders, "BorderSide.style"),
    BorderSide_width: dart.privateName(borders, "BorderSide.width"),
    BorderSide_color: dart.privateName(borders, "BorderSide.color"),
    InputBorder_borderSide: dart.privateName(input_border, "InputBorder.borderSide"),
    Radius_y: dart.privateName(ui, "Radius.y"),
    Radius_x: dart.privateName(ui, "Radius.x"),
    BorderRadius_bottomRight: dart.privateName(border_radius, "BorderRadius.bottomRight"),
    BorderRadius_bottomLeft: dart.privateName(border_radius, "BorderRadius.bottomLeft"),
    BorderRadius_topRight: dart.privateName(border_radius, "BorderRadius.topRight"),
    BorderRadius_topLeft: dart.privateName(border_radius, "BorderRadius.topLeft"),
    OutlineInputBorder_borderRadius: dart.privateName(input_border, "OutlineInputBorder.borderRadius"),
    OutlineInputBorder_gapPadding: dart.privateName(input_border, "OutlineInputBorder.gapPadding"),
    InputDecoration_border: dart.privateName(input_decorator, "InputDecoration.border"),
    InputDecoration_enabledBorder: dart.privateName(input_decorator, "InputDecoration.enabledBorder"),
    InputDecoration_disabledBorder: dart.privateName(input_decorator, "InputDecoration.disabledBorder"),
    InputDecoration_focusedErrorBorder: dart.privateName(input_decorator, "InputDecoration.focusedErrorBorder"),
    InputDecoration_focusedBorder: dart.privateName(input_decorator, "InputDecoration.focusedBorder"),
    InputDecoration_errorBorder: dart.privateName(input_decorator, "InputDecoration.errorBorder"),
    InputDecoration_hoverColor: dart.privateName(input_decorator, "InputDecoration.hoverColor"),
    InputDecoration_focusColor: dart.privateName(input_decorator, "InputDecoration.focusColor"),
    InputDecoration_fillColor: dart.privateName(input_decorator, "InputDecoration.fillColor"),
    InputDecoration_filled: dart.privateName(input_decorator, "InputDecoration.filled"),
    InputDecoration_counterStyle: dart.privateName(input_decorator, "InputDecoration.counterStyle"),
    InputDecoration_counter: dart.privateName(input_decorator, "InputDecoration.counter"),
    InputDecoration_counterText: dart.privateName(input_decorator, "InputDecoration.counterText"),
    InputDecoration_suffixIconConstraints: dart.privateName(input_decorator, "InputDecoration.suffixIconConstraints"),
    InputDecoration_suffixIconColor: dart.privateName(input_decorator, "InputDecoration.suffixIconColor"),
    InputDecoration_suffixStyle: dart.privateName(input_decorator, "InputDecoration.suffixStyle"),
    InputDecoration_suffixText: dart.privateName(input_decorator, "InputDecoration.suffixText"),
    InputDecoration_suffix: dart.privateName(input_decorator, "InputDecoration.suffix"),
    InputDecoration_suffixIcon: dart.privateName(input_decorator, "InputDecoration.suffixIcon"),
    InputDecoration_prefixIconColor: dart.privateName(input_decorator, "InputDecoration.prefixIconColor"),
    InputDecoration_prefixStyle: dart.privateName(input_decorator, "InputDecoration.prefixStyle"),
    InputDecoration_prefixText: dart.privateName(input_decorator, "InputDecoration.prefixText"),
    InputDecoration_prefix: dart.privateName(input_decorator, "InputDecoration.prefix"),
    InputDecoration_prefixIconConstraints: dart.privateName(input_decorator, "InputDecoration.prefixIconConstraints"),
    InputDecoration_prefixIcon: dart.privateName(input_decorator, "InputDecoration.prefixIcon"),
    InputDecoration_isCollapsed: dart.privateName(input_decorator, "InputDecoration.isCollapsed"),
    InputDecoration_contentPadding: dart.privateName(input_decorator, "InputDecoration.contentPadding"),
    InputDecoration_isDense: dart.privateName(input_decorator, "InputDecoration.isDense"),
    InputDecoration_floatingLabelAlignment: dart.privateName(input_decorator, "InputDecoration.floatingLabelAlignment"),
    InputDecoration_floatingLabelBehavior: dart.privateName(input_decorator, "InputDecoration.floatingLabelBehavior"),
    InputDecoration_errorMaxLines: dart.privateName(input_decorator, "InputDecoration.errorMaxLines"),
    InputDecoration_errorStyle: dart.privateName(input_decorator, "InputDecoration.errorStyle"),
    InputDecoration_errorText: dart.privateName(input_decorator, "InputDecoration.errorText"),
    InputDecoration_hintMaxLines: dart.privateName(input_decorator, "InputDecoration.hintMaxLines"),
    InputDecoration_hintTextDirection: dart.privateName(input_decorator, "InputDecoration.hintTextDirection"),
    InputDecoration_hintStyle: dart.privateName(input_decorator, "InputDecoration.hintStyle"),
    InputDecoration_hintText: dart.privateName(input_decorator, "InputDecoration.hintText"),
    InputDecoration_helperMaxLines: dart.privateName(input_decorator, "InputDecoration.helperMaxLines"),
    InputDecoration_helperStyle: dart.privateName(input_decorator, "InputDecoration.helperStyle"),
    InputDecoration_helperText: dart.privateName(input_decorator, "InputDecoration.helperText"),
    InputDecoration_floatingLabelStyle: dart.privateName(input_decorator, "InputDecoration.floatingLabelStyle"),
    InputDecoration_labelStyle: dart.privateName(input_decorator, "InputDecoration.labelStyle"),
    InputDecoration_labelText: dart.privateName(input_decorator, "InputDecoration.labelText"),
    InputDecoration_label: dart.privateName(input_decorator, "InputDecoration.label"),
    InputDecoration_iconColor: dart.privateName(input_decorator, "InputDecoration.iconColor"),
    InputDecoration_icon: dart.privateName(input_decorator, "InputDecoration.icon"),
    _webFirestore: dart.privateName(cloud_firestore_web, "_webFirestore"),
    _settings: dart.privateName(cloud_firestore_web, "_settings"),
    _delegate$2: dart.privateName(cloud_firestore_web, "_delegate"),
    Settings_ignoreUndefinedProperties: dart.privateName(settings, "Settings.ignoreUndefinedProperties"),
    Settings_cacheSizeBytes: dart.privateName(settings, "Settings.cacheSizeBytes"),
    Settings_sslEnabled: dart.privateName(settings, "Settings.sslEnabled"),
    Settings_host: dart.privateName(settings, "Settings.host"),
    Settings_persistenceEnabled: dart.privateName(settings, "Settings.persistenceEnabled"),
    GetOptions_serverTimestampBehavior: dart.privateName(get_options, "GetOptions.serverTimestampBehavior"),
    GetOptions_source: dart.privateName(get_options, "GetOptions.source"),
    appInstance: dart.privateName(platform_interface_firestore, "FirebaseFirestorePlatform.appInstance"),
    databaseChoice: dart.privateName(platform_interface_firestore, "FirebaseFirestorePlatform.databaseChoice"),
    __FilePickerWeb__target: dart.privateName(file_picker_web, "_#FilePickerWeb#_target"),
    _kFilePickerInputsDomId: dart.privateName(file_picker_web, "_kFilePickerInputsDomId"),
    _readStreamChunkSize: dart.privateName(file_picker_web, "_readStreamChunkSize"),
    _target: dart.privateName(file_picker_web, "_target"),
    _ensureInitialized: dart.privateName(file_picker_web, "_ensureInitialized"),
    $id: dartx.id,
    $children: dartx.children,
    $add: dartx.add,
    $draggable: dartx.draggable,
    $display: dartx.display,
    $style: dartx.style,
    $name: dartx.name,
    $length: dartx.length,
    $size: dartx.size,
    _openFileReadStream: dart.privateName(file_picker_web, "_openFileReadStream"),
    $onLoadEnd: dartx.onLoadEnd,
    $result: dartx.result,
    $readAsDataUrl: dartx.readAsDataUrl,
    $removeEventListener: dartx.removeEventListener,
    $onChange: dartx.onChange,
    $addEventListener: dartx.addEventListener,
    $clear: dartx.clear,
    $isEmpty: dartx.isEmpty,
    $fold: dartx.fold,
    $slice: dartx.slice,
    $onLoad: dartx.onLoad,
    _initialized: dart.privateName(firebase_auth_web, "_initialized"),
    _webAuth: dart.privateName(firebase_auth_web, "_webAuth"),
    $_set: dartx._set,
    $location: dartx.location,
    $sessionStorage: dartx.sessionStorage,
    $contains: dartx.contains,
    appInstance$1: dart.privateName(platform_interface_firebase_auth, "FirebaseAuthPlatform.appInstance"),
    tenantId$1: dart.privateName(platform_interface_firebase_auth, "FirebaseAuthPlatform.tenantId"),
    _isAutomaticDataCollectionEnabled: dart.privateName(firebase_core_web, "_isAutomaticDataCollectionEnabled"),
    name: dart.privateName(firebase_core_platform_interface, "FirebaseAppPlatform.name"),
    options: dart.privateName(firebase_core_platform_interface, "FirebaseAppPlatform.options"),
    _isDefault: dart.privateName(firebase_core_platform_interface, "_isDefault"),
    name$1: dart.privateName(firebase_core_web, "FirebaseWebService.name"),
    override: dart.privateName(firebase_core_web, "FirebaseWebService.override"),
    ensurePluginInitialized: dart.privateName(firebase_core_web, "FirebaseWebService.ensurePluginInitialized"),
    _defaultTrustedPolicyName: dart.privateName(firebase_core_web, "_defaultTrustedPolicyName"),
    _ignoredServiceScripts: dart.privateName(firebase_core_web, "_ignoredServiceScripts"),
    $type: dartx.type,
    $text: dartx.text,
    $head: dartx.head,
    $append: dartx.append,
    $values: dartx.values,
    _initializeCore: dart.privateName(firebase_core_web, "_initializeCore"),
    $remove: dartx.remove,
    $split: dartx.split,
    $replaceAll: dartx.replaceAll,
    __ImagePickerPlugin__target: dart.privateName(image_picker_for_web, "_#ImagePickerPlugin#_target"),
    __ImagePickerPlugin__imageResizer: dart.privateName(image_picker_for_web, "_#ImagePickerPlugin#_imageResizer"),
    _overrides: dart.privateName(image_picker_for_web, "_overrides"),
    _imageResizer: dart.privateName(image_picker_for_web, "_imageResizer"),
    _target$1: dart.privateName(image_picker_for_web, "_target"),
    _ensureInitialized$1: dart.privateName(image_picker_for_web, "_ensureInitialized"),
    _hasOverrides: dart.privateName(image_picker_for_web, "_hasOverrides"),
    ImageOptions_requestFullMetadata: dart.privateName(image_options, "ImageOptions.requestFullMetadata"),
    ImageOptions_imageQuality: dart.privateName(image_options, "ImageOptions.imageQuality"),
    ImageOptions_maxHeight: dart.privateName(image_options, "ImageOptions.maxHeight"),
    ImageOptions_maxWidth: dart.privateName(image_options, "ImageOptions.maxWidth"),
    ImagePickerOptions_preferredCameraDevice: dart.privateName(image_options, "ImagePickerOptions.preferredCameraDevice"),
    $first: dartx.first,
    MultiImagePickerOptions_imageOptions: dart.privateName(multi_image_picker_options, "MultiImagePickerOptions.imageOptions"),
    _injectAndActivate: dart.privateName(image_picker_for_web, "_injectAndActivate"),
    _getSelectedXFiles: dart.privateName(image_picker_for_web, "_getSelectedXFiles"),
    $files: dartx.files,
    _getFilesFromInput: dart.privateName(image_picker_for_web, "_getFilesFromInput"),
    $target: dartx.target,
    _handleOnChangeEvent: dart.privateName(image_picker_for_web, "_handleOnChangeEvent"),
    $onError: dartx.onError,
    $accept: dartx.accept,
    $multiple: dartx.multiple,
    $setAttribute: dartx.setAttribute,
    __ImagePickerPluginTestOverrides_createInputElement: dart.privateName(image_picker_for_web, "_#ImagePickerPluginTestOverrides#createInputElement"),
    __ImagePickerPluginTestOverrides_getMultipleFilesFromInput: dart.privateName(image_picker_for_web, "_#ImagePickerPluginTestOverrides#getMultipleFilesFromInput"),
    apiKey: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.apiKey"),
    appId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appId"),
    messagingSenderId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.messagingSenderId"),
    projectId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.projectId"),
    authDomain: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.authDomain"),
    databaseURL: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.databaseURL"),
    storageBucket: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.storageBucket"),
    measurementId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.measurementId"),
    trackingId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.trackingId"),
    deepLinkURLScheme: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.deepLinkURLScheme"),
    androidClientId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.androidClientId"),
    iosClientId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosClientId"),
    iosBundleId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.iosBundleId"),
    appGroupId: dart.privateName(firebase_core_platform_interface, "FirebaseOptions.appGroupId"),
    MapEquality__valueEquality: dart.privateName(equality, "MapEquality._valueEquality"),
    MapEquality__keyEquality: dart.privateName(equality, "MapEquality._keyEquality"),
    $where: dartx.where,
    $cast: dartx.cast,
    _initializeFirebaseAppFromMap: dart.privateName(firebase_core_platform_interface, "_initializeFirebaseAppFromMap"),
    $forEach: dartx.forEach,
    _initializeCore$1: dart.privateName(firebase_core_platform_interface, "_initializeCore"),
    $containsKey: dartx.containsKey,
    _isDeleted: dart.privateName(firebase_core_platform_interface, "_isDeleted"),
    _api: dart.privateName(firebase_core_platform_interface, "_api"),
    _isAutomaticDataCollectionEnabled$1: dart.privateName(firebase_core_platform_interface, "_isAutomaticDataCollectionEnabled"),
    builder: dart.privateName(provider$, "InheritedProvider.builder"),
    _lazy: dart.privateName(provider$, "_lazy"),
    _delegate$3: dart.privateName(provider$, "_delegate"),
    $runtimeType: dartx.runtimeType,
    _child: dart.privateName(nested, "SingleChildStatelessWidget._child"),
    _child$1: dart.privateName(nested, "_child"),
    builder$1: dart.privateName(consumer, "Consumer.builder"),
    builder$2: dart.privateName(consumer, "Consumer2.builder"),
    builder$3: dart.privateName(consumer, "Consumer3.builder"),
    builder$4: dart.privateName(consumer, "Consumer4.builder"),
    builder$5: dart.privateName(consumer, "Consumer5.builder"),
    builder$6: dart.privateName(consumer, "Consumer6.builder"),
    _children: dart.privateName(nested, "_children"),
    valueType: dart.privateName(provider$, "ProviderNullException.valueType"),
    widgetType: dart.privateName(provider$, "ProviderNullException.widgetType"),
    valueType$1: dart.privateName(provider$, "ProviderNotFoundException.valueType"),
    widgetType$1: dart.privateName(provider$, "ProviderNotFoundException.widgetType"),
    _removeListener: dart.privateName(provider$, "_removeListener"),
    _value: dart.privateName(provider$, "_value"),
    _hasValue: dart.privateName(provider$, "_hasValue"),
    _isNotifyDependentsEnabled: dart.privateName(provider$, "_isNotifyDependentsEnabled"),
    element: dart.privateName(provider$, "_DelegateState.element"),
    _debugSetInheritedLock: dart.privateName(provider$, "_debugSetInheritedLock"),
    _didBuild: dart.privateName(provider$, "_didBuild"),
    _controller: dart.privateName(provider$, "_controller"),
    eventKind: dart.privateName(provider$, "PostEventCall.eventKind"),
    event: dart.privateName(provider$, "PostEventCall.event"),
    logs: dart.privateName(provider$, "PostEventSpy.logs"),
    _postEvent: dart.privateName(provider$, "_postEvent"),
    id: dart.privateName(provider$, "ProviderNode.id"),
    type: dart.privateName(provider$, "ProviderNode.type"),
    childrenNodeIds: dart.privateName(provider$, "ProviderNode.childrenNodeIds"),
    _element: dart.privateName(provider$, "ProviderNode._element"),
    _element$1: dart.privateName(provider$, "_element"),
    _delegateState: dart.privateName(provider$, "_delegateState"),
    _providerDetails: dart.privateName(provider$, "_providerDetails"),
    _parent: dart.privateName(nested, "_parent"),
    _parent$1: dart.privateName(nested, "SingleChildWidgetElementMixin._parent"),
    owner: dart.privateName(provider$, "_InheritedProviderScope.owner"),
    debugType: dart.privateName(provider$, "_InheritedProviderScope.debugType"),
    _shouldNotifyDependents: dart.privateName(provider$, "_shouldNotifyDependents"),
    _debugInheritLocked: dart.privateName(provider$, "_debugInheritLocked"),
    _updatedShouldNotify: dart.privateName(provider$, "_updatedShouldNotify"),
    _isBuildFromExternalSources: dart.privateName(provider$, "_isBuildFromExternalSources"),
    ___InheritedProviderScopeElement__delegateState: dart.privateName(provider$, "_#_InheritedProviderScopeElement#_delegateState"),
    ___InheritedProviderScopeElement__debugId: dart.privateName(provider$, "_#_InheritedProviderScopeElement#_debugId"),
    _debugId: dart.privateName(provider$, "_debugId"),
    _updateShouldNotify: dart.privateName(provider$, "_updateShouldNotify"),
    _didInitValue: dart.privateName(provider$, "_didInitValue"),
    _previousWidget: dart.privateName(provider$, "_previousWidget"),
    _initError: dart.privateName(provider$, "_initError"),
    DeepCollectionEquality__unordered: dart.privateName(equality, "DeepCollectionEquality._unordered"),
    DeepCollectionEquality__base: dart.privateName(equality, "DeepCollectionEquality._base"),
    builder$7: dart.privateName(selector$, "Selector0.builder"),
    selector: dart.privateName(selector$, "Selector0.selector"),
    _shouldRebuild: dart.privateName(selector$, "_shouldRebuild"),
    _child$2: dart.privateName(nested, "SingleChildStatefulWidget._child"),
    value: dart.privateName(selector$, "_Selector0State.value"),
    _valueListenable: dart.privateName(value_listenable_provider, "_valueListenable"),
    _updateShouldNotify$1: dart.privateName(value_listenable_provider, "_updateShouldNotify"),
    email$1: dart.privateName(user$, "User.email"),
    uid: dart.privateName(user$, "User.uid"),
    photoUrl: dart.privateName(user$, "User.photoUrl"),
    username: dart.privateName(user$, "User.username"),
    bio: dart.privateName(user$, "User.bio"),
    followers: dart.privateName(user$, "User.followers"),
    following: dart.privateName(user$, "User.following"),
    _firestore: dart.privateName(auth_methods, "_firestore"),
    _auth$1: dart.privateName(auth_methods, "_auth"),
    _usernameController: dart.privateName(signup_screen, "_usernameController"),
    _emailController$1: dart.privateName(signup_screen, "_emailController"),
    _passwordController$1: dart.privateName(signup_screen, "_passwordController"),
    _bioController: dart.privateName(signup_screen, "_bioController"),
    _isLoading$1: dart.privateName(signup_screen, "_isLoading"),
    _image: dart.privateName(signup_screen, "_image"),
    CircleAvatar_maxRadius: dart.privateName(circle_avatar, "CircleAvatar.maxRadius"),
    CircleAvatar_minRadius: dart.privateName(circle_avatar, "CircleAvatar.minRadius"),
    CircleAvatar_radius: dart.privateName(circle_avatar, "CircleAvatar.radius"),
    CircleAvatar_onForegroundImageError: dart.privateName(circle_avatar, "CircleAvatar.onForegroundImageError"),
    CircleAvatar_onBackgroundImageError: dart.privateName(circle_avatar, "CircleAvatar.onBackgroundImageError"),
    CircleAvatar_foregroundImage: dart.privateName(circle_avatar, "CircleAvatar.foregroundImage"),
    NetworkImage_headers: dart.privateName(_network_image_web, "NetworkImage.headers"),
    NetworkImage_scale: dart.privateName(_network_image_web, "NetworkImage.scale"),
    NetworkImage_url: dart.privateName(_network_image_web, "NetworkImage.url"),
    CircleAvatar_backgroundImage: dart.privateName(circle_avatar, "CircleAvatar.backgroundImage"),
    CircleAvatar_foregroundColor: dart.privateName(circle_avatar, "CircleAvatar.foregroundColor"),
    CircleAvatar_backgroundColor: dart.privateName(circle_avatar, "CircleAvatar.backgroundColor"),
    CircleAvatar_child: dart.privateName(circle_avatar, "CircleAvatar.child"),
    Icon_textDirection: dart.privateName(icon, "Icon.textDirection"),
    Icon_semanticLabel: dart.privateName(icon, "Icon.semanticLabel"),
    Icon_shadows: dart.privateName(icon, "Icon.shadows"),
    Icon_color: dart.privateName(icon, "Icon.color"),
    Icon_opticalSize: dart.privateName(icon, "Icon.opticalSize"),
    Icon_grade: dart.privateName(icon, "Icon.grade"),
    Icon_weight: dart.privateName(icon, "Icon.weight"),
    Icon_fill: dart.privateName(icon, "Icon.fill"),
    Icon_size: dart.privateName(icon, "Icon.size"),
    IconData_matchTextDirection: dart.privateName(icon_data, "IconData.matchTextDirection"),
    IconData_fontPackage: dart.privateName(icon_data, "IconData.fontPackage"),
    IconData_fontFamily: dart.privateName(icon_data, "IconData.fontFamily"),
    IconData_codePoint: dart.privateName(icon_data, "IconData.codePoint"),
    Icon_icon: dart.privateName(icon, "Icon.icon"),
    __LoadBundleTaskWeb_stream: dart.privateName(load_bundle_task_web, "_#LoadBundleTaskWeb#stream"),
    $toLowerCase: dartx.toLowerCase,
    $join: dartx.join,
    _firestorePlatform: dart.privateName(collection_reference_web, "_firestorePlatform"),
    _webFirestore$1: dart.privateName(collection_reference_web, "_webFirestore"),
    _delegate$4: dart.privateName(collection_reference_web, "_delegate"),
    _pointer: dart.privateName(collection_reference_web, "_pointer"),
    _pointer$1: dart.privateName(platform_interface_collection_reference, "_pointer"),
    isCollectionGroupQuery: dart.privateName(query_web, "QueryWeb.isCollectionGroupQuery"),
    _path: dart.privateName(query_web, "_path"),
    _webQuery: dart.privateName(query_web, "_webQuery"),
    $addAll: dartx.addAll,
    _copyWithParameters: dart.privateName(query_web, "_copyWithParameters"),
    _buildWebQueryWithParameters: dart.privateName(query_web, "_buildWebQueryWithParameters"),
    $whereType: dartx.whereType,
    firestore: dart.privateName(platform_interface_query, "QueryPlatform.firestore"),
    parameters: dart.privateName(platform_interface_query, "QueryPlatform.parameters"),
    firestoreWeb: dart.privateName(document_reference_web, "DocumentReferenceWeb.firestoreWeb"),
    _delegate$5: dart.privateName(document_reference_web, "_delegate"),
    firestore$1: dart.privateName(platform_interface_document_reference, "DocumentReferencePlatform.firestore"),
    _pointer$2: dart.privateName(platform_interface_document_reference, "_pointer"),
    jsObject: dart.privateName(js$0, "JsObjectWrapper.jsObject"),
    taskState: dart.privateName(firestore$, "LoadBundleTaskProgress.taskState"),
    bytesLoaded: dart.privateName(firestore$, "LoadBundleTaskProgress.bytesLoaded"),
    documentsLoaded: dart.privateName(firestore$, "LoadBundleTaskProgress.documentsLoaded"),
    totalBytes: dart.privateName(firestore$, "LoadBundleTaskProgress.totalBytes"),
    totalDocuments: dart.privateName(firestore$, "LoadBundleTaskProgress.totalDocuments"),
    _wrapUpdateFunctionCall: dart.privateName(firestore$, "_wrapUpdateFunctionCall"),
    $insert: dartx.insert,
    _createSnapshotStream: dart.privateName(firestore$, "_createSnapshotStream"),
    $keys: dartx.keys,
    $expand: dartx.expand,
    __Query_onSnapshot: dart.privateName(firestore$, "_#Query#onSnapshot"),
    __Query_onSnapshotMetadata: dart.privateName(firestore$, "_#Query#onSnapshotMetadata"),
    _createQueryConstraint: dart.privateName(firestore$, "_createQueryConstraint"),
    _parseFilterWith: dart.privateName(firestore$, "_parseFilterWith"),
    _jsify: dart.privateName(firestore$, "_jsify"),
    _jsQuery: dart.privateName(firestore$, "_jsQuery"),
    __AggregateQuerySnapshot__data: dart.privateName(firestore$, "_#AggregateQuerySnapshot#_data"),
    _data: dart.privateName(firestore$, "_data"),
    _firestore$1: dart.privateName(transaction_web, "_firestore"),
    _webFirestoreDelegate: dart.privateName(transaction_web, "_webFirestoreDelegate"),
    _webTransactionDelegate: dart.privateName(transaction_web, "_webTransactionDelegate"),
    _webFirestoreDelegate$1: dart.privateName(write_batch_web, "_webFirestoreDelegate"),
    _webWriteBatchDelegate: dart.privateName(write_batch_web, "_webWriteBatchDelegate"),
    _webMultiFactorUser: dart.privateName(firebase_auth_web_multi_factor, "_webMultiFactorUser"),
    auth: dart.privateName(platform_interface_multi_factor, "MultiFactorPlatform.auth"),
    assertion: dart.privateName(firebase_auth_web_multi_factor, "MultiFactorAssertionWeb.assertion"),
    _auth$2: dart.privateName(firebase_auth_web_multi_factor, "_auth"),
    _webMultiFactorResolver: dart.privateName(firebase_auth_web_multi_factor, "_webMultiFactorResolver"),
    _webAuth$1: dart.privateName(firebase_auth_web_multi_factor, "_webAuth"),
    hints: dart.privateName(platform_interface_multi_factor, "MultiFactorResolverPlatform.hints"),
    session: dart.privateName(platform_interface_multi_factor, "MultiFactorResolverPlatform.session"),
    webSession: dart.privateName(firebase_auth_web_multi_factor, "MultiFactorSessionWeb.webSession"),
    id$1: dart.privateName(platform_interface_multi_factor, "MultiFactorSession.id"),
    webSecret: dart.privateName(firebase_auth_web_multi_factor, "TotpSecretWeb.webSecret"),
    codeIntervalSeconds$1: dart.privateName(platform_interface_multi_factor, "TotpSecretPlatform.codeIntervalSeconds"),
    codeLength$1: dart.privateName(platform_interface_multi_factor, "TotpSecretPlatform.codeLength"),
    enrollmentCompletionDeadline$1: dart.privateName(platform_interface_multi_factor, "TotpSecretPlatform.enrollmentCompletionDeadline"),
    hashingAlgorithm$1: dart.privateName(platform_interface_multi_factor, "TotpSecretPlatform.hashingAlgorithm"),
    secretKey$1: dart.privateName(platform_interface_multi_factor, "TotpSecretPlatform.secretKey"),
    _auth$3: dart.privateName(firebase_auth_web_confirmation_result, "_auth"),
    _webConfirmationResult: dart.privateName(firebase_auth_web_confirmation_result, "_webConfirmationResult"),
    _webAuth$2: dart.privateName(firebase_auth_web_confirmation_result, "_webAuth"),
    verificationId: dart.privateName(platform_interface_confirmation_result, "ConfirmationResultPlatform.verificationId"),
    __RecaptchaVerifierFactoryWeb__delegate: dart.privateName(firebase_auth_web_recaptcha_verifier_factory, "_#RecaptchaVerifierFactoryWeb#_delegate"),
    $document: dartx.document,
    _delegate$6: dart.privateName(firebase_auth_web_recaptcha_verifier_factory, "_delegate"),
    _webUser: dart.privateName(firebase_auth_web_user, "_webUser"),
    _webAuth$3: dart.privateName(firebase_auth_web_user, "_webAuth"),
    auth$1: dart.privateName(platform_interface_user, "UserPlatform.auth"),
    multiFactor: dart.privateName(platform_interface_user, "UserPlatform.multiFactor"),
    _user$1: dart.privateName(platform_interface_user, "_user"),
    auth$2: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.auth"),
    additionalUserInfo: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.additionalUserInfo"),
    credential$1: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.credential"),
    user: dart.privateName(platform_interface_user_credential, "UserCredentialPlatform.user"),
    _initUser: dart.privateName(auth$, "_initUser"),
    _onAuthUnsubscribe: dart.privateName(auth$, "_onAuthUnsubscribe"),
    _changeController: dart.privateName(auth$, "_changeController"),
    _onIdTokenChangedUnsubscribe: dart.privateName(auth$, "_onIdTokenChangedUnsubscribe"),
    _idTokenChangedController: dart.privateName(auth$, "_idTokenChangedController"),
    $toInt: dartx.toInt,
    _maxDownloadRetryTime: dart.privateName(firebase_storage_web$, "_maxDownloadRetryTime"),
    _maxOperationRetryTime: dart.privateName(firebase_storage_web$, "_maxOperationRetryTime"),
    _webStorage: dart.privateName(firebase_storage_web$, "_webStorage"),
    _bucket: dart.privateName(firebase_storage_web$, "_bucket"),
    _createReference: dart.privateName(firebase_storage_web$, "_createReference"),
    appInstance$2: dart.privateName(platform_interface_firebase_storage, "FirebaseStoragePlatform.appInstance"),
    bucket: dart.privateName(platform_interface_firebase_storage, "FirebaseStoragePlatform.bucket"),
    emulatorHost: dart.privateName(platform_interface_firebase_storage, "FirebaseStoragePlatform.emulatorHost"),
    emulatorPort: dart.privateName(platform_interface_firebase_storage, "FirebaseStoragePlatform.emulatorPort"),
    $toDouble: dartx.toDouble,
    $context2D: dartx.context2D,
    $drawImageScaled: dartx.drawImageScaled,
    $toBlob: dartx.toBlob,
    operation: dart.privateName(action_code_info, "ActionCodeInfo.operation"),
    _data$1: dart.privateName(action_code_info, "_data")
  };
  var S$0 = {
    email$2: dart.privateName(action_code_info, "ActionCodeInfoData.email"),
    previousEmail: dart.privateName(action_code_info, "ActionCodeInfoData.previousEmail"),
    androidPackageName: dart.privateName(action_code_settings, "ActionCodeSettings.androidPackageName"),
    androidMinimumVersion: dart.privateName(action_code_settings, "ActionCodeSettings.androidMinimumVersion"),
    androidInstallApp: dart.privateName(action_code_settings, "ActionCodeSettings.androidInstallApp"),
    iOSBundleId: dart.privateName(action_code_settings, "ActionCodeSettings.iOSBundleId"),
    dynamicLinkDomain: dart.privateName(action_code_settings, "ActionCodeSettings.dynamicLinkDomain"),
    handleCodeInApp: dart.privateName(action_code_settings, "ActionCodeSettings.handleCodeInApp"),
    url: dart.privateName(action_code_settings, "ActionCodeSettings.url"),
    isNewUser: dart.privateName(additional_user_info, "AdditionalUserInfo.isNewUser"),
    profile: dart.privateName(additional_user_info, "AdditionalUserInfo.profile"),
    providerId: dart.privateName(additional_user_info, "AdditionalUserInfo.providerId"),
    username$1: dart.privateName(additional_user_info, "AdditionalUserInfo.username"),
    authorizationCode: dart.privateName(additional_user_info, "AdditionalUserInfo.authorizationCode"),
    providerId$1: dart.privateName(auth_credential, "AuthCredential.providerId"),
    signInMethod: dart.privateName(auth_credential, "AuthCredential.signInMethod"),
    token: dart.privateName(auth_credential, "AuthCredential.token"),
    accessToken: dart.privateName(auth_credential, "AuthCredential.accessToken"),
    providerId$2: dart.privateName(auth_provider, "AuthProvider.providerId"),
    resolver: dart.privateName(firebase_auth_multi_factor_exception, "FirebaseAuthMultiFactorExceptionPlatform.resolver"),
    _data$2: dart.privateName(id_token_result, "_data"),
    _name: dart.privateName(core, "_name"),
    _enumToString: dart.privateName(core, "_enumToString"),
    id$2: dart.privateName(messages$46pigeon, "PigeonMultiFactorSession.id"),
    verificationId$1: dart.privateName(messages$46pigeon, "PigeonPhoneMultiFactorAssertion.verificationId"),
    verificationCode: dart.privateName(messages$46pigeon, "PigeonPhoneMultiFactorAssertion.verificationCode"),
    displayName: dart.privateName(messages$46pigeon, "PigeonMultiFactorInfo.displayName"),
    enrollmentTimestamp: dart.privateName(messages$46pigeon, "PigeonMultiFactorInfo.enrollmentTimestamp"),
    factorId: dart.privateName(messages$46pigeon, "PigeonMultiFactorInfo.factorId"),
    uid$1: dart.privateName(messages$46pigeon, "PigeonMultiFactorInfo.uid"),
    phoneNumber$1: dart.privateName(messages$46pigeon, "PigeonMultiFactorInfo.phoneNumber"),
    appName: dart.privateName(messages$46pigeon, "AuthPigeonFirebaseApp.appName"),
    tenantId$2: dart.privateName(messages$46pigeon, "AuthPigeonFirebaseApp.tenantId"),
    email$3: dart.privateName(messages$46pigeon, "PigeonActionCodeInfoData.email"),
    previousEmail$1: dart.privateName(messages$46pigeon, "PigeonActionCodeInfoData.previousEmail"),
    operation$1: dart.privateName(messages$46pigeon, "PigeonActionCodeInfo.operation"),
    data: dart.privateName(messages$46pigeon, "PigeonActionCodeInfo.data"),
    isNewUser$1: dart.privateName(messages$46pigeon, "PigeonAdditionalUserInfo.isNewUser"),
    providerId$3: dart.privateName(messages$46pigeon, "PigeonAdditionalUserInfo.providerId"),
    username$2: dart.privateName(messages$46pigeon, "PigeonAdditionalUserInfo.username"),
    authorizationCode$1: dart.privateName(messages$46pigeon, "PigeonAdditionalUserInfo.authorizationCode"),
    profile$1: dart.privateName(messages$46pigeon, "PigeonAdditionalUserInfo.profile"),
    providerId$4: dart.privateName(messages$46pigeon, "PigeonAuthCredential.providerId"),
    signInMethod$1: dart.privateName(messages$46pigeon, "PigeonAuthCredential.signInMethod"),
    nativeId: dart.privateName(messages$46pigeon, "PigeonAuthCredential.nativeId"),
    accessToken$1: dart.privateName(messages$46pigeon, "PigeonAuthCredential.accessToken"),
    uid$2: dart.privateName(messages$46pigeon, "PigeonUserInfo.uid"),
    email$4: dart.privateName(messages$46pigeon, "PigeonUserInfo.email"),
    displayName$1: dart.privateName(messages$46pigeon, "PigeonUserInfo.displayName"),
    photoUrl$1: dart.privateName(messages$46pigeon, "PigeonUserInfo.photoUrl"),
    phoneNumber$2: dart.privateName(messages$46pigeon, "PigeonUserInfo.phoneNumber"),
    isAnonymous: dart.privateName(messages$46pigeon, "PigeonUserInfo.isAnonymous"),
    isEmailVerified: dart.privateName(messages$46pigeon, "PigeonUserInfo.isEmailVerified"),
    providerId$5: dart.privateName(messages$46pigeon, "PigeonUserInfo.providerId"),
    tenantId$3: dart.privateName(messages$46pigeon, "PigeonUserInfo.tenantId"),
    refreshToken: dart.privateName(messages$46pigeon, "PigeonUserInfo.refreshToken"),
    creationTimestamp: dart.privateName(messages$46pigeon, "PigeonUserInfo.creationTimestamp"),
    lastSignInTimestamp: dart.privateName(messages$46pigeon, "PigeonUserInfo.lastSignInTimestamp"),
    userInfo: dart.privateName(messages$46pigeon, "PigeonUserDetails.userInfo"),
    providerData: dart.privateName(messages$46pigeon, "PigeonUserDetails.providerData"),
    user$1: dart.privateName(messages$46pigeon, "PigeonUserCredential.user"),
    additionalUserInfo$1: dart.privateName(messages$46pigeon, "PigeonUserCredential.additionalUserInfo"),
    credential$2: dart.privateName(messages$46pigeon, "PigeonUserCredential.credential"),
    url$1: dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.url"),
    dynamicLinkDomain$1: dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.dynamicLinkDomain"),
    handleCodeInApp$1: dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.handleCodeInApp"),
    iOSBundleId$1: dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.iOSBundleId"),
    androidPackageName$1: dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.androidPackageName"),
    androidInstallApp$1: dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.androidInstallApp"),
    androidMinimumVersion$1: dart.privateName(messages$46pigeon, "PigeonActionCodeSettings.androidMinimumVersion"),
    appVerificationDisabledForTesting: dart.privateName(messages$46pigeon, "PigeonFirebaseAuthSettings.appVerificationDisabledForTesting"),
    userAccessGroup: dart.privateName(messages$46pigeon, "PigeonFirebaseAuthSettings.userAccessGroup"),
    phoneNumber$3: dart.privateName(messages$46pigeon, "PigeonFirebaseAuthSettings.phoneNumber"),
    smsCode: dart.privateName(messages$46pigeon, "PigeonFirebaseAuthSettings.smsCode"),
    forceRecaptchaFlow: dart.privateName(messages$46pigeon, "PigeonFirebaseAuthSettings.forceRecaptchaFlow"),
    providerId$6: dart.privateName(messages$46pigeon, "PigeonSignInProvider.providerId"),
    scopes: dart.privateName(messages$46pigeon, "PigeonSignInProvider.scopes"),
    customParameters: dart.privateName(messages$46pigeon, "PigeonSignInProvider.customParameters"),
    phoneNumber$4: dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.phoneNumber"),
    timeout: dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.timeout"),
    forceResendingToken: dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.forceResendingToken"),
    autoRetrievedSmsCodeForTesting: dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.autoRetrievedSmsCodeForTesting"),
    multiFactorInfoId: dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.multiFactorInfoId"),
    multiFactorSessionId: dart.privateName(messages$46pigeon, "PigeonVerifyPhoneNumberRequest.multiFactorSessionId"),
    token$1: dart.privateName(messages$46pigeon, "PigeonIdTokenResult.token"),
    expirationTimestamp: dart.privateName(messages$46pigeon, "PigeonIdTokenResult.expirationTimestamp"),
    authTimestamp: dart.privateName(messages$46pigeon, "PigeonIdTokenResult.authTimestamp"),
    issuedAtTimestamp: dart.privateName(messages$46pigeon, "PigeonIdTokenResult.issuedAtTimestamp"),
    signInProvider: dart.privateName(messages$46pigeon, "PigeonIdTokenResult.signInProvider"),
    claims: dart.privateName(messages$46pigeon, "PigeonIdTokenResult.claims"),
    signInSecondFactor: dart.privateName(messages$46pigeon, "PigeonIdTokenResult.signInSecondFactor"),
    displayName$2: dart.privateName(messages$46pigeon, "PigeonUserProfile.displayName"),
    photoUrl$2: dart.privateName(messages$46pigeon, "PigeonUserProfile.photoUrl"),
    displayNameChanged: dart.privateName(messages$46pigeon, "PigeonUserProfile.displayNameChanged"),
    photoUrlChanged: dart.privateName(messages$46pigeon, "PigeonUserProfile.photoUrlChanged"),
    codeIntervalSeconds$2: dart.privateName(messages$46pigeon, "PigeonTotpSecret.codeIntervalSeconds"),
    codeLength$2: dart.privateName(messages$46pigeon, "PigeonTotpSecret.codeLength"),
    enrollmentCompletionDeadline$2: dart.privateName(messages$46pigeon, "PigeonTotpSecret.enrollmentCompletionDeadline"),
    hashingAlgorithm$2: dart.privateName(messages$46pigeon, "PigeonTotpSecret.hashingAlgorithm"),
    secretKey$2: dart.privateName(messages$46pigeon, "PigeonTotpSecret.secretKey"),
    _binaryMessenger: dart.privateName(messages$46pigeon, "_binaryMessenger"),
    displayName$3: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.displayName"),
    enrollmentTimestamp$1: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.enrollmentTimestamp"),
    factorId$1: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.factorId"),
    uid$3: dart.privateName(platform_interface_multi_factor, "MultiFactorInfo.uid"),
    phoneNumber$5: dart.privateName(platform_interface_multi_factor, "PhoneMultiFactorInfo.phoneNumber"),
    _scopes: dart.privateName(apple_auth, "_scopes"),
    _parameters: dart.privateName(apple_auth, "_parameters"),
    idToken: dart.privateName(oauth, "OAuthCredential.idToken"),
    secret: dart.privateName(oauth, "OAuthCredential.secret"),
    rawNonce: dart.privateName(oauth, "OAuthCredential.rawNonce"),
    email$5: dart.privateName(email_auth, "EmailAuthCredential.email"),
    password: dart.privateName(email_auth, "EmailAuthCredential.password"),
    emailLink: dart.privateName(email_auth, "EmailAuthCredential.emailLink"),
    _scopes$1: dart.privateName(facebook_auth, "_scopes"),
    _parameters$1: dart.privateName(facebook_auth, "_parameters"),
    _scopes$2: dart.privateName(github_auth, "_scopes"),
    _parameters$2: dart.privateName(github_auth, "_parameters"),
    _scopes$3: dart.privateName(google_auth, "_scopes"),
    _parameters$3: dart.privateName(google_auth, "_parameters"),
    _scopes$4: dart.privateName(microsoft_auth, "_scopes"),
    _parameters$4: dart.privateName(microsoft_auth, "_parameters"),
    _scopes$5: dart.privateName(oauth, "_scopes"),
    _parameters$5: dart.privateName(oauth, "_parameters"),
    verificationId$2: dart.privateName(phone_auth, "PhoneAuthCredential.verificationId"),
    smsCode$1: dart.privateName(phone_auth, "PhoneAuthCredential.smsCode"),
    _parameters$6: dart.privateName(twitter_auth, "_parameters"),
    _scopes$6: dart.privateName(yahoo_auth, "_scopes"),
    _parameters$7: dart.privateName(yahoo_auth, "_parameters"),
    _data$3: dart.privateName(user_info, "_data"),
    _creationTimestamp: dart.privateName(user_metadata, "_creationTimestamp"),
    _lastSignInTime: dart.privateName(user_metadata, "_lastSignInTime"),
    apiKey$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.apiKey"),
    appId$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.appId"),
    messagingSenderId$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.messagingSenderId"),
    projectId$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.projectId"),
    authDomain$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.authDomain"),
    databaseURL$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.databaseURL"),
    storageBucket$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.storageBucket"),
    measurementId$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.measurementId"),
    trackingId$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.trackingId"),
    deepLinkURLScheme$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.deepLinkURLScheme"),
    androidClientId$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.androidClientId"),
    iosClientId$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.iosClientId"),
    iosBundleId$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.iosBundleId"),
    appGroupId$1: dart.privateName(messages$46pigeon$, "PigeonFirebaseOptions.appGroupId"),
    name$2: dart.privateName(messages$46pigeon$, "PigeonInitializeResponse.name"),
    options$1: dart.privateName(messages$46pigeon$, "PigeonInitializeResponse.options"),
    isAutomaticDataCollectionEnabled: dart.privateName(messages$46pigeon$, "PigeonInitializeResponse.isAutomaticDataCollectionEnabled"),
    pluginConstants: dart.privateName(messages$46pigeon$, "PigeonInitializeResponse.pluginConstants"),
    _binaryMessenger$1: dart.privateName(messages$46pigeon$, "_binaryMessenger"),
    $reversed: dartx.reversed,
    _injectedChild: dart.privateName(nested, "_injectedChild"),
    _wrappedChild: dart.privateName(nested, "_wrappedChild"),
    builder$8: dart.privateName(nested, "SingleChildBuilder.builder"),
    query: dart.privateName(cloud_firestore, "AggregateQuery.query"),
    _delegate$7: dart.privateName(cloud_firestore, "_delegate"),
    query$1: dart.privateName(cloud_firestore, "AggregateQuerySnapshot.query"),
    _delegate$8: dart.privateName(cloud_firestore, "_JsonQuery._delegate"),
    _hasStartCursor: dart.privateName(cloud_firestore, "_hasStartCursor"),
    _hasEndCursor: dart.privateName(cloud_firestore, "_hasEndCursor"),
    _isInequality: dart.privateName(cloud_firestore, "_isInequality"),
    $last: dartx.last,
    _assertQueryCursorSnapshot: dart.privateName(cloud_firestore, "_assertQueryCursorSnapshot"),
    _assertQueryCursorValues: dart.privateName(cloud_firestore, "_assertQueryCursorValues"),
    $_equals: dartx._equals,
    _assertValidFieldType: dart.privateName(cloud_firestore, "_assertValidFieldType"),
    ListEquality__elementEquality: dart.privateName(equality, "ListEquality._elementEquality"),
    _originalQuery: dart.privateName(cloud_firestore, "_originalQuery"),
    _originalCollectionReferenceQuery: dart.privateName(cloud_firestore, "_originalCollectionReferenceQuery"),
    _toFirestore: dart.privateName(cloud_firestore, "_toFirestore"),
    _fromFirestore: dart.privateName(cloud_firestore, "_fromFirestore"),
    _mapQuery: dart.privateName(cloud_firestore, "_mapQuery"),
    _firestore$2: dart.privateName(cloud_firestore, "_firestore"),
    _originalDocumentChange: dart.privateName(cloud_firestore, "_originalDocumentChange"),
    _originalDocumentReference: dart.privateName(cloud_firestore, "_originalDocumentReference"),
    ___JsonDocumentSnapshot_reference: dart.privateName(cloud_firestore, "_#_JsonDocumentSnapshot#reference"),
    ___JsonDocumentSnapshot_metadata: dart.privateName(cloud_firestore, "_#_JsonDocumentSnapshot#metadata"),
    _originalDocumentSnapshot: dart.privateName(cloud_firestore, "_originalDocumentSnapshot"),
    _delegate$9: dart.privateName(platform_interface_field_value, "_delegate"),
    _field: dart.privateName(cloud_firestore, "_field"),
    _operator: dart.privateName(cloud_firestore, "_operator"),
    _value$1: dart.privateName(cloud_firestore, "_value"),
    _queries: dart.privateName(cloud_firestore, "_queries"),
    __Filter__filterQuery: dart.privateName(cloud_firestore, "_#Filter#_filterQuery"),
    __Filter__filterQuery_isSet: dart.privateName(cloud_firestore, "_#Filter#_filterQuery#isSet"),
    __Filter__filterOperator: dart.privateName(cloud_firestore, "_#Filter#_filterOperator"),
    __Filter__filterOperator_isSet: dart.privateName(cloud_firestore, "_#Filter#_filterOperator#isSet"),
    _filterQuery: dart.privateName(cloud_firestore, "_filterQuery"),
    _getOperator: dart.privateName(cloud_firestore, "_getOperator"),
    _getValue: dart.privateName(cloud_firestore, "_getValue"),
    _filterOperator: dart.privateName(cloud_firestore, "_filterOperator"),
    app$1: dart.privateName(cloud_firestore, "FirebaseFirestore.app"),
    databaseURL$2: dart.privateName(cloud_firestore, "FirebaseFirestore.databaseURL"),
    _delegatePackingProperty$1: dart.privateName(cloud_firestore, "_delegatePackingProperty"),
    $endsWith: dartx.endsWith,
    $substring: dartx.substring,
    __LoadBundleTask_stream: dart.privateName(cloud_firestore, "_#LoadBundleTask#stream"),
    _originalQuerySnapshot: dart.privateName(cloud_firestore, "_originalQuerySnapshot"),
    $updateAll: dartx.updateAll,
    _auth$4: dart.privateName(storage_methods, "_auth"),
    _storage: dart.privateName(storage_methods, "_storage"),
    Uuid_goptions: dart.privateName(uuid, "Uuid.goptions"),
    _file: dart.privateName(add_post_screen, "_file"),
    _descriptionController: dart.privateName(add_post_screen, "_descriptionController"),
    _selectImage: dart.privateName(add_post_screen, "_selectImage"),
    LinearProgressIndicator_minHeight: dart.privateName(progress_indicator, "LinearProgressIndicator.minHeight"),
    Padding_padding: dart.privateName(basic, "Padding.padding"),
    Divider_color: dart.privateName(divider, "Divider.color"),
    Divider_endIndent: dart.privateName(divider, "Divider.endIndent"),
    Divider_indent: dart.privateName(divider, "Divider.indent"),
    Divider_thickness: dart.privateName(divider, "Divider.thickness"),
    Divider_height: dart.privateName(divider, "Divider.height"),
    uid$4: dart.privateName(profile_screen, "ProfileScreen.uid"),
    SliverGridDelegateWithFixedCrossAxisCount_mainAxisExtent: dart.privateName(sliver_grid, "SliverGridDelegateWithFixedCrossAxisCount.mainAxisExtent"),
    SliverGridDelegateWithFixedCrossAxisCount_childAspectRatio: dart.privateName(sliver_grid, "SliverGridDelegateWithFixedCrossAxisCount.childAspectRatio"),
    SliverGridDelegateWithFixedCrossAxisCount_crossAxisSpacing: dart.privateName(sliver_grid, "SliverGridDelegateWithFixedCrossAxisCount.crossAxisSpacing"),
    SliverGridDelegateWithFixedCrossAxisCount_mainAxisSpacing: dart.privateName(sliver_grid, "SliverGridDelegateWithFixedCrossAxisCount.mainAxisSpacing"),
    SliverGridDelegateWithFixedCrossAxisCount_crossAxisCount: dart.privateName(sliver_grid, "SliverGridDelegateWithFixedCrossAxisCount.crossAxisCount"),
    components: dart.privateName(pointer, "Pointer.components"),
    $isOdd: dartx.isOdd,
    $isEven: dartx.isEven,
    $removeLast: dartx.removeLast,
    persistenceEnabled: dart.privateName(messages$46pigeon$0, "PigeonFirebaseSettings.persistenceEnabled"),
    host: dart.privateName(messages$46pigeon$0, "PigeonFirebaseSettings.host"),
    sslEnabled: dart.privateName(messages$46pigeon$0, "PigeonFirebaseSettings.sslEnabled"),
    cacheSizeBytes: dart.privateName(messages$46pigeon$0, "PigeonFirebaseSettings.cacheSizeBytes"),
    ignoreUndefinedProperties: dart.privateName(messages$46pigeon$0, "PigeonFirebaseSettings.ignoreUndefinedProperties"),
    appName$1: dart.privateName(messages$46pigeon$0, "FirestorePigeonFirebaseApp.appName"),
    settings: dart.privateName(messages$46pigeon$0, "FirestorePigeonFirebaseApp.settings"),
    databaseURL$3: dart.privateName(messages$46pigeon$0, "FirestorePigeonFirebaseApp.databaseURL"),
    hasPendingWrites: dart.privateName(messages$46pigeon$0, "PigeonSnapshotMetadata.hasPendingWrites"),
    isFromCache: dart.privateName(messages$46pigeon$0, "PigeonSnapshotMetadata.isFromCache"),
    path: dart.privateName(messages$46pigeon$0, "PigeonDocumentSnapshot.path"),
    data$1: dart.privateName(messages$46pigeon$0, "PigeonDocumentSnapshot.data"),
    metadata: dart.privateName(messages$46pigeon$0, "PigeonDocumentSnapshot.metadata"),
    type$1: dart.privateName(messages$46pigeon$0, "PigeonDocumentChange.type"),
    document: dart.privateName(messages$46pigeon$0, "PigeonDocumentChange.document"),
    oldIndex: dart.privateName(messages$46pigeon$0, "PigeonDocumentChange.oldIndex"),
    newIndex: dart.privateName(messages$46pigeon$0, "PigeonDocumentChange.newIndex"),
    documents: dart.privateName(messages$46pigeon$0, "PigeonQuerySnapshot.documents"),
    documentChanges: dart.privateName(messages$46pigeon$0, "PigeonQuerySnapshot.documentChanges"),
    metadata$1: dart.privateName(messages$46pigeon$0, "PigeonQuerySnapshot.metadata"),
    source: dart.privateName(messages$46pigeon$0, "PigeonGetOptions.source"),
    serverTimestampBehavior: dart.privateName(messages$46pigeon$0, "PigeonGetOptions.serverTimestampBehavior"),
    merge: dart.privateName(messages$46pigeon$0, "PigeonDocumentOption.merge"),
    mergeFields: dart.privateName(messages$46pigeon$0, "PigeonDocumentOption.mergeFields"),
    type$2: dart.privateName(messages$46pigeon$0, "PigeonTransactionCommand.type"),
    path$1: dart.privateName(messages$46pigeon$0, "PigeonTransactionCommand.path"),
    data$2: dart.privateName(messages$46pigeon$0, "PigeonTransactionCommand.data"),
    option: dart.privateName(messages$46pigeon$0, "PigeonTransactionCommand.option"),
    path$2: dart.privateName(messages$46pigeon$0, "DocumentReferenceRequest.path"),
    data$3: dart.privateName(messages$46pigeon$0, "DocumentReferenceRequest.data"),
    option$1: dart.privateName(messages$46pigeon$0, "DocumentReferenceRequest.option"),
    source$1: dart.privateName(messages$46pigeon$0, "DocumentReferenceRequest.source"),
    serverTimestampBehavior$1: dart.privateName(messages$46pigeon$0, "DocumentReferenceRequest.serverTimestampBehavior"),
    where: dart.privateName(messages$46pigeon$0, "PigeonQueryParameters.where"),
    orderBy: dart.privateName(messages$46pigeon$0, "PigeonQueryParameters.orderBy"),
    limit: dart.privateName(messages$46pigeon$0, "PigeonQueryParameters.limit"),
    limitToLast: dart.privateName(messages$46pigeon$0, "PigeonQueryParameters.limitToLast"),
    startAt: dart.privateName(messages$46pigeon$0, "PigeonQueryParameters.startAt"),
    startAfter: dart.privateName(messages$46pigeon$0, "PigeonQueryParameters.startAfter"),
    endAt: dart.privateName(messages$46pigeon$0, "PigeonQueryParameters.endAt"),
    endBefore: dart.privateName(messages$46pigeon$0, "PigeonQueryParameters.endBefore"),
    filters: dart.privateName(messages$46pigeon$0, "PigeonQueryParameters.filters"),
    type$3: dart.privateName(messages$46pigeon$0, "AggregateQuery.type"),
    field: dart.privateName(messages$46pigeon$0, "AggregateQuery.field"),
    type$4: dart.privateName(messages$46pigeon$0, "AggregateQueryResponse.type"),
    field$1: dart.privateName(messages$46pigeon$0, "AggregateQueryResponse.field"),
    value$1: dart.privateName(messages$46pigeon$0, "AggregateQueryResponse.value"),
    $isNaN: dartx.isNaN,
    _binaryMessenger$2: dart.privateName(messages$46pigeon$0, "_binaryMessenger"),
    bytes: dart.privateName(blob, "Blob.bytes"),
    components$1: dart.privateName(field_path, "FieldPath.components"),
    latitude: dart.privateName(geo_point, "GeoPoint.latitude"),
    longitude: dart.privateName(geo_point, "GeoPoint.longitude"),
    source$2: dart.privateName(get_options, "GetOptions.source"),
    serverTimestampBehavior$2: dart.privateName(get_options, "GetOptions.serverTimestampBehavior"),
    synchronizeTabs: dart.privateName(persistence_settings, "PersistenceSettings.synchronizeTabs"),
    query$2: dart.privateName(platform_interface_aggregate_query, "AggregateQueryPlatform.query"),
    _count: dart.privateName(platform_interface_aggregate_query_snapshot, "_count"),
    _sum: dart.privateName(platform_interface_aggregate_query_snapshot, "_sum"),
    _average: dart.privateName(platform_interface_aggregate_query_snapshot, "_average"),
    type$5: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.type"),
    oldIndex$1: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.oldIndex"),
    newIndex$1: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.newIndex"),
    document$1: dart.privateName(platform_interface_document_change, "DocumentChangePlatform.document"),
    _firestore$3: dart.privateName(platform_interface_document_snapshot, "_firestore"),
    _data$4: dart.privateName(platform_interface_document_snapshot, "_data"),
    _metadata: dart.privateName(platform_interface_document_snapshot, "_metadata"),
    _pointer$3: dart.privateName(platform_interface_document_snapshot, "_pointer"),
    collectionGroup: dart.privateName(platform_interface_index_definitions, "Index.collectionGroup"),
    queryScope: dart.privateName(platform_interface_index_definitions, "Index.queryScope"),
    fields: dart.privateName(platform_interface_index_definitions, "Index.fields"),
    fieldPath: dart.privateName(platform_interface_index_definitions, "IndexField.fieldPath"),
    order: dart.privateName(platform_interface_index_definitions, "IndexField.order"),
    arrayConfig: dart.privateName(platform_interface_index_definitions, "IndexField.arrayConfig"),
    collectionGroup$1: dart.privateName(platform_interface_index_definitions, "FieldOverrides.collectionGroup"),
    fieldPath$1: dart.privateName(platform_interface_index_definitions, "FieldOverrides.fieldPath"),
    indexes: dart.privateName(platform_interface_index_definitions, "FieldOverrides.indexes"),
    queryScope$1: dart.privateName(platform_interface_index_definitions, "FieldOverrideIndex.queryScope"),
    order$1: dart.privateName(platform_interface_index_definitions, "FieldOverrideIndex.order"),
    arrayConfig$1: dart.privateName(platform_interface_index_definitions, "FieldOverrideIndex.arrayConfig"),
    taskState$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.taskState"),
    bytesLoaded$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.bytesLoaded"),
    documentsLoaded$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.documentsLoaded"),
    totalBytes$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.totalBytes"),
    totalDocuments$1: dart.privateName(platform_interface_load_bundle_task_snapshot, "LoadBundleTaskSnapshotPlatform.totalDocuments"),
    field$2: dart.privateName(platform_interface_query, "sum.field"),
    field$3: dart.privateName(platform_interface_query, "average.field"),
    docs: dart.privateName(platform_interface_query_snapshot, "QuerySnapshotPlatform.docs"),
    docChanges: dart.privateName(platform_interface_query_snapshot, "QuerySnapshotPlatform.docChanges"),
    metadata$2: dart.privateName(platform_interface_query_snapshot, "QuerySnapshotPlatform.metadata"),
    merge$1: dart.privateName(set_options, "SetOptions.merge"),
    mergeFields$1: dart.privateName(set_options, "SetOptions.mergeFields"),
    persistenceEnabled$1: dart.privateName(settings, "Settings.persistenceEnabled"),
    host$1: dart.privateName(settings, "Settings.host"),
    sslEnabled$1: dart.privateName(settings, "Settings.sslEnabled"),
    cacheSizeBytes$1: dart.privateName(settings, "Settings.cacheSizeBytes"),
    ignoreUndefinedProperties$1: dart.privateName(settings, "Settings.ignoreUndefinedProperties"),
    hasPendingWrites$1: dart.privateName(snapshot_metadata, "SnapshotMetadataPlatform.hasPendingWrites"),
    isFromCache$1: dart.privateName(snapshot_metadata, "SnapshotMetadataPlatform.isFromCache"),
    _seconds: dart.privateName(timestamp, "_seconds"),
    _nanoseconds: dart.privateName(timestamp, "_nanoseconds"),
    $floor: dartx.floor,
    $truncate: dartx.truncate,
    $compareTo: dartx.compareTo,
    data$4: dart.privateName(field_value_web, "FieldValueWeb.data"),
    _aggregateQueries: dart.privateName(aggregate_query_web, "_aggregateQueries"),
    _delegate$10: dart.privateName(aggregate_query_web, "_delegate"),
    _webQuery$1: dart.privateName(aggregate_query_web, "_webQuery"),
    name$3: dart.privateName(platform_file, "PlatformFile.name"),
    bytes$1: dart.privateName(platform_file, "PlatformFile.bytes"),
    readStream: dart.privateName(platform_file, "PlatformFile.readStream"),
    size: dart.privateName(platform_file, "PlatformFile.size"),
    identifier: dart.privateName(platform_file, "PlatformFile.identifier"),
    _path$1: dart.privateName(platform_file, "_path"),
    files: dart.privateName(file_picker_result, "FilePickerResult.files"),
    _future: dart.privateName(storage, "_future"),
    __ReferenceWeb__ref: dart.privateName(reference_web, "_#ReferenceWeb#_ref"),
    _cache: dart.privateName(reference_web, "_cache"),
    _path$2: dart.privateName(reference_web, "_path"),
    _ref: dart.privateName(reference_web, "_ref"),
    storage: dart.privateName(platform_interface_reference, "ReferencePlatform.storage"),
    _pointer$4: dart.privateName(platform_interface_reference, "_pointer"),
    cameraDelegate: dart.privateName(image_picker_platform, "CameraDelegatingImagePickerPlatform.cameraDelegate"),
    _boundary: dart.privateName(mime_multipart_transformer, "_boundary"),
    $codeUnits: dartx.codeUnits,
    $setRange: dartx.setRange,
    message$1: dart.privateName(mime_shared, "MimeMultipartException.message"),
    _extensionMap: dart.privateName(mime_type, "_extensionMap"),
    _magicNumbers: dart.privateName(mime_type, "_magicNumbers"),
    _useDefault: dart.privateName(mime_type, "_useDefault"),
    _magicNumbersMaxLength: dart.privateName(mime_type, "_magicNumbersMaxLength"),
    $lastIndexOf: dartx.lastIndexOf,
    $entries: dartx.entries,
    currentUser: dart.privateName(method_channel_firebase_auth, "MethodChannelFirebaseAuth.currentUser"),
    languageCode: dart.privateName(method_channel_firebase_auth, "MethodChannelFirebaseAuth.languageCode"),
    _api$1: dart.privateName(method_channel_firebase_auth, "_api"),
    _handleIdTokenChangesListener: dart.privateName(method_channel_firebase_auth, "_handleIdTokenChangesListener"),
    _handleAuthStateChangesListener: dart.privateName(method_channel_firebase_auth, "_handleAuthStateChangesListener"),
    _createBroadcastStream: dart.privateName(method_channel_firebase_auth, "_createBroadcastStream"),
    _ValueWrapper_value: dart.privateName(method_channel_firebase_auth, "_ValueWrapper.value"),
    MethodChannel__binaryMessenger: dart.privateName(platform_channel, "MethodChannel._binaryMessenger"),
    StandardMethodCodec_messageCodec: dart.privateName(message_codecs, "StandardMethodCodec.messageCodec"),
    MethodChannel_codec: dart.privateName(platform_channel, "MethodChannel.codec"),
    MethodChannel_name: dart.privateName(platform_channel, "MethodChannel.name"),
    value$2: dart.privateName(method_channel_firebase_auth, "_ValueWrapper.value"),
    _api$2: dart.privateName(method_channel_multi_factor, "_api"),
    _resolverId: dart.privateName(method_channel_multi_factor, "_resolverId"),
    _auth$5: dart.privateName(method_channel_multi_factor, "_auth"),
    credential$3: dart.privateName(method_channel_multi_factor, "MultiFactorAssertion.credential"),
    assertionId: dart.privateName(method_channel_multi_factor, "TotpMultiFactorAssertion.assertionId"),
    app$2: dart.privateName(firebase_storage, "FirebaseStorage.app"),
    bucket$1: dart.privateName(firebase_storage, "FirebaseStorage.bucket"),
    _delegatePackingProperty$2: dart.privateName(firebase_storage, "_delegatePackingProperty"),
    _delegate$11: dart.privateName(firebase_storage, "_delegate"),
    $isNegative: dartx.isNegative,
    storage$1: dart.privateName(firebase_storage, "ListResult.storage"),
    storage$2: dart.privateName(firebase_storage, "Reference.storage"),
    storage$3: dart.privateName(firebase_storage, "Task.storage"),
    storage$4: dart.privateName(firebase_storage, "TaskSnapshot.storage"),
    goptions: dart.privateName(uuid, "Uuid.goptions"),
    _firestore$4: dart.privateName(firestore_methods, "_firestore"),
    snap: dart.privateName(post_card, "PostCard.snap"),
    $function: dart.privateName(follow_button, "FollowButton.function"),
    backgroundColor: dart.privateName(follow_button, "FollowButton.backgroundColor"),
    borderColor: dart.privateName(follow_button, "FollowButton.borderColor"),
    text: dart.privateName(follow_button, "FollowButton.text"),
    textColor: dart.privateName(follow_button, "FollowButton.textColor"),
    settings$1: dart.privateName(method_channel_firestore, "MethodChannelFirebaseFirestore.settings"),
    __MethodChannelFirebaseFirestore_pigeonApp: dart.privateName(method_channel_firestore, "_#MethodChannelFirebaseFirestore#pigeonApp"),
    _getPath: dart.privateName(file_picker_io, "_getPath"),
    EventChannel__binaryMessenger: dart.privateName(platform_channel, "EventChannel._binaryMessenger"),
    EventChannel_codec: dart.privateName(platform_channel, "EventChannel.codec"),
    EventChannel_name: dart.privateName(platform_channel, "EventChannel.name"),
    $trim: dartx.trim,
    $sublist: dartx.sublist,
    _getPathToExecutable: dart.privateName(file_picker_linux, "_getPathToExecutable"),
    scheme: dart.privateName(authentication_challenge, "AuthenticationChallenge.scheme"),
    parameters$1: dart.privateName(authentication_challenge, "AuthenticationChallenge.parameters"),
    $indexOf: dartx.indexOf,
    type$6: dart.privateName(media_type, "MediaType.type"),
    subtype: dart.privateName(media_type, "MediaType.subtype"),
    parameters$2: dart.privateName(media_type, "MediaType.parameters"),
    $replaceAllMapped: dartx.replaceAllMapped,
    _metadata$1: dart.privateName(full_metadata, "_metadata"),
    maxResults: dart.privateName(list_options, "ListOptions.maxResults"),
    pageToken: dart.privateName(list_options, "ListOptions.pageToken"),
    storage$5: dart.privateName(platform_interface_list_result, "ListResultPlatform.storage"),
    nextPageToken: dart.privateName(platform_interface_list_result, "ListResultPlatform.nextPageToken"),
    _state: dart.privateName(platform_interface_task_snapshot, "_state"),
    _data$5: dart.privateName(platform_interface_task_snapshot, "_data"),
    cacheControl: dart.privateName(settable_metadata, "SettableMetadata.cacheControl"),
    contentDisposition: dart.privateName(settable_metadata, "SettableMetadata.contentDisposition"),
    contentEncoding: dart.privateName(settable_metadata, "SettableMetadata.contentEncoding"),
    contentLanguage: dart.privateName(settable_metadata, "SettableMetadata.contentLanguage"),
    contentType: dart.privateName(settable_metadata, "SettableMetadata.contentType"),
    customMetadata: dart.privateName(settable_metadata, "SettableMetadata.customMetadata"),
    _reference: dart.privateName(task_web, "_reference"),
    _task: dart.privateName(task_web, "_task"),
    _cache$1: dart.privateName(metadata_cache, "_cache"),
    _getImagePath: dart.privateName(method_channel_image_picker, "_getImagePath"),
    _getMultiImagePath: dart.privateName(method_channel_image_picker, "_getMultiImagePath"),
    _getVideoPath: dart.privateName(method_channel_image_picker, "_getVideoPath"),
    preferredCameraDevice: dart.privateName(camera_delegate, "ImagePickerCameraDelegateOptions.preferredCameraDevice"),
    maxVideoDuration: dart.privateName(camera_delegate, "ImagePickerCameraDelegateOptions.maxVideoDuration"),
    preferredCameraDevice$1: dart.privateName(image_options, "ImagePickerOptions.preferredCameraDevice"),
    maxWidth: dart.privateName(image_options, "ImageOptions.maxWidth"),
    maxHeight: dart.privateName(image_options, "ImageOptions.maxHeight"),
    imageQuality: dart.privateName(image_options, "ImageOptions.imageQuality"),
    requestFullMetadata: dart.privateName(image_options, "ImageOptions.requestFullMetadata"),
    file: dart.privateName(lost_data_response, "LostDataResponse.file"),
    exception: dart.privateName(lost_data_response, "LostDataResponse.exception"),
    type$7: dart.privateName(lost_data_response, "LostDataResponse.type"),
    files$1: dart.privateName(lost_data_response, "LostDataResponse.files"),
    _empty: dart.privateName(lost_data_response, "_empty"),
    imageOptions: dart.privateName(media_options, "MediaOptions.imageOptions"),
    allowMultiple: dart.privateName(media_options, "MediaOptions.allowMultiple"),
    imageOptions$1: dart.privateName(multi_image_picker_options, "MultiImagePickerOptions.imageOptions"),
    headers: dart.privateName(bound_multipart_stream, "_MimeMultipart.headers"),
    _stream: dart.privateName(bound_multipart_stream, "_stream"),
    _headerField: dart.privateName(bound_multipart_stream, "_headerField"),
    _headerValue: dart.privateName(bound_multipart_stream, "_headerValue"),
    _controllerState: dart.privateName(bound_multipart_stream, "_controllerState"),
    _controller$1: dart.privateName(bound_multipart_stream, "_controller"),
    __BoundMultipartStream__subscription: dart.privateName(bound_multipart_stream, "_#BoundMultipartStream#_subscription"),
    _multipartController: dart.privateName(bound_multipart_stream, "_multipartController"),
    _headers: dart.privateName(bound_multipart_stream, "_headers"),
    _state$1: dart.privateName(bound_multipart_stream, "_state"),
    _boundaryIndex: dart.privateName(bound_multipart_stream, "_boundaryIndex"),
    _index: dart.privateName(bound_multipart_stream, "_index"),
    _buffer: dart.privateName(bound_multipart_stream, "_buffer"),
    _boundary$1: dart.privateName(bound_multipart_stream, "_boundary"),
    _pauseStream: dart.privateName(bound_multipart_stream, "_pauseStream"),
    _resumeStream: dart.privateName(bound_multipart_stream, "_resumeStream"),
    _tryPropagateControllerState: dart.privateName(bound_multipart_stream, "_tryPropagateControllerState"),
    _subscription: dart.privateName(bound_multipart_stream, "_subscription"),
    _parse: dart.privateName(bound_multipart_stream, "_parse"),
    mimeType: dart.privateName(magic_number, "MagicNumber.mimeType"),
    numbers: dart.privateName(magic_number, "MagicNumber.numbers"),
    mask: dart.privateName(magic_number, "MagicNumber.mask"),
    _api$3: dart.privateName(method_channel_user, "_api"),
    rng: dart.privateName(data, "GlobalOptions.rng"),
    clockSeq: dart.privateName(data, "V1Options.clockSeq"),
    mSecs: dart.privateName(data, "V1Options.mSecs"),
    nSecs: dart.privateName(data, "V1Options.nSecs"),
    node: dart.privateName(data, "V1Options.node"),
    seedBytes: dart.privateName(data, "V1Options.seedBytes"),
    random: dart.privateName(data, "V4Options.random"),
    rng$1: dart.privateName(data, "V4Options.rng"),
    randomNamespace: dart.privateName(data, "V5Options.randomNamespace"),
    v4options: dart.privateName(data, "V5Options.v4options"),
    clockSeq$1: dart.privateName(data, "V6Options.clockSeq"),
    mSecs$1: dart.privateName(data, "V6Options.mSecs"),
    nSecs$1: dart.privateName(data, "V6Options.nSecs"),
    node$1: dart.privateName(data, "V6Options.node"),
    seedBytes$1: dart.privateName(data, "V6Options.seedBytes"),
    time: dart.privateName(data, "V7Options.time"),
    randomBytes: dart.privateName(data, "V7Options.randomBytes"),
    time$1: dart.privateName(data, "V8Options.time"),
    randomBytes$1: dart.privateName(data, "V8Options.randomBytes"),
    seed: dart.privateName(rng$, "MathRNG.seed"),
    _rng: dart.privateName(rng$, "LegacyRNG._rng"),
    _namedArgs: dart.privateName(rng$, "LegacyRNG._namedArgs"),
    _positionalArgs: dart.privateName(rng$, "LegacyRNG._positionalArgs"),
    _rng$1: dart.privateName(rng$, "_rng"),
    _namedArgs$1: dart.privateName(rng$, "_namedArgs"),
    _positionalArgs$1: dart.privateName(rng$, "_positionalArgs"),
    $modulo: dartx['%'],
    $toRadixString: dartx.toRadixString,
    $padLeft: dartx.padLeft,
    uuid: dart.privateName(uuid_value, "UuidValue.uuid"),
    $codeUnitAt: dartx.codeUnitAt,
    goptions$1: dart.privateName(v1, "UuidV1.goptions"),
    _init: dart.privateName(v1, "_init"),
    $rightShift: dartx['>>'],
    goptions$2: dart.privateName(v4, "UuidV4.goptions"),
    goptions$3: dart.privateName(v5, "UuidV5.goptions"),
    goptions$4: dart.privateName(v6, "UuidV6.goptions")
  };
  var S = {
    _init$1: dart.privateName(v6, "_init"),
    $buffer: dartx.buffer,
    $asByteData: dartx.asByteData,
    $setUint32: dartx.setUint32,
    $setUint16: dartx.setUint16,
    $setAll: dartx.setAll,
    goptions$5: dart.privateName(v7, "UuidV7.goptions"),
    $asUint32List: dartx.asUint32List,
    $asUint16List: dartx.asUint16List,
    _randomData: dart.privateName(v7, "_randomData"),
    $getRange: dartx.getRange,
    goptions$6: dart.privateName(v8, "UuidV8.goptions"),
    _randomData$1: dart.privateName(v8, "_randomData"),
    description: dart.privateName(post$, "Post.description"),
    uid$5: dart.privateName(post$, "Post.uid"),
    username$3: dart.privateName(post$, "Post.username"),
    likes: dart.privateName(post$, "Post.likes"),
    postId: dart.privateName(post$, "Post.postId"),
    datePublished: dart.privateName(post$, "Post.datePublished"),
    postUrl: dart.privateName(post$, "Post.postUrl"),
    profImage: dart.privateName(post$, "Post.profImage"),
    postId$1: dart.privateName(comments_screen, "CommentsScreen.postId"),
    child: dart.privateName(like_animation, "LikeAnimation.child"),
    isAnimating: dart.privateName(like_animation, "LikeAnimation.isAnimating"),
    duration: dart.privateName(like_animation, "LikeAnimation.duration"),
    onEnd: dart.privateName(like_animation, "LikeAnimation.onEnd"),
    smallLike: dart.privateName(like_animation, "LikeAnimation.smallLike"),
    ___LikeAnimationState_controller: dart.privateName(like_animation, "_#_LikeAnimationState#controller"),
    ___LikeAnimationState_scale: dart.privateName(like_animation, "_#_LikeAnimationState#scale"),
    mainAxisCount: dart.privateName(quilted, "QuiltedGridTile.mainAxisCount"),
    crossAxisCount: dart.privateName(quilted, "QuiltedGridTile.crossAxisCount"),
    crossAxisCount$1: dart.privateName(quilted, "SliverQuiltedGridDelegate.crossAxisCount"),
    repeatPattern: dart.privateName(quilted, "SliverQuiltedGridDelegate.repeatPattern"),
    mainAxisSpacing: dart.privateName(quilted, "SliverQuiltedGridDelegate.mainAxisSpacing"),
    crossAxisSpacing: dart.privateName(quilted, "SliverQuiltedGridDelegate.crossAxisSpacing"),
    _pattern: dart.privateName(quilted, "_pattern"),
    tiles: dart.privateName(quilted, "_QuiltedTilePattern.tiles"),
    tileCount: dart.privateName(quilted, "_QuiltedTilePattern.tileCount"),
    crossAxisIndexes: dart.privateName(quilted, "_QuiltedTilePattern.crossAxisIndexes"),
    mainAxisIndexes: dart.privateName(quilted, "_QuiltedTilePattern.mainAxisIndexes"),
    maxMainAxisCellCounts: dart.privateName(quilted, "_QuiltedTilePattern.maxMainAxisCellCounts"),
    minTileIndexes: dart.privateName(quilted, "_QuiltedTilePattern.minTileIndexes"),
    maxTileIndexes: dart.privateName(quilted, "_QuiltedTilePattern.maxTileIndexes"),
    mainAxisCellCount: dart.privateName(quilted, "_QuiltedTilePattern.mainAxisCellCount"),
    crossAxisExtent: dart.privateName(quilted, "_SliverQuiltedGridLayout.crossAxisExtent"),
    mainAxisSpacing$1: dart.privateName(quilted, "_SliverQuiltedGridLayout.mainAxisSpacing"),
    crossAxisSpacing$1: dart.privateName(quilted, "_SliverQuiltedGridLayout.crossAxisSpacing"),
    mainAxisStride: dart.privateName(quilted, "_SliverQuiltedGridLayout.mainAxisStride"),
    crossAxisStride: dart.privateName(quilted, "_SliverQuiltedGridLayout.crossAxisStride"),
    pattern: dart.privateName(quilted, "_SliverQuiltedGridLayout.pattern"),
    reverseCrossAxis: dart.privateName(quilted, "_SliverQuiltedGridLayout.reverseCrossAxis"),
    _getOffsetFromStartInCrossAxis: dart.privateName(quilted, "_getOffsetFromStartInCrossAxis"),
    $reduce: dartx.reduce,
    crossAxisRatio: dart.privateName(staired, "StairedGridTile.crossAxisRatio"),
    aspectRatio: dart.privateName(staired, "StairedGridTile.aspectRatio"),
    tileBottomSpace: dart.privateName(staired, "SliverStairedGridDelegate.tileBottomSpace"),
    startCrossAxisDirectionReversed: dart.privateName(staired, "SliverStairedGridDelegate.startCrossAxisDirectionReversed"),
    $clamp: dartx.clamp,
    mainAxisSpacing$2: dart.privateName(sliver_patterned_grid_delegate, "SliverPatternGridDelegate.mainAxisSpacing"),
    crossAxisSpacing$2: dart.privateName(sliver_patterned_grid_delegate, "SliverPatternGridDelegate.crossAxisSpacing"),
    pattern$1: dart.privateName(sliver_patterned_grid_delegate, "SliverPatternGridDelegate.pattern"),
    tileCount$1: dart.privateName(sliver_patterned_grid_delegate, "SliverPatternGridDelegate.tileCount"),
    crossAxisCount$2: dart.privateName(sliver_patterned_grid_delegate, "SliverPatternGridDelegate.crossAxisCount"),
    maxCrossAxisExtent: dart.privateName(sliver_patterned_grid_delegate, "SliverPatternGridDelegate.maxCrossAxisExtent"),
    $ceil: dartx.ceil,
    aspectRatio$1: dart.privateName(woven, "WovenGridTile.aspectRatio"),
    crossAxisRatio$1: dart.privateName(woven, "WovenGridTile.crossAxisRatio"),
    alignment: dart.privateName(woven, "WovenGridTile.alignment"),
    AlignmentDirectional_y: dart.privateName(alignment, "AlignmentDirectional.y"),
    AlignmentDirectional_start: dart.privateName(alignment, "AlignmentDirectional.start"),
    tileBottomSpace$1: dart.privateName(woven, "SliverWovenGridDelegate.tileBottomSpace"),
    crossAxisIndex: dart.privateName(sliver_masonry_grid, "SliverMasonryGridParentData.crossAxisIndex"),
    lastMainAxisExtent: dart.privateName(sliver_masonry_grid, "SliverMasonryGridParentData.lastMainAxisExtent"),
    _stride: dart.privateName(sliver_masonry_grid, "_stride"),
    _getCrossAxisIndex: dart.privateName(sliver_masonry_grid, "_getCrossAxisIndex"),
    _previousCrossAxisIndexes: dart.privateName(sliver_masonry_grid, "_previousCrossAxisIndexes"),
    _previousMainAxisExtents: dart.privateName(sliver_masonry_grid, "_previousMainAxisExtents"),
    _lastFirstVisibleChildIndex: dart.privateName(sliver_masonry_grid, "_lastFirstVisibleChildIndex"),
    _lastCrossAxisCount: dart.privateName(sliver_masonry_grid, "_lastCrossAxisCount"),
    _gridDelegate: dart.privateName(sliver_masonry_grid, "_gridDelegate"),
    _mainAxisSpacing: dart.privateName(sliver_masonry_grid, "_mainAxisSpacing"),
    _crossAxisSpacing: dart.privateName(sliver_masonry_grid, "_crossAxisSpacing"),
    _getParentData: dart.privateName(sliver_masonry_grid, "_getParentData"),
    _childCrossAxisIndex: dart.privateName(sliver_masonry_grid, "_childCrossAxisIndex"),
    $fillRange: dartx.fillRange,
    $abs: dartx.abs,
    $isInfinite: dartx.isInfinite,
    $any: dartx.any,
    $every: dartx.every,
    crossAxisCount$3: dart.privateName(sliver_simple_grid_delegate, "SliverSimpleGridDelegateWithFixedCrossAxisCount.crossAxisCount"),
    maxCrossAxisExtent$1: dart.privateName(sliver_simple_grid_delegate, "SliverSimpleGridDelegateWithMaxCrossAxisExtent.maxCrossAxisExtent"),
    gridDelegate: dart.privateName(aligned_grid_view, "AlignedGridView.gridDelegate"),
    mainAxisSpacing$3: dart.privateName(aligned_grid_view, "AlignedGridView.mainAxisSpacing"),
    crossAxisSpacing$3: dart.privateName(aligned_grid_view, "AlignedGridView.crossAxisSpacing"),
    itemBuilder: dart.privateName(aligned_grid_view, "AlignedGridView.itemBuilder"),
    itemCount: dart.privateName(aligned_grid_view, "AlignedGridView.itemCount"),
    addAutomaticKeepAlives: dart.privateName(aligned_grid_view, "AlignedGridView.addAutomaticKeepAlives"),
    addRepaintBoundaries: dart.privateName(aligned_grid_view, "AlignedGridView.addRepaintBoundaries"),
    gridDelegate$1: dart.privateName(masonry_grid_view, "MasonryGridView.gridDelegate"),
    mainAxisSpacing$4: dart.privateName(masonry_grid_view, "MasonryGridView.mainAxisSpacing"),
    crossAxisSpacing$4: dart.privateName(masonry_grid_view, "MasonryGridView.crossAxisSpacing"),
    childrenDelegate: dart.privateName(masonry_grid_view, "MasonryGridView.childrenDelegate"),
    mainAxisSpacing$5: dart.privateName(sliver_aligned_grid, "SliverAlignedGrid.mainAxisSpacing"),
    crossAxisSpacing$5: dart.privateName(sliver_aligned_grid, "SliverAlignedGrid.crossAxisSpacing"),
    gridDelegate$2: dart.privateName(sliver_aligned_grid, "SliverAlignedGrid.gridDelegate"),
    itemBuilder$1: dart.privateName(sliver_aligned_grid, "SliverAlignedGrid.itemBuilder"),
    itemCount$1: dart.privateName(sliver_aligned_grid, "SliverAlignedGrid.itemCount"),
    addAutomaticKeepAlives$1: dart.privateName(sliver_aligned_grid, "SliverAlignedGrid.addAutomaticKeepAlives"),
    addRepaintBoundaries$1: dart.privateName(sliver_aligned_grid, "SliverAlignedGrid.addRepaintBoundaries"),
    _buildItem: dart.privateName(sliver_aligned_grid, "_buildItem"),
    mainAxisExtent: dart.privateName(sliver_aligned_grid, "_Gap.mainAxisExtent"),
    gridDelegate$3: dart.privateName(sliver_masonry_grid$, "SliverMasonryGrid.gridDelegate"),
    mainAxisSpacing$6: dart.privateName(sliver_masonry_grid$, "SliverMasonryGrid.mainAxisSpacing"),
    crossAxisSpacing$6: dart.privateName(sliver_masonry_grid$, "SliverMasonryGrid.crossAxisSpacing"),
    delegate: dart.privateName(staggered_grid, "StaggeredGrid.delegate"),
    mainAxisSpacing$7: dart.privateName(staggered_grid, "StaggeredGrid.mainAxisSpacing"),
    crossAxisSpacing$7: dart.privateName(staggered_grid, "StaggeredGrid.crossAxisSpacing"),
    axisDirection: dart.privateName(staggered_grid, "StaggeredGrid.axisDirection"),
    crossAxisCellCount: dart.privateName(staggered_grid_tile, "StaggeredGridTile.crossAxisCellCount"),
    mainAxisCellCount$1: dart.privateName(staggered_grid_tile, "StaggeredGridTile.mainAxisCellCount"),
    mainAxisExtent$1: dart.privateName(staggered_grid_tile, "StaggeredGridTile.mainAxisExtent"),
    crossAxisCellCount$1: dart.privateName(staggered_grid$, "StaggeredGridParentData.crossAxisCellCount"),
    mainAxisCellCount$2: dart.privateName(staggered_grid$, "StaggeredGridParentData.mainAxisCellCount"),
    mainAxisExtent$2: dart.privateName(staggered_grid$, "StaggeredGridParentData.mainAxisExtent"),
    _realMainAxisExtent: dart.privateName(staggered_grid$, "_realMainAxisExtent"),
    type$8: dart.privateName(method_channel_field_value, "MethodChannelFieldValue.type"),
    value$3: dart.privateName(method_channel_field_value, "MethodChannelFieldValue.value"),
    isCollectionGroupQuery$1: dart.privateName(method_channel_query, "MethodChannelQuery.isCollectionGroupQuery"),
    pigeonApp: dart.privateName(method_channel_query, "MethodChannelQuery.pigeonApp"),
    _pointer$5: dart.privateName(method_channel_query, "_pointer"),
    _pigeonParameters: dart.privateName(method_channel_query, "_pigeonParameters"),
    _copyWithParameters$1: dart.privateName(method_channel_query, "_copyWithParameters"),
    __MethodChannelLoadBundleTask_stream: dart.privateName(method_channel_load_bundle_task, "_#MethodChannelLoadBundleTask#stream"),
    _pointer$6: dart.privateName(method_channel_collection_reference, "MethodChannelCollectionReference._pointer"),
    _pointer$7: dart.privateName(method_channel_collection_reference, "_pointer"),
    pigeonApp$1: dart.privateName(method_channel_document_reference, "MethodChannelDocumentReference.pigeonApp"),
    __MethodChannelDocumentReference__pointer: dart.privateName(method_channel_document_reference, "_#MethodChannelDocumentReference#_pointer"),
    _pointer$8: dart.privateName(method_channel_document_reference, "_pointer"),
    appName$2: dart.privateName(method_channel_transaction, "MethodChannelTransaction.appName"),
    databaseURL$4: dart.privateName(method_channel_transaction, "MethodChannelTransaction.databaseURL"),
    pigeonApp$2: dart.privateName(method_channel_transaction, "MethodChannelTransaction.pigeonApp"),
    __MethodChannelTransaction__transactionId: dart.privateName(method_channel_transaction, "_#MethodChannelTransaction#_transactionId"),
    __MethodChannelTransaction__firestore: dart.privateName(method_channel_transaction, "_#MethodChannelTransaction#_firestore"),
    _commands: dart.privateName(method_channel_transaction, "_commands"),
    _firestore$5: dart.privateName(method_channel_transaction, "_firestore"),
    _transactionId: dart.privateName(method_channel_transaction, "_transactionId"),
    pigeonApp$3: dart.privateName(method_channel_write_batch, "MethodChannelWriteBatch.pigeonApp"),
    _writes: dart.privateName(method_channel_write_batch, "_writes"),
    _committed: dart.privateName(method_channel_write_batch, "_committed"),
    _assertNotCommitted: dart.privateName(method_channel_write_batch, "_assertNotCommitted"),
    _decode: dart.privateName(decoder, "_decode"),
    _state$2: dart.privateName(decoder, "_state"),
    ___Sink__size: dart.privateName(decoder, "_#_Sink#_size"),
    _sink: dart.privateName(decoder, "_sink"),
    _size: dart.privateName(decoder, "_size"),
    _close: dart.privateName(decoder, "_close"),
    _digitForByte: dart.privateName(decoder, "_digitForByte"),
    _State__name: dart.privateName(decoder, "_State._name"),
    $asUint8List: dartx.asUint8List,
    $toUpperCase: dartx.toUpperCase,
    _name$1: dart.privateName(decoder, "_State._name"),
    _name$2: dart.privateName(decoder, "_name"),
    _sink$1: dart.privateName(encoder, "_sink"),
    maxOperationRetryTime: dart.privateName(method_channel_firebase_storage, "MethodChannelFirebaseStorage.maxOperationRetryTime"),
    maxUploadRetryTime: dart.privateName(method_channel_firebase_storage, "MethodChannelFirebaseStorage.maxUploadRetryTime"),
    maxDownloadRetryTime: dart.privateName(method_channel_firebase_storage, "MethodChannelFirebaseStorage.maxDownloadRetryTime"),
    _path$3: dart.privateName(pointer$, "_path"),
    _clientToken: dart.privateName(client$, "_clientToken"),
    message$2: dart.privateName(exception$1, "ClientException.message"),
    uri: dart.privateName(exception$1, "ClientException.uri"),
    _defaultEncoding: dart.privateName(request$, "_defaultEncoding"),
    _bodyBytes: dart.privateName(request$, "_bodyBytes"),
    _contentType: dart.privateName(request$, "_contentType"),
    _checkFinalized: dart.privateName(request$, "_checkFinalized"),
    method: dart.privateName(base_request, "BaseRequest.method"),
    url$2: dart.privateName(base_request, "BaseRequest.url"),
    headers$1: dart.privateName(base_request, "BaseRequest.headers"),
    _contentLength: dart.privateName(base_request, "_contentLength"),
    _persistentConnection: dart.privateName(base_request, "_persistentConnection"),
    _followRedirects: dart.privateName(base_request, "_followRedirects"),
    _maxRedirects: dart.privateName(base_request, "_maxRedirects"),
    _finalized: dart.privateName(base_request, "_finalized"),
    _checkFinalized$1: dart.privateName(base_request, "_checkFinalized"),
    StreamView__stream: dart.privateName(async, "StreamView._stream"),
    bodyBytes: dart.privateName(response$, "Response.bodyBytes"),
    request: dart.privateName(base_response, "BaseResponse.request"),
    statusCode: dart.privateName(base_response, "BaseResponse.statusCode"),
    reasonPhrase: dart.privateName(base_response, "BaseResponse.reasonPhrase"),
    contentLength: dart.privateName(base_response, "BaseResponse.contentLength"),
    headers$2: dart.privateName(base_response, "BaseResponse.headers"),
    isRedirect: dart.privateName(base_response, "BaseResponse.isRedirect"),
    persistentConnection: dart.privateName(base_response, "BaseResponse.persistentConnection"),
    _controller$2: dart.privateName(streamed_request, "_controller"),
    _sendUnstreamed: dart.privateName(base_client, "_sendUnstreamed"),
    _checkResponseSuccess: dart.privateName(base_client, "_checkResponseSuccess"),
    Utf8Codec__allowMalformed: dart.privateName(convert, "Utf8Codec._allowMalformed"),
    field$4: dart.privateName(multipart_file, "MultipartFile.field"),
    length: dart.privateName(multipart_file, "MultipartFile.length"),
    filename: dart.privateName(multipart_file, "MultipartFile.filename"),
    contentType$1: dart.privateName(multipart_file, "MultipartFile.contentType"),
    _isFinalized: dart.privateName(multipart_file, "_isFinalized"),
    _stream$1: dart.privateName(multipart_file, "_stream"),
    fields$1: dart.privateName(multipart_request, "MultipartRequest.fields"),
    files$2: dart.privateName(multipart_request, "MultipartRequest.files"),
    _headerForField: dart.privateName(multipart_request, "_headerForField"),
    _headerForFile: dart.privateName(multipart_request, "_headerForFile"),
    _boundaryString: dart.privateName(multipart_request, "_boundaryString"),
    _finalize: dart.privateName(multipart_request, "_finalize"),
    _browserEncode: dart.privateName(multipart_request, "_browserEncode"),
    stream: dart.privateName(streamed_response, "StreamedResponse.stream"),
    _items: dart.privateName(list_result_web, "_items"),
    _prefixes: dart.privateName(list_result_web, "_prefixes"),
    __XFile__path: dart.privateName(html$, "_#XFile#_path"),
    _browserBlob: dart.privateName(html$, "_browserBlob"),
    __XFile__target: dart.privateName(html$, "_#XFile#_target"),
    _mimeType: dart.privateName(html$, "_mimeType"),
    _length: dart.privateName(html$, "_length"),
    _overrides$1: dart.privateName(html$, "_overrides"),
    _lastModified: dart.privateName(html$, "_lastModified"),
    _name$3: dart.privateName(html$, "_name"),
    _createBlobFromBytes: dart.privateName(html$, "_createBlobFromBytes"),
    _path$4: dart.privateName(html$, "_path"),
    _target$2: dart.privateName(html$, "_target"),
    _hasTestOverrides: dart.privateName(html$, "_hasTestOverrides"),
    $response: dartx.response,
    _blob: dart.privateName(html$, "_blob"),
    _blobToByteBuffer: dart.privateName(html$, "_blobToByteBuffer"),
    createAnchorElement: dart.privateName(html$, "CrossFileTestOverrides.createAnchorElement"),
    file$1: dart.privateName(lost_data, "LostData.file"),
    exception$1: dart.privateName(lost_data, "LostData.exception"),
    type$9: dart.privateName(lost_data, "LostData.type"),
    _empty$1: dart.privateName(lost_data, "_empty"),
    path$3: dart.privateName(html$0, "PickedFile.path"),
    _initBytes: dart.privateName(html$0, "PickedFile._initBytes"),
    _initBytes$1: dart.privateName(html$0, "_initBytes"),
    _bytes: dart.privateName(html$0, "_bytes"),
    fmt_type: dart.privateName(sprintf, "Formatter.fmt_type"),
    options$2: dart.privateName(sprintf, "Formatter.options"),
    _arg: dart.privateName(sprintf, "_arg"),
    _digits: dart.privateName(sprintf, "_digits"),
    _exponent: dart.privateName(sprintf, "_exponent"),
    _decimal: dart.privateName(sprintf, "_decimal"),
    _is_negative: dart.privateName(sprintf, "_is_negative"),
    _has_init: dart.privateName(sprintf, "_has_init"),
    _output: dart.privateName(sprintf, "_output"),
    $toStringAsFixed: dartx.toStringAsFixed,
    _round: dart.privateName(sprintf, "_round"),
    _remove_trailing_zeros: dart.privateName(sprintf, "_remove_trailing_zeros"),
    _formatters: dart.privateName(sprintf, "_formatters"),
    _parse_flags: dart.privateName(sprintf, "_parse_flags"),
    snap$1: dart.privateName(comment_card, "CommentCard.snap"),
    SliverGridGeometry_crossAxisExtent: dart.privateName(sliver_grid, "SliverGridGeometry.crossAxisExtent"),
    SliverGridGeometry_mainAxisExtent: dart.privateName(sliver_grid, "SliverGridGeometry.mainAxisExtent"),
    SliverGridGeometry_crossAxisOffset: dart.privateName(sliver_grid, "SliverGridGeometry.crossAxisOffset"),
    SliverGridGeometry_scrollOffset: dart.privateName(sliver_grid, "SliverGridGeometry.scrollOffset"),
    tiles$1: dart.privateName(sliver_patterned_grid_delegate, "SliverPatternGridGeometries.tiles"),
    bounds: dart.privateName(sliver_patterned_grid_delegate, "SliverPatternGridGeometries.bounds"),
    $take: dartx.take,
    _isRectVisibleAtMainAxisOffset: dart.privateName(sliver_patterned_grid_delegate, "_isRectVisibleAtMainAxisOffset"),
    spacing: dart.privateName(uniform_track, "UniformTrack.spacing"),
    division: dart.privateName(uniform_track, "UniformTrack.division"),
    direction: dart.privateName(uniform_track, "UniformTrack.direction"),
    crossAxisCount$4: dart.privateName(staggered_grid$, "StaggeredGridDelegateWithFixedCrossAxisCount.crossAxisCount"),
    maxCrossAxisExtent$2: dart.privateName(staggered_grid$, "StaggeredGridDelegateWithMaxCrossAxisExtent.maxCrossAxisExtent"),
    _hasVisualOverflow: dart.privateName(staggered_grid$, "_hasVisualOverflow"),
    _axisDirection: dart.privateName(staggered_grid$, "_axisDirection"),
    _textDirection: dart.privateName(staggered_grid$, "_textDirection"),
    _delegate$12: dart.privateName(staggered_grid$, "_delegate"),
    _mainAxisSpacing$1: dart.privateName(staggered_grid$, "_mainAxisSpacing"),
    _crossAxisSpacing$1: dart.privateName(staggered_grid$, "_crossAxisSpacing"),
    _getParentData$1: dart.privateName(staggered_grid$, "_getParentData"),
    _computeIntrinsicWidth: dart.privateName(staggered_grid$, "_computeIntrinsicWidth"),
    _computeIntrinsicHeight: dart.privateName(staggered_grid$, "_computeIntrinsicHeight"),
    _computeSize: dart.privateName(staggered_grid$, "_computeSize"),
    crossAxisIndex$1: dart.privateName(staggered_grid$, "_TileOrigin.crossAxisIndex"),
    mainAxisOffset: dart.privateName(staggered_grid$, "_TileOrigin.mainAxisOffset"),
    _pigeonParameters$1: dart.privateName(method_channel_aggregate_query, "_pigeonParameters"),
    _path$5: dart.privateName(method_channel_aggregate_query, "_path"),
    _pigeonApp: dart.privateName(method_channel_aggregate_query, "_pigeonApp"),
    _aggregateQueries$1: dart.privateName(method_channel_aggregate_query, "_aggregateQueries"),
    _isCollectionGroupQuery: dart.privateName(method_channel_aggregate_query, "_isCollectionGroupQuery"),
    appName$3: dart.privateName(messages$46pigeon$1, "PigeonStorageFirebaseApp.appName"),
    tenantId$4: dart.privateName(messages$46pigeon$1, "PigeonStorageFirebaseApp.tenantId"),
    bucket$2: dart.privateName(messages$46pigeon$1, "PigeonStorageFirebaseApp.bucket"),
    bucket$3: dart.privateName(messages$46pigeon$1, "PigeonStorageReference.bucket"),
    fullPath: dart.privateName(messages$46pigeon$1, "PigeonStorageReference.fullPath"),
    name$4: dart.privateName(messages$46pigeon$1, "PigeonStorageReference.name"),
    metadata$3: dart.privateName(messages$46pigeon$1, "PigeonFullMetaData.metadata"),
    maxResults$1: dart.privateName(messages$46pigeon$1, "PigeonListOptions.maxResults"),
    pageToken$1: dart.privateName(messages$46pigeon$1, "PigeonListOptions.pageToken"),
    cacheControl$1: dart.privateName(messages$46pigeon$1, "PigeonSettableMetadata.cacheControl"),
    contentDisposition$1: dart.privateName(messages$46pigeon$1, "PigeonSettableMetadata.contentDisposition"),
    contentEncoding$1: dart.privateName(messages$46pigeon$1, "PigeonSettableMetadata.contentEncoding"),
    contentLanguage$1: dart.privateName(messages$46pigeon$1, "PigeonSettableMetadata.contentLanguage"),
    contentType$2: dart.privateName(messages$46pigeon$1, "PigeonSettableMetadata.contentType"),
    customMetadata$1: dart.privateName(messages$46pigeon$1, "PigeonSettableMetadata.customMetadata"),
    items: dart.privateName(messages$46pigeon$1, "PigeonListResult.items"),
    pageToken$2: dart.privateName(messages$46pigeon$1, "PigeonListResult.pageToken"),
    prefixs: dart.privateName(messages$46pigeon$1, "PigeonListResult.prefixs"),
    _binaryMessenger$3: dart.privateName(messages$46pigeon$1, "_binaryMessenger"),
    withCredentials: dart.privateName(browser_client, "BrowserClient.withCredentials"),
    _xhrs: dart.privateName(browser_client, "_xhrs"),
    _isClosed: dart.privateName(browser_client, "_isClosed"),
    $responseType: dartx.responseType,
    $responseHeaders: dartx.responseHeaders,
    Latin1Codec__allowInvalid: dart.privateName(convert, "Latin1Codec._allowInvalid"),
    _reference$1: dart.privateName(task_snapshot_web, "_reference"),
    _snapshot: dart.privateName(task_snapshot_web, "_snapshot"),
    $vendor: dartx.vendor,
    $navigator: dartx.navigator,
    bytes$2: dart.privateName(digest, "Digest.bytes"),
    _hash: dart.privateName(hmac, "_hash"),
    _key: dart.privateName(hmac, "_key"),
    _innerResultSink: dart.privateName(hmac, "_innerResultSink"),
    ___HmacSink__innerSink: dart.privateName(hmac, "_#_HmacSink#_innerSink"),
    _isClosed$1: dart.privateName(hmac, "_isClosed"),
    _outerSink: dart.privateName(hmac, "_outerSink"),
    _innerSink: dart.privateName(hmac, "_innerSink"),
    blockSize: dart.privateName(md5, "_MD5.blockSize"),
    digest: dart.privateName(md5, "_MD5Sink.digest"),
    Endian__littleEndian: dart.privateName(typed_data, "Endian._littleEndian"),
    _lengthInBytes: dart.privateName(hash_sink, "_lengthInBytes"),
    _pendingData: dart.privateName(hash_sink, "_pendingData"),
    _isClosed$2: dart.privateName(hash_sink, "_isClosed"),
    _sink$2: dart.privateName(hash_sink, "_sink"),
    _endian: dart.privateName(hash_sink, "_endian"),
    _signatureBytes: dart.privateName(hash_sink, "_signatureBytes"),
    _currentChunk: dart.privateName(hash_sink, "_currentChunk"),
    _iterate: dart.privateName(hash_sink, "_iterate"),
    _finalizeData: dart.privateName(hash_sink, "_finalizeData"),
    _byteDigest: dart.privateName(hash_sink, "_byteDigest"),
    $lengthInBytes: dartx.lengthInBytes,
    $getUint32: dartx.getUint32,
    $removeRange: dartx.removeRange,
    _roundUp: dart.privateName(hash_sink, "_roundUp"),
    blockSize$1: dart.privateName(sha1, "_Sha1.blockSize"),
    digest$1: dart.privateName(sha1, "_Sha1Sink.digest"),
    _extended: dart.privateName(sha1, "_extended"),
    blockSize$2: dart.privateName(sha256, "_Sha256.blockSize"),
    blockSize$3: dart.privateName(sha256, "_Sha224.blockSize"),
    _extended$1: dart.privateName(sha256, "_extended"),
    _digest: dart.privateName(sha256, "_digest"),
    $leftShift: dartx['<<'],
    _rotr32: dart.privateName(sha256, "_rotr32"),
    _ch: dart.privateName(sha256, "_ch"),
    _maj: dart.privateName(sha256, "_maj"),
    _bsig0: dart.privateName(sha256, "_bsig0"),
    _bsig1: dart.privateName(sha256, "_bsig1"),
    _ssig0: dart.privateName(sha256, "_ssig0"),
    _ssig1: dart.privateName(sha256, "_ssig1"),
    blockSize$4: dart.privateName(sha512, "_Sha384.blockSize"),
    blockSize$5: dart.privateName(sha512, "_Sha512.blockSize"),
    blockSize$6: dart.privateName(sha512, "_Sha512224.blockSize"),
    blockSize$7: dart.privateName(sha512, "_Sha512256.blockSize"),
    _spacing: dart.privateName(uniform_track$, "_spacing"),
    _direction: dart.privateName(uniform_track$, "_direction"),
    _isHorizontal: dart.privateName(uniform_track$, "_isHorizontal"),
    _isDirectionReversed: dart.privateName(uniform_track$, "_isDirectionReversed"),
    _division: dart.privateName(uniform_track$, "_division"),
    _getParentData$2: dart.privateName(uniform_track$, "_getParentData"),
    _computeSize$1: dart.privateName(uniform_track$, "_computeSize"),
    _table: dart.privateName(typed_queue, "_TypedQueue._table"),
    _head: dart.privateName(typed_queue, "_TypedQueue._head"),
    _tail: dart.privateName(typed_queue, "_TypedQueue._tail"),
    _table$1: dart.privateName(typed_queue, "_table"),
    _head$1: dart.privateName(typed_queue, "_head"),
    _tail$1: dart.privateName(typed_queue, "_tail"),
    _createBuffer: dart.privateName(typed_queue, "_createBuffer"),
    _createList: dart.privateName(typed_queue, "_createList"),
    _writeToList: dart.privateName(typed_queue, "_writeToList"),
    _growAtCapacity: dart.privateName(typed_queue, "_growAtCapacity"),
    _growTo: dart.privateName(typed_queue, "_growTo"),
    _defaultValue: dart.privateName(typed_queue, "_defaultValue"),
    _add: dart.privateName(typed_queue, "_add"),
    _add$1: dart.privateName(queue_list, "_add"),
    _head$2: dart.privateName(queue_list, "_head"),
    _writeToList$1: dart.privateName(queue_list, "_writeToList"),
    _grow: dart.privateName(typed_queue, "_grow"),
    _grow$1: dart.privateName(queue_list, "_grow"),
    _preGrow: dart.privateName(typed_queue, "_preGrow"),
    _preGrow$1: dart.privateName(queue_list, "_preGrow"),
    _table$2: dart.privateName(queue_list, "_table"),
    _tail$2: dart.privateName(queue_list, "_tail"),
    _head_: dart.privateName(typed_queue, "_head="),
    _table_: dart.privateName(typed_queue, "_table="),
    _tail_: dart.privateName(typed_queue, "_tail="),
    _items$1: dart.privateName(method_channel_list_result, "_items"),
    _prefixes$1: dart.privateName(method_channel_list_result, "_prefixes"),
    storage$6: dart.privateName(method_channel_task, "MethodChannelTask.storage"),
    _exception: dart.privateName(method_channel_task, "_exception"),
    __MethodChannelTask__stackTrace: dart.privateName(method_channel_task, "_#MethodChannelTask#_stackTrace"),
    _didComplete: dart.privateName(method_channel_task, "_didComplete"),
    _completer: dart.privateName(method_channel_task, "_completer"),
    __MethodChannelTask__stream: dart.privateName(method_channel_task, "_#MethodChannelTask#_stream"),
    __MethodChannelTask__snapshot: dart.privateName(method_channel_task, "_#MethodChannelTask#_snapshot"),
    _handle: dart.privateName(method_channel_task, "_handle"),
    _initialTask: dart.privateName(method_channel_task, "_initialTask"),
    _snapshot$1: dart.privateName(method_channel_task, "_snapshot"),
    _stream$2: dart.privateName(method_channel_task, "_stream"),
    _stackTrace: dart.privateName(method_channel_task, "_stackTrace"),
    _value$2: dart.privateName(digest_sink, "_value"),
    _extended$2: dart.privateName(sha512_slowsinks, "_extended"),
    _nums: dart.privateName(sha512_slowsinks, "_nums"),
    _digest$1: dart.privateName(sha512_slowsinks, "_digest"),
    _shr: dart.privateName(sha512_slowsinks, "_shr"),
    _shl: dart.privateName(sha512_slowsinks, "_shl"),
    _or: dart.privateName(sha512_slowsinks, "_or"),
    _xor: dart.privateName(sha512_slowsinks, "_xor"),
    _add$2: dart.privateName(sha512_slowsinks, "_add"),
    _addTo2: dart.privateName(sha512_slowsinks, "_addTo2"),
    _rotr: dart.privateName(sha512_slowsinks, "_rotr"),
    _bsig0$1: dart.privateName(sha512_slowsinks, "_bsig0"),
    _bsig1$1: dart.privateName(sha512_slowsinks, "_bsig1"),
    _ssig0$1: dart.privateName(sha512_slowsinks, "_ssig0"),
    _ssig1$1: dart.privateName(sha512_slowsinks, "_ssig1"),
    _ch$1: dart.privateName(sha512_slowsinks, "_ch"),
    _maj$1: dart.privateName(sha512_slowsinks, "_maj"),
    digestBytes: dart.privateName(sha512_slowsinks, "Sha384Sink.digestBytes"),
    digestBytes$1: dart.privateName(sha512_slowsinks, "Sha512Sink.digestBytes"),
    digestBytes$2: dart.privateName(sha512_slowsinks, "Sha512224Sink.digestBytes"),
    digestBytes$3: dart.privateName(sha512_slowsinks, "Sha512256Sink.digestBytes"),
    _buffer$1: dart.privateName(typed_buffer, "_buffer"),
    _length$1: dart.privateName(typed_buffer, "_length"),
    _typedBuffer: dart.privateName(typed_buffer, "_typedBuffer"),
    _defaultValue$1: dart.privateName(typed_buffer, "_defaultValue"),
    _createBuffer$1: dart.privateName(typed_buffer, "_createBuffer"),
    _createBiggerBuffer: dart.privateName(typed_buffer, "_createBiggerBuffer"),
    _grow$2: dart.privateName(typed_buffer, "_grow"),
    _add$3: dart.privateName(typed_buffer, "_add"),
    _addAll: dart.privateName(typed_buffer, "_addAll"),
    _insertKnownLength: dart.privateName(typed_buffer, "_insertKnownLength"),
    _ensureCapacity: dart.privateName(typed_buffer, "_ensureCapacity"),
    _setRange: dart.privateName(typed_buffer, "_setRange"),
    $elementSizeInBytes: dartx.elementSizeInBytes,
    $offsetInBytes: dartx.offsetInBytes,
    $insertAll: dartx.insertAll,
    storage$7: dart.privateName(method_channel_task_snapshot, "MethodChannelTaskSnapshot.storage"),
    _data$6: dart.privateName(method_channel_task_snapshot, "_data")
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T$.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: mobile_screen_layout.MobileScreenLayout.prototype,
        [S$.Widget_key]: null
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: progress_indicator._ActivityIndicatorType.prototype,
        [S$._Enum__name]: "material",
        [S$._Enum_index]: 0
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: progress_indicator.CircularProgressIndicator.prototype,
        [S$.Widget_key]: null,
        [S$.ProgressIndicator_semanticsValue]: null,
        [S$.ProgressIndicator_semanticsLabel]: null,
        [S$.ProgressIndicator_valueColor]: null,
        [S$.ProgressIndicator_color]: null,
        [S$.ProgressIndicator_backgroundColor]: null,
        [S$.ProgressIndicator_value]: null,
        [S$.CircularProgressIndicator_strokeWidth]: 4,
        [S$.CircularProgressIndicator__indicatorType]: C[4] || CT.C4
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [S$.Alignment_y]: 0,
        [S$.Alignment_x]: 0
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: basic.Center.prototype,
        [S$.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: C[3] || CT.C3,
        [S$.Align_heightFactor]: null,
        [S$.Align_widthFactor]: null,
        [S$.Align_alignment]: C[5] || CT.C5
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: login_screen.LoginScreen.prototype,
        [S$.Widget_key]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: firebase_core_platform_interface.FirebaseOptions.prototype,
        [S$.FirebaseOptions_appGroupId]: null,
        [S$.FirebaseOptions_iosBundleId]: null,
        [S$.FirebaseOptions_iosClientId]: null,
        [S$.FirebaseOptions_androidClientId]: null,
        [S$.FirebaseOptions_deepLinkURLScheme]: null,
        [S$.FirebaseOptions_trackingId]: null,
        [S$.FirebaseOptions_measurementId]: null,
        [S$.FirebaseOptions_storageBucket]: "design-gallery-833ab.appspot.com",
        [S$.FirebaseOptions_databaseURL]: null,
        [S$.FirebaseOptions_authDomain]: "design-gallery-833ab.firebaseapp.com",
        [S$.FirebaseOptions_projectId]: "design-gallery-833ab",
        [S$.FirebaseOptions_messagingSenderId]: "587196150273",
        [S$.FirebaseOptions_appId]: "1:587196150273:web:f92d177652654b85cd4600",
        [S$.FirebaseOptions_apiKey]: "AIzaSyDlSyRPam_kfV5Z8mnDVqIniL6zw9q_NdA"
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: main.MyApp.prototype,
        [S$.Widget_key]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: core.Duration.prototype,
        [S$.Duration__duration]: 30000000
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype,
        [S$._Enum__name]: "normal",
        [S$._Enum_index]: 0
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype,
        [S$._Enum__name]: "light",
        [S$._Enum_index]: 0
      });
    },
    get C13() {
      return C[13] = dart.fn(firebase_core.FirebaseApp['_#_#tearOff'], T$.FirebaseAppPlatformToFirebaseApp());
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 8,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 8,
        [S$.EdgeInsets_left]: 0
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 32,
        [S$.EdgeInsets_top]: 0,
        [S$.EdgeInsets_left]: 32
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 10,
        [S$.EdgeInsets_right]: 10,
        [S$.EdgeInsets_top]: 10,
        [S$.EdgeInsets_left]: 10
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [S$.FontWeight_value]: 500,
        [S$.FontWeight_index]: 4
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4293128957
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4290502395
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4287679225
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4284790262
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4282557941
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4280391411
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4280191205
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4279858898
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4279592384
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4279060385
      });
    },
    get C21() {
      return C[21] = dart.constMap(core.int, ui.Color, [50, C[22] || CT.C22, 100, C[23] || CT.C23, 200, C[24] || CT.C24, 300, C[25] || CT.C25, 400, C[26] || CT.C26, 500, C[27] || CT.C27, 600, C[28] || CT.C28, 700, C[29] || CT.C29, 800, C[30] || CT.C30, 900, C[31] || CT.C31]);
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [S$.Color_value]: 4280391411,
        [S$.ColorSwatch__swatch]: C[21] || CT.C21
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: C[19] || CT.C19,
        [S$.TextStyle_fontSize]: 35,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: C[20] || CT.C20,
        [S$.TextStyle_inherit]: true
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: C[18] || CT.C18,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Design Gallery"
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S$.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$.SizedBox_height]: 30,
        [S$.SizedBox_width]: null
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [S$._Enum__name]: "solid",
        [S$._Enum_index]: 1
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4278190080
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [S$.BorderSide_strokeAlign]: -1,
        [S$.BorderSide_style]: C[36] || CT.C36,
        [S$.BorderSide_width]: 1,
        [S$.BorderSide_color]: C[37] || CT.C37
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: ui.Radius.prototype,
        [S$.Radius_y]: 4,
        [S$.Radius_x]: 4
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: border_radius.BorderRadius.prototype,
        [S$.BorderRadius_bottomRight]: C[39] || CT.C39,
        [S$.BorderRadius_bottomLeft]: C[39] || CT.C39,
        [S$.BorderRadius_topRight]: C[39] || CT.C39,
        [S$.BorderRadius_topLeft]: C[39] || CT.C39
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: input_border.OutlineInputBorder.prototype,
        [S$.InputBorder_borderSide]: C[35] || CT.C35,
        [S$.OutlineInputBorder_borderRadius]: C[38] || CT.C38,
        [S$.OutlineInputBorder_gapPadding]: 4
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [S$.InputDecoration_constraints]: null,
        [S$.InputDecoration_alignLabelWithHint]: null,
        [S$.InputDecoration_semanticCounterText]: null,
        [S$.InputDecoration_enabled]: true,
        [S$.InputDecoration_border]: C[34] || CT.C34,
        [S$.InputDecoration_enabledBorder]: null,
        [S$.InputDecoration_disabledBorder]: null,
        [S$.InputDecoration_focusedErrorBorder]: null,
        [S$.InputDecoration_focusedBorder]: null,
        [S$.InputDecoration_errorBorder]: null,
        [S$.InputDecoration_hoverColor]: null,
        [S$.InputDecoration_focusColor]: null,
        [S$.InputDecoration_fillColor]: null,
        [S$.InputDecoration_filled]: null,
        [S$.InputDecoration_counterStyle]: null,
        [S$.InputDecoration_counter]: null,
        [S$.InputDecoration_counterText]: null,
        [S$.InputDecoration_suffixIconConstraints]: null,
        [S$.InputDecoration_suffixIconColor]: null,
        [S$.InputDecoration_suffixStyle]: null,
        [S$.InputDecoration_suffixText]: null,
        [S$.InputDecoration_suffix]: null,
        [S$.InputDecoration_suffixIcon]: null,
        [S$.InputDecoration_prefixIconColor]: null,
        [S$.InputDecoration_prefixStyle]: null,
        [S$.InputDecoration_prefixText]: null,
        [S$.InputDecoration_prefix]: null,
        [S$.InputDecoration_prefixIconConstraints]: null,
        [S$.InputDecoration_prefixIcon]: null,
        [S$.InputDecoration_isCollapsed]: false,
        [S$.InputDecoration_contentPadding]: null,
        [S$.InputDecoration_isDense]: null,
        [S$.InputDecoration_floatingLabelAlignment]: null,
        [S$.InputDecoration_floatingLabelBehavior]: null,
        [S$.InputDecoration_errorMaxLines]: null,
        [S$.InputDecoration_errorStyle]: null,
        [S$.InputDecoration_errorText]: null,
        [S$.InputDecoration_hintMaxLines]: null,
        [S$.InputDecoration_hintTextDirection]: null,
        [S$.InputDecoration_hintStyle]: null,
        [S$.InputDecoration_hintText]: null,
        [S$.InputDecoration_helperMaxLines]: null,
        [S$.InputDecoration_helperStyle]: null,
        [S$.InputDecoration_helperText]: null,
        [S$.InputDecoration_floatingLabelStyle]: null,
        [S$.InputDecoration_labelStyle]: null,
        [S$.InputDecoration_labelText]: "Enter your email",
        [S$.InputDecoration_label]: null,
        [S$.InputDecoration_iconColor]: null,
        [S$.InputDecoration_icon]: null
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [S$.InputDecoration_constraints]: null,
        [S$.InputDecoration_alignLabelWithHint]: null,
        [S$.InputDecoration_semanticCounterText]: null,
        [S$.InputDecoration_enabled]: true,
        [S$.InputDecoration_border]: C[34] || CT.C34,
        [S$.InputDecoration_enabledBorder]: null,
        [S$.InputDecoration_disabledBorder]: null,
        [S$.InputDecoration_focusedErrorBorder]: null,
        [S$.InputDecoration_focusedBorder]: null,
        [S$.InputDecoration_errorBorder]: null,
        [S$.InputDecoration_hoverColor]: null,
        [S$.InputDecoration_focusColor]: null,
        [S$.InputDecoration_fillColor]: null,
        [S$.InputDecoration_filled]: null,
        [S$.InputDecoration_counterStyle]: null,
        [S$.InputDecoration_counter]: null,
        [S$.InputDecoration_counterText]: null,
        [S$.InputDecoration_suffixIconConstraints]: null,
        [S$.InputDecoration_suffixIconColor]: null,
        [S$.InputDecoration_suffixStyle]: null,
        [S$.InputDecoration_suffixText]: null,
        [S$.InputDecoration_suffix]: null,
        [S$.InputDecoration_suffixIcon]: null,
        [S$.InputDecoration_prefixIconColor]: null,
        [S$.InputDecoration_prefixStyle]: null,
        [S$.InputDecoration_prefixText]: null,
        [S$.InputDecoration_prefix]: null,
        [S$.InputDecoration_prefixIconConstraints]: null,
        [S$.InputDecoration_prefixIcon]: null,
        [S$.InputDecoration_isCollapsed]: false,
        [S$.InputDecoration_contentPadding]: null,
        [S$.InputDecoration_isDense]: null,
        [S$.InputDecoration_floatingLabelAlignment]: null,
        [S$.InputDecoration_floatingLabelBehavior]: null,
        [S$.InputDecoration_errorMaxLines]: null,
        [S$.InputDecoration_errorStyle]: null,
        [S$.InputDecoration_errorText]: null,
        [S$.InputDecoration_hintMaxLines]: null,
        [S$.InputDecoration_hintTextDirection]: null,
        [S$.InputDecoration_hintStyle]: null,
        [S$.InputDecoration_hintText]: null,
        [S$.InputDecoration_helperMaxLines]: null,
        [S$.InputDecoration_helperStyle]: null,
        [S$.InputDecoration_helperText]: null,
        [S$.InputDecoration_floatingLabelStyle]: null,
        [S$.InputDecoration_labelStyle]: null,
        [S$.InputDecoration_labelText]: "Enter your password",
        [S$.InputDecoration_label]: null,
        [S$.InputDecoration_iconColor]: null,
        [S$.InputDecoration_icon]: null
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [S$.FontWeight_value]: 400,
        [S$.FontWeight_index]: 3
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: C[43] || CT.C43,
        [S$.TextStyle_fontSize]: 18,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: null,
        [S$.TextStyle_inherit]: true
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: C[42] || CT.C42,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Signin"
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4294967295
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: progress_indicator.CircularProgressIndicator.prototype,
        [S$.Widget_key]: null,
        [S$.ProgressIndicator_semanticsValue]: null,
        [S$.ProgressIndicator_semanticsLabel]: null,
        [S$.ProgressIndicator_valueColor]: null,
        [S$.ProgressIndicator_color]: C[45] || CT.C45,
        [S$.ProgressIndicator_backgroundColor]: null,
        [S$.ProgressIndicator_value]: null,
        [S$.CircularProgressIndicator_strokeWidth]: 4,
        [S$.CircularProgressIndicator__indicatorType]: C[4] || CT.C4
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: null,
        [S$.TextStyle_fontSize]: 14,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: null,
        [S$.TextStyle_inherit]: true
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: C[47] || CT.C47,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Dont have an account?"
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: signup_screen.SignupScreen.prototype,
        [S$.Widget_key]: null
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: C[19] || CT.C19,
        [S$.TextStyle_fontSize]: 14,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: C[20] || CT.C20,
        [S$.TextStyle_inherit]: true
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: C[50] || CT.C50,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: " Signup"
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: settings.Settings.prototype,
        [S$.Settings_ignoreUndefinedProperties]: false,
        [S$.Settings_cacheSizeBytes]: null,
        [S$.Settings_sslEnabled]: null,
        [S$.Settings_host]: null,
        [S$.Settings_persistenceEnabled]: null
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: messages$46pigeon$0.ServerTimestampBehavior.prototype,
        [S$._Enum__name]: "none",
        [S$._Enum_index]: 0
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: messages$46pigeon$0.Source.prototype,
        [S$._Enum__name]: "serverAndCache",
        [S$._Enum_index]: 0
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: get_options.GetOptions.prototype,
        [S$.GetOptions_serverTimestampBehavior]: C[53] || CT.C53,
        [S$.GetOptions_source]: C[54] || CT.C54
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: file_picker$.FileType.prototype,
        [S$._Enum__name]: "any",
        [S$._Enum_index]: 0
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: file_picker$.FileType.prototype,
        [S$._Enum__name]: "audio",
        [S$._Enum_index]: 4
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: file_picker$.FileType.prototype,
        [S$._Enum__name]: "image",
        [S$._Enum_index]: 2
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: file_picker$.FileType.prototype,
        [S$._Enum__name]: "video",
        [S$._Enum_index]: 3
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: file_picker$.FileType.prototype,
        [S$._Enum__name]: "media",
        [S$._Enum_index]: 1
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: file_picker$.FileType.prototype,
        [S$._Enum__name]: "custom",
        [S$._Enum_index]: 5
      });
    },
    get C61() {
      return C[61] = dart.fn(firebase_core_web._createFromJsApp, T$.AppToFirebaseAppPlatform());
    },
    get C62() {
      return C[62] = dart.fn(firebase_core_web._handleException, T$.ObjectAndStackTraceToNever());
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: camera_device.CameraDevice.prototype,
        [S$._Enum__name]: "rear",
        [S$._Enum_index]: 0
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: image_options.ImagePickerOptions.prototype,
        [S$.ImageOptions_requestFullMetadata]: true,
        [S$.ImageOptions_imageQuality]: null,
        [S$.ImageOptions_maxHeight]: null,
        [S$.ImageOptions_maxWidth]: null,
        [S$.ImagePickerOptions_preferredCameraDevice]: C[64] || CT.C64
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: image_options.ImageOptions.prototype,
        [S$.ImageOptions_requestFullMetadata]: true,
        [S$.ImageOptions_imageQuality]: null,
        [S$.ImageOptions_maxHeight]: null,
        [S$.ImageOptions_maxWidth]: null
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: multi_image_picker_options.MultiImagePickerOptions.prototype,
        [S$.MultiImagePickerOptions_imageOptions]: C[66] || CT.C66
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: T$.DefaultEqualityOfNever().prototype
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: equality.MapEquality.prototype,
        [S$.MapEquality__valueEquality]: C[68] || CT.C68,
        [S$.MapEquality__keyEquality]: C[68] || CT.C68
      });
    },
    get C69() {
      return C[69] = dart.fn(change_notifier_provider.ChangeNotifierProvider._dispose, T$.BuildContextAndChangeNotifierNTovoid());
    },
    get C70() {
      return C[70] = dart.fn(listenable_provider.ListenableProvider._startListening, T$.InheritedContextOfListenableNAndListenableNToFn());
    },
    get C71() {
      return C[71] = dart.constList([], core.String);
    },
    get C72() {
      return C[72] = dart.constMap(T$.ObjectN(), T$.ObjectN(), []);
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: equality.DeepCollectionEquality.prototype,
        [S$.DeepCollectionEquality__unordered]: false,
        [S$.DeepCollectionEquality__base]: C[68] || CT.C68
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4279374354
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4280690214
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4278228470
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4294638330
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4294309365
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4293848814
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4292927712
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4292269782
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4290624957
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4288585374
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4285887861
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4284572001
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4282532418
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4281348144
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4280361249
      });
    },
    get C78() {
      return C[78] = dart.constMap(core.int, ui.Color, [50, C[79] || CT.C79, 100, C[80] || CT.C80, 200, C[81] || CT.C81, 300, C[82] || CT.C82, 350, C[83] || CT.C83, 400, C[84] || CT.C84, 500, C[85] || CT.C85, 600, C[86] || CT.C86, 700, C[87] || CT.C87, 800, C[88] || CT.C88, 850, C[89] || CT.C89, 900, C[90] || CT.C90]);
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [S$.Color_value]: 4288585374,
        [S$.ColorSwatch__swatch]: C[78] || CT.C78
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: feed_screen.FeedScreen.prototype,
        [S$.Widget_key]: null
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: search_screen.SearchScreen.prototype,
        [S$.Widget_key]: null
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: add_post_screen.AddPostScreen.prototype,
        [S$.Widget_key]: null
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: null,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "notifications"
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S$.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$.SizedBox_height]: 64,
        [S$.SizedBox_width]: null
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: _network_image_web.NetworkImage.prototype,
        [S$.NetworkImage_headers]: null,
        [S$.NetworkImage_scale]: 1,
        [S$.NetworkImage_url]: "https://static.vecteezy.com/system/resources/previews/001/840/618/original/picture-profile-icon-male-icon-human-or-people-sign-and-symbol-free-vector.jpg"
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: circle_avatar.CircleAvatar.prototype,
        [S$.Widget_key]: null,
        [S$.CircleAvatar_maxRadius]: null,
        [S$.CircleAvatar_minRadius]: null,
        [S$.CircleAvatar_radius]: 50,
        [S$.CircleAvatar_onForegroundImageError]: null,
        [S$.CircleAvatar_onBackgroundImageError]: null,
        [S$.CircleAvatar_foregroundImage]: null,
        [S$.CircleAvatar_backgroundImage]: C[97] || CT.C97,
        [S$.CircleAvatar_foregroundColor]: null,
        [S$.CircleAvatar_backgroundColor]: null,
        [S$.CircleAvatar_child]: null
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 3707764736
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S$.IconData_matchTextDirection]: false,
        [S$.IconData_fontPackage]: null,
        [S$.IconData_fontFamily]: "MaterialIcons",
        [S$.IconData_codePoint]: 57416
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: C[99] || CT.C99,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: null,
        [S$.Icon_icon]: C[100] || CT.C100
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S$.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$.SizedBox_height]: 24,
        [S$.SizedBox_width]: null
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [S$.InputDecoration_constraints]: null,
        [S$.InputDecoration_alignLabelWithHint]: null,
        [S$.InputDecoration_semanticCounterText]: null,
        [S$.InputDecoration_enabled]: true,
        [S$.InputDecoration_border]: C[34] || CT.C34,
        [S$.InputDecoration_enabledBorder]: null,
        [S$.InputDecoration_disabledBorder]: null,
        [S$.InputDecoration_focusedErrorBorder]: null,
        [S$.InputDecoration_focusedBorder]: null,
        [S$.InputDecoration_errorBorder]: null,
        [S$.InputDecoration_hoverColor]: null,
        [S$.InputDecoration_focusColor]: null,
        [S$.InputDecoration_fillColor]: null,
        [S$.InputDecoration_filled]: null,
        [S$.InputDecoration_counterStyle]: null,
        [S$.InputDecoration_counter]: null,
        [S$.InputDecoration_counterText]: null,
        [S$.InputDecoration_suffixIconConstraints]: null,
        [S$.InputDecoration_suffixIconColor]: null,
        [S$.InputDecoration_suffixStyle]: null,
        [S$.InputDecoration_suffixText]: null,
        [S$.InputDecoration_suffix]: null,
        [S$.InputDecoration_suffixIcon]: null,
        [S$.InputDecoration_prefixIconColor]: null,
        [S$.InputDecoration_prefixStyle]: null,
        [S$.InputDecoration_prefixText]: null,
        [S$.InputDecoration_prefix]: null,
        [S$.InputDecoration_prefixIconConstraints]: null,
        [S$.InputDecoration_prefixIcon]: null,
        [S$.InputDecoration_isCollapsed]: false,
        [S$.InputDecoration_contentPadding]: null,
        [S$.InputDecoration_isDense]: null,
        [S$.InputDecoration_floatingLabelAlignment]: null,
        [S$.InputDecoration_floatingLabelBehavior]: null,
        [S$.InputDecoration_errorMaxLines]: null,
        [S$.InputDecoration_errorStyle]: null,
        [S$.InputDecoration_errorText]: null,
        [S$.InputDecoration_hintMaxLines]: null,
        [S$.InputDecoration_hintTextDirection]: null,
        [S$.InputDecoration_hintStyle]: null,
        [S$.InputDecoration_hintText]: null,
        [S$.InputDecoration_helperMaxLines]: null,
        [S$.InputDecoration_helperStyle]: null,
        [S$.InputDecoration_helperText]: null,
        [S$.InputDecoration_floatingLabelStyle]: null,
        [S$.InputDecoration_labelStyle]: null,
        [S$.InputDecoration_labelText]: "enter your username",
        [S$.InputDecoration_label]: null,
        [S$.InputDecoration_iconColor]: null,
        [S$.InputDecoration_icon]: null
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [S$.InputDecoration_constraints]: null,
        [S$.InputDecoration_alignLabelWithHint]: null,
        [S$.InputDecoration_semanticCounterText]: null,
        [S$.InputDecoration_enabled]: true,
        [S$.InputDecoration_border]: C[34] || CT.C34,
        [S$.InputDecoration_enabledBorder]: null,
        [S$.InputDecoration_disabledBorder]: null,
        [S$.InputDecoration_focusedErrorBorder]: null,
        [S$.InputDecoration_focusedBorder]: null,
        [S$.InputDecoration_errorBorder]: null,
        [S$.InputDecoration_hoverColor]: null,
        [S$.InputDecoration_focusColor]: null,
        [S$.InputDecoration_fillColor]: null,
        [S$.InputDecoration_filled]: null,
        [S$.InputDecoration_counterStyle]: null,
        [S$.InputDecoration_counter]: null,
        [S$.InputDecoration_counterText]: null,
        [S$.InputDecoration_suffixIconConstraints]: null,
        [S$.InputDecoration_suffixIconColor]: null,
        [S$.InputDecoration_suffixStyle]: null,
        [S$.InputDecoration_suffixText]: null,
        [S$.InputDecoration_suffix]: null,
        [S$.InputDecoration_suffixIcon]: null,
        [S$.InputDecoration_prefixIconColor]: null,
        [S$.InputDecoration_prefixStyle]: null,
        [S$.InputDecoration_prefixText]: null,
        [S$.InputDecoration_prefix]: null,
        [S$.InputDecoration_prefixIconConstraints]: null,
        [S$.InputDecoration_prefixIcon]: null,
        [S$.InputDecoration_isCollapsed]: false,
        [S$.InputDecoration_contentPadding]: null,
        [S$.InputDecoration_isDense]: null,
        [S$.InputDecoration_floatingLabelAlignment]: null,
        [S$.InputDecoration_floatingLabelBehavior]: null,
        [S$.InputDecoration_errorMaxLines]: null,
        [S$.InputDecoration_errorStyle]: null,
        [S$.InputDecoration_errorText]: null,
        [S$.InputDecoration_hintMaxLines]: null,
        [S$.InputDecoration_hintTextDirection]: null,
        [S$.InputDecoration_hintStyle]: null,
        [S$.InputDecoration_hintText]: null,
        [S$.InputDecoration_helperMaxLines]: null,
        [S$.InputDecoration_helperStyle]: null,
        [S$.InputDecoration_helperText]: null,
        [S$.InputDecoration_floatingLabelStyle]: null,
        [S$.InputDecoration_labelStyle]: null,
        [S$.InputDecoration_labelText]: "enter your email",
        [S$.InputDecoration_label]: null,
        [S$.InputDecoration_iconColor]: null,
        [S$.InputDecoration_icon]: null
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [S$.InputDecoration_constraints]: null,
        [S$.InputDecoration_alignLabelWithHint]: null,
        [S$.InputDecoration_semanticCounterText]: null,
        [S$.InputDecoration_enabled]: true,
        [S$.InputDecoration_border]: C[34] || CT.C34,
        [S$.InputDecoration_enabledBorder]: null,
        [S$.InputDecoration_disabledBorder]: null,
        [S$.InputDecoration_focusedErrorBorder]: null,
        [S$.InputDecoration_focusedBorder]: null,
        [S$.InputDecoration_errorBorder]: null,
        [S$.InputDecoration_hoverColor]: null,
        [S$.InputDecoration_focusColor]: null,
        [S$.InputDecoration_fillColor]: null,
        [S$.InputDecoration_filled]: null,
        [S$.InputDecoration_counterStyle]: null,
        [S$.InputDecoration_counter]: null,
        [S$.InputDecoration_counterText]: null,
        [S$.InputDecoration_suffixIconConstraints]: null,
        [S$.InputDecoration_suffixIconColor]: null,
        [S$.InputDecoration_suffixStyle]: null,
        [S$.InputDecoration_suffixText]: null,
        [S$.InputDecoration_suffix]: null,
        [S$.InputDecoration_suffixIcon]: null,
        [S$.InputDecoration_prefixIconColor]: null,
        [S$.InputDecoration_prefixStyle]: null,
        [S$.InputDecoration_prefixText]: null,
        [S$.InputDecoration_prefix]: null,
        [S$.InputDecoration_prefixIconConstraints]: null,
        [S$.InputDecoration_prefixIcon]: null,
        [S$.InputDecoration_isCollapsed]: false,
        [S$.InputDecoration_contentPadding]: null,
        [S$.InputDecoration_isDense]: null,
        [S$.InputDecoration_floatingLabelAlignment]: null,
        [S$.InputDecoration_floatingLabelBehavior]: null,
        [S$.InputDecoration_errorMaxLines]: null,
        [S$.InputDecoration_errorStyle]: null,
        [S$.InputDecoration_errorText]: null,
        [S$.InputDecoration_hintMaxLines]: null,
        [S$.InputDecoration_hintTextDirection]: null,
        [S$.InputDecoration_hintStyle]: null,
        [S$.InputDecoration_hintText]: null,
        [S$.InputDecoration_helperMaxLines]: null,
        [S$.InputDecoration_helperStyle]: null,
        [S$.InputDecoration_helperText]: null,
        [S$.InputDecoration_floatingLabelStyle]: null,
        [S$.InputDecoration_labelStyle]: null,
        [S$.InputDecoration_labelText]: "enter your password",
        [S$.InputDecoration_label]: null,
        [S$.InputDecoration_iconColor]: null,
        [S$.InputDecoration_icon]: null
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [S$.InputDecoration_constraints]: null,
        [S$.InputDecoration_alignLabelWithHint]: null,
        [S$.InputDecoration_semanticCounterText]: null,
        [S$.InputDecoration_enabled]: true,
        [S$.InputDecoration_border]: C[34] || CT.C34,
        [S$.InputDecoration_enabledBorder]: null,
        [S$.InputDecoration_disabledBorder]: null,
        [S$.InputDecoration_focusedErrorBorder]: null,
        [S$.InputDecoration_focusedBorder]: null,
        [S$.InputDecoration_errorBorder]: null,
        [S$.InputDecoration_hoverColor]: null,
        [S$.InputDecoration_focusColor]: null,
        [S$.InputDecoration_fillColor]: null,
        [S$.InputDecoration_filled]: null,
        [S$.InputDecoration_counterStyle]: null,
        [S$.InputDecoration_counter]: null,
        [S$.InputDecoration_counterText]: null,
        [S$.InputDecoration_suffixIconConstraints]: null,
        [S$.InputDecoration_suffixIconColor]: null,
        [S$.InputDecoration_suffixStyle]: null,
        [S$.InputDecoration_suffixText]: null,
        [S$.InputDecoration_suffix]: null,
        [S$.InputDecoration_suffixIcon]: null,
        [S$.InputDecoration_prefixIconColor]: null,
        [S$.InputDecoration_prefixStyle]: null,
        [S$.InputDecoration_prefixText]: null,
        [S$.InputDecoration_prefix]: null,
        [S$.InputDecoration_prefixIconConstraints]: null,
        [S$.InputDecoration_prefixIcon]: null,
        [S$.InputDecoration_isCollapsed]: false,
        [S$.InputDecoration_contentPadding]: null,
        [S$.InputDecoration_isDense]: null,
        [S$.InputDecoration_floatingLabelAlignment]: null,
        [S$.InputDecoration_floatingLabelBehavior]: null,
        [S$.InputDecoration_errorMaxLines]: null,
        [S$.InputDecoration_errorStyle]: null,
        [S$.InputDecoration_errorText]: null,
        [S$.InputDecoration_hintMaxLines]: null,
        [S$.InputDecoration_hintTextDirection]: null,
        [S$.InputDecoration_hintStyle]: null,
        [S$.InputDecoration_hintText]: null,
        [S$.InputDecoration_helperMaxLines]: null,
        [S$.InputDecoration_helperStyle]: null,
        [S$.InputDecoration_helperText]: null,
        [S$.InputDecoration_floatingLabelStyle]: null,
        [S$.InputDecoration_labelStyle]: null,
        [S$.InputDecoration_labelText]: "enter your bio",
        [S$.InputDecoration_label]: null,
        [S$.InputDecoration_iconColor]: null,
        [S$.InputDecoration_icon]: null
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: C[42] || CT.C42,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Signup"
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [S$.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$.SizedBox_height]: 12,
        [S$.SizedBox_width]: null
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: C[47] || CT.C47,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "already have an account?"
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: C[50] || CT.C50,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: " Signin"
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: messages$46pigeon$0.ServerTimestampBehavior.prototype,
        [S$._Enum__name]: "estimate",
        [S$._Enum_index]: 1
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: messages$46pigeon$0.ServerTimestampBehavior.prototype,
        [S$._Enum__name]: "previous",
        [S$._Enum_index]: 2
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: messages$46pigeon$0.Source.prototype,
        [S$._Enum__name]: "cache",
        [S$._Enum_index]: 2
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: messages$46pigeon$0.Source.prototype,
        [S$._Enum__name]: "server",
        [S$._Enum_index]: 1
      });
    },
    get C114() {
      return C[114] = dart.const(new _js_helper.PrivateSymbol.new('_pointer', S$._pointer));
    },
    get C115() {
      return C[115] = dart.fn(utils$1.jsify, T$.ObjectNTodynamic());
    },
    get C116() {
      return C[116] = dart.fn(firestore$.DocumentSnapshot.getInstance, T$.DocumentSnapshotJsImplToDocumentSnapshot());
    },
    get C117() {
      return C[117] = dart.fn(firestore$.QuerySnapshot.getInstance, T$.QuerySnapshotJsImplToQuerySnapshot());
    },
    get C118() {
      return C[118] = dart.fn(firestore$.DocumentReference.getInstance, T$.DocumentReferenceJsImplToDocumentReference());
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: messages$46pigeon$0.AggregateType.prototype,
        [S$._Enum__name]: "count",
        [S$._Enum_index]: 0
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: messages$46pigeon$0.AggregateType.prototype,
        [S$._Enum__name]: "sum",
        [S$._Enum_index]: 1
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: messages$46pigeon$0.AggregateType.prototype,
        [S$._Enum__name]: "average",
        [S$._Enum_index]: 2
      });
    },
    get C122() {
      return C[122] = dart.fn(firestore$.AggregateQuerySnapshot.getInstance, T$.AggregateQuerySnapshotJsImplToAggregateQuerySnapshot());
    },
    get C123() {
      return C[123] = dart.fn(web_utils$.fromInteropMultiFactorInfo, T$.MultiFactorInfoOfMultiFactorInfoJsImplToMultiFactorInfo());
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype,
        [S$._Enum__name]: "compact",
        [S$._Enum_index]: 1
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype,
        [S$._Enum__name]: "dark",
        [S$._Enum_index]: 1
      });
    },
    get C126() {
      return C[126] = dart.fn(auth$.UserCredential['_#fromJsObject#tearOff'], T$.UserCredentialJsImplToUserCredential());
    },
    get C127() {
      return C[127] = dart.fn(auth$.ConfirmationResult['_#fromJsObject#tearOff'], T$.ConfirmationResultJsImplToConfirmationResult());
    },
    get C128() {
      return C[128] = dart.fn(auth$.IdTokenResult['_#_fromJsObject#tearOff'], T$.IdTokenResultImplToIdTokenResult());
    },
    get C130() {
      return C[130] = dart.fn(core.List['_#from#tearOff'], T$.Iterable__ToListOfE());
    },
    get C129() {
      return C[129] = dart.const(dart.gbind(C[130] || CT.C130, core.String));
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "LOCAL",
        [S$._Enum_index]: 0
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "INDEXED_DB",
        [S$._Enum_index]: 1
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "SESSION",
        [S$._Enum_index]: 3
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: types.Persistence.prototype,
        [S$._Enum__name]: "NONE",
        [S$._Enum_index]: 2
      });
    },
    get C135() {
      return C[135] = dart.fn(multi_factor.fromJsMultiFactorInfo, T$.MultiFactorInfoJsImplToMultiFactorInfoOfMultiFactorInfoJsImpl());
    },
    get C136() {
      return C[136] = dart.fn(multi_factor.MultiFactorSession['_#fromJsObject#tearOff'], T$.MultiFactorSessionJsImplToMultiFactorSession());
    },
    get C137() {
      return C[137] = dart.fn(multi_factor.TotpSecret['_#fromJsObject#tearOff'], T$.TotpSecretJsImplToTotpSecret());
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: core.Duration.prototype,
        [S$.Duration__duration]: 600000000
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: core.Duration.prototype,
        [S$.Duration__duration]: 120000000
      });
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "unknown",
        [S$._Enum_index]: 0
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "passwordReset",
        [S$._Enum_index]: 1
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "verifyEmail",
        [S$._Enum_index]: 2
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "recoverEmail",
        [S$._Enum_index]: 3
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "emailSignIn",
        [S$._Enum_index]: 4
      });
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "verifyAndChangeEmail",
        [S$._Enum_index]: 5
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: messages$46pigeon.ActionCodeInfoOperation.prototype,
        [S$._Enum__name]: "revertSecondFactorAddition",
        [S$._Enum_index]: 6
      });
    },
    get C140() {
      return C[140] = dart.constList([C[141] || CT.C141, C[142] || CT.C142, C[143] || CT.C143, C[144] || CT.C144, C[145] || CT.C145, C[146] || CT.C146, C[147] || CT.C147], messages$46pigeon.ActionCodeInfoOperation);
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: messages$46pigeon._FirebaseAuthHostApiCodec.prototype
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: messages$46pigeon._FirebaseAuthUserHostApiCodec.prototype
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: messages$46pigeon._MultiFactorUserHostApiCodec.prototype
      });
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: messages$46pigeon._MultiFactoResolverHostApiCodec.prototype
      });
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: messages$46pigeon._MultiFactorTotpHostApiCodec.prototype
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: messages$46pigeon._GenerateInterfacesCodec.prototype
      });
    },
    get C155() {
      return C[155] = dart.constList([C[11] || CT.C11, C[124] || CT.C124], platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
    },
    get C156() {
      return C[156] = dart.constList([C[12] || CT.C12, C[125] || CT.C125], platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
    },
    get C157() {
      return C[157] = dart.constList([C[131] || CT.C131, C[132] || CT.C132, C[134] || CT.C134, C[133] || CT.C133], types.Persistence);
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: messages$46pigeon$._FirebaseCoreHostApiCodec.prototype
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: test_api._TestFirebaseCoreHostApiCodec.prototype
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: messages$46pigeon$0.AggregateSource.prototype,
        [S$._Enum__name]: "server",
        [S$._Enum_index]: 0
      });
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: equality.ListEquality.prototype,
        [S$0.ListEquality__elementEquality]: C[68] || CT.C68
      });
    },
    get C162() {
      return C[162] = dart.fn(cloud_firestore._CodecUtility.valueEncode, T$.dynamicTodynamic());
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: uuid.Uuid.prototype,
        [S$0.Uuid_goptions]: null
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: null,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Create a Post"
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 20,
        [S$.EdgeInsets_right]: 20,
        [S$.EdgeInsets_top]: 20,
        [S$.EdgeInsets_left]: 20
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: null,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Take a photo"
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: C[19] || CT.C19,
        [S$.TextStyle_fontSize]: 20,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: C[20] || CT.C20,
        [S$.TextStyle_inherit]: true
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: C[168] || CT.C168,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Choose from Gallery"
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: null,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Cancel"
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S$.IconData_matchTextDirection]: false,
        [S$.IconData_fontPackage]: null,
        [S$.IconData_fontFamily]: "MaterialIcons",
        [S$.IconData_codePoint]: 59029
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: null,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: null,
        [S$.Icon_icon]: C[171] || CT.C171
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S$.IconData_matchTextDirection]: true,
        [S$.IconData_fontPackage]: null,
        [S$.IconData_fontFamily]: "MaterialIcons",
        [S$.IconData_codePoint]: 57490
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: null,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: null,
        [S$.Icon_icon]: C[173] || CT.C173
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: null,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Post to"
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [S$.FontWeight_value]: 700,
        [S$.FontWeight_index]: 6
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4286755327
      });
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4282682111
      });
    },
    get C182() {
      return C[182] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4280908287
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4280902399
      });
    },
    get C179() {
      return C[179] = dart.constMap(core.int, ui.Color, [100, C[180] || CT.C180, 200, C[181] || CT.C181, 400, C[182] || CT.C182, 700, C[183] || CT.C183]);
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: colors.MaterialAccentColor.prototype,
        [S$.Color_value]: 4282682111,
        [S$.ColorSwatch__swatch]: C[179] || CT.C179
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: C[177] || CT.C177,
        [S$.TextStyle_fontSize]: 16,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: C[178] || CT.C178,
        [S$.TextStyle_inherit]: true
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: C[176] || CT.C176,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Post"
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: progress_indicator.LinearProgressIndicator.prototype,
        [S$.Widget_key]: null,
        [S$.ProgressIndicator_semanticsValue]: null,
        [S$.ProgressIndicator_semanticsLabel]: null,
        [S$.ProgressIndicator_valueColor]: null,
        [S$.ProgressIndicator_color]: null,
        [S$.ProgressIndicator_backgroundColor]: null,
        [S$.ProgressIndicator_value]: null,
        [S$0.LinearProgressIndicator_minHeight]: null
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 0,
        [S$.EdgeInsets_left]: 0
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: basic.Padding.prototype,
        [S$.Widget_key]: null,
        [S$.SingleChildRenderObjectWidget_child]: null,
        [S$0.Padding_padding]: C[186] || CT.C186
      });
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: divider.Divider.prototype,
        [S$.Widget_key]: null,
        [S$0.Divider_color]: null,
        [S$0.Divider_endIndent]: null,
        [S$0.Divider_indent]: null,
        [S$0.Divider_thickness]: null,
        [S$0.Divider_height]: null
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: borders.BorderStyle.prototype,
        [S$._Enum__name]: "none",
        [S$._Enum_index]: 0
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: borders.BorderSide.prototype,
        [S$.BorderSide_strokeAlign]: -1,
        [S$.BorderSide_style]: C[191] || CT.C191,
        [S$.BorderSide_width]: 0,
        [S$.BorderSide_color]: C[37] || CT.C37
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: input_border._NoInputBorder.prototype,
        [S$.InputBorder_borderSide]: C[190] || CT.C190
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [S$.InputDecoration_constraints]: null,
        [S$.InputDecoration_alignLabelWithHint]: null,
        [S$.InputDecoration_semanticCounterText]: null,
        [S$.InputDecoration_enabled]: true,
        [S$.InputDecoration_border]: C[189] || CT.C189,
        [S$.InputDecoration_enabledBorder]: null,
        [S$.InputDecoration_disabledBorder]: null,
        [S$.InputDecoration_focusedErrorBorder]: null,
        [S$.InputDecoration_focusedBorder]: null,
        [S$.InputDecoration_errorBorder]: null,
        [S$.InputDecoration_hoverColor]: null,
        [S$.InputDecoration_focusColor]: null,
        [S$.InputDecoration_fillColor]: null,
        [S$.InputDecoration_filled]: null,
        [S$.InputDecoration_counterStyle]: null,
        [S$.InputDecoration_counter]: null,
        [S$.InputDecoration_counterText]: null,
        [S$.InputDecoration_suffixIconConstraints]: null,
        [S$.InputDecoration_suffixIconColor]: null,
        [S$.InputDecoration_suffixStyle]: null,
        [S$.InputDecoration_suffixText]: null,
        [S$.InputDecoration_suffix]: null,
        [S$.InputDecoration_suffixIcon]: null,
        [S$.InputDecoration_prefixIconColor]: null,
        [S$.InputDecoration_prefixStyle]: null,
        [S$.InputDecoration_prefixText]: null,
        [S$.InputDecoration_prefix]: null,
        [S$.InputDecoration_prefixIconConstraints]: null,
        [S$.InputDecoration_prefixIcon]: null,
        [S$.InputDecoration_isCollapsed]: false,
        [S$.InputDecoration_contentPadding]: null,
        [S$.InputDecoration_isDense]: null,
        [S$.InputDecoration_floatingLabelAlignment]: null,
        [S$.InputDecoration_floatingLabelBehavior]: null,
        [S$.InputDecoration_errorMaxLines]: null,
        [S$.InputDecoration_errorStyle]: null,
        [S$.InputDecoration_errorText]: null,
        [S$.InputDecoration_hintMaxLines]: null,
        [S$.InputDecoration_hintTextDirection]: null,
        [S$.InputDecoration_hintStyle]: null,
        [S$.InputDecoration_hintText]: "Write a caption...",
        [S$.InputDecoration_helperMaxLines]: null,
        [S$.InputDecoration_helperStyle]: null,
        [S$.InputDecoration_helperText]: null,
        [S$.InputDecoration_floatingLabelStyle]: null,
        [S$.InputDecoration_labelStyle]: null,
        [S$.InputDecoration_labelText]: null,
        [S$.InputDecoration_label]: null,
        [S$.InputDecoration_iconColor]: null,
        [S$.InputDecoration_icon]: null
      });
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: C[19] || CT.C19,
        [S$.TextStyle_fontSize]: 25,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: C[45] || CT.C45,
        [S$.TextStyle_inherit]: true
      });
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: C[193] || CT.C193,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Design Gallery"
      });
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S$.IconData_matchTextDirection]: false,
        [S$.IconData_fontPackage]: null,
        [S$.IconData_fontFamily]: "MaterialIcons",
        [S$.IconData_codePoint]: 57685
      });
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: C[45] || CT.C45,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: null,
        [S$.Icon_icon]: C[195] || CT.C195
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 16,
        [S$.EdgeInsets_right]: 16,
        [S$.EdgeInsets_top]: 16,
        [S$.EdgeInsets_left]: 16
      });
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 15,
        [S$.EdgeInsets_left]: 0
      });
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: C[177] || CT.C177,
        [S$.TextStyle_fontSize]: null,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: null,
        [S$.TextStyle_inherit]: true
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 1,
        [S$.EdgeInsets_left]: 0
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: sliver_grid.SliverGridDelegateWithFixedCrossAxisCount.prototype,
        [S$0.SliverGridDelegateWithFixedCrossAxisCount_mainAxisExtent]: null,
        [S$0.SliverGridDelegateWithFixedCrossAxisCount_childAspectRatio]: 1,
        [S$0.SliverGridDelegateWithFixedCrossAxisCount_crossAxisSpacing]: 5,
        [S$0.SliverGridDelegateWithFixedCrossAxisCount_mainAxisSpacing]: 1.5,
        [S$0.SliverGridDelegateWithFixedCrossAxisCount_crossAxisCount]: 3
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: C[177] || CT.C177,
        [S$.TextStyle_fontSize]: 18,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: null,
        [S$.TextStyle_inherit]: true
      });
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 4,
        [S$.EdgeInsets_left]: 0
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: C[43] || CT.C43,
        [S$.TextStyle_fontSize]: 15,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: C[77] || CT.C77,
        [S$.TextStyle_inherit]: true
      });
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: null,
        [S$.TextStyle_fontSize]: null,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: C[45] || CT.C45,
        [S$.TextStyle_inherit]: true
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: input_decorator.InputDecoration.prototype,
        [S$.InputDecoration_constraints]: null,
        [S$.InputDecoration_alignLabelWithHint]: null,
        [S$.InputDecoration_semanticCounterText]: null,
        [S$.InputDecoration_enabled]: true,
        [S$.InputDecoration_border]: null,
        [S$.InputDecoration_enabledBorder]: null,
        [S$.InputDecoration_disabledBorder]: null,
        [S$.InputDecoration_focusedErrorBorder]: null,
        [S$.InputDecoration_focusedBorder]: null,
        [S$.InputDecoration_errorBorder]: null,
        [S$.InputDecoration_hoverColor]: null,
        [S$.InputDecoration_focusColor]: null,
        [S$.InputDecoration_fillColor]: null,
        [S$.InputDecoration_filled]: null,
        [S$.InputDecoration_counterStyle]: null,
        [S$.InputDecoration_counter]: null,
        [S$.InputDecoration_counterText]: null,
        [S$.InputDecoration_suffixIconConstraints]: null,
        [S$.InputDecoration_suffixIconColor]: null,
        [S$.InputDecoration_suffixStyle]: null,
        [S$.InputDecoration_suffixText]: null,
        [S$.InputDecoration_suffix]: null,
        [S$.InputDecoration_suffixIcon]: null,
        [S$.InputDecoration_prefixIconColor]: null,
        [S$.InputDecoration_prefixStyle]: null,
        [S$.InputDecoration_prefixText]: null,
        [S$.InputDecoration_prefix]: null,
        [S$.InputDecoration_prefixIconConstraints]: null,
        [S$.InputDecoration_prefixIcon]: null,
        [S$.InputDecoration_isCollapsed]: false,
        [S$.InputDecoration_contentPadding]: null,
        [S$.InputDecoration_isDense]: null,
        [S$.InputDecoration_floatingLabelAlignment]: null,
        [S$.InputDecoration_floatingLabelBehavior]: null,
        [S$.InputDecoration_errorMaxLines]: null,
        [S$.InputDecoration_errorStyle]: null,
        [S$.InputDecoration_errorText]: null,
        [S$.InputDecoration_hintMaxLines]: null,
        [S$.InputDecoration_hintTextDirection]: null,
        [S$.InputDecoration_hintStyle]: C[205] || CT.C205,
        [S$.InputDecoration_hintText]: null,
        [S$.InputDecoration_helperMaxLines]: null,
        [S$.InputDecoration_helperStyle]: null,
        [S$.InputDecoration_helperText]: null,
        [S$.InputDecoration_floatingLabelStyle]: null,
        [S$.InputDecoration_labelStyle]: C[205] || CT.C205,
        [S$.InputDecoration_labelText]: "Search for a user...",
        [S$.InputDecoration_label]: null,
        [S$.InputDecoration_iconColor]: null,
        [S$.InputDecoration_icon]: null
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: messages$46pigeon$0.DocumentChangeType.prototype,
        [S$._Enum__name]: "added",
        [S$._Enum_index]: 0
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: messages$46pigeon$0.DocumentChangeType.prototype,
        [S$._Enum__name]: "modified",
        [S$._Enum_index]: 1
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: messages$46pigeon$0.DocumentChangeType.prototype,
        [S$._Enum__name]: "removed",
        [S$._Enum_index]: 2
      });
    },
    get C206() {
      return C[206] = dart.constList([C[207] || CT.C207, C[208] || CT.C208, C[209] || CT.C209], messages$46pigeon$0.DocumentChangeType);
    },
    get C210() {
      return C[210] = dart.constList([C[54] || CT.C54, C[113] || CT.C113, C[112] || CT.C112], messages$46pigeon$0.Source);
    },
    get C211() {
      return C[211] = dart.constList([C[53] || CT.C53, C[110] || CT.C110, C[111] || CT.C111], messages$46pigeon$0.ServerTimestampBehavior);
    },
    get C212() {
      return C[212] = dart.constList([C[160] || CT.C160], messages$46pigeon$0.AggregateSource);
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: messages$46pigeon$0.PigeonTransactionResult.prototype,
        [S$._Enum__name]: "success",
        [S$._Enum_index]: 0
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: messages$46pigeon$0.PigeonTransactionResult.prototype,
        [S$._Enum__name]: "failure",
        [S$._Enum_index]: 1
      });
    },
    get C213() {
      return C[213] = dart.constList([C[214] || CT.C214, C[215] || CT.C215], messages$46pigeon$0.PigeonTransactionResult);
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: messages$46pigeon$0.PigeonTransactionType.prototype,
        [S$._Enum__name]: "get",
        [S$._Enum_index]: 0
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: messages$46pigeon$0.PigeonTransactionType.prototype,
        [S$._Enum__name]: "update",
        [S$._Enum_index]: 1
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: messages$46pigeon$0.PigeonTransactionType.prototype,
        [S$._Enum__name]: "set",
        [S$._Enum_index]: 2
      });
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: messages$46pigeon$0.PigeonTransactionType.prototype,
        [S$._Enum__name]: "deleteType",
        [S$._Enum_index]: 3
      });
    },
    get C216() {
      return C[216] = dart.constList([C[217] || CT.C217, C[218] || CT.C218, C[219] || CT.C219, C[220] || CT.C220], messages$46pigeon$0.PigeonTransactionType);
    },
    get C221() {
      return C[221] = dart.constList([C[119] || CT.C119, C[120] || CT.C120, C[121] || CT.C121], messages$46pigeon$0.AggregateType);
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "arrayUnion",
        [S$._Enum_index]: 0
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "arrayRemove",
        [S$._Enum_index]: 1
      });
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "delete",
        [S$._Enum_index]: 2
      });
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "serverTimestamp",
        [S$._Enum_index]: 3
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "incrementDouble",
        [S$._Enum_index]: 4
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: method_channel_field_value.FieldValueType.prototype,
        [S$._Enum__name]: "incrementInteger",
        [S$._Enum_index]: 5
      });
    },
    get C222() {
      return C[222] = dart.constMap(method_channel_field_value.FieldValueType, core.int, [C[223] || CT.C223, 184, C[224] || CT.C224, 185, C[225] || CT.C225, 186, C[226] || CT.C226, 187, C[227] || CT.C227, 189, C[228] || CT.C228, 190]);
    },
    get C230() {
      return C[230] = dart.const({
        __proto__: field_path_type.FieldPathType.prototype,
        [S$._Enum__name]: "documentId",
        [S$._Enum_index]: 0
      });
    },
    get C229() {
      return C[229] = dart.constMap(field_path_type.FieldPathType, core.int, [C[230] || CT.C230, 191]);
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: messages$46pigeon$0._FirebaseFirestoreHostApiCodec.prototype
      });
    },
    get C232() {
      return C[232] = dart.constList([C[230] || CT.C230], field_path_type.FieldPathType);
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: load_bundle_task_state.LoadBundleTaskState.prototype,
        [S$._Enum__name]: "running",
        [S$._Enum_index]: 0
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: load_bundle_task_state.LoadBundleTaskState.prototype,
        [S$._Enum__name]: "success",
        [S$._Enum_index]: 1
      });
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: load_bundle_task_state.LoadBundleTaskState.prototype,
        [S$._Enum__name]: "error",
        [S$._Enum_index]: 2
      });
    },
    get C233() {
      return C[233] = dart.constList([C[234] || CT.C234, C[235] || CT.C235, C[236] || CT.C236], load_bundle_task_state.LoadBundleTaskState);
    },
    get C238() {
      return C[238] = dart.const({
        __proto__: platform_interface_index_definitions.Order.prototype,
        [S$._Enum__name]: "ascending",
        [S$._Enum_index]: 0
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: platform_interface_index_definitions.Order.prototype,
        [S$._Enum__name]: "descending",
        [S$._Enum_index]: 1
      });
    },
    get C237() {
      return C[237] = dart.constList([C[238] || CT.C238, C[239] || CT.C239], platform_interface_index_definitions.Order);
    },
    get C241() {
      return C[241] = dart.const({
        __proto__: platform_interface_index_definitions.ArrayConfig.prototype,
        [S$._Enum__name]: "contains",
        [S$._Enum_index]: 0
      });
    },
    get C240() {
      return C[240] = dart.constList([C[241] || CT.C241], platform_interface_index_definitions.ArrayConfig);
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: platform_interface_index_definitions.QueryScope.prototype,
        [S$._Enum__name]: "collection",
        [S$._Enum_index]: 0
      });
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: platform_interface_index_definitions.QueryScope.prototype,
        [S$._Enum__name]: "collectionGroup",
        [S$._Enum_index]: 1
      });
    },
    get C242() {
      return C[242] = dart.constList([C[243] || CT.C243, C[244] || CT.C244], platform_interface_index_definitions.QueryScope);
    },
    get C245() {
      return C[245] = dart.fn(_flutterfire_internals._testException, T$.ObjectNTobool());
    },
    get C246() {
      return C[246] = dart.fn(encode_utility.EncodeUtility.valueEncode, T$.dynamicTodynamic());
    },
    get C247() {
      return C[247] = dart.constList([C[55] || CT.C55, C[59] || CT.C59, C[57] || CT.C57, C[58] || CT.C58, C[56] || CT.C56, C[60] || CT.C60], file_picker$.FileType);
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: file_picker$.FilePickerStatus.prototype,
        [S$._Enum__name]: "picking",
        [S$._Enum_index]: 0
      });
    },
    get C250() {
      return C[250] = dart.const({
        __proto__: file_picker$.FilePickerStatus.prototype,
        [S$._Enum__name]: "done",
        [S$._Enum_index]: 1
      });
    },
    get C248() {
      return C[248] = dart.constList([C[249] || CT.C249, C[250] || CT.C250], file_picker$.FilePickerStatus);
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: storage.TaskState.prototype,
        [S$._Enum__name]: "RUNNING",
        [S$._Enum_index]: 0
      });
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: storage.TaskState.prototype,
        [S$._Enum__name]: "PAUSED",
        [S$._Enum_index]: 1
      });
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: storage.TaskState.prototype,
        [S$._Enum__name]: "SUCCESS",
        [S$._Enum_index]: 2
      });
    },
    get C255() {
      return C[255] = dart.const({
        __proto__: storage.TaskState.prototype,
        [S$._Enum__name]: "CANCELED",
        [S$._Enum_index]: 3
      });
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: storage.TaskState.prototype,
        [S$._Enum__name]: "ERROR",
        [S$._Enum_index]: 4
      });
    },
    get C251() {
      return C[251] = dart.constList([C[252] || CT.C252, C[253] || CT.C253, C[254] || CT.C254, C[255] || CT.C255, C[256] || CT.C256], storage.TaskState);
    },
    get C257() {
      return C[257] = dart.fn(storage.FullMetadata.getInstance, T$.FullMetadataJsImplToFullMetadata());
    },
    get C258() {
      return C[258] = dart.fn(storage.ListResult.getInstance, T$.ListResultJsImplToListResult());
    },
    get C259() {
      return C[259] = dart.fn(storage.UploadTaskSnapshot.getInstance, T$.UploadTaskSnapshotJsImplToUploadTaskSnapshot());
    },
    get C260() {
      return C[260] = dart.fn(http.readBytes, T$.Uri__ToFutureOfUint8List());
    },
    get C261() {
      return C[261] = dart.fn(exception$0.convertPlatformException, T$.ObjectAndStackTrace__ToNever());
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: T$._ValueWrapperOfUserPlatform().prototype,
        [S$0._ValueWrapper_value]: null
      });
    },
    get C264() {
      return C[264] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [S$0.StandardMethodCodec_messageCodec]: C[153] || CT.C153
      });
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [S$0.MethodChannel__binaryMessenger]: null,
        [S$0.MethodChannel_codec]: C[264] || CT.C264,
        [S$0.MethodChannel_name]: "plugins.flutter.io/firebase_auth"
      });
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: put_string_format.PutStringFormat.prototype,
        [S$._Enum__name]: "raw",
        [S$._Enum_index]: 0
      });
    },
    get C266() {
      return C[266] = dart.const({
        __proto__: enums.ValidationMode.prototype,
        [S$._Enum__name]: "strictRFC4122",
        [S$._Enum_index]: 1
      });
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 10,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 10,
        [S$.EdgeInsets_left]: 0
      });
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 4,
        [S$.EdgeInsets_right]: 16,
        [S$.EdgeInsets_top]: 4,
        [S$.EdgeInsets_left]: 16
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 0,
        [S$.EdgeInsets_left]: 8
      });
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 16,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 16,
        [S$.EdgeInsets_left]: 0
      });
    },
    get C271() {
      return C[271] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 12,
        [S$.EdgeInsets_right]: 16,
        [S$.EdgeInsets_top]: 12,
        [S$.EdgeInsets_left]: 16
      });
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S$.IconData_matchTextDirection]: false,
        [S$.IconData_fontPackage]: null,
        [S$.IconData_fontFamily]: "MaterialIcons",
        [S$.IconData_codePoint]: 58372
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: null,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: null,
        [S$.Icon_icon]: C[273] || CT.C273
      });
    },
    get C274() {
      return C[274] = dart.const({
        __proto__: core.Duration.prototype,
        [S$.Duration__duration]: 200000
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: core.Duration.prototype,
        [S$.Duration__duration]: 400000
      });
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S$.IconData_matchTextDirection]: false,
        [S$.IconData_fontPackage]: null,
        [S$.IconData_fontFamily]: "MaterialIcons",
        [S$.IconData_codePoint]: 57947
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: C[45] || CT.C45,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: 100,
        [S$.Icon_icon]: C[277] || CT.C277
      });
    },
    get C281() {
      return C[281] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4294962158
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4294954450
      });
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4293892762
      });
    },
    get C284() {
      return C[284] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4293227379
      });
    },
    get C285() {
      return C[285] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4293874512
      });
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4294198070
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4293212469
      });
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4292030255
      });
    },
    get C289() {
      return C[289] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4291176488
      });
    },
    get C290() {
      return C[290] = dart.const({
        __proto__: ui.Color.prototype,
        [S$.Color_value]: 4290190364
      });
    },
    get C280() {
      return C[280] = dart.constMap(core.int, ui.Color, [50, C[281] || CT.C281, 100, C[282] || CT.C282, 200, C[283] || CT.C283, 300, C[284] || CT.C284, 400, C[285] || CT.C285, 500, C[286] || CT.C286, 600, C[287] || CT.C287, 700, C[288] || CT.C288, 800, C[289] || CT.C289, 900, C[290] || CT.C290]);
    },
    get C279() {
      return C[279] = dart.const({
        __proto__: colors.MaterialColor.prototype,
        [S$.Color_value]: 4294198070,
        [S$.ColorSwatch__swatch]: C[280] || CT.C280
      });
    },
    get C278() {
      return C[278] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: C[279] || CT.C279,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: null,
        [S$.Icon_icon]: C[277] || CT.C277
      });
    },
    get C292() {
      return C[292] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S$.IconData_matchTextDirection]: false,
        [S$.IconData_fontPackage]: null,
        [S$.IconData_fontFamily]: "MaterialIcons",
        [S$.IconData_codePoint]: 57948
      });
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: null,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: null,
        [S$.Icon_icon]: C[292] || CT.C292
      });
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S$.IconData_matchTextDirection]: false,
        [S$.IconData_fontPackage]: null,
        [S$.IconData_fontFamily]: "MaterialIcons",
        [S$.IconData_codePoint]: 61294
      });
    },
    get C293() {
      return C[293] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: null,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: null,
        [S$.Icon_icon]: C[294] || CT.C294
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S$.IconData_matchTextDirection]: true,
        [S$.IconData_fontPackage]: null,
        [S$.IconData_fontFamily]: "MaterialIcons",
        [S$.IconData_codePoint]: 58737
      });
    },
    get C295() {
      return C[295] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: null,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: null,
        [S$.Icon_icon]: C[296] || CT.C296
      });
    },
    get C298() {
      return C[298] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [S$.IconData_matchTextDirection]: false,
        [S$.IconData_fontPackage]: null,
        [S$.IconData_fontFamily]: "MaterialIcons",
        [S$.IconData_codePoint]: 57588
      });
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: null,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: null,
        [S$.Icon_icon]: C[298] || CT.C298
      });
    },
    get C299() {
      return C[299] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 16,
        [S$.EdgeInsets_top]: 0,
        [S$.EdgeInsets_left]: 16
      });
    },
    get C300() {
      return C[300] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 8,
        [S$.EdgeInsets_left]: 0
      });
    },
    get C301() {
      return C[301] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 4,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 4,
        [S$.EdgeInsets_left]: 0
      });
    },
    get C302() {
      return C[302] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: null,
        [S$.TextStyle_fontSize]: 16,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: C[77] || CT.C77,
        [S$.TextStyle_inherit]: true
      });
    },
    get C303() {
      return C[303] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: null,
        [S$.TextStyle_fontSize]: null,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: C[77] || CT.C77,
        [S$.TextStyle_inherit]: true
      });
    },
    get C304() {
      return C[304] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 10,
        [S$.EdgeInsets_left]: 0
      });
    },
    get C306() {
      return C[306] = dart.const({
        __proto__: firestore_message_codec.FirestoreMessageCodec.prototype
      });
    },
    get C305() {
      return C[305] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [S$0.StandardMethodCodec_messageCodec]: C[306] || CT.C306
      });
    },
    get C307() {
      return C[307] = dart.fn(exception.convertPlatformException, T$.ObjectAndStackTraceToNever());
    },
    get C308() {
      return C[308] = dart.const({
        __proto__: message_codecs.JSONMethodCodec.prototype
      });
    },
    get C309() {
      return C[309] = dart.const({
        __proto__: platform_channel.EventChannel.prototype,
        [S$0.EventChannel__binaryMessenger]: null,
        [S$0.EventChannel_codec]: C[264] || CT.C264,
        [S$0.EventChannel_name]: "miguelruivo.flutter.plugins.filepickerevent"
      });
    },
    get C310() {
      return C[310] = dart.const({
        __proto__: chunked_coding.ChunkedCodingCodec.prototype
      });
    },
    get C311() {
      return C[311] = dart.constList(["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"], core.String);
    },
    get C312() {
      return C[312] = dart.constList(["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], core.String);
    },
    get C314() {
      return C[314] = dart.const({
        __proto__: put_string_format.PutStringFormat.prototype,
        [S$._Enum__name]: "base64",
        [S$._Enum_index]: 1
      });
    },
    get C315() {
      return C[315] = dart.const({
        __proto__: put_string_format.PutStringFormat.prototype,
        [S$._Enum__name]: "base64Url",
        [S$._Enum_index]: 2
      });
    },
    get C316() {
      return C[316] = dart.const({
        __proto__: put_string_format.PutStringFormat.prototype,
        [S$._Enum__name]: "dataUrl",
        [S$._Enum_index]: 3
      });
    },
    get C313() {
      return C[313] = dart.constList([C[265] || CT.C265, C[314] || CT.C314, C[315] || CT.C315, C[316] || CT.C316], put_string_format.PutStringFormat);
    },
    get C318() {
      return C[318] = dart.const({
        __proto__: task_state.TaskState.prototype,
        [S$._Enum__name]: "paused",
        [S$._Enum_index]: 0
      });
    },
    get C319() {
      return C[319] = dart.const({
        __proto__: task_state.TaskState.prototype,
        [S$._Enum__name]: "running",
        [S$._Enum_index]: 1
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: task_state.TaskState.prototype,
        [S$._Enum__name]: "success",
        [S$._Enum_index]: 2
      });
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: task_state.TaskState.prototype,
        [S$._Enum__name]: "canceled",
        [S$._Enum_index]: 3
      });
    },
    get C322() {
      return C[322] = dart.const({
        __proto__: task_state.TaskState.prototype,
        [S$._Enum__name]: "error",
        [S$._Enum_index]: 4
      });
    },
    get C317() {
      return C[317] = dart.constList([C[318] || CT.C318, C[319] || CT.C319, C[320] || CT.C320, C[321] || CT.C321, C[322] || CT.C322], task_state.TaskState);
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [S$0.MethodChannel__binaryMessenger]: null,
        [S$0.MethodChannel_codec]: C[264] || CT.C264,
        [S$0.MethodChannel_name]: "plugins.flutter.io/image_picker"
      });
    },
    get C325() {
      return C[325] = dart.const({
        __proto__: camera_device.CameraDevice.prototype,
        [S$._Enum__name]: "front",
        [S$._Enum_index]: 1
      });
    },
    get C324() {
      return C[324] = dart.constList([C[64] || CT.C64, C[325] || CT.C325], camera_device.CameraDevice);
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: image_source.ImageSource.prototype,
        [S$._Enum__name]: "camera",
        [S$._Enum_index]: 0
      });
    },
    get C328() {
      return C[328] = dart.const({
        __proto__: image_source.ImageSource.prototype,
        [S$._Enum__name]: "gallery",
        [S$._Enum_index]: 1
      });
    },
    get C326() {
      return C[326] = dart.constList([C[327] || CT.C327, C[328] || CT.C328], image_source.ImageSource);
    },
    get C330() {
      return C[330] = dart.const({
        __proto__: media_selection_type.MediaSelectionType.prototype,
        [S$._Enum__name]: "image",
        [S$._Enum_index]: 0
      });
    },
    get C331() {
      return C[331] = dart.const({
        __proto__: media_selection_type.MediaSelectionType.prototype,
        [S$._Enum__name]: "video",
        [S$._Enum_index]: 1
      });
    },
    get C329() {
      return C[329] = dart.constList([C[330] || CT.C330, C[331] || CT.C331], media_selection_type.MediaSelectionType);
    },
    get C333() {
      return C[333] = dart.const({
        __proto__: retrieve_type.RetrieveType.prototype,
        [S$._Enum__name]: "image",
        [S$._Enum_index]: 0
      });
    },
    get C334() {
      return C[334] = dart.const({
        __proto__: retrieve_type.RetrieveType.prototype,
        [S$._Enum__name]: "video",
        [S$._Enum_index]: 1
      });
    },
    get C335() {
      return C[335] = dart.const({
        __proto__: retrieve_type.RetrieveType.prototype,
        [S$._Enum__name]: "media",
        [S$._Enum_index]: 2
      });
    },
    get C332() {
      return C[332] = dart.constList([C[333] || CT.C333, C[334] || CT.C334, C[335] || CT.C335], retrieve_type.RetrieveType);
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: mime_shared.MimeMultipartException.prototype,
        [S$0.message$1]: "Bad multipart ending"
      });
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: mime_shared.MimeMultipartException.prototype,
        [S$0.message$1]: "Invalid header field name"
      });
    },
    get C338() {
      return C[338] = dart.const({
        __proto__: mime_shared.MimeMultipartException.prototype,
        [S$0.message$1]: "Failed to parse multipart mime 1"
      });
    },
    get C339() {
      return C[339] = dart.const({
        __proto__: mime_shared.MimeMultipartException.prototype,
        [S$0.message$1]: "Failed to parse multipart mime 2"
      });
    },
    get C340() {
      return C[340] = dart.constSet(core.int, [40, 41, 60, 62, 64, 44, 59, 58, 92, 34, 47, 91, 93, 63, 61, 123, 125, 32, 9]);
    },
    get C341() {
      return C[341] = dart.constList([], core.int);
    },
    get C342() {
      return C[342] = dart.constMap(core.String, core.String, ["123", "application/vnd.lotus-1-2-3", "3dml", "text/vnd.in3d.3dml", "3ds", "image/x-3ds", "3g2", "video/3gpp2", "3gp", "video/3gpp", "7z", "application/x-7z-compressed", "aab", "application/x-authorware-bin", "aac", "audio/aac", "aam", "application/x-authorware-map", "aas", "application/x-authorware-seg", "abw", "application/x-abiword", "ac", "application/pkix-attr-cert", "acc", "application/vnd.americandynamics.acc", "ace", "application/x-ace-compressed", "acu", "application/vnd.acucobol", "acutc", "application/vnd.acucorp", "adp", "audio/adpcm", "aep", "application/vnd.audiograph", "afm", "application/x-font-type1", "afp", "application/vnd.ibm.modcap", "ahead", "application/vnd.ahead.space", "ai", "application/postscript", "aif", "audio/x-aiff", "aifc", "audio/x-aiff", "aiff", "audio/x-aiff", "air", "application/vnd.adobe.air-application-installer-package+zip", "ait", "application/vnd.dvb.ait", "ami", "application/vnd.amiga.ami", "apk", "application/vnd.android.package-archive", "appcache", "text/cache-manifest", "application", "application/x-ms-application", "apr", "application/vnd.lotus-approach", "arc", "application/x-freearc", "asc", "application/pgp-signature", "asf", "video/x-ms-asf", "asm", "text/x-asm", "aso", "application/vnd.accpac.simply.aso", "asx", "video/x-ms-asf", "atc", "application/vnd.acucorp", "atom", "application/atom+xml", "atomcat", "application/atomcat+xml", "atomsvc", "application/atomsvc+xml", "atx", "application/vnd.antix.game-component", "au", "audio/basic", "avi", "video/x-msvideo", "avif", "image/avif", "aw", "application/applixware", "azf", "application/vnd.airzip.filesecure.azf", "azs", "application/vnd.airzip.filesecure.azs", "azw", "application/vnd.amazon.ebook", "bat", "application/x-msdownload", "bcpio", "application/x-bcpio", "bdf", "application/x-font-bdf", "bdm", "application/vnd.syncml.dm+wbxml", "bed", "application/vnd.realvnc.bed", "bh2", "application/vnd.fujitsu.oasysprs", "bin", "application/octet-stream", "blb", "application/x-blorb", "blorb", "application/x-blorb", "bmi", "application/vnd.bmi", "bmp", "image/bmp", "book", "application/vnd.framemaker", "box", "application/vnd.previewsystems.box", "boz", "application/x-bzip2", "bpk", "application/octet-stream", "btif", "image/prs.btif", "bz", "application/x-bzip", "bz2", "application/x-bzip2", "c", "text/x-c", "c11amc", "application/vnd.cluetrust.cartomobile-config", "c11amz", "application/vnd.cluetrust.cartomobile-config-pkg", "c4d", "application/vnd.clonk.c4group", "c4f", "application/vnd.clonk.c4group", "c4g", "application/vnd.clonk.c4group", "c4p", "application/vnd.clonk.c4group", "c4u", "application/vnd.clonk.c4group", "cab", "application/vnd.ms-cab-compressed", "caf", "audio/x-caf", "cap", "application/vnd.tcpdump.pcap", "car", "application/vnd.curl.car", "cat", "application/vnd.ms-pki.seccat", "cb7", "application/x-cbr", "cba", "application/x-cbr", "cbr", "application/x-cbr", "cbt", "application/x-cbr", "cbz", "application/x-cbr", "cc", "text/x-c", "cct", "application/x-director", "ccxml", "application/ccxml+xml", "cdbcmsg", "application/vnd.contact.cmsg", "cdf", "application/x-netcdf", "cdkey", "application/vnd.mediastation.cdkey", "cdmia", "application/cdmi-capability", "cdmic", "application/cdmi-container", "cdmid", "application/cdmi-domain", "cdmio", "application/cdmi-object", "cdmiq", "application/cdmi-queue", "cdx", "chemical/x-cdx", "cdxml", "application/vnd.chemdraw+xml", "cdy", "application/vnd.cinderella", "cer", "application/pkix-cert", "cfs", "application/x-cfs-compressed", "cgm", "image/cgm", "chat", "application/x-chat", "chm", "application/vnd.ms-htmlhelp", "chrt", "application/vnd.kde.kchart", "cif", "chemical/x-cif", "cii", "application/vnd.anser-web-certificate-issue-initiation", "cil", "application/vnd.ms-artgalry", "cla", "application/vnd.claymore", "class", "application/java-vm", "clkk", "application/vnd.crick.clicker.keyboard", "clkp", "application/vnd.crick.clicker.palette", "clkt", "application/vnd.crick.clicker.template", "clkw", "application/vnd.crick.clicker.wordbank", "clkx", "application/vnd.crick.clicker", "clp", "application/x-msclip", "cmc", "application/vnd.cosmocaller", "cmdf", "chemical/x-cmdf", "cml", "chemical/x-cml", "cmp", "application/vnd.yellowriver-custom-menu", "cmx", "image/x-cmx", "cod", "application/vnd.rim.cod", "com", "application/x-msdownload", "conf", "text/plain", "cpio", "application/x-cpio", "cpp", "text/x-c", "cpt", "application/mac-compactpro", "crd", "application/x-mscardfile", "crl", "application/pkix-crl", "crt", "application/x-x509-ca-cert", "cryptonote", "application/vnd.rig.cryptonote", "csh", "application/x-csh", "csml", "chemical/x-csml", "csp", "application/vnd.commonspace", "css", "text/css", "cst", "application/x-director", "csv", "text/csv", "cu", "application/cu-seeme", "curl", "text/vnd.curl", "cww", "application/prs.cww", "cxt", "application/x-director", "cxx", "text/x-c", "dae", "model/vnd.collada+xml", "daf", "application/vnd.mobius.daf", "dart", "text/x-dart", "dataless", "application/vnd.fdsn.seed", "davmount", "application/davmount+xml", "dbk", "application/docbook+xml", "dcm", "application/dicom", "dcr", "application/x-director", "dcurl", "text/vnd.curl.dcurl", "dd2", "application/vnd.oma.dd2+xml", "ddd", "application/vnd.fujixerox.ddd", "deb", "application/x-debian-package", "def", "text/plain", "deploy", "application/octet-stream", "der", "application/x-x509-ca-cert", "dfac", "application/vnd.dreamfactory", "dgc", "application/x-dgc-compressed", "dic", "text/x-c", "dir", "application/x-director", "dis", "application/vnd.mobius.dis", "dist", "application/octet-stream", "distz", "application/octet-stream", "djv", "image/vnd.djvu", "djvu", "image/vnd.djvu", "dll", "application/x-msdownload", "dmg", "application/x-apple-diskimage", "dmp", "application/vnd.tcpdump.pcap", "dms", "application/octet-stream", "dna", "application/vnd.dna", "doc", "application/msword", "docm", "application/vnd.ms-word.document.macroenabled.12", "docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document", "dot", "application/msword", "dotm", "application/vnd.ms-word.template.macroenabled.12", "dotx", "application/vnd.openxmlformats-officedocument.wordprocessingml.template", "dp", "application/vnd.osgi.dp", "dpg", "application/vnd.dpgraph", "dra", "audio/vnd.dra", "dsc", "text/prs.lines.tag", "dssc", "application/dssc+der", "dtb", "application/x-dtbook+xml", "dtd", "application/xml-dtd", "dts", "audio/vnd.dts", "dtshd", "audio/vnd.dts.hd", "dump", "application/octet-stream", "dvb", "video/vnd.dvb.file", "dvi", "application/x-dvi", "dwf", "model/vnd.dwf", "dwg", "image/vnd.dwg", "dxf", "image/vnd.dxf", "dxp", "application/vnd.spotfire.dxp", "dxr", "application/x-director", "ecelp4800", "audio/vnd.nuera.ecelp4800", "ecelp7470", "audio/vnd.nuera.ecelp7470", "ecelp9600", "audio/vnd.nuera.ecelp9600", "ecma", "application/ecmascript", "edm", "application/vnd.novadigm.edm", "edx", "application/vnd.novadigm.edx", "efif", "application/vnd.picsel", "ei6", "application/vnd.pg.osasli", "elc", "application/octet-stream", "emf", "application/x-msmetafile", "eml", "message/rfc822", "emma", "application/emma+xml", "emz", "application/x-msmetafile", "eol", "audio/vnd.digital-winds", "eot", "application/vnd.ms-fontobject", "eps", "application/postscript", "epub", "application/epub+zip", "es3", "application/vnd.eszigno3+xml", "esa", "application/vnd.osgi.subsystem", "esf", "application/vnd.epson.esf", "et3", "application/vnd.eszigno3+xml", "etx", "text/x-setext", "eva", "application/x-eva", "evy", "application/x-envoy", "exe", "application/x-msdownload", "exi", "application/exi", "ext", "application/vnd.novadigm.ext", "ez", "application/andrew-inset", "ez2", "application/vnd.ezpix-album", "ez3", "application/vnd.ezpix-package", "f", "text/x-fortran", "f4v", "video/x-f4v", "f77", "text/x-fortran", "f90", "text/x-fortran", "fbs", "image/vnd.fastbidsheet", "fcdt", "application/vnd.adobe.formscentral.fcdt", "fcs", "application/vnd.isac.fcs", "fdf", "application/vnd.fdf", "fe_launch", "application/vnd.denovo.fcselayout-link", "fg5", "application/vnd.fujitsu.oasysgp", "fgd", "application/x-director", "fh", "image/x-freehand", "fh4", "image/x-freehand", "fh5", "image/x-freehand", "fh7", "image/x-freehand", "fhc", "image/x-freehand", "fig", "application/x-xfig", "flac", "audio/x-flac", "fli", "video/x-fli", "flo", "application/vnd.micrografx.flo", "flv", "video/x-flv", "flw", "application/vnd.kde.kivio", "flx", "text/vnd.fmi.flexstor", "fly", "text/vnd.fly", "fm", "application/vnd.framemaker", "fnc", "application/vnd.frogans.fnc", "for", "text/x-fortran", "fpx", "image/vnd.fpx", "frame", "application/vnd.framemaker", "fsc", "application/vnd.fsc.weblaunch", "fst", "image/vnd.fst", "ftc", "application/vnd.fluxtime.clip", "fti", "application/vnd.anser-web-funds-transfer-initiation", "fvt", "video/vnd.fvt", "fxp", "application/vnd.adobe.fxp", "fxpl", "application/vnd.adobe.fxp", "fzs", "application/vnd.fuzzysheet", "g2w", "application/vnd.geoplan", "g3", "image/g3fax", "g3w", "application/vnd.geospace", "gac", "application/vnd.groove-account", "gam", "application/x-tads", "gbr", "application/rpki-ghostbusters", "gca", "application/x-gca-compressed", "gdl", "model/vnd.gdl", "geo", "application/vnd.dynageo", "gex", "application/vnd.geometry-explorer", "ggb", "application/vnd.geogebra.file", "ggt", "application/vnd.geogebra.tool", "ghf", "application/vnd.groove-help", "gif", "image/gif", "gim", "application/vnd.groove-identity-message", "glb", "model/gltf-binary", "gltf", "model/gltf+json", "gml", "application/gml+xml", "gmx", "application/vnd.gmx", "gnumeric", "application/x-gnumeric", "gph", "application/vnd.flographit", "gpx", "application/gpx+xml", "gqf", "application/vnd.grafeq", "gqs", "application/vnd.grafeq", "gram", "application/srgs", "gramps", "application/x-gramps-xml", "gre", "application/vnd.geometry-explorer", "grv", "application/vnd.groove-injector", "grxml", "application/srgs+xml", "gsf", "application/x-font-ghostscript", "gtar", "application/x-gtar", "gtm", "application/vnd.groove-tool-message", "gtw", "model/vnd.gtw", "gv", "text/vnd.graphviz", "gxf", "application/gxf", "gxt", "application/vnd.geonext", "h", "text/x-c", "h261", "video/h261", "h263", "video/h263", "h264", "video/h264", "hal", "application/vnd.hal+xml", "hbci", "application/vnd.hbci", "hdf", "application/x-hdf", "heic", "image/heic", "heif", "image/heif", "hh", "text/x-c", "hlp", "application/winhlp", "hpgl", "application/vnd.hp-hpgl", "hpid", "application/vnd.hp-hpid", "hps", "application/vnd.hp-hps", "hqx", "application/mac-binhex40", "htke", "application/vnd.kenameaapp", "htm", "text/html", "html", "text/html", "hvd", "application/vnd.yamaha.hv-dic", "hvp", "application/vnd.yamaha.hv-voice", "hvs", "application/vnd.yamaha.hv-script", "i2g", "application/vnd.intergeo", "icc", "application/vnd.iccprofile", "ice", "x-conference/x-cooltalk", "icm", "application/vnd.iccprofile", "ico", "image/x-icon", "ics", "text/calendar", "ief", "image/ief", "ifb", "text/calendar", "ifm", "application/vnd.shana.informed.formdata", "iges", "model/iges", "igl", "application/vnd.igloader", "igm", "application/vnd.insors.igm", "igs", "model/iges", "igx", "application/vnd.micrografx.igx", "iif", "application/vnd.shana.informed.interchange", "imp", "application/vnd.accpac.simply.imp", "ims", "application/vnd.ms-ims", "in", "text/plain", "ink", "application/inkml+xml", "inkml", "application/inkml+xml", "install", "application/x-install-instructions", "iota", "application/vnd.astraea-software.iota", "ipfix", "application/ipfix", "ipk", "application/vnd.shana.informed.package", "irm", "application/vnd.ibm.rights-management", "irp", "application/vnd.irepository.package+xml", "iso", "application/x-iso9660-image", "itp", "application/vnd.shana.informed.formtemplate", "ivp", "application/vnd.immervision-ivp", "ivu", "application/vnd.immervision-ivu", "jad", "text/vnd.sun.j2me.app-descriptor", "jam", "application/vnd.jam", "jar", "application/java-archive", "java", "text/x-java-source", "jisp", "application/vnd.jisp", "jlt", "application/vnd.hp-jlyt", "jnlp", "application/x-java-jnlp-file", "joda", "application/vnd.joost.joda-archive", "jpe", "image/jpeg", "jpeg", "image/jpeg", "jpg", "image/jpeg", "jpgm", "video/jpm", "jpgv", "video/jpeg", "jpm", "video/jpm", "js", "text/javascript", "json", "application/json", "jsonml", "application/jsonml+json", "kar", "audio/midi", "karbon", "application/vnd.kde.karbon", "kfo", "application/vnd.kde.kformula", "kia", "application/vnd.kidspiration", "kml", "application/vnd.google-earth.kml+xml", "kmz", "application/vnd.google-earth.kmz", "kne", "application/vnd.kinar", "knp", "application/vnd.kinar", "kon", "application/vnd.kde.kontour", "kpr", "application/vnd.kde.kpresenter", "kpt", "application/vnd.kde.kpresenter", "kpxx", "application/vnd.ds-keypoint", "ksp", "application/vnd.kde.kspread", "ktr", "application/vnd.kahootz", "ktx", "image/ktx", "ktz", "application/vnd.kahootz", "kwd", "application/vnd.kde.kword", "kwt", "application/vnd.kde.kword", "lasxml", "application/vnd.las.las+xml", "latex", "application/x-latex", "lbd", "application/vnd.llamagraphics.life-balance.desktop", "lbe", "application/vnd.llamagraphics.life-balance.exchange+xml", "les", "application/vnd.hhe.lesson-player", "lha", "application/x-lzh-compressed", "link66", "application/vnd.route66.link66+xml", "list", "text/plain", "list3820", "application/vnd.ibm.modcap", "listafp", "application/vnd.ibm.modcap", "lnk", "application/x-ms-shortcut", "log", "text/plain", "lostxml", "application/lost+xml", "lrf", "application/octet-stream", "lrm", "application/vnd.ms-lrm", "ltf", "application/vnd.frogans.ltf", "lvp", "audio/vnd.lucent.voice", "lwp", "application/vnd.lotus-wordpro", "lzh", "application/x-lzh-compressed", "m13", "application/x-msmediaview", "m14", "application/x-msmediaview", "m1v", "video/mpeg", "m21", "application/mp21", "m2a", "audio/mpeg", "m2v", "video/mpeg", "m3a", "audio/mpeg", "m3u", "audio/x-mpegurl", "m3u8", "application/vnd.apple.mpegurl", "m4a", "audio/mp4", "m4u", "video/vnd.mpegurl", "m4v", "video/x-m4v", "ma", "application/mathematica", "mads", "application/mads+xml", "mag", "application/vnd.ecowin.chart", "maker", "application/vnd.framemaker", "man", "text/troff", "mar", "application/octet-stream", "mathml", "application/mathml+xml", "mb", "application/mathematica", "mbk", "application/vnd.mobius.mbk", "mbox", "application/mbox", "mc1", "application/vnd.medcalcdata", "mcd", "application/vnd.mcd", "mcurl", "text/vnd.curl.mcurl", "mdb", "application/x-msaccess", "mdi", "image/vnd.ms-modi", "me", "text/troff", "mesh", "model/mesh", "meta4", "application/metalink4+xml", "metalink", "application/metalink+xml", "mets", "application/mets+xml", "mfm", "application/vnd.mfmp", "mft", "application/rpki-manifest", "mgp", "application/vnd.osgeo.mapguide.package", "mgz", "application/vnd.proteus.magazine", "mid", "audio/midi", "midi", "audio/midi", "mie", "application/x-mie", "mif", "application/vnd.mif", "mime", "message/rfc822", "mj2", "video/mj2", "mjp2", "video/mj2", "mjs", "text/javascript", "mk3d", "video/x-matroska", "mka", "audio/x-matroska", "mks", "video/x-matroska", "mkv", "video/x-matroska", "mlp", "application/vnd.dolby.mlp", "mmd", "application/vnd.chipnuts.karaoke-mmd", "mmf", "application/vnd.smaf", "mmr", "image/vnd.fujixerox.edmics-mmr", "mng", "video/x-mng", "mny", "application/x-msmoney", "mobi", "application/x-mobipocket-ebook", "mods", "application/mods+xml", "mov", "video/quicktime", "movie", "video/x-sgi-movie", "mp2", "audio/mpeg", "mp21", "application/mp21", "mp2a", "audio/mpeg", "mp3", "audio/mpeg", "mp4", "video/mp4", "mp4a", "audio/mp4", "mp4s", "application/mp4", "mp4v", "video/mp4", "mpc", "application/vnd.mophun.certificate", "mpe", "video/mpeg", "mpeg", "video/mpeg", "mpg", "video/mpeg", "mpg4", "video/mp4", "mpga", "audio/mpeg", "mpkg", "application/vnd.apple.installer+xml", "mpm", "application/vnd.blueice.multipass", "mpn", "application/vnd.mophun.application", "mpp", "application/vnd.ms-project", "mpt", "application/vnd.ms-project", "mpy", "application/vnd.ibm.minipay", "mqy", "application/vnd.mobius.mqy", "mrc", "application/marc", "mrcx", "application/marcxml+xml", "ms", "text/troff", "mscml", "application/mediaservercontrol+xml", "mseed", "application/vnd.fdsn.mseed", "mseq", "application/vnd.mseq", "msf", "application/vnd.epson.msf", "msh", "model/mesh", "msi", "application/x-msdownload", "msl", "application/vnd.mobius.msl", "msty", "application/vnd.muvee.style", "mts", "model/vnd.mts", "mus", "application/vnd.musician", "musicxml", "application/vnd.recordare.musicxml+xml", "mvb", "application/x-msmediaview", "mwf", "application/vnd.mfer", "mxf", "application/mxf", "mxl", "application/vnd.recordare.musicxml", "mxml", "application/xv+xml", "mxs", "application/vnd.triscape.mxs", "mxu", "video/vnd.mpegurl", "n-gage", "application/vnd.nokia.n-gage.symbian.install", "n3", "text/n3", "nb", "application/mathematica", "nbp", "application/vnd.wolfram.player", "nc", "application/x-netcdf", "ncx", "application/x-dtbncx+xml", "nfo", "text/x-nfo", "ngdat", "application/vnd.nokia.n-gage.data", "nitf", "application/vnd.nitf", "nlu", "application/vnd.neurolanguage.nlu", "nml", "application/vnd.enliven", "nnd", "application/vnd.noblenet-directory", "nns", "application/vnd.noblenet-sealer", "nnw", "application/vnd.noblenet-web", "npx", "image/vnd.net-fpx", "nsc", "application/x-conference", "nsf", "application/vnd.lotus-notes", "ntf", "application/vnd.nitf", "nzb", "application/x-nzb", "oa2", "application/vnd.fujitsu.oasys2", "oa3", "application/vnd.fujitsu.oasys3", "oas", "application/vnd.fujitsu.oasys", "obd", "application/x-msbinder", "obj", "application/x-tgif", "oda", "application/oda", "odb", "application/vnd.oasis.opendocument.database", "odc", "application/vnd.oasis.opendocument.chart", "odf", "application/vnd.oasis.opendocument.formula", "odft", "application/vnd.oasis.opendocument.formula-template", "odg", "application/vnd.oasis.opendocument.graphics", "odi", "application/vnd.oasis.opendocument.image", "odm", "application/vnd.oasis.opendocument.text-master", "odp", "application/vnd.oasis.opendocument.presentation", "ods", "application/vnd.oasis.opendocument.spreadsheet", "odt", "application/vnd.oasis.opendocument.text", "oga", "audio/ogg", "ogg", "audio/ogg", "ogv", "video/ogg", "ogx", "application/ogg", "omdoc", "application/omdoc+xml", "onepkg", "application/onenote", "onetmp", "application/onenote", "onetoc", "application/onenote", "onetoc2", "application/onenote", "opf", "application/oebps-package+xml", "opml", "text/x-opml", "oprc", "application/vnd.palm", "org", "application/vnd.lotus-organizer", "osf", "application/vnd.yamaha.openscoreformat", "osfpvg", "application/vnd.yamaha.openscoreformat.osfpvg+xml", "otc", "application/vnd.oasis.opendocument.chart-template", "otf", "application/x-font-otf", "otg", "application/vnd.oasis.opendocument.graphics-template", "oth", "application/vnd.oasis.opendocument.text-web", "oti", "application/vnd.oasis.opendocument.image-template", "otp", "application/vnd.oasis.opendocument.presentation-template", "ots", "application/vnd.oasis.opendocument.spreadsheet-template", "ott", "application/vnd.oasis.opendocument.text-template", "oxps", "application/oxps", "oxt", "application/vnd.openofficeorg.extension", "p", "text/x-pascal", "p10", "application/pkcs10", "p12", "application/x-pkcs12", "p7b", "application/x-pkcs7-certificates", "p7c", "application/pkcs7-mime", "p7m", "application/pkcs7-mime", "p7r", "application/x-pkcs7-certreqresp", "p7s", "application/pkcs7-signature", "p8", "application/pkcs8", "pas", "text/x-pascal", "paw", "application/vnd.pawaafile", "pbd", "application/vnd.powerbuilder6", "pbm", "image/x-portable-bitmap", "pcap", "application/vnd.tcpdump.pcap", "pcf", "application/x-font-pcf", "pcl", "application/vnd.hp-pcl", "pclxl", "application/vnd.hp-pclxl", "pct", "image/x-pict", "pcurl", "application/vnd.curl.pcurl", "pcx", "image/x-pcx", "pdb", "application/vnd.palm", "pdf", "application/pdf", "pfa", "application/x-font-type1", "pfb", "application/x-font-type1", "pfm", "application/x-font-type1", "pfr", "application/font-tdpfr", "pfx", "application/x-pkcs12", "pgm", "image/x-portable-graymap", "pgn", "application/x-chess-pgn", "pgp", "application/pgp-encrypted", "pic", "image/x-pict", "pkg", "application/octet-stream", "pki", "application/pkixcmp", "pkipath", "application/pkix-pkipath", "plb", "application/vnd.3gpp.pic-bw-large", "plc", "application/vnd.mobius.plc", "plf", "application/vnd.pocketlearn", "pls", "application/pls+xml", "pml", "application/vnd.ctc-posml", "png", "image/png", "pnm", "image/x-portable-anymap", "portpkg", "application/vnd.macports.portpkg", "pot", "application/vnd.ms-powerpoint", "potm", "application/vnd.ms-powerpoint.template.macroenabled.12", "potx", "application/vnd.openxmlformats-officedocument.presentationml.template", "ppam", "application/vnd.ms-powerpoint.addin.macroenabled.12", "ppd", "application/vnd.cups-ppd", "ppm", "image/x-portable-pixmap", "pps", "application/vnd.ms-powerpoint", "ppsm", "application/vnd.ms-powerpoint.slideshow.macroenabled.12", "ppsx", "application/vnd.openxmlformats-officedocument.presentationml.slideshow", "ppt", "application/vnd.ms-powerpoint", "pptm", "application/vnd.ms-powerpoint.presentation.macroenabled.12", "pptx", "application/vnd.openxmlformats-officedocument.presentationml.presentation", "pqa", "application/vnd.palm", "prc", "application/x-mobipocket-ebook", "pre", "application/vnd.lotus-freelance", "prf", "application/pics-rules", "ps", "application/postscript", "psb", "application/vnd.3gpp.pic-bw-small", "psd", "image/vnd.adobe.photoshop", "psf", "application/x-font-linux-psf", "pskcxml", "application/pskc+xml", "ptid", "application/vnd.pvi.ptid1", "pub", "application/x-mspublisher", "pvb", "application/vnd.3gpp.pic-bw-var", "pwn", "application/vnd.3m.post-it-notes", "pya", "audio/vnd.ms-playready.media.pya", "pyv", "video/vnd.ms-playready.media.pyv", "qam", "application/vnd.epson.quickanime", "qbo", "application/vnd.intu.qbo", "qfx", "application/vnd.intu.qfx", "qps", "application/vnd.publishare-delta-tree", "qt", "video/quicktime", "qwd", "application/vnd.quark.quarkxpress", "qwt", "application/vnd.quark.quarkxpress", "qxb", "application/vnd.quark.quarkxpress", "qxd", "application/vnd.quark.quarkxpress", "qxl", "application/vnd.quark.quarkxpress", "qxt", "application/vnd.quark.quarkxpress", "ra", "audio/x-pn-realaudio", "ram", "audio/x-pn-realaudio", "rar", "application/x-rar-compressed", "ras", "image/x-cmu-raster", "rcprofile", "application/vnd.ipunplugged.rcprofile", "rdf", "application/rdf+xml", "rdz", "application/vnd.data-vision.rdz", "rep", "application/vnd.businessobjects", "res", "application/x-dtbresource+xml", "rgb", "image/x-rgb", "rif", "application/reginfo+xml", "rip", "audio/vnd.rip", "ris", "application/x-research-info-systems", "rl", "application/resource-lists+xml", "rlc", "image/vnd.fujixerox.edmics-rlc", "rld", "application/resource-lists-diff+xml", "rm", "application/vnd.rn-realmedia", "rmi", "audio/midi", "rmp", "audio/x-pn-realaudio-plugin", "rms", "application/vnd.jcp.javame.midlet-rms", "rmvb", "application/vnd.rn-realmedia-vbr", "rnc", "application/relax-ng-compact-syntax", "roa", "application/rpki-roa", "roff", "text/troff", "rp9", "application/vnd.cloanto.rp9", "rpss", "application/vnd.nokia.radio-presets", "rpst", "application/vnd.nokia.radio-preset", "rq", "application/sparql-query", "rs", "application/rls-services+xml", "rsd", "application/rsd+xml", "rss", "application/rss+xml", "rtf", "application/rtf", "rtx", "text/richtext", "s", "text/x-asm", "s3m", "audio/s3m", "saf", "application/vnd.yamaha.smaf-audio", "sbml", "application/sbml+xml", "sc", "application/vnd.ibm.secure-container", "scd", "application/x-msschedule", "scm", "application/vnd.lotus-screencam", "scq", "application/scvp-cv-request", "scs", "application/scvp-cv-response", "scurl", "text/vnd.curl.scurl", "sda", "application/vnd.stardivision.draw", "sdc", "application/vnd.stardivision.calc", "sdd", "application/vnd.stardivision.impress", "sdkd", "application/vnd.solent.sdkm+xml", "sdkm", "application/vnd.solent.sdkm+xml", "sdp", "application/sdp", "sdw", "application/vnd.stardivision.writer", "see", "application/vnd.seemail", "seed", "application/vnd.fdsn.seed", "sema", "application/vnd.sema", "semd", "application/vnd.semd", "semf", "application/vnd.semf", "ser", "application/java-serialized-object", "setpay", "application/set-payment-initiation", "setreg", "application/set-registration-initiation", "sfd-hdstx", "application/vnd.hydrostatix.sof-data", "sfs", "application/vnd.spotfire.sfs", "sfv", "text/x-sfv", "sgi", "image/sgi", "sgl", "application/vnd.stardivision.writer-global", "sgm", "text/sgml", "sgml", "text/sgml", "sh", "application/x-sh", "shar", "application/x-shar", "shf", "application/shf+xml", "sid", "image/x-mrsid-image", "sig", "application/pgp-signature", "sil", "audio/silk", "silo", "model/mesh", "sis", "application/vnd.symbian.install", "sisx", "application/vnd.symbian.install", "sit", "application/x-stuffit", "sitx", "application/x-stuffitx", "skd", "application/vnd.koan", "skm", "application/vnd.koan", "skp", "application/vnd.koan", "skt", "application/vnd.koan", "sldm", "application/vnd.ms-powerpoint.slide.macroenabled.12", "sldx", "application/vnd.openxmlformats-officedocument.presentationml.slide", "slt", "application/vnd.epson.salt", "sm", "application/vnd.stepmania.stepchart", "smf", "application/vnd.stardivision.math", "smi", "application/smil+xml", "smil", "application/smil+xml", "smv", "video/x-smv", "smzip", "application/vnd.stepmania.package", "snd", "audio/basic", "snf", "application/x-font-snf", "so", "application/octet-stream", "spc", "application/x-pkcs7-certificates", "spf", "application/vnd.yamaha.smaf-phrase", "spl", "application/x-futuresplash", "spot", "text/vnd.in3d.spot", "spp", "application/scvp-vp-response", "spq", "application/scvp-vp-request", "spx", "audio/ogg", "sql", "application/x-sql", "src", "application/x-wais-source", "srt", "application/x-subrip", "sru", "application/sru+xml", "srx", "application/sparql-results+xml", "ssdl", "application/ssdl+xml", "sse", "application/vnd.kodak-descriptor", "ssf", "application/vnd.epson.ssf", "ssml", "application/ssml+xml", "st", "application/vnd.sailingtracker.track", "stc", "application/vnd.sun.xml.calc.template", "std", "application/vnd.sun.xml.draw.template", "stf", "application/vnd.wt.stf", "sti", "application/vnd.sun.xml.impress.template", "stk", "application/hyperstudio", "stl", "application/vnd.ms-pki.stl", "str", "application/vnd.pg.format", "stw", "application/vnd.sun.xml.writer.template", "sub", "text/vnd.dvb.subtitle", "sus", "application/vnd.sus-calendar", "susp", "application/vnd.sus-calendar", "sv4cpio", "application/x-sv4cpio", "sv4crc", "application/x-sv4crc", "svc", "application/vnd.dvb.service", "svd", "application/vnd.svd", "svg", "image/svg+xml", "svgz", "image/svg+xml", "swa", "application/x-director", "swf", "application/x-shockwave-flash", "swi", "application/vnd.aristanetworks.swi", "sxc", "application/vnd.sun.xml.calc", "sxd", "application/vnd.sun.xml.draw", "sxg", "application/vnd.sun.xml.writer.global", "sxi", "application/vnd.sun.xml.impress", "sxm", "application/vnd.sun.xml.math", "sxw", "application/vnd.sun.xml.writer", "t", "text/troff", "t3", "application/x-t3vm-image", "taglet", "application/vnd.mynfc", "tao", "application/vnd.tao.intent-module-archive", "tar", "application/x-tar", "tcap", "application/vnd.3gpp2.tcap", "tcl", "application/x-tcl", "teacher", "application/vnd.smart.teacher", "tei", "application/tei+xml", "teicorpus", "application/tei+xml", "tex", "application/x-tex", "texi", "application/x-texinfo", "texinfo", "application/x-texinfo", "text", "text/plain", "tfi", "application/thraud+xml", "tfm", "application/x-tex-tfm", "tga", "image/x-tga", "thmx", "application/vnd.ms-officetheme", "tif", "image/tiff", "tiff", "image/tiff", "tmo", "application/vnd.tmobile-livetv", "toml", "application/toml", "torrent", "application/x-bittorrent", "tpl", "application/vnd.groove-tool-template", "tpt", "application/vnd.trid.tpt", "tr", "text/troff", "tra", "application/vnd.trueapp", "trm", "application/x-msterminal", "tsd", "application/timestamped-data", "tsv", "text/tab-separated-values", "ttc", "application/x-font-ttf", "ttf", "application/x-font-ttf", "ttl", "text/turtle", "twd", "application/vnd.simtech-mindmapper", "twds", "application/vnd.simtech-mindmapper", "txd", "application/vnd.genomatix.tuxedo", "txf", "application/vnd.mobius.txf", "txt", "text/plain", "u32", "application/x-authorware-bin", "udeb", "application/x-debian-package", "ufd", "application/vnd.ufdl", "ufdl", "application/vnd.ufdl", "ulx", "application/x-glulx", "umj", "application/vnd.umajin", "unityweb", "application/vnd.unity", "uoml", "application/vnd.uoml+xml", "uri", "text/uri-list", "uris", "text/uri-list", "urls", "text/uri-list", "ustar", "application/x-ustar", "utz", "application/vnd.uiq.theme", "uu", "text/x-uuencode", "uva", "audio/vnd.dece.audio", "uvd", "application/vnd.dece.data", "uvf", "application/vnd.dece.data", "uvg", "image/vnd.dece.graphic", "uvh", "video/vnd.dece.hd", "uvi", "image/vnd.dece.graphic", "uvm", "video/vnd.dece.mobile", "uvp", "video/vnd.dece.pd", "uvs", "video/vnd.dece.sd", "uvt", "application/vnd.dece.ttml+xml", "uvu", "video/vnd.uvvu.mp4", "uvv", "video/vnd.dece.video", "uvva", "audio/vnd.dece.audio", "uvvd", "application/vnd.dece.data", "uvvf", "application/vnd.dece.data", "uvvg", "image/vnd.dece.graphic", "uvvh", "video/vnd.dece.hd", "uvvi", "image/vnd.dece.graphic", "uvvm", "video/vnd.dece.mobile", "uvvp", "video/vnd.dece.pd", "uvvs", "video/vnd.dece.sd", "uvvt", "application/vnd.dece.ttml+xml", "uvvu", "video/vnd.uvvu.mp4", "uvvv", "video/vnd.dece.video", "uvvx", "application/vnd.dece.unspecified", "uvvz", "application/vnd.dece.zip", "uvx", "application/vnd.dece.unspecified", "uvz", "application/vnd.dece.zip", "vcard", "text/vcard", "vcd", "application/x-cdlink", "vcf", "text/x-vcard", "vcg", "application/vnd.groove-vcard", "vcs", "text/x-vcalendar", "vcx", "application/vnd.vcx", "vis", "application/vnd.visionary", "viv", "video/vnd.vivo", "vob", "video/x-ms-vob", "vor", "application/vnd.stardivision.writer", "vox", "application/x-authorware-bin", "vrml", "model/vrml", "vsd", "application/vnd.visio", "vsf", "application/vnd.vsf", "vss", "application/vnd.visio", "vst", "application/vnd.visio", "vsw", "application/vnd.visio", "vtu", "model/vnd.vtu", "vxml", "application/voicexml+xml", "w3d", "application/x-director", "wad", "application/x-doom", "wasm", "application/wasm", "wav", "audio/x-wav", "wax", "audio/x-ms-wax", "wbmp", "image/vnd.wap.wbmp", "wbs", "application/vnd.criticaltools.wbs+xml", "wbxml", "application/vnd.wap.wbxml", "wcm", "application/vnd.ms-works", "wdb", "application/vnd.ms-works", "wdp", "image/vnd.ms-photo", "weba", "audio/webm", "webm", "video/webm", "webmanifest", "application/manifest+json", "webp", "image/webp", "wg", "application/vnd.pmi.widget", "wgt", "application/widget", "wks", "application/vnd.ms-works", "wm", "video/x-ms-wm", "wma", "audio/x-ms-wma", "wmd", "application/x-ms-wmd", "wmf", "application/x-msmetafile", "wml", "text/vnd.wap.wml", "wmlc", "application/vnd.wap.wmlc", "wmls", "text/vnd.wap.wmlscript", "wmlsc", "application/vnd.wap.wmlscriptc", "wmv", "video/x-ms-wmv", "wmx", "video/x-ms-wmx", "wmz", "application/x-ms-wmz", "woff", "application/x-font-woff", "woff2", "font/woff2", "wpd", "application/vnd.wordperfect", "wpl", "application/vnd.ms-wpl", "wps", "application/vnd.ms-works", "wqd", "application/vnd.wqd", "wri", "application/x-mswrite", "wrl", "model/vrml", "wsdl", "application/wsdl+xml", "wspolicy", "application/wspolicy+xml", "wtb", "application/vnd.webturbo", "wvx", "video/x-ms-wvx", "x32", "application/x-authorware-bin", "x3d", "model/x3d+xml", "x3db", "model/x3d+binary", "x3dbz", "model/x3d+binary", "x3dv", "model/x3d+vrml", "x3dvz", "model/x3d+vrml", "x3dz", "model/x3d+xml", "xaml", "application/xaml+xml", "xap", "application/x-silverlight-app", "xar", "application/vnd.xara", "xbap", "application/x-ms-xbap", "xbd", "application/vnd.fujixerox.docuworks.binder", "xbm", "image/x-xbitmap", "xdf", "application/xcap-diff+xml", "xdm", "application/vnd.syncml.dm+xml", "xdp", "application/vnd.adobe.xdp+xml", "xdssc", "application/dssc+xml", "xdw", "application/vnd.fujixerox.docuworks", "xenc", "application/xenc+xml", "xer", "application/patch-ops-error+xml", "xfdf", "application/vnd.adobe.xfdf", "xfdl", "application/vnd.xfdl", "xht", "application/xhtml+xml", "xhtml", "application/xhtml+xml", "xhvml", "application/xv+xml", "xif", "image/vnd.xiff", "xla", "application/vnd.ms-excel", "xlam", "application/vnd.ms-excel.addin.macroenabled.12", "xlc", "application/vnd.ms-excel", "xlf", "application/x-xliff+xml", "xlm", "application/vnd.ms-excel", "xls", "application/vnd.ms-excel", "xlsb", "application/vnd.ms-excel.sheet.binary.macroenabled.12", "xlsm", "application/vnd.ms-excel.sheet.macroenabled.12", "xlsx", "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet", "xlt", "application/vnd.ms-excel", "xltm", "application/vnd.ms-excel.template.macroenabled.12", "xltx", "application/vnd.openxmlformats-officedocument.spreadsheetml.template", "xlw", "application/vnd.ms-excel", "xm", "audio/xm", "xml", "application/xml", "xo", "application/vnd.olpc-sugar", "xop", "application/xop+xml", "xpi", "application/x-xpinstall", "xpl", "application/xproc+xml", "xpm", "image/x-xpixmap", "xpr", "application/vnd.is-xpr", "xps", "application/vnd.ms-xpsdocument", "xpw", "application/vnd.intercon.formnet", "xpx", "application/vnd.intercon.formnet", "xsl", "application/xml", "xslt", "application/xslt+xml", "xsm", "application/vnd.syncml+xml", "xspf", "application/xspf+xml", "xul", "application/vnd.mozilla.xul+xml", "xvm", "application/xv+xml", "xvml", "application/xv+xml", "xwd", "image/x-xwindowdump", "xyz", "chemical/x-xyz", "xz", "application/x-xz", "yang", "application/yang", "yin", "application/yin+xml", "z1", "application/x-zmachine", "z2", "application/x-zmachine", "z3", "application/x-zmachine", "z4", "application/x-zmachine", "z5", "application/x-zmachine", "z6", "application/x-zmachine", "z7", "application/x-zmachine", "z8", "application/x-zmachine", "zaz", "application/vnd.zzazz.deck+xml", "zip", "application/zip", "zir", "application/vnd.zul", "zirz", "application/vnd.zul", "zmm", "application/vnd.handheld-entertainment+xml"]);
    },
    get C345() {
      return C[345] = dart.constList([37, 80, 68, 70], core.int);
    },
    get C344() {
      return C[344] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[345] || CT.C345,
        [S$0.mimeType]: "application/pdf"
      });
    },
    get C347() {
      return C[347] = dart.constList([37, 81], core.int);
    },
    get C346() {
      return C[346] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[347] || CT.C347,
        [S$0.mimeType]: "application/postscript"
      });
    },
    get C349() {
      return C[349] = dart.constList([255, 255, 255, 255, 0, 0, 0, 0, 255, 255, 255, 255], core.int);
    },
    get C350() {
      return C[350] = dart.constList([70, 79, 82, 77, 0, 0, 0, 0, 65, 73, 70, 70], core.int);
    },
    get C348() {
      return C[348] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: C[349] || CT.C349,
        [S$0.numbers]: C[350] || CT.C350,
        [S$0.mimeType]: "audio/x-aiff"
      });
    },
    get C352() {
      return C[352] = dart.constList([102, 76, 97, 67], core.int);
    },
    get C351() {
      return C[351] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[352] || CT.C352,
        [S$0.mimeType]: "audio/x-flac"
      });
    },
    get C354() {
      return C[354] = dart.constList([82, 73, 70, 70, 0, 0, 0, 0, 87, 65, 86, 69], core.int);
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: C[349] || CT.C349,
        [S$0.numbers]: C[354] || CT.C354,
        [S$0.mimeType]: "audio/x-wav"
      });
    },
    get C356() {
      return C[356] = dart.constList([71, 73, 70, 56, 55, 97], core.int);
    },
    get C355() {
      return C[355] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[356] || CT.C356,
        [S$0.mimeType]: "image/gif"
      });
    },
    get C358() {
      return C[358] = dart.constList([71, 73, 70, 56, 57, 97], core.int);
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[358] || CT.C358,
        [S$0.mimeType]: "image/gif"
      });
    },
    get C360() {
      return C[360] = dart.constList([255, 216], core.int);
    },
    get C359() {
      return C[359] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[360] || CT.C360,
        [S$0.mimeType]: "image/jpeg"
      });
    },
    get C362() {
      return C[362] = dart.constList([137, 80, 78, 71, 13, 10, 26, 10], core.int);
    },
    get C361() {
      return C[361] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[362] || CT.C362,
        [S$0.mimeType]: "image/png"
      });
    },
    get C364() {
      return C[364] = dart.constList([73, 73, 42, 0], core.int);
    },
    get C363() {
      return C[363] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[364] || CT.C364,
        [S$0.mimeType]: "image/tiff"
      });
    },
    get C366() {
      return C[366] = dart.constList([77, 77, 0, 42], core.int);
    },
    get C365() {
      return C[365] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[366] || CT.C366,
        [S$0.mimeType]: "image/tiff"
      });
    },
    get C368() {
      return C[368] = dart.constList([255, 241], core.int);
    },
    get C367() {
      return C[367] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[368] || CT.C368,
        [S$0.mimeType]: "audio/aac"
      });
    },
    get C370() {
      return C[370] = dart.constList([255, 249], core.int);
    },
    get C369() {
      return C[369] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[370] || CT.C370,
        [S$0.mimeType]: "audio/aac"
      });
    },
    get C372() {
      return C[372] = dart.constList([26, 69, 223, 163], core.int);
    },
    get C371() {
      return C[371] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[372] || CT.C372,
        [S$0.mimeType]: "audio/weba"
      });
    },
    get C374() {
      return C[374] = dart.constList([73, 68, 51], core.int);
    },
    get C373() {
      return C[373] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[374] || CT.C374,
        [S$0.mimeType]: "audio/mpeg"
      });
    },
    get C376() {
      return C[376] = dart.constList([255, 251], core.int);
    },
    get C375() {
      return C[375] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[376] || CT.C376,
        [S$0.mimeType]: "audio/mpeg"
      });
    },
    get C378() {
      return C[378] = dart.constList([79, 112, 117], core.int);
    },
    get C377() {
      return C[377] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[378] || CT.C378,
        [S$0.mimeType]: "audio/ogg"
      });
    },
    get C380() {
      return C[380] = dart.constList([255, 255, 255, 0, 255, 255, 255, 255, 255, 255, 255, 255], core.int);
    },
    get C381() {
      return C[381] = dart.constList([0, 0, 0, 0, 102, 116, 121, 112, 51, 103, 112, 53], core.int);
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: C[380] || CT.C380,
        [S$0.numbers]: C[381] || CT.C381,
        [S$0.mimeType]: "video/mp4"
      });
    },
    get C383() {
      return C[383] = dart.constList([70, 84, 108, 103], core.int);
    },
    get C382() {
      return C[382] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[383] || CT.C383,
        [S$0.mimeType]: "model/gltf-binary"
      });
    },
    get C385() {
      return C[385] = dart.constList([82, 73, 70, 70, 0, 0, 0, 0, 87, 69, 66, 80], core.int);
    },
    get C384() {
      return C[384] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: C[349] || CT.C349,
        [S$0.numbers]: C[385] || CT.C385,
        [S$0.mimeType]: "image/webp"
      });
    },
    get C387() {
      return C[387] = dart.constList([119, 79, 70, 50], core.int);
    },
    get C386() {
      return C[386] = dart.const({
        __proto__: magic_number.MagicNumber.prototype,
        [S$0.mask]: null,
        [S$0.numbers]: C[387] || CT.C387,
        [S$0.mimeType]: "font/woff2"
      });
    },
    get C343() {
      return C[343] = dart.constList([C[344] || CT.C344, C[346] || CT.C346, C[348] || CT.C348, C[351] || CT.C351, C[353] || CT.C353, C[355] || CT.C355, C[357] || CT.C357, C[359] || CT.C359, C[361] || CT.C361, C[363] || CT.C363, C[365] || CT.C365, C[367] || CT.C367, C[369] || CT.C369, C[371] || CT.C371, C[373] || CT.C373, C[375] || CT.C375, C[377] || CT.C377, C[379] || CT.C379, C[382] || CT.C382, C[384] || CT.C384, C[386] || CT.C386], magic_number.MagicNumber);
    },
    get C388() {
      return C[388] = dart.fn(messages$46pigeon.PigeonMultiFactorInfo.decode, T.ObjectToPigeonMultiFactorInfo());
    },
    get C389() {
      return C[389] = dart.const({
        __proto__: enums.ValidationMode.prototype,
        [S$._Enum__name]: "nonStrict",
        [S$._Enum_index]: 0
      });
    },
    get C390() {
      return C[390] = dart.constList([C[389] || CT.C389, C[266] || CT.C266], enums.ValidationMode);
    },
    get C391() {
      return C[391] = dart.const({
        __proto__: uuid_value.UuidValue.prototype,
        [S$0.uuid]: "6ba7b810-9dad-11d1-80b4-00c04fd430c8"
      });
    },
    get C392() {
      return C[392] = dart.const({
        __proto__: uuid_value.UuidValue.prototype,
        [S$0.uuid]: "6ba7b811-9dad-11d1-80b4-00c04fd430c8"
      });
    },
    get C393() {
      return C[393] = dart.const({
        __proto__: uuid_value.UuidValue.prototype,
        [S$0.uuid]: "6ba7b812-9dad-11d1-80b4-00c04fd430c8"
      });
    },
    get C394() {
      return C[394] = dart.const({
        __proto__: uuid_value.UuidValue.prototype,
        [S$0.uuid]: "6ba7b814-9dad-11d1-80b4-00c04fd430c8"
      });
    },
    get C395() {
      return C[395] = dart.const({
        __proto__: uuid_value.UuidValue.prototype,
        [S$0.uuid]: "00000000-0000-0000-0000-000000000000"
      });
    },
    get C396() {
      return C[396] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: null,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Comments"
      });
    },
    get C397() {
      return C[397] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 8,
        [S$.EdgeInsets_top]: 0,
        [S$.EdgeInsets_left]: 16
      });
    },
    get C398() {
      return C[398] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 8,
        [S$.EdgeInsets_right]: 8,
        [S$.EdgeInsets_top]: 8,
        [S$.EdgeInsets_left]: 8
      });
    },
    get C400() {
      return C[400] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: null,
        [S$.TextStyle_fontSize]: null,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: C[20] || CT.C20,
        [S$.TextStyle_inherit]: true
      });
    },
    get C399() {
      return C[399] = dart.const({
        __proto__: text$.Text.prototype,
        [S$.Widget_key]: null,
        [S$.Text_selectionColor]: null,
        [S$.Text_textHeightBehavior]: null,
        [S$.Text_textWidthBasis]: null,
        [S$.Text_semanticsLabel]: null,
        [S$.Text_maxLines]: null,
        [S$.Text_textScaleFactor]: null,
        [S$.Text_overflow]: null,
        [S$.Text_softWrap]: null,
        [S$.Text_locale]: null,
        [S$.Text_textDirection]: null,
        [S$.Text_textAlign]: null,
        [S$.Text_strutStyle]: null,
        [S$.Text_style]: C[400] || CT.C400,
        [S$.Text_textSpan]: null,
        [S$.Text_data]: "Post"
      });
    },
    get C401() {
      return C[401] = dart.const({
        __proto__: core.Duration.prototype,
        [S$.Duration__duration]: 150000
      });
    },
    get C402() {
      return C[402] = dart.const({
        __proto__: quilted._QuiltedGridRepeatSamePattern.prototype
      });
    },
    get C403() {
      return C[403] = dart.const({
        __proto__: quilted._QuiltedGridRepeatInvertedPattern.prototype
      });
    },
    get C404() {
      return C[404] = dart.const({
        __proto__: quilted._QuiltedGridRepeatMirroredPattern.prototype
      });
    },
    get C406() {
      return C[406] = dart.fn(math.max, T.TAndTToT());
    },
    get C405() {
      return C[405] = dart.const(dart.gbind(C[406] || CT.C406, core.int));
    },
    get C407() {
      return C[407] = dart.const({
        __proto__: alignment.AlignmentDirectional.prototype,
        [S.AlignmentDirectional_y]: 0,
        [S.AlignmentDirectional_start]: 0
      });
    },
    get C408() {
      return C[408] = dart.const(dart.gbind(C[406] || CT.C406, core.double));
    },
    get C410() {
      return C[410] = dart.fn(math.min, T.TAndTToT$1());
    },
    get C409() {
      return C[409] = dart.const(dart.gbind(C[410] || CT.C410, core.double));
    },
    get C411() {
      return C[411] = dart.const({
        __proto__: basic_types.Axis.prototype,
        [S$._Enum__name]: "vertical",
        [S$._Enum_index]: 1
      });
    },
    get C412() {
      return C[412] = dart.const({
        __proto__: recognizer.DragStartBehavior.prototype,
        [S$._Enum__name]: "start",
        [S$._Enum_index]: 1
      });
    },
    get C413() {
      return C[413] = dart.const({
        __proto__: scroll_view.ScrollViewKeyboardDismissBehavior.prototype,
        [S$._Enum__name]: "manual",
        [S$._Enum_index]: 0
      });
    },
    get C414() {
      return C[414] = dart.const({
        __proto__: ui.Clip.prototype,
        [S$._Enum__name]: "hardEdge",
        [S$._Enum_index]: 1
      });
    },
    get C415() {
      return C[415] = dart.constList([], framework.Widget);
    },
    get C416() {
      return C[416] = dart.constList([C[223] || CT.C223, C[224] || CT.C224, C[225] || CT.C225, C[226] || CT.C226, C[227] || CT.C227, C[228] || CT.C228], method_channel_field_value.FieldValueType);
    },
    get C417() {
      return C[417] = dart.const(new _js_helper.PrivateSymbol.new('_pointer', S._pointer$7));
    },
    get C418() {
      return C[418] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "boundary"
      });
    },
    get C419() {
      return C[419] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "size"
      });
    },
    get C420() {
      return C[420] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "size before LF"
      });
    },
    get C421() {
      return C[421] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "body"
      });
    },
    get C422() {
      return C[422] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "body before CR"
      });
    },
    get C423() {
      return C[423] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "body before LF"
      });
    },
    get C424() {
      return C[424] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "end before CR"
      });
    },
    get C425() {
      return C[425] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "end before LF"
      });
    },
    get C426() {
      return C[426] = dart.const({
        __proto__: decoder._State.prototype,
        [S._State__name]: "end"
      });
    },
    get C427() {
      return C[427] = dart.const({
        __proto__: decoder.ChunkedCodingDecoder.prototype
      });
    },
    get C428() {
      return C[428] = dart.const({
        __proto__: encoder.ChunkedCodingEncoder.prototype
      });
    },
    get C429() {
      return C[429] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [S$0.MethodChannel__binaryMessenger]: null,
        [S$0.MethodChannel_codec]: C[264] || CT.C264,
        [S$0.MethodChannel_name]: "plugins.flutter.io/firebase_storage"
      });
    },
    get C430() {
      return C[430] = dart.const(new _js_helper.PrivateSymbol.new('_clientToken', S._clientToken));
    },
    get C432() {
      return C[432] = dart.const({
        __proto__: T._EmptyStreamOfListOfint().prototype
      });
    },
    get C431() {
      return C[431] = dart.const({
        __proto__: byte_stream.ByteStream.prototype,
        [S.StreamView__stream]: C[432] || CT.C432
      });
    },
    get C433() {
      return C[433] = dart.constMap(core.String, core.String, []);
    },
    get C434() {
      return C[434] = dart.const({
        __proto__: convert.Utf8Codec.prototype,
        [S.Utf8Codec__allowMalformed]: false
      });
    },
    get C435() {
      return C[435] = dart.constList([13, 10], core.int);
    },
    get C436() {
      return C[436] = dart.fn(core.int.parse, T.String__Toint());
    },
    get C437() {
      return C[437] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [S$.EdgeInsets_bottom]: 0,
        [S$.EdgeInsets_right]: 0,
        [S$.EdgeInsets_top]: 0,
        [S$.EdgeInsets_left]: 16
      });
    },
    get C438() {
      return C[438] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [S$.TextStyle_overflow]: null,
        [S$.TextStyle_fontVariations]: null,
        [S$.TextStyle_fontFeatures]: null,
        [S$.TextStyle_shadows]: null,
        [S$.TextStyle_debugLabel]: null,
        [S$.TextStyle_decorationThickness]: null,
        [S$.TextStyle_decorationStyle]: null,
        [S$.TextStyle_decorationColor]: null,
        [S$.TextStyle_decoration]: null,
        [S$.TextStyle_background]: null,
        [S$.TextStyle_foreground]: null,
        [S$.TextStyle_locale]: null,
        [S$.TextStyle_leadingDistribution]: null,
        [S$.TextStyle_height]: null,
        [S$.TextStyle_textBaseline]: null,
        [S$.TextStyle_wordSpacing]: null,
        [S$.TextStyle_letterSpacing]: null,
        [S$.TextStyle_fontStyle]: null,
        [S$.TextStyle_fontWeight]: C[43] || CT.C43,
        [S$.TextStyle_fontSize]: 12,
        [S$.TextStyle__package]: null,
        [S$.TextStyle__fontFamilyFallback]: null,
        [S$.TextStyle_fontFamily]: null,
        [S$.TextStyle_backgroundColor]: null,
        [S$.TextStyle_color]: null,
        [S$.TextStyle_inherit]: true
      });
    },
    get C439() {
      return C[439] = dart.const({
        __proto__: icon.Icon.prototype,
        [S$.Widget_key]: null,
        [S$.Icon_textDirection]: null,
        [S$.Icon_semanticLabel]: null,
        [S$.Icon_shadows]: null,
        [S$.Icon_color]: null,
        [S$.Icon_opticalSize]: null,
        [S$.Icon_grade]: null,
        [S$.Icon_weight]: null,
        [S$.Icon_fill]: null,
        [S$.Icon_size]: 16,
        [S$.Icon_icon]: C[277] || CT.C277
      });
    },
    get C440() {
      return C[440] = dart.const({
        __proto__: sliver_grid.SliverGridGeometry.prototype,
        [S.SliverGridGeometry_crossAxisExtent]: 0,
        [S.SliverGridGeometry_mainAxisExtent]: 0,
        [S.SliverGridGeometry_crossAxisOffset]: 0,
        [S.SliverGridGeometry_scrollOffset]: 0
      });
    },
    get C441() {
      return C[441] = dart.fn(staggered_grid$._dryLayoutChild, T.RenderBoxAndBoxConstraints__Tovoid());
    },
    get C442() {
      return C[442] = dart.fn(staggered_grid$._layoutChild, T.RenderBoxAndBoxConstraints__Tovoid());
    },
    get C443() {
      return C[443] = dart.const({
        __proto__: staggered_grid$._TileOrigin.prototype,
        [S.mainAxisOffset]: 1 / 0,
        [S.crossAxisIndex$1]: 0
      });
    },
    get C445() {
      return C[445] = dart.const({
        __proto__: messages$46pigeon$1.PigeonStorageTaskState.prototype,
        [S$._Enum__name]: "paused",
        [S$._Enum_index]: 0
      });
    },
    get C446() {
      return C[446] = dart.const({
        __proto__: messages$46pigeon$1.PigeonStorageTaskState.prototype,
        [S$._Enum__name]: "running",
        [S$._Enum_index]: 1
      });
    },
    get C447() {
      return C[447] = dart.const({
        __proto__: messages$46pigeon$1.PigeonStorageTaskState.prototype,
        [S$._Enum__name]: "success",
        [S$._Enum_index]: 2
      });
    },
    get C448() {
      return C[448] = dart.const({
        __proto__: messages$46pigeon$1.PigeonStorageTaskState.prototype,
        [S$._Enum__name]: "canceled",
        [S$._Enum_index]: 3
      });
    },
    get C449() {
      return C[449] = dart.const({
        __proto__: messages$46pigeon$1.PigeonStorageTaskState.prototype,
        [S$._Enum__name]: "error",
        [S$._Enum_index]: 4
      });
    },
    get C444() {
      return C[444] = dart.constList([C[445] || CT.C445, C[446] || CT.C446, C[447] || CT.C447, C[448] || CT.C448, C[449] || CT.C449], messages$46pigeon$1.PigeonStorageTaskState);
    },
    get C450() {
      return C[450] = dart.const({
        __proto__: messages$46pigeon$1._FirebaseStorageHostApiCodec.prototype
      });
    },
    get C451() {
      return C[451] = dart.const({
        __proto__: convert.Latin1Codec.prototype,
        [S.Latin1Codec__allowInvalid]: false
      });
    },
    get C452() {
      return C[452] = dart.constList([43, 95, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], core.int);
    },
    get C453() {
      return C[453] = dart.const({
        __proto__: typed_data.Endian.prototype,
        [S.Endian__littleEndian]: false
      });
    },
    get C454() {
      return C[454] = dart.const({
        __proto__: md5._MD5.prototype,
        [S.blockSize]: 64
      });
    },
    get C455() {
      return C[455] = dart.constList([3614090360, 3905402710, 606105819, 3250441966, 4118548399, 1200080426, 2821735955, 4249261313, 1770035416, 2336552879, 4294925233, 2304563134, 1804603682, 4254626195, 2792965006, 1236535329, 4129170786, 3225465664, 643717713, 3921069994, 3593408605, 38016083, 3634488961, 3889429448, 568446438, 3275163606, 4107603335, 1163531501, 2850285829, 4243563512, 1735328473, 2368359562, 4294588738, 2272392833, 1839030562, 4259657740, 2763975236, 1272893353, 4139469664, 3200236656, 681279174, 3936430074, 3572445317, 76029189, 3654602809, 3873151461, 530742520, 3299628645, 4096336452, 1126891415, 2878612391, 4237533241, 1700485571, 2399980690, 4293915773, 2240044497, 1873313359, 4264355552, 2734768916, 1309151649, 4149444226, 3174756917, 718787259, 3951481745], core.int);
    },
    get C456() {
      return C[456] = dart.constList([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21], core.int);
    },
    get C457() {
      return C[457] = dart.const({
        __proto__: sha1._Sha1.prototype,
        [S.blockSize$1]: 64
      });
    },
    get C458() {
      return C[458] = dart.const({
        __proto__: sha256._Sha256.prototype,
        [S.blockSize$2]: 64
      });
    },
    get C459() {
      return C[459] = dart.const({
        __proto__: sha256._Sha224.prototype,
        [S.blockSize$3]: 64
      });
    },
    get C460() {
      return C[460] = dart.constList([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298], core.int);
    },
    get C461() {
      return C[461] = dart.const({
        __proto__: sha512._Sha384.prototype,
        [S.blockSize$4]: 128
      });
    },
    get C462() {
      return C[462] = dart.const({
        __proto__: sha512._Sha512.prototype,
        [S.blockSize$5]: 128
      });
    },
    get C463() {
      return C[463] = dart.const({
        __proto__: sha512._Sha512224.prototype,
        [S.blockSize$6]: 128
      });
    },
    get C464() {
      return C[464] = dart.const({
        __proto__: sha512._Sha512256.prototype,
        [S.blockSize$7]: 128
      });
    },
    get C465() {
      return C[465] = dart.fn(layout_helper.ChildLayoutHelper.dryLayoutChild, T.RenderBoxAndBoxConstraintsToSize());
    },
    get C466() {
      return C[466] = dart.fn(layout_helper.ChildLayoutHelper.layoutChild, T.RenderBoxAndBoxConstraintsToSize());
    },
    get C467() {
      return C[467] = dart.const(new _js_helper.PrivateSymbol.new('_add', S._add));
    },
    get C468() {
      return C[468] = dart.const(new _js_helper.PrivateSymbol.new('_head', S._head$1));
    },
    get C469() {
      return C[469] = dart.const(new _js_helper.PrivateSymbol.new('_writeToList', S._writeToList));
    },
    get C470() {
      return C[470] = dart.const(new _js_helper.PrivateSymbol.new('_grow', S._grow));
    },
    get C471() {
      return C[471] = dart.const(new _js_helper.PrivateSymbol.new('_preGrow', S._preGrow));
    },
    get C472() {
      return C[472] = dart.const(new _js_helper.PrivateSymbol.new('_table', S._table$1));
    },
    get C473() {
      return C[473] = dart.const(new _js_helper.PrivateSymbol.new('_tail', S._tail$1));
    },
    get C474() {
      return C[474] = dart.const(new _js_helper.PrivateSymbol.new('_head=', S._head_));
    },
    get C475() {
      return C[475] = dart.const(new _js_helper.PrivateSymbol.new('_table=', S._table_));
    },
    get C476() {
      return C[476] = dart.const(new _js_helper.PrivateSymbol.new('_tail=', S._tail_));
    }
  }, false);
  var C = Array(477).fill(void 0);
  var I = [
    "file:///zapp/project/lib/main.dart",
    "package:firebase_auth/firebase_auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/firebase_auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart",
    "package:plugin_platform_interface/plugin_platform_interface.dart",
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/multi_factor.dart",
    "package:firebase_auth_platform_interface/src/firebase_auth_exception.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/user.dart",
    "package:firebase_core/firebase_core.dart",
    "file:///zapp/project/lib/provider/user_provider.dart",
    "file:///zapp/project/lib/responsive/mobile_screen_layout.dart",
    "file:///zapp/project/lib/screens/login_screen.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_firestore.dart",
    "package:cloud_firestore_web/cloud_firestore_web.dart",
    "package:file_picker/src/file_picker.dart",
    "package:file_picker/_internal/file_picker_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/firebase_auth_web.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_firebase_auth.dart",
    "package:firebase_auth_web/firebase_auth_web.dart",
    "package:firebase_core_web/firebase_core_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_core_web.dart",
    "package:image_picker_platform_interface/src/platform_interface/image_picker_platform.dart",
    "package:image_picker_for_web/image_picker_for_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/method_channel/method_channel_firebase.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/inherited_provider.dart",
    "package:nested/nested.dart",
    "package:provider/src/provider.dart",
    "package:provider/src/async_provider.dart",
    "package:provider/src/listenable_provider.dart",
    "package:provider/src/change_notifier_provider.dart",
    "package:provider/src/consumer.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/deferred_inherited_provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/devtool.dart",
    "package:provider/src/proxy_provider.dart",
    "package:provider/src/reassemble_handler.dart",
    "package:provider/src/selector.dart",
    "package:provider/src/value_listenable_provider.dart",
    "file:///zapp/project/lib/model/user.dart",
    "file:///zapp/project/lib/resources/auth_methods.dart",
    "file:///zapp/project/lib/screens/signup_screen.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task.dart",
    "package:cloud_firestore_web/src/load_bundle_task_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query.dart",
    "package:cloud_firestore_web/src/query_web.dart",
    "package:cloud_firestore_web/src/collection_reference_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_reference.dart",
    "package:cloud_firestore_web/src/document_reference_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value_factory.dart",
    "package:cloud_firestore_web/src/field_value_factory_web.dart",
    "package:firebase_core_web/src/interop/utils/js.dart",
    "package:cloud_firestore_web/src/interop/firestore.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_transaction.dart",
    "package:cloud_firestore_web/src/transaction_web.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_write_batch.dart",
    "package:cloud_firestore_web/src/write_batch_web.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_multi_factor.dart",
    "package:firebase_auth_web/src/firebase_auth_web_multi_factor.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_confirmation_result.dart",
    "package:firebase_auth_web/src/firebase_auth_web_confirmation_result.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_recaptcha_verifier_factory.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart",
    "package:firebase_auth_web/src/firebase_auth_web_recaptcha_verifier_factory.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user.dart",
    "package:firebase_auth_web/src/firebase_auth_web_user.dart",
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user_credential.dart",
    "package:firebase_auth_web/src/firebase_auth_web_user_credential.dart",
    "package:firebase_auth_web/src/interop/auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/interop/auth.dart",
    "package:firebase_auth_web/src/interop/multi_factor.dart",
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_firebase_storage.dart",
    "package:firebase_storage_web/src/firebase_storage_web.dart",
    "package:image_picker_for_web/src/image_resizer.dart",
    "package:firebase_auth_platform_interface/src/action_code_info.dart",
    "package:firebase_auth_platform_interface/src/action_code_settings.dart",
    "package:firebase_auth_platform_interface/src/additional_user_info.dart",
    "package:firebase_auth_platform_interface/src/auth_credential.dart",
    "package:firebase_auth_platform_interface/src/auth_provider.dart",
    "package:firebase_auth_platform_interface/src/firebase_auth_multi_factor_exception.dart",
    "package:firebase_auth_platform_interface/src/id_token_result.dart",
    "package:firebase_auth_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:firebase_auth_platform_interface/src/providers/apple_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/oauth.dart",
    "package:firebase_auth_platform_interface/src/providers/email_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/facebook_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/github_auth.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/google_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/google_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/microsoft_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/phone_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/saml_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/twitter_auth.dart",
    "package:firebase_auth_platform_interface/src/providers/yahoo_auth.dart",
    "package:firebase_auth_platform_interface/src/types.dart",
    "package:firebase_auth_platform_interface/src/user_info.dart",
    "package:firebase_auth_platform_interface/src/user_metadata.dart",
    "package:firebase_core_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:firebase_core_platform_interface/src/pigeon/mocks.dart",
    "package:firebase_core_platform_interface/src/pigeon/test_api.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/pigeon/test_api.dart",
    "package:cloud_firestore/cloud_firestore.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/collection_reference.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/query.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/document_reference.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/filters.dart",
    "package:cloud_firestore_platform_interface/src/filters.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/firestore.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/transaction.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/write_batch.dart",
    "file:///zapp/project/lib/resources/storage_methods.dart",
    "file:///zapp/project/lib/screens/add_post_screen.dart",
    "file:///zapp/project/lib/screens/feed_screen.dart",
    "file:///zapp/project/lib/screens/profile_screen.dart",
    "file:///zapp/project/lib/screens/search_screen.dart",
    "package:image_picker/image_picker.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/internal/pointer.dart",
    "package:cloud_firestore_platform_interface/src/internal/pointer.dart",
    "package:cloud_firestore_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/utils/firestore_message_codec.dart",
    "package:cloud_firestore_platform_interface/src/blob.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/field_path.dart",
    "package:cloud_firestore_platform_interface/src/field_path.dart",
    "package:cloud_firestore_platform_interface/src/field_path_type.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/geo_point.dart",
    "package:cloud_firestore_platform_interface/src/geo_point.dart",
    "package:cloud_firestore_platform_interface/src/get_options.dart",
    "package:cloud_firestore_platform_interface/src/load_bundle_task_state.dart",
    "package:cloud_firestore_platform_interface/src/persistence_settings.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_aggregate_query.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_aggregate_query_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_collection_reference.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_change.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_document_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_index_definitions.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query_snapshot.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/set_options.dart",
    "package:cloud_firestore_platform_interface/src/set_options.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/settings.dart",
    "package:cloud_firestore_platform_interface/src/settings.dart",
    "package:cloud_firestore_platform_interface/src/snapshot_metadata.dart",
    "package:cloud_firestore_platform_interface/src/timestamp.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.16/lib/_flutterfire_internals.dart",
    "package:cloud_firestore_web/src/utils/decode_utility.dart",
    "package:cloud_firestore_web/src/utils/encode_utility.dart",
    "package:cloud_firestore_web/src/field_value_web.dart",
    "package:cloud_firestore_web/src/aggregate_query_web.dart",
    "package:file_picker/src/platform_file.dart",
    "package:file_picker/src/file_picker_result.dart",
    "package:firebase_core_web/src/interop/app.dart",
    "package:firebase_storage_web/src/interop/storage.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/reference_web.dart",
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_reference.dart",
    "package:firebase_storage_web/src/reference_web.dart",
    "package:mime/src/mime_shared.dart",
    "package:mime/src/mime_multipart_transformer.dart",
    "package:mime/src/mime_type.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/method_channel_firebase_auth.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_firebase_auth.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_multi_factor.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage-11.6.0/lib/src/firebase_storage.dart",
    "package:firebase_storage/firebase_storage.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage-11.6.0/lib/src/reference.dart",
    "package:uuid/uuid.dart",
    "file:///zapp/project/lib/resources/firestore_methods.dart",
    "file:///zapp/project/lib/widgets/post_card.dart",
    "file:///zapp/project/lib/widgets/follow_button.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_field_value_factory.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value_factory.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_firestore.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_firestore.dart",
    "package:file_picker/src/file_picker_io.dart",
    "package:file_picker/src/file_picker_macos.dart",
    "package:file_picker/src/linux/file_picker_linux.dart",
    "package:http_parser/src/authentication_challenge.dart",
    "package:http_parser/src/case_insensitive_map.dart",
    "package:http_parser/src/chunked_coding.dart",
    "package:http_parser/src/media_type.dart",
    "package:firebase_storage_platform_interface/src/full_metadata.dart",
    "package:firebase_storage_platform_interface/src/list_options.dart",
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_list_result.dart",
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_task.dart",
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_task_snapshot.dart",
    "package:firebase_storage_platform_interface/src/put_string_format.dart",
    "package:firebase_storage_platform_interface/src/settable_metadata.dart",
    "package:firebase_storage_platform_interface/src/task_state.dart",
    "package:firebase_storage_web/src/task_web.dart",
    "package:firebase_storage_web/src/utils/metadata_cache.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/method_channel/method_channel_image_picker.dart",
    "package:image_picker_platform_interface/src/method_channel/method_channel_image_picker.dart",
    "package:image_picker_platform_interface/src/types/camera_delegate.dart",
    "package:image_picker_platform_interface/src/types/camera_device.dart",
    "package:image_picker_platform_interface/src/types/image_options.dart",
    "package:image_picker_platform_interface/src/types/image_source.dart",
    "package:image_picker_platform_interface/src/types/lost_data_response.dart",
    "package:image_picker_platform_interface/src/types/media_options.dart",
    "package:image_picker_platform_interface/src/types/media_selection_type.dart",
    "package:image_picker_platform_interface/src/types/multi_image_picker_options.dart",
    "package:image_picker_platform_interface/src/types/retrieve_type.dart",
    "package:mime/src/bound_multipart_stream.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/mime-1.0.4/lib/src/bound_multipart_stream.dart",
    "package:mime/src/magic_number.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user.dart",
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user_credential.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage-11.6.0/lib/src/utils.dart",
    "package:uuid/data.dart",
    "package:uuid/rng.dart",
    "package:uuid/validation.dart",
    "package:uuid/enums.dart",
    "package:uuid/parsing.dart",
    "package:uuid/uuid_value.dart",
    "package:uuid/v1.dart",
    "package:uuid/v4.dart",
    "package:uuid/v5.dart",
    "package:uuid/v6.dart",
    "package:uuid/v7.dart",
    "package:uuid/v8.dart",
    "file:///zapp/project/lib/model/post.dart",
    "file:///zapp/project/lib/screens/comments_screen.dart",
    "file:///zapp/project/lib/widgets/like_animation.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/layouts/quilted.dart",
    "package:flutter_staggered_grid_view/src/layouts/quilted.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/layouts/staired.dart",
    "package:flutter_staggered_grid_view/src/layouts/staired.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/layouts/sliver_patterned_grid_delegate.dart",
    "package:flutter_staggered_grid_view/src/layouts/sliver_patterned_grid_delegate.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/layouts/woven.dart",
    "package:flutter_staggered_grid_view/src/layouts/woven.dart",
    "package:flutter_staggered_grid_view/src/rendering/sliver_masonry_grid.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/rendering/sliver_masonry_grid.dart",
    "package:flutter_staggered_grid_view/src/rendering/sliver_simple_grid_delegate.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/rendering/sliver_simple_grid_delegate.dart",
    "package:flutter_staggered_grid_view/src/widgets/aligned_grid_view.dart",
    "package:flutter_staggered_grid_view/src/widgets/masonry_grid_view.dart",
    "package:flutter_staggered_grid_view/src/widgets/sliver_aligned_grid.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/widgets/sliver_masonry_grid.dart",
    "package:flutter_staggered_grid_view/src/widgets/sliver_masonry_grid.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/widgets/staggered_grid.dart",
    "package:flutter_staggered_grid_view/src/widgets/staggered_grid.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/widgets/staggered_grid_tile.dart",
    "package:flutter_staggered_grid_view/src/rendering/staggered_grid.dart",
    "package:flutter_staggered_grid_view/src/widgets/staggered_grid_tile.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_load_bundle_task.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query_snapshot.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_collection_reference.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_reference.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_transaction.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_transaction.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_write_batch.dart",
    "package:file_picker/src/linux/dialog_handler.dart",
    "package:http_parser/src/chunked_coding/decoder.dart",
    "package:http_parser/src/chunked_coding/encoder.dart",
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_firebase_storage.dart",
    "package:firebase_storage_platform_interface/src/internal/pointer.dart",
    "package:http/src/client.dart",
    "package:http/src/exception.dart",
    "package:http/src/base_request.dart",
    "package:http/src/request.dart",
    "package:http/src/base_response.dart",
    "package:http/src/response.dart",
    "package:http/src/streamed_request.dart",
    "package:http/src/base_client.dart",
    "package:http/src/byte_stream.dart",
    "package:http/src/multipart_file.dart",
    "package:http/src/multipart_request.dart",
    "package:http/src/streamed_response.dart",
    "package:firebase_storage_web/src/list_result_web.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cross_file-0.3.3+6/lib/src/types/html.dart",
    "package:cross_file/src/types/base.dart",
    "package:cross_file/src/types/html.dart",
    "package:image_picker_platform_interface/src/types/picked_file/lost_data.dart",
    "package:image_picker_platform_interface/src/types/picked_file/base.dart",
    "package:image_picker_platform_interface/src/types/picked_file/html.dart",
    "package:sprintf/sprintf.dart",
    "file:///zapp/project/lib/widgets/comment_card.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/widgets/uniform_track.dart",
    "package:flutter_staggered_grid_view/src/widgets/uniform_track.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/rendering/staggered_grid.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_aggregate_query.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_change.dart",
    "package:cloud_firestore_platform_interface/src/method_channel/utils/auto_id_generator.dart",
    "package:file_picker/src/linux/kdialog_handler.dart",
    "package:file_picker/src/linux/qarma_and_zenity_handler.dart",
    "package:firebase_storage_platform_interface/src/pigeon/messages.pigeon.dart",
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_reference.dart",
    "package:http/src/browser_client.dart",
    "package:firebase_storage_web/src/task_snapshot_web.dart",
    "package:crypto/src/digest.dart",
    "package:crypto/src/hash.dart",
    "package:crypto/src/hmac.dart",
    "package:crypto/src/md5.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/md5.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/hash_sink.dart",
    "package:crypto/src/hash_sink.dart",
    "package:crypto/src/sha1.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/sha1.dart",
    "package:crypto/src/sha256.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/sha256.dart",
    "package:crypto/src/sha512.dart",
    "package:flutter_staggered_grid_view/src/rendering/uniform_track.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/rendering/uniform_track.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart",
    "package:typed_data/src/typed_queue.dart",
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_list_result.dart",
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_task.dart",
    "package:crypto/src/digest_sink.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/sha512_slowsinks.dart",
    "package:crypto/src/sha512_slowsinks.dart",
    "package:typed_data/src/typed_buffer.dart",
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_task_snapshot.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T$.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T$.ListOfStringTodynamic().as(C[0] || CT.C0)(T$.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T$.dynamicToNull()));
      }
    }, T$.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[S$.$toString](), stackTrace.toString()]);
      }
    }, T$.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T$.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T$.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T$.VoidToNull())});
    });
  };
  main.MyApp = class MyApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.MyApp.new({key: key});
    }
    build(context) {
      return new provider$.MultiProvider.new({providers: T$.JSArrayOfSingleChildWidget().of([new (T$.ChangeNotifierProviderOfUserProvider()).new({create: dart.fn(_ => new user_provider.UserProvider.new(), T$.BuildContextToUserProvider())})]), child: new app.MaterialApp.new({debugShowCheckedModeBanner: false, title: "Instagram Clone", home: new (T$.StreamBuilderOfUserN()).new({stream: firebase_auth.FirebaseAuth.instance.authStateChanges(), builder: dart.fn((context, snapshot) => {
              if (snapshot.connectionState === async$.ConnectionState.active) {
                if (snapshot.hasData) {
                  return C[1] || CT.C1;
                } else if (snapshot.hasError) {
                  return new basic.Center.new({child: new text$.Text.new(dart.str(snapshot.error))});
                }
              }
              if (snapshot.connectionState === async$.ConnectionState.waiting) {
                return C[2] || CT.C2;
              }
              return C[6] || CT.C6;
            }, T$.BuildContextAndAsyncSnapshotOfUserNToWidget())})})});
    }
  };
  (main.MyApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.MyApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.MyApp.prototype;
  dart.addTypeTests(main.MyApp);
  dart.addTypeCaches(main.MyApp);
  dart.setMethodSignature(main.MyApp, () => ({
    __proto__: dart.getMethods(main.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.MyApp, I[0]);
  main.main = function main$0() {
    return async.async(dart.void, function* main() {
      binding.WidgetsFlutterBinding.ensureInitialized();
      {
        yield firebase_core.Firebase.initializeApp({options: C[7] || CT.C7});
      }
      binding.runApp(C[8] || CT.C8);
    });
  };
  web_plugin_registrant.registerPlugins = function registerPlugins(pluginRegistrar = null) {
    let t0;
    let registrar = (t0 = pluginRegistrar, t0 == null ? plugin_registry.webPluginRegistrar : t0);
    cloud_firestore_web.FirebaseFirestoreWeb.registerWith(registrar);
    file_picker_web.FilePickerWeb.registerWith(registrar);
    firebase_auth_web.FirebaseAuthWeb.registerWith(registrar);
    firebase_core_web.FirebaseCoreWeb.registerWith(registrar);
    firebase_storage_web$.FirebaseStorageWeb.registerWith(registrar);
    image_picker_for_web.ImagePickerPlugin.registerWith(registrar);
    registrar.registerMessageHandler();
  };
  firebase_auth.ConfirmationResult = class ConfirmationResult extends core.Object {
    static ['_#_#tearOff'](_auth, _delegate) {
      return new firebase_auth.ConfirmationResult.__(_auth, _delegate);
    }
    get verificationId() {
      return this[S$._delegate].verificationId;
    }
    confirm(verificationCode) {
      return async.async(firebase_auth.UserCredential, (function* confirm() {
        return new firebase_auth.UserCredential.__(this[S$._auth], yield this[S$._delegate].confirm(verificationCode));
      }).bind(this));
    }
  };
  (firebase_auth.ConfirmationResult.__ = function(_auth, _delegate) {
    this[S$._auth] = _auth;
    this[S$._delegate] = _delegate;
    platform_interface_confirmation_result.ConfirmationResultPlatform.verify(this[S$._delegate]);
  }).prototype = firebase_auth.ConfirmationResult.prototype;
  dart.addTypeTests(firebase_auth.ConfirmationResult);
  dart.addTypeCaches(firebase_auth.ConfirmationResult);
  dart.setMethodSignature(firebase_auth.ConfirmationResult, () => ({
    __proto__: dart.getMethods(firebase_auth.ConfirmationResult.__proto__),
    confirm: dart.fnType(async.Future$(firebase_auth.UserCredential), [core.String])
  }));
  dart.setGetterSignature(firebase_auth.ConfirmationResult, () => ({
    __proto__: dart.getGetters(firebase_auth.ConfirmationResult.__proto__),
    verificationId: core.String
  }));
  dart.setLibraryUri(firebase_auth.ConfirmationResult, I[1]);
  dart.setFieldSignature(firebase_auth.ConfirmationResult, () => ({
    __proto__: dart.getFields(firebase_auth.ConfirmationResult.__proto__),
    [S$._delegate]: dart.fieldType(platform_interface_confirmation_result.ConfirmationResultPlatform),
    [S$._auth]: dart.finalFieldType(firebase_auth.FirebaseAuth)
  }));
  plugin_platform_interface.PlatformInterface = class PlatformInterface extends core.Object {
    static verify(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: true});
    }
    static verifyToken(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: false});
    }
    static _verify(instance, token, opts) {
      let preventConstObject = opts && 'preventConstObject' in opts ? opts.preventConstObject : null;
      if (plugin_platform_interface.MockPlatformInterfaceMixin.is(instance)) {
        let assertionsEnabled = false;
        if (!dart.fn(() => {
          assertionsEnabled = true;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 92, 14, "() {\n        assertionsEnabled = true;\n        return true;\n      }()");
        if (!assertionsEnabled) {
          dart.throw(new core.AssertionError.new("`MockPlatformInterfaceMixin` is not intended for use in release builds."));
        }
        return;
      }
      if (preventConstObject && plugin_platform_interface.PlatformInterface._instanceTokens._get(instance) === (C[10] || CT.C10)) {
        dart.throw(new core.AssertionError.new("`const Object()` cannot be used as the token."));
      }
      if (token !== plugin_platform_interface.PlatformInterface._instanceTokens._get(instance)) {
        dart.throw(new core.AssertionError.new("Platform interfaces must not be implemented with `implements`"));
      }
    }
  };
  (plugin_platform_interface.PlatformInterface.new = function(opts) {
    let token = opts && 'token' in opts ? opts.token : null;
    plugin_platform_interface.PlatformInterface._instanceTokens._set(this, token);
  }).prototype = plugin_platform_interface.PlatformInterface.prototype;
  dart.addTypeTests(plugin_platform_interface.PlatformInterface);
  dart.addTypeCaches(plugin_platform_interface.PlatformInterface);
  dart.setStaticMethodSignature(plugin_platform_interface.PlatformInterface, () => ['verify', 'verifyToken', '_verify']);
  dart.setLibraryUri(plugin_platform_interface.PlatformInterface, I[4]);
  dart.setStaticFieldSignature(plugin_platform_interface.PlatformInterface, () => ['_instanceTokens']);
  dart.defineLazy(plugin_platform_interface.PlatformInterface, {
    /*plugin_platform_interface.PlatformInterface._instanceTokens*/get _instanceTokens() {
      return new (T$.ExpandoOfObject()).new();
    }
  }, false);
  firebase_core_platform_interface.FirebasePluginPlatform = class FirebasePluginPlatform extends plugin_platform_interface.PlatformInterface {
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebasePluginPlatform._token);
    }
    get pluginConstants() {
      let appConstants = T$.MapNOfObjectN$ObjectN().as(firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[S$.$_get](this[S$._appName]));
      if (appConstants != null && appConstants[S$.$_get](this[S$._methodChannelName]) != null) {
        return core.Map.as(dart.nullCheck(appConstants[S$.$_get](this[S$._methodChannelName])));
      }
      return new _js_helper.LinkedMap.new();
    }
  };
  (firebase_core_platform_interface.FirebasePluginPlatform.new = function(_appName, _methodChannelName) {
    this[S$._appName] = _appName;
    this[S$._methodChannelName] = _methodChannelName;
    firebase_core_platform_interface.FirebasePluginPlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebasePluginPlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebasePluginPlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebasePluginPlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebasePluginPlatform);
  dart.setStaticMethodSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ['verify']);
  dart.setGetterSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebasePluginPlatform.__proto__),
    pluginConstants: core.Map
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebasePluginPlatform, I[5]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebasePluginPlatform.__proto__),
    [S$._appName]: dart.finalFieldType(core.String),
    [S$._methodChannelName]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebasePluginPlatform, () => ['_constantsForPluginApps', '_token']);
  dart.defineLazy(firebase_core_platform_interface.FirebasePluginPlatform, {
    /*firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps*/get _constantsForPluginApps() {
      return new _js_helper.LinkedMap.new();
    },
    set _constantsForPluginApps(value) {},
    /*firebase_core_platform_interface.FirebasePluginPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth.FirebaseAuth = class FirebaseAuth extends firebase_core_platform_interface.FirebasePluginPlatform {
    get app() {
      return this[S$.app];
    }
    set app(value) {
      this[S$.app] = value;
    }
    get [S$._delegate]() {
      this[S$._delegatePackingProperty] == null ? this[S$._delegatePackingProperty] = platform_interface_firebase_auth.FirebaseAuthPlatform.instanceFor({app: this.app, pluginConstants: this.pluginConstants}) : null;
      return dart.nullCheck(this[S$._delegatePackingProperty]);
    }
    static ['_#_#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new firebase_auth.FirebaseAuth.__({app: app});
    }
    static get instance() {
      let defaultAppInstance = firebase_core.Firebase.app();
      return firebase_auth.FirebaseAuth.instanceFor({app: defaultAppInstance});
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return firebase_auth.FirebaseAuth.instanceFor({app: app, persistence: persistence});
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let persistence = opts && 'persistence' in opts ? opts.persistence : null;
      return firebase_auth.FirebaseAuth._firebaseAuthInstances[S$.$putIfAbsent](app.name, dart.fn(() => new firebase_auth.FirebaseAuth.__({app: app}), T$.VoidToFirebaseAuth()));
    }
    get currentUser() {
      if (this[S$._delegate].currentUser != null) {
        return new firebase_auth.User.__(this, dart.nullCheck(this[S$._delegate].currentUser));
      }
      return null;
    }
    get languageCode() {
      if (this[S$._delegate].languageCode != null) {
        return this[S$._delegate].languageCode;
      }
      return null;
    }
    useEmulator(origin) {
      return async.async(dart.void, (function* useEmulator() {
        if (!origin[S$.$isNotEmpty]) dart.assertFailed(null, I[2], 95, 12, "origin.isNotEmpty");
        let mappedOrigin = origin;
        if (platform.defaultTargetPlatform === platform.TargetPlatform.android && false) {
          if (mappedOrigin[S$.$startsWith]("http://localhost")) {
            mappedOrigin = mappedOrigin[S$.$replaceFirst]("http://localhost", "http://10.0.2.2");
          } else if (mappedOrigin[S$.$startsWith]("http://127.0.0.1")) {
            mappedOrigin = mappedOrigin[S$.$replaceFirst]("http://127.0.0.1", "http://10.0.2.2");
          }
        }
        let hostPortRegex = core.RegExp.new("^http:\\/\\/([\\w\\d.]+):(\\d+)$");
        let match = hostPortRegex.firstMatch(mappedOrigin);
        if (match == null) {
          dart.throw(new core.ArgumentError.new("firebase.auth().useEmulator() origin format error"));
        }
        let host = dart.nullCheck(match.group(1));
        let port = core.int.parse(dart.nullCheck(match.group(2)));
        yield this.useAuthEmulator(host, port);
      }).bind(this));
    }
    useAuthEmulator(host, port, opts) {
      let automaticHostMapping = opts && 'automaticHostMapping' in opts ? opts.automaticHostMapping : true;
      return async.async(dart.void, (function* useAuthEmulator() {
        let mappedHost = host;
        if (false && platform.defaultTargetPlatform === platform.TargetPlatform.android) {
          if ((mappedHost === "localhost" || mappedHost === "127.0.0.1") && automaticHostMapping) {
            core.print("Mapping Auth Emulator host \"" + mappedHost + "\" to \"10.0.2.2\".");
            mappedHost = "10.0.2.2";
          }
        }
        yield this[S$._delegate].useAuthEmulator(mappedHost, port);
      }).bind(this));
    }
    get tenantId() {
      return this[S$._delegate].tenantId;
    }
    set tenantId(tenantId) {
      this[S$._delegate].tenantId = tenantId;
    }
    applyActionCode(code) {
      return async.async(dart.void, (function* applyActionCode() {
        yield this[S$._delegate].applyActionCode(code);
      }).bind(this));
    }
    checkActionCode(code) {
      return this[S$._delegate].checkActionCode(code);
    }
    confirmPasswordReset(opts) {
      let code = opts && 'code' in opts ? opts.code : null;
      let newPassword = opts && 'newPassword' in opts ? opts.newPassword : null;
      return async.async(dart.void, (function* confirmPasswordReset() {
        yield this[S$._delegate].confirmPasswordReset(code, newPassword);
      }).bind(this));
    }
    createUserWithEmailAndPassword(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      return async.async(firebase_auth.UserCredential, (function* createUserWithEmailAndPassword() {
        return new firebase_auth.UserCredential.__(this, yield this[S$._delegate].createUserWithEmailAndPassword(email, password));
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return this[S$._delegate].fetchSignInMethodsForEmail(email);
    }
    getRedirectResult() {
      return async.async(firebase_auth.UserCredential, (function* getRedirectResult() {
        return new firebase_auth.UserCredential.__(this, yield this[S$._delegate].getRedirectResult());
      }).bind(this));
    }
    isSignInWithEmailLink(emailLink) {
      return this[S$._delegate].isSignInWithEmailLink(emailLink);
    }
    [S$._pipeStreamChanges](stream) {
      return stream.map(T$.UserN(), dart.fn(delegateUser => {
        if (delegateUser == null) {
          return null;
        }
        return new firebase_auth.User.__(this, delegateUser);
      }, T$.UserPlatformNToUserN())).asBroadcastStream({onCancel: dart.fn(sub => sub.cancel(), T$.StreamSubscriptionOfUserNTovoid())});
    }
    authStateChanges() {
      return this[S$._pipeStreamChanges](this[S$._delegate].authStateChanges());
    }
    idTokenChanges() {
      return this[S$._pipeStreamChanges](this[S$._delegate].idTokenChanges());
    }
    userChanges() {
      return this[S$._pipeStreamChanges](this[S$._delegate].userChanges());
    }
    sendPasswordResetEmail(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let actionCodeSettings = opts && 'actionCodeSettings' in opts ? opts.actionCodeSettings : null;
      return this[S$._delegate].sendPasswordResetEmail(email, actionCodeSettings);
    }
    sendSignInLinkToEmail(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let actionCodeSettings = opts && 'actionCodeSettings' in opts ? opts.actionCodeSettings : null;
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        if (actionCodeSettings.handleCodeInApp !== true) {
          dart.throw(new core.ArgumentError.new("The [handleCodeInApp] value of [ActionCodeSettings] must be `true`."));
        }
        yield this[S$._delegate].sendSignInLinkToEmail(email, actionCodeSettings);
      }).bind(this));
    }
    setLanguageCode(languageCode) {
      return this[S$._delegate].setLanguageCode(languageCode);
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : false;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return this[S$._delegate].setSettings({appVerificationDisabledForTesting: appVerificationDisabledForTesting, userAccessGroup: userAccessGroup, phoneNumber: phoneNumber, smsCode: smsCode, forceRecaptchaFlow: forceRecaptchaFlow});
    }
    setPersistence(persistence) {
      return async.async(dart.void, (function* setPersistence() {
        return this[S$._delegate].setPersistence(persistence);
      }).bind(this));
    }
    signInAnonymously() {
      return async.async(firebase_auth.UserCredential, (function* signInAnonymously() {
        return new firebase_auth.UserCredential.__(this, yield this[S$._delegate].signInAnonymously());
      }).bind(this));
    }
    signInWithCredential(credential) {
      return async.async(firebase_auth.UserCredential, (function* signInWithCredential() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate].signInWithCredential(credential));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCustomToken(token) {
      return async.async(firebase_auth.UserCredential, (function* signInWithCustomToken() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate].signInWithCustomToken(token));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      return async.async(firebase_auth.UserCredential, (function* signInWithEmailAndPassword() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate].signInWithEmailAndPassword(email, password));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailLink(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
      return async.async(firebase_auth.UserCredential, (function* signInWithEmailLink() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate].signInWithEmailLink(email, emailLink));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithAuthProvider(provider) {
      return async.async(firebase_auth.UserCredential, (function* signInWithAuthProvider() {
        return this.signInWithProvider(provider);
      }).bind(this));
    }
    signInWithProvider(provider) {
      return async.async(firebase_auth.UserCredential, (function* signInWithProvider() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate].signInWithProvider(provider));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPhoneNumber(phoneNumber, verifier = null) {
      return async.async(firebase_auth.ConfirmationResult, (function* signInWithPhoneNumber() {
        if (!phoneNumber[S$.$isNotEmpty]) dart.assertFailed(null, I[2], 666, 12, "phoneNumber.isNotEmpty");
        let mustClear = verifier == null;
        verifier == null ? verifier = firebase_auth.RecaptchaVerifier.new({auth: this[S$._delegate]}) : null;
        let result = (yield this[S$._delegate].signInWithPhoneNumber(phoneNumber, verifier.delegate));
        if (mustClear) {
          verifier.clear();
        }
        return new firebase_auth.ConfirmationResult.__(this, result);
      }).bind(this));
    }
    signInWithPopup(provider) {
      return async.async(firebase_auth.UserCredential, (function* signInWithPopup() {
        try {
          return new firebase_auth.UserCredential.__(this, yield this[S$._delegate].signInWithPopup(provider));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithRedirect(provider) {
      try {
        return this[S$._delegate].signInWithRedirect(provider);
      } catch (e$) {
        let ex = dart.getThrown(e$);
        if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
          let e = ex;
          dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this, e));
        } else if (core.Object.is(ex)) {
          let e = ex;
          dart.rethrow(e$);
        } else
          throw e$;
      }
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        yield this[S$._delegate].signOut();
      }).bind(this));
    }
    verifyPasswordResetCode(code) {
      return this[S$._delegate].verifyPasswordResetCode(code);
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[9] || CT.C9;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      if (!(phoneNumber != null || multiFactorInfo != null)) dart.assertFailed("Either phoneNumber or multiFactorInfo must be provided.", I[2], 801, 7, "phoneNumber != null || multiFactorInfo != null");
      return this[S$._delegate].verifyPhoneNumber({phoneNumber: phoneNumber, multiFactorInfo: multiFactorInfo, timeout: timeout, forceResendingToken: forceResendingToken, verificationCompleted: verificationCompleted, verificationFailed: verificationFailed, codeSent: codeSent, codeAutoRetrievalTimeout: codeAutoRetrievalTimeout, autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting, multiFactorSession: multiFactorSession});
    }
    revokeTokenWithAuthorizationCode(authorizationCode) {
      return this[S$._delegate].revokeTokenWithAuthorizationCode(authorizationCode);
    }
    toString() {
      return "FirebaseAuth(app: " + this.app.name + ")";
    }
  };
  (firebase_auth.FirebaseAuth.__ = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[S$._delegatePackingProperty] = null;
    this[S$.app] = app;
    firebase_auth.FirebaseAuth.__proto__.new.call(this, app.name, "plugins.flutter.io/firebase_auth");
    ;
  }).prototype = firebase_auth.FirebaseAuth.prototype;
  dart.addTypeTests(firebase_auth.FirebaseAuth);
  dart.addTypeCaches(firebase_auth.FirebaseAuth);
  dart.setMethodSignature(firebase_auth.FirebaseAuth, () => ({
    __proto__: dart.getMethods(firebase_auth.FirebaseAuth.__proto__),
    useEmulator: dart.fnType(async.Future$(dart.void), [core.String]),
    useAuthEmulator: dart.fnType(async.Future$(dart.void), [core.String, core.int], {automaticHostMapping: core.bool}, {}),
    applyActionCode: dart.fnType(async.Future$(dart.void), [core.String]),
    checkActionCode: dart.fnType(async.Future$(action_code_info.ActionCodeInfo), [core.String]),
    confirmPasswordReset: dart.fnType(async.Future$(dart.void), [], {}, {code: core.String, newPassword: core.String}),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(firebase_auth.UserCredential), [], {}, {email: core.String, password: core.String}),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(core.String)), [core.String]),
    getRedirectResult: dart.fnType(async.Future$(firebase_auth.UserCredential), []),
    isSignInWithEmailLink: dart.fnType(core.bool, [core.String]),
    [S$._pipeStreamChanges]: dart.fnType(async.Stream$(dart.nullable(firebase_auth.User)), [async.Stream$(dart.nullable(platform_interface_user.UserPlatform))]),
    authStateChanges: dart.fnType(async.Stream$(dart.nullable(firebase_auth.User)), []),
    idTokenChanges: dart.fnType(async.Stream$(dart.nullable(firebase_auth.User)), []),
    userChanges: dart.fnType(async.Stream$(dart.nullable(firebase_auth.User)), []),
    sendPasswordResetEmail: dart.fnType(async.Future$(dart.void), [], {actionCodeSettings: dart.nullable(action_code_settings.ActionCodeSettings)}, {email: core.String}),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [], {}, {actionCodeSettings: action_code_settings.ActionCodeSettings, email: core.String}),
    setLanguageCode: dart.fnType(async.Future$(dart.void), [dart.nullable(core.String)]),
    setSettings: dart.fnType(async.Future$(dart.void), [], {appVerificationDisabledForTesting: core.bool, forceRecaptchaFlow: dart.nullable(core.bool), phoneNumber: dart.nullable(core.String), smsCode: dart.nullable(core.String), userAccessGroup: dart.nullable(core.String)}, {}),
    setPersistence: dart.fnType(async.Future$(dart.void), [types.Persistence]),
    signInAnonymously: dart.fnType(async.Future$(firebase_auth.UserCredential), []),
    signInWithCredential: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_credential.AuthCredential]),
    signInWithCustomToken: dart.fnType(async.Future$(firebase_auth.UserCredential), [core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(firebase_auth.UserCredential), [], {}, {email: core.String, password: core.String}),
    signInWithEmailLink: dart.fnType(async.Future$(firebase_auth.UserCredential), [], {}, {email: core.String, emailLink: core.String}),
    signInWithAuthProvider: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider.AuthProvider]),
    signInWithProvider: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider.AuthProvider]),
    signInWithPhoneNumber: dart.fnType(async.Future$(firebase_auth.ConfirmationResult), [core.String], [dart.nullable(firebase_auth.RecaptchaVerifier)]),
    signInWithPopup: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider.AuthProvider]),
    signInWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider.AuthProvider]),
    signOut: dart.fnType(async.Future$(dart.void), []),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [core.String]),
    verifyPhoneNumber: dart.fnType(async.Future$(dart.void), [], {autoRetrievedSmsCodeForTesting: dart.nullable(core.String), forceResendingToken: dart.nullable(core.int), multiFactorInfo: dart.nullable(platform_interface_multi_factor.PhoneMultiFactorInfo), multiFactorSession: dart.nullable(platform_interface_multi_factor.MultiFactorSession), phoneNumber: dart.nullable(core.String), timeout: core.Duration}, {codeAutoRetrievalTimeout: dart.fnType(dart.void, [core.String]), codeSent: dart.fnType(dart.void, [core.String, dart.nullable(core.int)]), verificationCompleted: dart.fnType(dart.void, [phone_auth.PhoneAuthCredential]), verificationFailed: dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])}),
    revokeTokenWithAuthorizationCode: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setStaticMethodSignature(firebase_auth.FirebaseAuth, () => ['instanceFor']);
  dart.setGetterSignature(firebase_auth.FirebaseAuth, () => ({
    __proto__: dart.getGetters(firebase_auth.FirebaseAuth.__proto__),
    [S$._delegate]: platform_interface_firebase_auth.FirebaseAuthPlatform,
    currentUser: dart.nullable(firebase_auth.User),
    languageCode: dart.nullable(core.String),
    tenantId: dart.nullable(core.String)
  }));
  dart.setSetterSignature(firebase_auth.FirebaseAuth, () => ({
    __proto__: dart.getSetters(firebase_auth.FirebaseAuth.__proto__),
    tenantId: dart.nullable(core.String)
  }));
  dart.setStaticGetterSignature(firebase_auth.FirebaseAuth, () => ['instance']);
  dart.setLibraryUri(firebase_auth.FirebaseAuth, I[1]);
  dart.setFieldSignature(firebase_auth.FirebaseAuth, () => ({
    __proto__: dart.getFields(firebase_auth.FirebaseAuth.__proto__),
    [S$._delegatePackingProperty]: dart.fieldType(dart.nullable(platform_interface_firebase_auth.FirebaseAuthPlatform)),
    app: dart.fieldType(firebase_core.FirebaseApp)
  }));
  dart.setStaticFieldSignature(firebase_auth.FirebaseAuth, () => ['_firebaseAuthInstances']);
  dart.defineExtensionMethods(firebase_auth.FirebaseAuth, ['toString']);
  dart.defineLazy(firebase_auth.FirebaseAuth, {
    /*firebase_auth.FirebaseAuth._firebaseAuthInstances*/get _firebaseAuthInstances() {
      return new (T$.IdentityMapOfString$FirebaseAuth()).new();
    },
    set _firebaseAuthInstances(value) {}
  }, false);
  firebase_auth.MultiFactor = class MultiFactor extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new firebase_auth.MultiFactor.__(_delegate);
    }
    getSession() {
      return this[S$._delegate].getSession();
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      return async.async(dart.void, (function* enroll() {
        if (platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.is(assertion[S$._delegate])) {
          if (!(displayName != null)) dart.assertFailed("displayName is mandatory for TOTP", I[6], 28, 14, "displayName != null");
        }
        return this[S$._delegate].enroll(assertion[S$._delegate], {displayName: displayName});
      }).bind(this));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      if (!(factorUid != null && multiFactorInfo == null || factorUid == null && multiFactorInfo != null)) dart.assertFailed("Exactly one of `factorUid` or `multiFactorInfo` must be provided", I[6], 40, 7, "(factorUid != null && multiFactorInfo == null) ||\n          (factorUid == null && multiFactorInfo != null)");
      return this[S$._delegate].unenroll({factorUid: factorUid, multiFactorInfo: multiFactorInfo});
    }
    getEnrolledFactors() {
      return this[S$._delegate].getEnrolledFactors();
    }
  };
  (firebase_auth.MultiFactor.__ = function(_delegate) {
    this[S$._delegate] = _delegate;
    ;
  }).prototype = firebase_auth.MultiFactor.prototype;
  dart.addTypeTests(firebase_auth.MultiFactor);
  dart.addTypeCaches(firebase_auth.MultiFactor);
  dart.setMethodSignature(firebase_auth.MultiFactor, () => ({
    __proto__: dart.getMethods(firebase_auth.MultiFactor.__proto__),
    getSession: dart.fnType(async.Future$(platform_interface_multi_factor.MultiFactorSession), []),
    enroll: dart.fnType(async.Future$(dart.void), [firebase_auth.MultiFactorAssertion], {displayName: dart.nullable(core.String)}, {}),
    unenroll: dart.fnType(async.Future$(dart.void), [], {factorUid: dart.nullable(core.String), multiFactorInfo: dart.nullable(platform_interface_multi_factor.MultiFactorInfo)}, {}),
    getEnrolledFactors: dart.fnType(async.Future$(core.List$(platform_interface_multi_factor.MultiFactorInfo)), [])
  }));
  dart.setLibraryUri(firebase_auth.MultiFactor, I[1]);
  dart.setFieldSignature(firebase_auth.MultiFactor, () => ({
    __proto__: dart.getFields(firebase_auth.MultiFactor.__proto__),
    [S$._delegate]: dart.fieldType(platform_interface_multi_factor.MultiFactorPlatform)
  }));
  firebase_auth.PhoneMultiFactorGenerator = class PhoneMultiFactorGenerator extends core.Object {
    static getAssertion(credential) {
      let assertion = platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.instance.getAssertion(credential);
      return new firebase_auth.MultiFactorAssertion.__(assertion);
    }
    static ['_#new#tearOff']() {
      return new firebase_auth.PhoneMultiFactorGenerator.new();
    }
  };
  (firebase_auth.PhoneMultiFactorGenerator.new = function() {
    ;
  }).prototype = firebase_auth.PhoneMultiFactorGenerator.prototype;
  dart.addTypeTests(firebase_auth.PhoneMultiFactorGenerator);
  dart.addTypeCaches(firebase_auth.PhoneMultiFactorGenerator);
  dart.setStaticMethodSignature(firebase_auth.PhoneMultiFactorGenerator, () => ['getAssertion']);
  dart.setLibraryUri(firebase_auth.PhoneMultiFactorGenerator, I[1]);
  firebase_auth.TotpMultiFactorGenerator = class TotpMultiFactorGenerator extends core.Object {
    static generateSecret(session) {
      return async.async(firebase_auth.TotpSecret, function* generateSecret() {
        let secret = (yield platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.instance.generateSecret(session));
        return new firebase_auth.TotpSecret.__(secret.codeIntervalSeconds, secret.codeLength, secret.enrollmentCompletionDeadline, secret.hashingAlgorithm, secret.secretKey, secret);
      });
    }
    static getAssertionForEnrollment(secret, oneTimePassword) {
      return async.async(firebase_auth.MultiFactorAssertion, function* getAssertionForEnrollment() {
        let assertion = (yield platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.instance.getAssertionForEnrollment(secret[S$._instance], oneTimePassword));
        return new firebase_auth.MultiFactorAssertion.__(assertion);
      });
    }
    static getAssertionForSignIn(enrollmentId, oneTimePassword) {
      return async.async(firebase_auth.MultiFactorAssertion, function* getAssertionForSignIn() {
        let assertion = (yield platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.instance.getAssertionForSignIn(enrollmentId, oneTimePassword));
        return new firebase_auth.MultiFactorAssertion.__(assertion);
      });
    }
    static ['_#new#tearOff']() {
      return new firebase_auth.TotpMultiFactorGenerator.new();
    }
  };
  (firebase_auth.TotpMultiFactorGenerator.new = function() {
    ;
  }).prototype = firebase_auth.TotpMultiFactorGenerator.prototype;
  dart.addTypeTests(firebase_auth.TotpMultiFactorGenerator);
  dart.addTypeCaches(firebase_auth.TotpMultiFactorGenerator);
  dart.setStaticMethodSignature(firebase_auth.TotpMultiFactorGenerator, () => ['generateSecret', 'getAssertionForEnrollment', 'getAssertionForSignIn']);
  dart.setLibraryUri(firebase_auth.TotpMultiFactorGenerator, I[1]);
  firebase_auth.TotpSecret = class TotpSecret extends core.Object {
    get codeIntervalSeconds() {
      return this[S$.codeIntervalSeconds];
    }
    set codeIntervalSeconds(value) {
      super.codeIntervalSeconds = value;
    }
    get codeLength() {
      return this[S$.codeLength];
    }
    set codeLength(value) {
      super.codeLength = value;
    }
    get enrollmentCompletionDeadline() {
      return this[S$.enrollmentCompletionDeadline];
    }
    set enrollmentCompletionDeadline(value) {
      super.enrollmentCompletionDeadline = value;
    }
    get hashingAlgorithm() {
      return this[S$.hashingAlgorithm];
    }
    set hashingAlgorithm(value) {
      super.hashingAlgorithm = value;
    }
    get secretKey() {
      return this[S$.secretKey];
    }
    set secretKey(value) {
      super.secretKey = value;
    }
    static ['_#_#tearOff'](codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey, _instance) {
      return new firebase_auth.TotpSecret.__(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey, _instance);
    }
    generateQrCodeUrl(opts) {
      let accountName = opts && 'accountName' in opts ? opts.accountName : null;
      let issuer = opts && 'issuer' in opts ? opts.issuer : null;
      return this[S$._instance].generateQrCodeUrl({accountName: accountName, issuer: issuer});
    }
    openInOtpApp(qrCodeUrl) {
      return async.async(dart.void, (function* openInOtpApp() {
        yield this[S$._instance].openInOtpApp(qrCodeUrl);
      }).bind(this));
    }
  };
  (firebase_auth.TotpSecret.__ = function(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey, _instance) {
    this[S$.codeIntervalSeconds] = codeIntervalSeconds;
    this[S$.codeLength] = codeLength;
    this[S$.enrollmentCompletionDeadline] = enrollmentCompletionDeadline;
    this[S$.hashingAlgorithm] = hashingAlgorithm;
    this[S$.secretKey] = secretKey;
    this[S$._instance] = _instance;
    ;
  }).prototype = firebase_auth.TotpSecret.prototype;
  dart.addTypeTests(firebase_auth.TotpSecret);
  dart.addTypeCaches(firebase_auth.TotpSecret);
  dart.setMethodSignature(firebase_auth.TotpSecret, () => ({
    __proto__: dart.getMethods(firebase_auth.TotpSecret.__proto__),
    generateQrCodeUrl: dart.fnType(async.Future$(core.String), [], {accountName: dart.nullable(core.String), issuer: dart.nullable(core.String)}, {}),
    openInOtpApp: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setLibraryUri(firebase_auth.TotpSecret, I[1]);
  dart.setFieldSignature(firebase_auth.TotpSecret, () => ({
    __proto__: dart.getFields(firebase_auth.TotpSecret.__proto__),
    [S$._instance]: dart.finalFieldType(platform_interface_multi_factor.TotpSecretPlatform),
    codeIntervalSeconds: dart.finalFieldType(dart.nullable(core.int)),
    codeLength: dart.finalFieldType(dart.nullable(core.int)),
    enrollmentCompletionDeadline: dart.finalFieldType(dart.nullable(core.DateTime)),
    hashingAlgorithm: dart.finalFieldType(dart.nullable(core.String)),
    secretKey: dart.finalFieldType(core.String)
  }));
  firebase_auth.MultiFactorAssertion = class MultiFactorAssertion extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new firebase_auth.MultiFactorAssertion.__(_delegate);
    }
  };
  (firebase_auth.MultiFactorAssertion.__ = function(_delegate) {
    this[S$._delegate] = _delegate;
    platform_interface_multi_factor.MultiFactorAssertionPlatform.verify(this[S$._delegate]);
  }).prototype = firebase_auth.MultiFactorAssertion.prototype;
  dart.addTypeTests(firebase_auth.MultiFactorAssertion);
  dart.addTypeCaches(firebase_auth.MultiFactorAssertion);
  dart.setLibraryUri(firebase_auth.MultiFactorAssertion, I[1]);
  dart.setFieldSignature(firebase_auth.MultiFactorAssertion, () => ({
    __proto__: dart.getFields(firebase_auth.MultiFactorAssertion.__proto__),
    [S$._delegate]: dart.finalFieldType(platform_interface_multi_factor.MultiFactorAssertionPlatform)
  }));
  firebase_auth.MultiFactorResolver = class MultiFactorResolver extends core.Object {
    static ['_#_#tearOff'](_auth, _delegate) {
      return new firebase_auth.MultiFactorResolver.__(_auth, _delegate);
    }
    get hints() {
      return this[S$._delegate].hints;
    }
    get session() {
      return this[S$._delegate].session;
    }
    resolveSignIn(assertion) {
      return async.async(firebase_auth.UserCredential, (function* resolveSignIn() {
        let credential = (yield this[S$._delegate].resolveSignIn(assertion[S$._delegate]));
        return new firebase_auth.UserCredential.__(this[S$._auth], credential);
      }).bind(this));
    }
  };
  (firebase_auth.MultiFactorResolver.__ = function(_auth, _delegate) {
    this[S$._auth] = _auth;
    this[S$._delegate] = _delegate;
    platform_interface_multi_factor.MultiFactorResolverPlatform.verify(this[S$._delegate]);
  }).prototype = firebase_auth.MultiFactorResolver.prototype;
  dart.addTypeTests(firebase_auth.MultiFactorResolver);
  dart.addTypeCaches(firebase_auth.MultiFactorResolver);
  dart.setMethodSignature(firebase_auth.MultiFactorResolver, () => ({
    __proto__: dart.getMethods(firebase_auth.MultiFactorResolver.__proto__),
    resolveSignIn: dart.fnType(async.Future$(firebase_auth.UserCredential), [firebase_auth.MultiFactorAssertion])
  }));
  dart.setGetterSignature(firebase_auth.MultiFactorResolver, () => ({
    __proto__: dart.getGetters(firebase_auth.MultiFactorResolver.__proto__),
    hints: core.List$(platform_interface_multi_factor.MultiFactorInfo),
    session: platform_interface_multi_factor.MultiFactorSession
  }));
  dart.setLibraryUri(firebase_auth.MultiFactorResolver, I[1]);
  dart.setFieldSignature(firebase_auth.MultiFactorResolver, () => ({
    __proto__: dart.getFields(firebase_auth.MultiFactorResolver.__proto__),
    [S$._auth]: dart.finalFieldType(firebase_auth.FirebaseAuth),
    [S$._delegate]: dart.finalFieldType(platform_interface_multi_factor.MultiFactorResolverPlatform)
  }));
  firebase_core_platform_interface.FirebaseException = class FirebaseException extends core.Object {
    get plugin() {
      return this[S$.plugin];
    }
    set plugin(value) {
      super.plugin = value;
    }
    get message() {
      return this[S$.message];
    }
    set message(value) {
      super.message = value;
    }
    get code() {
      return this[S$.code];
    }
    set code(value) {
      super.code = value;
    }
    get stackTrace() {
      return this[S$.stackTrace];
    }
    set stackTrace(value) {
      super.stackTrace = value;
    }
    static ['_#new#tearOff'](opts) {
      let plugin = opts && 'plugin' in opts ? opts.plugin : null;
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let stackTrace = opts && 'stackTrace' in opts ? opts.stackTrace : null;
      return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, message: message, code: code, stackTrace: stackTrace});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseException.is(other)) return false;
      return other.hashCode === this.hashCode;
    }
    get hashCode() {
      return core.Object.hash(this.plugin, this.code, this.message);
    }
    toString() {
      let output = "[" + this.plugin + "/" + this.code + "] " + dart.str(this.message);
      if (this.stackTrace != null) {
        output = output + ("\n\n" + dart.str(this.stackTrace));
      }
      return output;
    }
  };
  (firebase_core_platform_interface.FirebaseException.new = function(opts) {
    let t14;
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let stackTrace = opts && 'stackTrace' in opts ? opts.stackTrace : null;
    this[S$.plugin] = plugin;
    this[S$.message] = message;
    this[S$.stackTrace] = stackTrace;
    this[S$.code] = (t14 = code, t14 == null ? "unknown" : t14);
    ;
  }).prototype = firebase_core_platform_interface.FirebaseException.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseException);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseException);
  firebase_core_platform_interface.FirebaseException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseException, I[5]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseException, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseException.__proto__),
    plugin: dart.finalFieldType(core.String),
    message: dart.finalFieldType(dart.nullable(core.String)),
    code: dart.finalFieldType(core.String),
    stackTrace: dart.finalFieldType(dart.nullable(core.StackTrace))
  }));
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseException, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseException, ['hashCode']);
  firebase_auth_exception.FirebaseAuthException = class FirebaseAuthException extends firebase_core_platform_interface.FirebaseException {
    get email() {
      return this[S$.email];
    }
    set email(value) {
      super.email = value;
    }
    get credential() {
      return this[S$.credential];
    }
    set credential(value) {
      super.credential = value;
    }
    get phoneNumber() {
      return this[S$.phoneNumber];
    }
    set phoneNumber(value) {
      super.phoneNumber = value;
    }
    get tenantId() {
      return this[S$.tenantId];
    }
    set tenantId(value) {
      super.tenantId = value;
    }
    static ['_#new#tearOff'](opts) {
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let credential = opts && 'credential' in opts ? opts.credential : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      return new firebase_auth_exception.FirebaseAuthException.new({message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId});
    }
  };
  (firebase_auth_exception.FirebaseAuthException.new = function(opts) {
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    this[S$.email] = email;
    this[S$.credential] = credential;
    this[S$.phoneNumber] = phoneNumber;
    this[S$.tenantId] = tenantId;
    firebase_auth_exception.FirebaseAuthException.__proto__.new.call(this, {plugin: "firebase_auth", message: message, code: code});
    ;
  }).prototype = firebase_auth_exception.FirebaseAuthException.prototype;
  dart.addTypeTests(firebase_auth_exception.FirebaseAuthException);
  dart.addTypeCaches(firebase_auth_exception.FirebaseAuthException);
  firebase_auth_exception.FirebaseAuthException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_auth_exception.FirebaseAuthException, I[7]);
  dart.setFieldSignature(firebase_auth_exception.FirebaseAuthException, () => ({
    __proto__: dart.getFields(firebase_auth_exception.FirebaseAuthException.__proto__),
    email: dart.finalFieldType(dart.nullable(core.String)),
    credential: dart.finalFieldType(dart.nullable(auth_credential.AuthCredential)),
    phoneNumber: dart.finalFieldType(dart.nullable(core.String)),
    tenantId: dart.finalFieldType(dart.nullable(core.String))
  }));
  firebase_auth.FirebaseAuthMultiFactorException = class FirebaseAuthMultiFactorException extends firebase_auth_exception.FirebaseAuthException {
    static ['_#_#tearOff'](_auth, _delegate) {
      return new firebase_auth.FirebaseAuthMultiFactorException.__(_auth, _delegate);
    }
    get resolver() {
      return new firebase_auth.MultiFactorResolver.__(this[S$._auth], this[S$._delegate].resolver);
    }
  };
  (firebase_auth.FirebaseAuthMultiFactorException.__ = function(_auth, _delegate) {
    this[S$._auth] = _auth;
    this[S$._delegate] = _delegate;
    firebase_auth.FirebaseAuthMultiFactorException.__proto__.new.call(this, {code: _delegate.code, message: _delegate.message, email: _delegate.email, credential: _delegate.credential, phoneNumber: _delegate.phoneNumber, tenantId: _delegate.tenantId});
    ;
  }).prototype = firebase_auth.FirebaseAuthMultiFactorException.prototype;
  dart.addTypeTests(firebase_auth.FirebaseAuthMultiFactorException);
  dart.addTypeCaches(firebase_auth.FirebaseAuthMultiFactorException);
  dart.setGetterSignature(firebase_auth.FirebaseAuthMultiFactorException, () => ({
    __proto__: dart.getGetters(firebase_auth.FirebaseAuthMultiFactorException.__proto__),
    resolver: firebase_auth.MultiFactorResolver
  }));
  dart.setLibraryUri(firebase_auth.FirebaseAuthMultiFactorException, I[1]);
  dart.setFieldSignature(firebase_auth.FirebaseAuthMultiFactorException, () => ({
    __proto__: dart.getFields(firebase_auth.FirebaseAuthMultiFactorException.__proto__),
    [S$._auth]: dart.finalFieldType(firebase_auth.FirebaseAuth),
    [S$._delegate]: dart.finalFieldType(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform)
  }));
  firebase_auth.RecaptchaVerifier = class RecaptchaVerifier extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new firebase_auth.RecaptchaVerifier.__(_delegate);
    }
    static new(opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[11] || CT.C11;
      let theme = opts && 'theme' in opts ? opts.theme : C[12] || CT.C12;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      return new firebase_auth.RecaptchaVerifier.__(firebase_auth.RecaptchaVerifier._factory.delegateFor({auth: auth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired}));
    }
    static ['_#new#tearOff'](opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[11] || CT.C11;
      let theme = opts && 'theme' in opts ? opts.theme : C[12] || CT.C12;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      return firebase_auth.RecaptchaVerifier.new({auth: auth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired});
    }
    get delegate() {
      return this[S$._delegate];
    }
    get type() {
      return this[S$._delegate].type;
    }
    clear() {
      return this[S$._delegate].clear();
    }
    render() {
      return async.async(core.int, (function* render() {
        return this[S$._delegate].render();
      }).bind(this));
    }
    verify() {
      return async.async(core.String, (function* verify() {
        return this[S$._delegate].verify();
      }).bind(this));
    }
  };
  (firebase_auth.RecaptchaVerifier.__ = function(_delegate) {
    this[S$._delegate] = _delegate;
    ;
  }).prototype = firebase_auth.RecaptchaVerifier.prototype;
  dart.addTypeTests(firebase_auth.RecaptchaVerifier);
  dart.addTypeCaches(firebase_auth.RecaptchaVerifier);
  dart.setMethodSignature(firebase_auth.RecaptchaVerifier, () => ({
    __proto__: dart.getMethods(firebase_auth.RecaptchaVerifier.__proto__),
    clear: dart.fnType(dart.void, []),
    render: dart.fnType(async.Future$(core.int), []),
    verify: dart.fnType(async.Future$(core.String), [])
  }));
  dart.setStaticMethodSignature(firebase_auth.RecaptchaVerifier, () => ['new']);
  dart.setGetterSignature(firebase_auth.RecaptchaVerifier, () => ({
    __proto__: dart.getGetters(firebase_auth.RecaptchaVerifier.__proto__),
    delegate: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform,
    type: core.String
  }));
  dart.setLibraryUri(firebase_auth.RecaptchaVerifier, I[1]);
  dart.setFieldSignature(firebase_auth.RecaptchaVerifier, () => ({
    __proto__: dart.getFields(firebase_auth.RecaptchaVerifier.__proto__),
    [S$._delegate]: dart.fieldType(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform)
  }));
  dart.setStaticFieldSignature(firebase_auth.RecaptchaVerifier, () => ['_factory']);
  dart.defineLazy(firebase_auth.RecaptchaVerifier, {
    /*firebase_auth.RecaptchaVerifier._factory*/get _factory() {
      return platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.instance;
    }
  }, false);
  firebase_auth.User = class User extends core.Object {
    static ['_#_#tearOff'](_auth, _delegate) {
      return new firebase_auth.User.__(_auth, _delegate);
    }
    get displayName() {
      return this[S$._delegate].displayName;
    }
    get email() {
      return this[S$._delegate].email;
    }
    get emailVerified() {
      return this[S$._delegate].isEmailVerified;
    }
    get isAnonymous() {
      return this[S$._delegate].isAnonymous;
    }
    get metadata() {
      return this[S$._delegate].metadata;
    }
    get phoneNumber() {
      return this[S$._delegate].phoneNumber;
    }
    get photoURL() {
      return this[S$._delegate].photoURL;
    }
    get providerData() {
      return this[S$._delegate].providerData;
    }
    get refreshToken() {
      return this[S$._delegate].refreshToken;
    }
    get tenantId() {
      return this[S$._delegate].tenantId;
    }
    get uid() {
      return this[S$._delegate].uid;
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        return this[S$._delegate].delete();
      }).bind(this));
    }
    getIdToken(forceRefresh = false) {
      return this[S$._delegate].getIdToken(forceRefresh);
    }
    getIdTokenResult(forceRefresh = false) {
      return this[S$._delegate].getIdTokenResult(forceRefresh);
    }
    linkWithCredential(credential) {
      return async.async(firebase_auth.UserCredential, (function* linkWithCredential() {
        try {
          return new firebase_auth.UserCredential.__(this[S$._auth], yield this[S$._delegate].linkWithCredential(credential));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithProvider(provider) {
      return async.async(firebase_auth.UserCredential, (function* linkWithProvider() {
        try {
          return new firebase_auth.UserCredential.__(this[S$._auth], yield this[S$._delegate].linkWithProvider(provider));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithProvider(provider) {
      return async.async(firebase_auth.UserCredential, (function* reauthenticateWithProvider() {
        try {
          return new firebase_auth.UserCredential.__(this[S$._auth], yield this[S$._delegate].reauthenticateWithProvider(provider));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithPopup(provider) {
      return async.async(firebase_auth.UserCredential, (function* reauthenticateWithPopup() {
        return new firebase_auth.UserCredential.__(this[S$._auth], yield this[S$._delegate].reauthenticateWithPopup(provider));
      }).bind(this));
    }
    reauthenticateWithRedirect(provider) {
      return async.async(dart.void, (function* reauthenticateWithRedirect() {
        yield this[S$._delegate].reauthenticateWithRedirect(provider);
      }).bind(this));
    }
    linkWithPopup(provider) {
      return async.async(firebase_auth.UserCredential, (function* linkWithPopup() {
        try {
          return new firebase_auth.UserCredential.__(this[S$._auth], yield this[S$._delegate].linkWithPopup(provider));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithRedirect(provider) {
      return async.async(dart.void, (function* linkWithRedirect() {
        try {
          yield this[S$._delegate].linkWithRedirect(provider);
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithPhoneNumber(phoneNumber, verifier = null) {
      return async.async(firebase_auth.ConfirmationResult, (function* linkWithPhoneNumber() {
        if (!phoneNumber[S$.$isNotEmpty]) dart.assertFailed(null, I[8], 490, 12, "phoneNumber.isNotEmpty");
        let mustClear = verifier == null;
        verifier == null ? verifier = firebase_auth.RecaptchaVerifier.new({auth: this[S$._delegate].auth}) : null;
        try {
          let result = (yield this[S$._delegate].linkWithPhoneNumber(phoneNumber, verifier.delegate));
          if (mustClear) {
            verifier.clear();
          }
          return new firebase_auth.ConfirmationResult.__(this[S$._auth], result);
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithCredential(credential) {
      return async.async(firebase_auth.UserCredential, (function* reauthenticateWithCredential() {
        try {
          return new firebase_auth.UserCredential.__(this[S$._auth], yield this[S$._delegate].reauthenticateWithCredential(credential));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.is(ex)) {
            let e = ex;
            dart.throw(new firebase_auth.FirebaseAuthMultiFactorException.__(this[S$._auth], e));
          } else if (core.Object.is(ex)) {
            let e = ex;
            dart.rethrow(e$);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reload() {
      return async.async(dart.void, (function* reload() {
        yield this[S$._delegate].reload();
      }).bind(this));
    }
    sendEmailVerification(actionCodeSettings = null) {
      return async.async(dart.void, (function* sendEmailVerification() {
        yield this[S$._delegate].sendEmailVerification(actionCodeSettings);
      }).bind(this));
    }
    unlink(providerId) {
      return async.async(firebase_auth.User, (function* unlink() {
        return new firebase_auth.User.__(this[S$._auth], yield this[S$._delegate].unlink(providerId));
      }).bind(this));
    }
    updateEmail(newEmail) {
      return async.async(dart.void, (function* updateEmail() {
        yield this[S$._delegate].updateEmail(newEmail);
      }).bind(this));
    }
    updatePassword(newPassword) {
      return async.async(dart.void, (function* updatePassword() {
        yield this[S$._delegate].updatePassword(newPassword);
      }).bind(this));
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, (function* updatePhoneNumber() {
        yield this[S$._delegate].updatePhoneNumber(phoneCredential);
      }).bind(this));
    }
    updateDisplayName(displayName) {
      return this[S$._delegate].updateProfile(new (T$.IdentityMapOfString$StringN()).from(["displayName", displayName]));
    }
    updatePhotoURL(photoURL) {
      return this[S$._delegate].updateProfile(new (T$.IdentityMapOfString$StringN()).from(["photoURL", photoURL]));
    }
    updateProfile(opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let photoURL = opts && 'photoURL' in opts ? opts.photoURL : null;
      return this[S$._delegate].updateProfile(new (T$.IdentityMapOfString$StringN()).from(["displayName", displayName, "photoURL", photoURL]));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        yield this[S$._delegate].verifyBeforeUpdateEmail(newEmail, actionCodeSettings);
      }).bind(this));
    }
    get multiFactor() {
      let t28;
      if (false && (io.Platform.isMacOS || io.Platform.isWindows)) {
        dart.throw(new core.UnimplementedError.new("MultiFactor Authentication is only supported on web, Android and iOS."));
      }
      t28 = this[S$._multiFactor];
      return t28 == null ? this[S$._multiFactor] = new firebase_auth.MultiFactor.__(this[S$._delegate].multiFactor) : t28;
    }
    toString() {
      return dart.str(dart.wrapType(firebase_auth.User)) + "(" + "displayName: " + dart.str(this.displayName) + ", " + "email: " + dart.str(this.email) + ", " + "isEmailVerified: " + dart.str(this.emailVerified) + ", " + "isAnonymous: " + dart.str(this.isAnonymous) + ", " + "metadata: " + dart.str(this.metadata) + ", " + "phoneNumber: " + dart.str(this.phoneNumber) + ", " + "photoURL: " + dart.str(this.photoURL) + ", " + "providerData, " + dart.str(this.providerData) + ", " + "refreshToken: " + dart.str(this.refreshToken) + ", " + "tenantId: " + dart.str(this.tenantId) + ", " + "uid: " + this.uid + ")";
    }
  };
  (firebase_auth.User.__ = function(_auth, _delegate) {
    this[S$._multiFactor] = null;
    this[S$._auth] = _auth;
    this[S$._delegate] = _delegate;
    platform_interface_user.UserPlatform.verify(this[S$._delegate]);
  }).prototype = firebase_auth.User.prototype;
  dart.addTypeTests(firebase_auth.User);
  dart.addTypeCaches(firebase_auth.User);
  dart.setMethodSignature(firebase_auth.User, () => ({
    __proto__: dart.getMethods(firebase_auth.User.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    getIdToken: dart.fnType(async.Future$(dart.nullable(core.String)), [], [core.bool]),
    getIdTokenResult: dart.fnType(async.Future$(id_token_result.IdTokenResult), [], [core.bool]),
    linkWithCredential: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_credential.AuthCredential]),
    linkWithProvider: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider.AuthProvider]),
    reauthenticateWithProvider: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider.AuthProvider]),
    reauthenticateWithPopup: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider.AuthProvider]),
    reauthenticateWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider.AuthProvider]),
    linkWithPopup: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_provider.AuthProvider]),
    linkWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider.AuthProvider]),
    linkWithPhoneNumber: dart.fnType(async.Future$(firebase_auth.ConfirmationResult), [core.String], [dart.nullable(firebase_auth.RecaptchaVerifier)]),
    reauthenticateWithCredential: dart.fnType(async.Future$(firebase_auth.UserCredential), [auth_credential.AuthCredential]),
    reload: dart.fnType(async.Future$(dart.void), []),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [], [dart.nullable(action_code_settings.ActionCodeSettings)]),
    unlink: dart.fnType(async.Future$(firebase_auth.User), [core.String]),
    updateEmail: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePassword: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(dart.void), [phone_auth.PhoneAuthCredential]),
    updateDisplayName: dart.fnType(async.Future$(dart.void), [dart.nullable(core.String)]),
    updatePhotoURL: dart.fnType(async.Future$(dart.void), [dart.nullable(core.String)]),
    updateProfile: dart.fnType(async.Future$(dart.void), [], {displayName: dart.nullable(core.String), photoURL: dart.nullable(core.String)}, {}),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)])
  }));
  dart.setGetterSignature(firebase_auth.User, () => ({
    __proto__: dart.getGetters(firebase_auth.User.__proto__),
    displayName: dart.nullable(core.String),
    email: dart.nullable(core.String),
    emailVerified: core.bool,
    isAnonymous: core.bool,
    metadata: user_metadata.UserMetadata,
    phoneNumber: dart.nullable(core.String),
    photoURL: dart.nullable(core.String),
    providerData: core.List$(user_info.UserInfo),
    refreshToken: dart.nullable(core.String),
    tenantId: dart.nullable(core.String),
    uid: core.String,
    multiFactor: firebase_auth.MultiFactor
  }));
  dart.setLibraryUri(firebase_auth.User, I[1]);
  dart.setFieldSignature(firebase_auth.User, () => ({
    __proto__: dart.getFields(firebase_auth.User.__proto__),
    [S$._delegate]: dart.fieldType(platform_interface_user.UserPlatform),
    [S$._auth]: dart.finalFieldType(firebase_auth.FirebaseAuth),
    [S$._multiFactor]: dart.fieldType(dart.nullable(firebase_auth.MultiFactor))
  }));
  dart.defineExtensionMethods(firebase_auth.User, ['toString']);
  firebase_auth.UserCredential = class UserCredential extends core.Object {
    static ['_#_#tearOff'](_auth, _delegate) {
      return new firebase_auth.UserCredential.__(_auth, _delegate);
    }
    get additionalUserInfo() {
      return this[S$._delegate].additionalUserInfo;
    }
    get credential() {
      return this[S$._delegate].credential;
    }
    get user() {
      return this[S$._delegate].user == null ? null : new firebase_auth.User.__(this[S$._auth], dart.nullCheck(this[S$._delegate].user));
    }
    toString() {
      return "UserCredential(" + "additionalUserInfo: " + dart.str(this.additionalUserInfo) + ", " + "credential: " + dart.str(this.credential) + ", " + "user: " + dart.str(this.user) + ")";
    }
  };
  (firebase_auth.UserCredential.__ = function(_auth, _delegate) {
    this[S$._auth] = _auth;
    this[S$._delegate] = _delegate;
    platform_interface_user_credential.UserCredentialPlatform.verify(this[S$._delegate]);
  }).prototype = firebase_auth.UserCredential.prototype;
  dart.addTypeTests(firebase_auth.UserCredential);
  dart.addTypeCaches(firebase_auth.UserCredential);
  dart.setGetterSignature(firebase_auth.UserCredential, () => ({
    __proto__: dart.getGetters(firebase_auth.UserCredential.__proto__),
    additionalUserInfo: dart.nullable(additional_user_info.AdditionalUserInfo),
    credential: dart.nullable(auth_credential.AuthCredential),
    user: dart.nullable(firebase_auth.User)
  }));
  dart.setLibraryUri(firebase_auth.UserCredential, I[1]);
  dart.setFieldSignature(firebase_auth.UserCredential, () => ({
    __proto__: dart.getFields(firebase_auth.UserCredential.__proto__),
    [S$._auth]: dart.finalFieldType(firebase_auth.FirebaseAuth),
    [S$._delegate]: dart.finalFieldType(platform_interface_user_credential.UserCredentialPlatform)
  }));
  dart.defineExtensionMethods(firebase_auth.UserCredential, ['toString']);
  firebase_core.FirebaseApp = class FirebaseApp extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new firebase_core.FirebaseApp.__(_delegate);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        yield this[S$._delegate$1].delete();
      }).bind(this));
    }
    get name() {
      return this[S$._delegate$1].name;
    }
    get options() {
      return this[S$._delegate$1].options;
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$._delegate$1].isAutomaticDataCollectionEnabled;
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return this[S$._delegate$1].setAutomaticDataCollectionEnabled(enabled);
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return this[S$._delegate$1].setAutomaticResourceManagementEnabled(enabled);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core.FirebaseApp.is(other)) return false;
      return other.name === this.name && other.options._equals(this.options);
    }
    get hashCode() {
      return core.Object.hash(this.name, this.options);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core.FirebaseApp)) + "(" + this.name + ")";
    }
  };
  (firebase_core.FirebaseApp.__ = function(_delegate) {
    this[S$._delegate$1] = _delegate;
    firebase_core_platform_interface.FirebaseAppPlatform.verify(this[S$._delegate$1]);
  }).prototype = firebase_core.FirebaseApp.prototype;
  dart.addTypeTests(firebase_core.FirebaseApp);
  dart.addTypeCaches(firebase_core.FirebaseApp);
  dart.setMethodSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getMethods(firebase_core.FirebaseApp.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setGetterSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getGetters(firebase_core.FirebaseApp.__proto__),
    name: core.String,
    options: firebase_core_platform_interface.FirebaseOptions,
    isAutomaticDataCollectionEnabled: core.bool
  }));
  dart.setLibraryUri(firebase_core.FirebaseApp, I[9]);
  dart.setFieldSignature(firebase_core.FirebaseApp, () => ({
    __proto__: dart.getFields(firebase_core.FirebaseApp.__proto__),
    [S$._delegate$1]: dart.finalFieldType(firebase_core_platform_interface.FirebaseAppPlatform)
  }));
  dart.defineExtensionMethods(firebase_core.FirebaseApp, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core.FirebaseApp, ['hashCode']);
  firebase_core.Firebase = class Firebase extends core.Object {
    static ['_#_#tearOff']() {
      return new firebase_core.Firebase.__();
    }
    static get _delegate() {
      let t28;
      t28 = firebase_core.Firebase.delegatePackingProperty;
      return t28 == null ? firebase_core.Firebase.delegatePackingProperty = firebase_core_platform_interface.FirebasePlatform.instance : t28;
    }
    static get apps() {
      return firebase_core.Firebase._delegate.apps[S$.$map](firebase_core.FirebaseApp, C[13] || CT.C13)[S$.$toList]({growable: false});
    }
    static initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core.FirebaseApp, function* initializeApp() {
        let app = (yield firebase_core.Firebase._delegate.initializeApp({name: name, options: options}));
        return new firebase_core.FirebaseApp.__(app);
      });
    }
    static app(name = "[DEFAULT]") {
      let app = firebase_core.Firebase._delegate.app(name);
      return new firebase_core.FirebaseApp.__(app);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core.Firebase.is(other)) return false;
      return other.hashCode === this.hashCode;
    }
    get hashCode() {
      return this.toString()[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core.Firebase));
    }
  };
  (firebase_core.Firebase.__ = function() {
    ;
  }).prototype = firebase_core.Firebase.prototype;
  dart.addTypeTests(firebase_core.Firebase);
  dart.addTypeCaches(firebase_core.Firebase);
  dart.setStaticMethodSignature(firebase_core.Firebase, () => ['initializeApp', 'app']);
  dart.setStaticGetterSignature(firebase_core.Firebase, () => ['_delegate', 'apps']);
  dart.setLibraryUri(firebase_core.Firebase, I[9]);
  dart.setStaticFieldSignature(firebase_core.Firebase, () => ['delegatePackingProperty']);
  dart.defineExtensionMethods(firebase_core.Firebase, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core.Firebase, ['hashCode']);
  dart.defineLazy(firebase_core.Firebase, {
    /*firebase_core.Firebase.delegatePackingProperty*/get delegatePackingProperty() {
      return null;
    },
    set delegatePackingProperty(value) {}
  }, false);
  const Object_ChangeNotifier$36 = class Object_ChangeNotifier extends core.Object {};
  (Object_ChangeNotifier$36.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
  }).prototype = Object_ChangeNotifier$36.prototype;
  dart.applyMixin(Object_ChangeNotifier$36, change_notifier.ChangeNotifier);
  user_provider.UserProvider = class UserProvider extends Object_ChangeNotifier$36 {
    get getUser() {
      return dart.nullCheck(this[S$._user]);
    }
    refreshUser() {
      return async.async(dart.void, (function* refreshUser() {
        let user = (yield this[S$._authMethods].getUserDetails());
        this[S$._user] = user;
        this.notifyListeners();
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new user_provider.UserProvider.new();
    }
  };
  (user_provider.UserProvider.new = function() {
    this[S$._user] = null;
    this[S$._authMethods] = new auth_methods.AuthMethods.new();
    user_provider.UserProvider.__proto__.new.call(this);
    ;
  }).prototype = user_provider.UserProvider.prototype;
  dart.addTypeTests(user_provider.UserProvider);
  dart.addTypeCaches(user_provider.UserProvider);
  dart.setMethodSignature(user_provider.UserProvider, () => ({
    __proto__: dart.getMethods(user_provider.UserProvider.__proto__),
    refreshUser: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setGetterSignature(user_provider.UserProvider, () => ({
    __proto__: dart.getGetters(user_provider.UserProvider.__proto__),
    getUser: user$.User
  }));
  dart.setLibraryUri(user_provider.UserProvider, I[10]);
  dart.setFieldSignature(user_provider.UserProvider, () => ({
    __proto__: dart.getFields(user_provider.UserProvider.__proto__),
    [S$._user]: dart.fieldType(dart.nullable(user$.User)),
    [S$._authMethods]: dart.finalFieldType(auth_methods.AuthMethods)
  }));
  mobile_screen_layout.MobileScreenLayout = class MobileScreenLayout extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new mobile_screen_layout.MobileScreenLayout.new({key: key});
    }
    createState() {
      return new mobile_screen_layout._MobileScreenLayoutState.new();
    }
  };
  (mobile_screen_layout.MobileScreenLayout.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    mobile_screen_layout.MobileScreenLayout.__proto__.new.call(this, {key: key});
    ;
  }).prototype = mobile_screen_layout.MobileScreenLayout.prototype;
  dart.addTypeTests(mobile_screen_layout.MobileScreenLayout);
  dart.addTypeCaches(mobile_screen_layout.MobileScreenLayout);
  dart.setMethodSignature(mobile_screen_layout.MobileScreenLayout, () => ({
    __proto__: dart.getMethods(mobile_screen_layout.MobileScreenLayout.__proto__),
    createState: dart.fnType(framework.State$(mobile_screen_layout.MobileScreenLayout), [])
  }));
  dart.setLibraryUri(mobile_screen_layout.MobileScreenLayout, I[11]);
  mobile_screen_layout._MobileScreenLayoutState = class _MobileScreenLayoutState extends framework.State$(mobile_screen_layout.MobileScreenLayout) {
    get pageController() {
      let t28;
      t28 = this[S$.___MobileScreenLayoutState_pageController];
      return t28 == null ? dart.throw(new _internal.LateError.fieldNI("pageController")) : t28;
    }
    set pageController(pageController$35param) {
      this[S$.___MobileScreenLayoutState_pageController] = pageController$35param;
    }
    initState() {
      super.initState();
      this.pageController = new page_view.PageController.new();
    }
    dispose() {
      super.dispose();
      this.pageController.dispose();
    }
    onPageChanged(page) {
      this.setState(dart.fn(() => {
        this[S$._page] = page;
      }, T$.VoidTovoid()));
    }
    navigationTapped(page) {
      this.pageController.jumpToPage(page);
    }
    build(context) {
      return new scaffold.Scaffold.new({body: new page_view.PageView.new({controller: this.pageController, onPageChanged: dart.bind(this, 'onPageChanged'), children: global_variable.homeScreenItems}), bottomNavigationBar: new bottom_tab_bar.CupertinoTabBar.new({backgroundColor: colors$0.mobileBackgroundColor, items: T$.JSArrayOfBottomNavigationBarItem().of([new bottom_navigation_bar_item.BottomNavigationBarItem.new({icon: new basic.Padding.new({padding: C[14] || CT.C14, child: new icon.Icon.new(icons.Icons.home, {color: this[S$._page] === 0 ? colors$0.primaryColor : colors$0.secondaryColor})}), label: "", backgroundColor: colors$0.primaryColor}), new bottom_navigation_bar_item.BottomNavigationBarItem.new({icon: new basic.Padding.new({padding: C[14] || CT.C14, child: new icon.Icon.new(icons.Icons.search, {color: this[S$._page] === 1 ? colors$0.primaryColor : colors$0.secondaryColor})}), label: "", backgroundColor: colors$0.primaryColor}), new bottom_navigation_bar_item.BottomNavigationBarItem.new({icon: new basic.Padding.new({padding: C[14] || CT.C14, child: new icon.Icon.new(icons.Icons.add_circle, {color: this[S$._page] === 2 ? colors$0.primaryColor : colors$0.secondaryColor})}), label: "", backgroundColor: colors$0.primaryColor}), new bottom_navigation_bar_item.BottomNavigationBarItem.new({icon: new basic.Padding.new({padding: C[14] || CT.C14, child: new icon.Icon.new(icons.Icons.favorite, {color: this[S$._page] === 3 ? colors$0.primaryColor : colors$0.secondaryColor})}), label: "", backgroundColor: colors$0.primaryColor}), new bottom_navigation_bar_item.BottomNavigationBarItem.new({icon: new basic.Padding.new({padding: C[14] || CT.C14, child: new icon.Icon.new(icons.Icons.person, {color: this[S$._page] === 4 ? colors$0.primaryColor : colors$0.secondaryColor})}), label: "", backgroundColor: colors$0.primaryColor})]), onTap: dart.bind(this, 'navigationTapped'), currentIndex: this[S$._page]})});
    }
    static ['_#new#tearOff']() {
      return new mobile_screen_layout._MobileScreenLayoutState.new();
    }
  };
  (mobile_screen_layout._MobileScreenLayoutState.new = function() {
    this[S$._page] = 0;
    this[S$.___MobileScreenLayoutState_pageController] = null;
    mobile_screen_layout._MobileScreenLayoutState.__proto__.new.call(this);
    ;
  }).prototype = mobile_screen_layout._MobileScreenLayoutState.prototype;
  dart.addTypeTests(mobile_screen_layout._MobileScreenLayoutState);
  dart.addTypeCaches(mobile_screen_layout._MobileScreenLayoutState);
  dart.setMethodSignature(mobile_screen_layout._MobileScreenLayoutState, () => ({
    __proto__: dart.getMethods(mobile_screen_layout._MobileScreenLayoutState.__proto__),
    onPageChanged: dart.fnType(dart.void, [core.int]),
    navigationTapped: dart.fnType(dart.void, [core.int]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(mobile_screen_layout._MobileScreenLayoutState, () => ({
    __proto__: dart.getGetters(mobile_screen_layout._MobileScreenLayoutState.__proto__),
    pageController: page_view.PageController
  }));
  dart.setSetterSignature(mobile_screen_layout._MobileScreenLayoutState, () => ({
    __proto__: dart.getSetters(mobile_screen_layout._MobileScreenLayoutState.__proto__),
    pageController: page_view.PageController
  }));
  dart.setLibraryUri(mobile_screen_layout._MobileScreenLayoutState, I[11]);
  dart.setFieldSignature(mobile_screen_layout._MobileScreenLayoutState, () => ({
    __proto__: dart.getFields(mobile_screen_layout._MobileScreenLayoutState.__proto__),
    [S$._page]: dart.fieldType(core.int),
    [S$.___MobileScreenLayoutState_pageController]: dart.fieldType(dart.nullable(page_view.PageController))
  }));
  login_screen.LoginScreen = class LoginScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new login_screen.LoginScreen.new({key: key});
    }
    createState() {
      return new login_screen._LoginScreenState.new();
    }
  };
  (login_screen.LoginScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    login_screen.LoginScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = login_screen.LoginScreen.prototype;
  dart.addTypeTests(login_screen.LoginScreen);
  dart.addTypeCaches(login_screen.LoginScreen);
  dart.setMethodSignature(login_screen.LoginScreen, () => ({
    __proto__: dart.getMethods(login_screen.LoginScreen.__proto__),
    createState: dart.fnType(framework.State$(login_screen.LoginScreen), [])
  }));
  dart.setLibraryUri(login_screen.LoginScreen, I[12]);
  login_screen._LoginScreenState = class _LoginScreenState extends framework.State$(login_screen.LoginScreen) {
    dispose() {
      super.dispose();
      this[S$._emailController].dispose();
      this[S$._passwordController].dispose();
    }
    loginUser() {
      return async.async(dart.void, (function* loginUser() {
        this.setState(dart.fn(() => {
          this[S$._isLoading] = true;
        }, T$.VoidTovoid()));
        let res = (yield new auth_methods.AuthMethods.new().loginUser({email: this[S$._emailController].text, password: this[S$._passwordController].text}));
        if (res === "success") {
          if (this.context.mounted) {
            navigator.Navigator.of(this.context).pushAndRemoveUntil(dart.dynamic, new page.MaterialPageRoute.new({builder: dart.fn(context => new mobile_screen_layout.MobileScreenLayout.new(), T$.BuildContextToMobileScreenLayout())}), dart.fn(route => false, T$.RouteTobool()));
            this.setState(dart.fn(() => {
              this[S$._isLoading] = false;
            }, T$.VoidTovoid()));
          }
        } else {
          this.setState(dart.fn(() => {
            this[S$._isLoading] = false;
          }, T$.VoidTovoid()));
          if (this.context.mounted) {
            utils.showSnackBar(this.context, res);
          }
        }
      }).bind(this));
    }
    build(context) {
      return new scaffold.Scaffold.new({resizeToAvoidBottomInset: false, body: new safe_area.SafeArea.new({child: new container.Container.new({padding: C[15] || CT.C15, width: 1 / 0, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.center, children: T$.JSArrayOfWidget().of([new basic.Flexible.new({flex: 2, child: new container.Container.new()}), new basic.Padding.new({padding: C[16] || CT.C16, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.center, children: T$.JSArrayOfWidget().of([new container.Container.new({alignment: alignment.Alignment.center, padding: C[16] || CT.C16, child: C[17] || CT.C17}), C[32] || CT.C32, new container.Container.new({padding: C[16] || CT.C16, child: new text_field.TextField.new({controller: this[S$._emailController], decoration: C[33] || CT.C33})}), new container.Container.new({padding: C[16] || CT.C16, child: new text_field.TextField.new({obscureText: true, controller: this[S$._passwordController], decoration: C[40] || CT.C40})}), new container.Container.new({height: 70, width: 1 / 0, padding: C[16] || CT.C16, child: new elevated_button.ElevatedButton.new({onPressed: this[S$._isLoading] ? null : dart.bind(this, 'loginUser'), style: elevated_button.ElevatedButton.styleFrom({shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(4)}), backgroundColor: colors.Colors.blue, foregroundColor: colors.Colors.white}), child: !this[S$._isLoading] ? C[41] || CT.C41 : C[44] || CT.C44})})])})}), new basic.Flexible.new({flex: 2, child: new container.Container.new()}), new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new container.Container.new({padding: C[14] || CT.C14, child: C[46] || CT.C46}), new gesture_detector.GestureDetector.new({onTap: dart.fn(() => navigator.Navigator.of(context).push(dart.dynamic, new page.MaterialPageRoute.new({builder: dart.fn(context => C[48] || CT.C48, T$.BuildContextToSignupScreen())})), T$.VoidTovoid()), child: new container.Container.new({padding: C[14] || CT.C14, child: C[49] || CT.C49})})])})])})})})});
    }
    static ['_#new#tearOff']() {
      return new login_screen._LoginScreenState.new();
    }
  };
  (login_screen._LoginScreenState.new = function() {
    this[S$._emailController] = new editable_text.TextEditingController.new();
    this[S$._passwordController] = new editable_text.TextEditingController.new();
    this[S$._isLoading] = false;
    login_screen._LoginScreenState.__proto__.new.call(this);
    ;
  }).prototype = login_screen._LoginScreenState.prototype;
  dart.addTypeTests(login_screen._LoginScreenState);
  dart.addTypeCaches(login_screen._LoginScreenState);
  dart.setMethodSignature(login_screen._LoginScreenState, () => ({
    __proto__: dart.getMethods(login_screen._LoginScreenState.__proto__),
    loginUser: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(login_screen._LoginScreenState, I[12]);
  dart.setFieldSignature(login_screen._LoginScreenState, () => ({
    __proto__: dart.getFields(login_screen._LoginScreenState.__proto__),
    [S$._emailController]: dart.finalFieldType(editable_text.TextEditingController),
    [S$._passwordController]: dart.finalFieldType(editable_text.TextEditingController),
    [S$._isLoading]: dart.fieldType(core.bool)
  }));
  platform_interface_firestore.FirebaseFirestorePlatform = class FirebaseFirestorePlatform extends plugin_platform_interface.PlatformInterface {
    get appInstance() {
      return this[S$.appInstance];
    }
    set appInstance(value) {
      super.appInstance = value;
    }
    get databaseChoice() {
      return this[S$.databaseChoice];
    }
    set databaseChoice(value) {
      super.databaseChoice = value;
    }
    get app() {
      let t31;
      t31 = this.appInstance;
      return t31 == null ? firebase_core.Firebase.app() : t31;
    }
    get databaseURL() {
      let t31;
      t31 = this.databaseChoice;
      return t31 == null ? "(default)" : t31;
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return platform_interface_firestore.FirebaseFirestorePlatform.instance.delegateFor({app: app, databaseURL: databaseURL});
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: app, databaseURL: databaseURL});
    }
    static get instance() {
      let t31;
      t31 = platform_interface_firestore.FirebaseFirestorePlatform._instance;
      return t31 == null ? platform_interface_firestore.FirebaseFirestorePlatform._instance = new method_channel_firestore.MethodChannelFirebaseFirestore.new({app: firebase_core.Firebase.app(), databaseURL: "(default)"}) : t31;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_firestore.FirebaseFirestorePlatform._token);
      platform_interface_firestore.FirebaseFirestorePlatform._instance = instance;
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    useEmulator(host, port) {
      dart.throw(new core.UnimplementedError.new("useEmulator() is not implemented"));
    }
    batch() {
      dart.throw(new core.UnimplementedError.new("batch() is not implemented"));
    }
    clearPersistence() {
      dart.throw(new core.UnimplementedError.new("clearPersistence() is not implemented"));
    }
    enablePersistence(persistenceSettings = null) {
      return async.async(dart.void, function* enablePersistence() {
        dart.throw(new core.UnimplementedError.new("enablePersistence() is not implemented"));
      });
    }
    collection(collectionPath) {
      dart.throw(new core.UnimplementedError.new("collection() is not implemented"));
    }
    collectionGroup(collectionPath) {
      dart.throw(new core.UnimplementedError.new("collectionGroup() is not implemented"));
    }
    disableNetwork() {
      dart.throw(new core.UnimplementedError.new("disableNetwork() is not implemented"));
    }
    doc(documentPath) {
      dart.throw(new core.UnimplementedError.new("doc() is not implemented"));
    }
    enableNetwork() {
      dart.throw(new core.UnimplementedError.new("enableNetwork() is not implemented"));
    }
    snapshotsInSync() {
      dart.throw(new core.UnimplementedError.new("snapshotsInSync() is not implemented"));
    }
    loadBundle(bundle) {
      dart.throw(new core.UnimplementedError.new("loadBundle() is not implemented"));
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[52] || CT.C52;
      dart.throw(new core.UnimplementedError.new("namedQueryGet() is not implemented"));
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[9] || CT.C9;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      dart.throw(new core.UnimplementedError.new("runTransaction() is not implemented"));
    }
    get settings() {
      dart.throw(new core.UnimplementedError.new("settings getter is not implemented"));
    }
    set settings(settings) {
      dart.throw(new core.UnimplementedError.new("settings setter is not implemented"));
    }
    terminate() {
      dart.throw(new core.UnimplementedError.new("terminate() is not implemented"));
    }
    waitForPendingWrites() {
      dart.throw(new core.UnimplementedError.new("waitForPendingWrites() is not implemented"));
    }
    setIndexConfiguration(indexConfiguration) {
      dart.throw(new core.UnimplementedError.new("setIndexConfiguration() is not implemented"));
    }
    setLoggingEnabled(enabled) {
      dart.throw(new core.UnimplementedError.new("setLoggingEnabled() is not implemented"));
    }
    _equals(other) {
      if (other == null) return false;
      return platform_interface_firestore.FirebaseFirestorePlatform.is(other) && other.app.name === this.app.name;
    }
    get hashCode() {
      return this.toString()[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(platform_interface_firestore.FirebaseFirestorePlatform)) + "(app: " + this.app.name + ")";
    }
  };
  (platform_interface_firestore.FirebaseFirestorePlatform.new = function(opts) {
    let appInstance = opts && 'appInstance' in opts ? opts.appInstance : null;
    let databaseChoice = opts && 'databaseChoice' in opts ? opts.databaseChoice : null;
    this[S$.appInstance] = appInstance;
    this[S$.databaseChoice] = databaseChoice;
    platform_interface_firestore.FirebaseFirestorePlatform.__proto__.new.call(this, {token: platform_interface_firestore.FirebaseFirestorePlatform._token});
    ;
  }).prototype = platform_interface_firestore.FirebaseFirestorePlatform.prototype;
  dart.addTypeTests(platform_interface_firestore.FirebaseFirestorePlatform);
  dart.addTypeCaches(platform_interface_firestore.FirebaseFirestorePlatform);
  dart.setMethodSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_firestore.FirebaseFirestorePlatform, [], {}, {app: firebase_core.FirebaseApp, databaseURL: core.String}),
    useEmulator: dart.fnType(dart.void, [core.String, core.int]),
    batch: dart.fnType(platform_interface_write_batch.WriteBatchPlatform, []),
    clearPersistence: dart.fnType(async.Future$(dart.void), []),
    enablePersistence: dart.fnType(async.Future$(dart.void), [], [dart.nullable(persistence_settings.PersistenceSettings)]),
    collection: dart.fnType(platform_interface_collection_reference.CollectionReferencePlatform, [core.String]),
    collectionGroup: dart.fnType(platform_interface_query.QueryPlatform, [core.String]),
    disableNetwork: dart.fnType(async.Future$(dart.void), []),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [core.String]),
    enableNetwork: dart.fnType(async.Future$(dart.void), []),
    snapshotsInSync: dart.fnType(async.Stream$(dart.void), []),
    loadBundle: dart.fnType(platform_interface_load_bundle_task.LoadBundleTaskPlatform, [typed_data.Uint8List]),
    namedQueryGet: dart.fnType(async.Future$(platform_interface_query_snapshot.QuerySnapshotPlatform), [core.String], {options: get_options.GetOptions}, {}),
    runTransaction: dart.gFnType(T => [async.Future$(dart.nullable(T)), [dart.fnType(dart.nullable(async.Future$(dart.nullable(T))), [platform_interface_transaction.TransactionPlatform])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)]),
    terminate: dart.fnType(async.Future$(dart.void), []),
    waitForPendingWrites: dart.fnType(async.Future$(dart.void), []),
    setIndexConfiguration: dart.fnType(async.Future$(dart.void), [core.String]),
    setLoggingEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setStaticMethodSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['instanceFor']);
  dart.setGetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    app: firebase_core.FirebaseApp,
    databaseURL: core.String,
    settings: settings.Settings
  }));
  dart.setSetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getSetters(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    settings: settings.Settings
  }));
  dart.setStaticGetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_firestore.FirebaseFirestorePlatform, I[13]);
  dart.setFieldSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ({
    __proto__: dart.getFields(platform_interface_firestore.FirebaseFirestorePlatform.__proto__),
    appInstance: dart.finalFieldType(dart.nullable(firebase_core.FirebaseApp)),
    databaseChoice: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(platform_interface_firestore.FirebaseFirestorePlatform, () => ['_token', '_instance']);
  dart.defineExtensionMethods(platform_interface_firestore.FirebaseFirestorePlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(platform_interface_firestore.FirebaseFirestorePlatform, ['hashCode']);
  dart.defineLazy(platform_interface_firestore.FirebaseFirestorePlatform, {
    /*platform_interface_firestore.FirebaseFirestorePlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*platform_interface_firestore.FirebaseFirestorePlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {}
  }, false);
  cloud_firestore_web.FirebaseFirestoreWeb = class FirebaseFirestoreWeb extends platform_interface_firestore.FirebaseFirestorePlatform {
    get [S$._delegate$2]() {
      let t28;
      t28 = this[S$._webFirestore];
      return t28 == null ? this[S$._webFirestore] = firestore$.getFirestoreInstance(core$.app(this.app.name), this[S$._settings], this.databaseURL) : t28;
    }
    static registerWith(registrar) {
      firebase_core_web.FirebaseCoreWeb.registerService("firestore");
      platform_interface_firestore.FirebaseFirestorePlatform.instance = new cloud_firestore_web.FirebaseFirestoreWeb.new();
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new cloud_firestore_web.FirebaseFirestoreWeb.new({app: app, databaseURL: databaseURL});
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new cloud_firestore_web.FirebaseFirestoreWeb.new({app: app, databaseURL: databaseURL});
    }
    collection(collectionPath) {
      return new collection_reference_web.CollectionReferenceWeb.new(this, this[S$._delegate$2], collectionPath);
    }
    batch() {
      return new write_batch_web.WriteBatchWeb.new(this[S$._delegate$2]);
    }
    clearPersistence() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$2], 'clearPersistence'));
    }
    useEmulator(host, port) {
      return this[S$._delegate$2].useEmulator(host, port);
    }
    collectionGroup(collectionPath) {
      return new query_web.QueryWeb.new(this, collectionPath, this[S$._delegate$2].collectionGroup(collectionPath), {isCollectionGroupQuery: true});
    }
    disableNetwork() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$2], 'disableNetwork'));
    }
    doc(documentPath) {
      return new document_reference_web.DocumentReferenceWeb.new(this, this[S$._delegate$2], documentPath);
    }
    enableNetwork() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$2], 'enableNetwork'));
    }
    snapshotsInSync() {
      return this[S$._delegate$2].snapshotsInSync();
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[9] || CT.C9;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      return async.async(dart.nullable(T), (function* runTransaction() {
        yield internals.convertWebExceptions(async.Future, dart.fn(() => this[S$._delegate$2].runTransaction(dart.fn(transaction => async.async(dart.nullable(T), (function*() {
          return transactionHandler(new transaction_web.TransactionWeb.new(this, this[S$._delegate$2], dart.nullCheck(transaction)));
        }).bind(this)), dart.fnType(async.Future$(dart.nullable(T)), [T$.TransactionN()])), maxAttempts).timeout(timeout), T$.VoidToFuture()));
        return null;
      }).bind(this));
    }
    get settings() {
      return C[51] || CT.C51;
    }
    set settings(settings) {
      let cacheSizeBytes = null;
      if (settings.cacheSizeBytes == null) {
        cacheSizeBytes = 40000000;
      } else if (settings.cacheSizeBytes === -1) {
        cacheSizeBytes = -1;
      } else {
        cacheSizeBytes = settings.cacheSizeBytes;
      }
      if (settings.host != null && settings.sslEnabled != null) {
        this[S$._settings] = {cacheSizeBytes: cacheSizeBytes, host: settings.host, ssl: settings.sslEnabled, ignoreUndefinedProperties: settings.ignoreUndefinedProperties};
      } else {
        this[S$._settings] = {cacheSizeBytes: cacheSizeBytes, ignoreUndefinedProperties: settings.ignoreUndefinedProperties};
      }
    }
    enablePersistence(settings = null) {
      if (settings != null) {
        let interopSettings = {synchronizeTabs: settings.synchronizeTabs};
        return internals.convertWebExceptions(T$.FutureOfvoid(), dart.fn(() => this[S$._delegate$2].enablePersistence(interopSettings), T$.VoidToFutureOfvoid()));
      }
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$2], 'enablePersistence'));
    }
    terminate() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$2], 'terminate'));
    }
    waitForPendingWrites() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$2], 'waitForPendingWrites'));
    }
    loadBundle(bundle) {
      return new load_bundle_task_web.LoadBundleTaskWeb.new(this[S$._delegate$2].loadBundle(bundle));
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[52] || CT.C52;
      return async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function* namedQueryGet() {
        let query = (yield this[S$._delegate$2].namedQuery(name));
        let snapshot = (yield query.get(web_utils.convertGetOptions(options)));
        return web_utils.convertWebQuerySnapshot(this, snapshot, options.serverTimestampBehavior);
      }).bind(this));
    }
    setIndexConfiguration(indexConfiguration) {
      return async.async(dart.void, (function* setIndexConfiguration() {
        return this[S$._delegate$2].setIndexConfiguration(indexConfiguration);
      }).bind(this));
    }
    setLoggingEnabled(enabled) {
      return async.async(dart.void, (function* setLoggingEnabled() {
        let value = null;
        function value$35get() {
          let t29;
          t29 = value;
          return t29 == null ? dart.throw(new _internal.LateError.localNI("value")) : t29;
        }
        function value$35set(value$35param) {
          if (value == null)
            return value = value$35param;
          else
            dart.throw(new _internal.LateError.localAI("value"));
        }
        if (enabled) {
          value$35set("debug");
        } else {
          value$35set("silent");
        }
        this[S$._delegate$2].setLoggingEnabled(value$35get());
      }).bind(this));
    }
  };
  (cloud_firestore_web.FirebaseFirestoreWeb.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    this[S$._webFirestore] = null;
    this[S$._settings] = null;
    cloud_firestore_web.FirebaseFirestoreWeb.__proto__.new.call(this, {appInstance: app, databaseChoice: databaseURL});
    platform_interface_field_value_factory.FieldValueFactoryPlatform.instance = new field_value_factory_web.FieldValueFactoryWeb.new();
  }).prototype = cloud_firestore_web.FirebaseFirestoreWeb.prototype;
  dart.addTypeTests(cloud_firestore_web.FirebaseFirestoreWeb);
  dart.addTypeCaches(cloud_firestore_web.FirebaseFirestoreWeb);
  dart.setMethodSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ({
    __proto__: dart.getMethods(cloud_firestore_web.FirebaseFirestoreWeb.__proto__),
    runTransaction: dart.gFnType(T => [async.Future$(dart.nullable(T)), [dart.fnType(dart.nullable(async.Future$(dart.nullable(T))), [platform_interface_transaction.TransactionPlatform])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ['registerWith']);
  dart.setGetterSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ({
    __proto__: dart.getGetters(cloud_firestore_web.FirebaseFirestoreWeb.__proto__),
    [S$._delegate$2]: firestore$.Firestore
  }));
  dart.setLibraryUri(cloud_firestore_web.FirebaseFirestoreWeb, I[14]);
  dart.setFieldSignature(cloud_firestore_web.FirebaseFirestoreWeb, () => ({
    __proto__: dart.getFields(cloud_firestore_web.FirebaseFirestoreWeb.__proto__),
    [S$._webFirestore]: dart.fieldType(dart.nullable(firestore$.Firestore)),
    [S$._settings]: dart.fieldType(dart.nullable(dart.packageJSType("Settings", false)))
  }));
  file_picker$.FilePicker = class FilePicker extends plugin_platform_interface.PlatformInterface {
    static get platform() {
      return file_picker$.FilePicker._instance;
    }
    static set platform(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, file_picker$.FilePicker._token);
      file_picker$.FilePicker._instance = instance;
    }
    static _setPlatform() {
      if (io.Platform.isAndroid || io.Platform.isIOS) {
        return new file_picker_io.FilePickerIO.new();
      } else if (io.Platform.isLinux) {
        return new file_picker_linux.FilePickerLinux.new();
      } else if (io.Platform.isWindows) {
        return stub.filePickerWithFFI();
      } else if (io.Platform.isMacOS) {
        return new file_picker_macos.FilePickerMacOS.new();
      } else {
        dart.throw(new core.UnimplementedError.new("The current platform \"" + io.Platform.operatingSystem + "\" is not supported by this plugin."));
      }
    }
    static ['_#_setPlatform#tearOff']() {
      return file_picker$.FilePicker._setPlatform();
    }
    pickFiles(opts) {
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      let type = opts && 'type' in opts ? opts.type : C[55] || CT.C55;
      let allowedExtensions = opts && 'allowedExtensions' in opts ? opts.allowedExtensions : null;
      let onFileLoading = opts && 'onFileLoading' in opts ? opts.onFileLoading : null;
      let allowCompression = opts && 'allowCompression' in opts ? opts.allowCompression : true;
      let allowMultiple = opts && 'allowMultiple' in opts ? opts.allowMultiple : false;
      let withData = opts && 'withData' in opts ? opts.withData : false;
      let withReadStream = opts && 'withReadStream' in opts ? opts.withReadStream : false;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      return async.async(T$.FilePickerResultN(), function* pickFiles() {
        return dart.throw(new core.UnimplementedError.new("pickFiles() has not been implemented."));
      });
    }
    clearTemporaryFiles() {
      return async.async(T$.boolN(), function* clearTemporaryFiles() {
        return dart.throw(new core.UnimplementedError.new("clearTemporaryFiles() has not been implemented."));
      });
    }
    getDirectoryPath(opts) {
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      return async.async(T$.StringN(), function* getDirectoryPath() {
        return dart.throw(new core.UnimplementedError.new("getDirectoryPath() has not been implemented."));
      });
    }
    saveFile(opts) {
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let fileName = opts && 'fileName' in opts ? opts.fileName : null;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      let type = opts && 'type' in opts ? opts.type : C[55] || CT.C55;
      let allowedExtensions = opts && 'allowedExtensions' in opts ? opts.allowedExtensions : null;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      return async.async(T$.StringN(), function* saveFile() {
        return dart.throw(new core.UnimplementedError.new("saveFile() has not been implemented."));
      });
    }
  };
  (file_picker$.FilePicker.new = function() {
    file_picker$.FilePicker.__proto__.new.call(this, {token: file_picker$.FilePicker._token});
    ;
  }).prototype = file_picker$.FilePicker.prototype;
  dart.addTypeTests(file_picker$.FilePicker);
  dart.addTypeCaches(file_picker$.FilePicker);
  dart.setMethodSignature(file_picker$.FilePicker, () => ({
    __proto__: dart.getMethods(file_picker$.FilePicker.__proto__),
    pickFiles: dart.fnType(async.Future$(dart.nullable(file_picker_result.FilePickerResult)), [], {allowCompression: core.bool, allowMultiple: core.bool, allowedExtensions: dart.nullable(core.List$(core.String)), dialogTitle: dart.nullable(core.String), initialDirectory: dart.nullable(core.String), lockParentWindow: core.bool, onFileLoading: dart.nullable(dart.fnType(dart.dynamic, [file_picker$.FilePickerStatus])), type: file_picker$.FileType, withData: core.bool, withReadStream: core.bool}, {}),
    clearTemporaryFiles: dart.fnType(async.Future$(dart.nullable(core.bool)), []),
    getDirectoryPath: dart.fnType(async.Future$(dart.nullable(core.String)), [], {dialogTitle: dart.nullable(core.String), initialDirectory: dart.nullable(core.String), lockParentWindow: core.bool}, {}),
    saveFile: dart.fnType(async.Future$(dart.nullable(core.String)), [], {allowedExtensions: dart.nullable(core.List$(core.String)), dialogTitle: dart.nullable(core.String), fileName: dart.nullable(core.String), initialDirectory: dart.nullable(core.String), lockParentWindow: core.bool, type: file_picker$.FileType}, {})
  }));
  dart.setStaticMethodSignature(file_picker$.FilePicker, () => ['_setPlatform']);
  dart.setStaticGetterSignature(file_picker$.FilePicker, () => ['platform']);
  dart.setStaticSetterSignature(file_picker$.FilePicker, () => ['platform']);
  dart.setLibraryUri(file_picker$.FilePicker, I[15]);
  dart.setStaticFieldSignature(file_picker$.FilePicker, () => ['_token', '_instance']);
  dart.defineLazy(file_picker$.FilePicker, {
    /*file_picker$.FilePicker._token*/get _token() {
      return new core.Object.new();
    },
    /*file_picker$.FilePicker._instance*/get _instance() {
      return file_picker$.FilePicker._setPlatform();
    },
    set _instance(value) {}
  }, false);
  file_picker_web.FilePickerWeb = class FilePickerWeb extends file_picker$.FilePicker {
    get [S$._target]() {
      let t31;
      t31 = this[S$.__FilePickerWeb__target];
      return t31 == null ? dart.throw(new _internal.LateError.fieldNI("_target")) : t31;
    }
    set [S$._target](_target$35param) {
      this[S$.__FilePickerWeb__target] = _target$35param;
    }
    static ['_#_#tearOff']() {
      return new file_picker_web.FilePickerWeb.__();
    }
    static registerWith(registrar) {
      file_picker$.FilePicker.platform = file_picker_web.FilePickerWeb.platform;
    }
    [S$._ensureInitialized](id) {
      let t31;
      let target = html.querySelector("#" + id);
      if (target == null) {
        let targetElement = (t31 = html.Element.tag("flt-file-picker-inputs"), (() => {
          t31[S$.$id] = id;
          return t31;
        })());
        dart.nullCheck(html.querySelector("body"))[S$.$children][S$.$add](targetElement);
        target = targetElement;
      }
      return target;
    }
    pickFiles(opts) {
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      let type = opts && 'type' in opts ? opts.type : C[55] || CT.C55;
      let allowedExtensions = opts && 'allowedExtensions' in opts ? opts.allowedExtensions : null;
      let allowMultiple = opts && 'allowMultiple' in opts ? opts.allowMultiple : false;
      let onFileLoading = opts && 'onFileLoading' in opts ? opts.onFileLoading : null;
      let allowCompression = opts && 'allowCompression' in opts ? opts.allowCompression : true;
      let withData = opts && 'withData' in opts ? opts.withData : true;
      let withReadStream = opts && 'withReadStream' in opts ? opts.withReadStream : false;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      return async.async(T$.FilePickerResultN(), (function* pickFiles() {
        let t31, t31$;
        if (type !== file_picker$.FileType.custom && dart.test((t31$ = (t31 = allowedExtensions, t31 == null ? null : t31[S$.$isNotEmpty]), t31$ == null ? false : t31$))) {
          dart.throw(core.Exception.new("You are setting a type [" + dart.str(type) + "]. Custom extension filters are only allowed with FileType.custom, please change it or remove filters."));
        }
        let filesCompleter = T$.CompleterOfListNOfPlatformFile().new();
        let accept = file_picker_web.FilePickerWeb._fileType(type, allowedExtensions);
        let uploadInput = html.InputElement.as(html.FileUploadInputElement.new());
        uploadInput[S$.$draggable] = true;
        uploadInput.multiple = allowMultiple;
        uploadInput.accept = accept;
        uploadInput[S$.$style][S$.$display] = "none";
        let changeEventTriggered = false;
        if (onFileLoading != null) {
          onFileLoading(file_picker$.FilePickerStatus.picking);
        }
        const changeEventListener = e => {
          if (changeEventTriggered) {
            return;
          }
          changeEventTriggered = true;
          let files = dart.nullCheck(uploadInput.files);
          let pickedFiles = T$.JSArrayOfPlatformFile().of([]);
          function addPickedFile(file, bytes, path, readStream) {
            pickedFiles[S$.$add](new platform_file.PlatformFile.new({name: file[S$.$name], path: path, size: bytes != null ? bytes[S$.$length] : file[S$.$size], bytes: bytes, readStream: readStream}));
            if (pickedFiles[S$.$length] >= files[S$.$length]) {
              if (onFileLoading != null) {
                onFileLoading(file_picker$.FilePickerStatus.done);
              }
              filesCompleter.complete(pickedFiles);
            }
          }
          dart.fn(addPickedFile, T$.FileAndUint8ListNAndStringN__Tovoid());
          for (let file of files) {
            if (withReadStream) {
              addPickedFile(file, null, null, this[S$._openFileReadStream](file));
              continue;
            }
            if (!withData) {
              let reader = html.FileReader.new();
              reader[S$.$onLoadEnd].listen(dart.fn(e => {
                addPickedFile(file, null, T$.StringN().as(reader[S$.$result]), null);
              }, T$.ProgressEventTovoid()));
              reader[S$.$readAsDataUrl](file);
              continue;
            }
            let reader = html.FileReader.new();
            reader[S$.$onLoadEnd].listen(dart.fn(e => {
              addPickedFile(file, T$.Uint8ListN().as(reader[S$.$result]), null, null);
            }, T$.ProgressEventTovoid()));
            reader.readAsArrayBuffer(file);
          }
        };
        dart.fn(changeEventListener, T$.dynamicTovoid());
        function cancelledEventListener(_) {
          html.window[S$.$removeEventListener]("focus", cancelledEventListener);
          async.Future.delayed(new core.Duration.new({seconds: 1})).then(core.Null, dart.fn(value => {
            if (!changeEventTriggered) {
              changeEventTriggered = true;
              filesCompleter.complete(null);
            }
          }, T$.dynamicToNull()));
        }
        dart.fn(cancelledEventListener, T$.dynamicTovoid());
        uploadInput[S$.$onChange].listen(changeEventListener);
        uploadInput[S$.$addEventListener]("change", changeEventListener);
        html.window[S$.$addEventListener]("focus", cancelledEventListener);
        this[S$._target][S$.$children][S$.$clear]();
        this[S$._target][S$.$children][S$.$add](uploadInput);
        uploadInput.click();
        let files = (yield filesCompleter.future);
        return files == null ? null : new file_picker_result.FilePickerResult.new(files);
      }).bind(this));
    }
    static _fileType(type, allowedExtensions) {
      switch (type) {
        case C[55] || CT.C55:
          {
            return "";
          }
        case C[56] || CT.C56:
          {
            return "audio/*";
          }
        case C[57] || CT.C57:
          {
            return "image/*";
          }
        case C[58] || CT.C58:
          {
            return "video/*";
          }
        case C[59] || CT.C59:
          {
            return "video/*|image/*";
          }
        case C[60] || CT.C60:
          {
            return dart.nullCheck(allowedExtensions)[S$.$fold](core.String, "", dart.fn((prev, next) => (prev[S$.$isEmpty] ? "" : prev + ",") + " ." + next, T$.StringAndStringToString()));
          }
      }
    }
    [S$._openFileReadStream](file) {
      return new (T$._AsyncStarImplOfListOfint()).new((function* _openFileReadStream(stream) {
        let reader = html.FileReader.new();
        let start = 0;
        while (start < file[S$.$size]) {
          let end = start + this[S$._readStreamChunkSize] > file[S$.$size] ? file[S$.$size] : start + this[S$._readStreamChunkSize];
          let blob = file[S$.$slice](start, end);
          reader.readAsArrayBuffer(blob);
          yield reader[S$.$onLoad].first;
          if (stream.add(T$.ListOfint().as(reader[S$.$result]))) return;
          yield;
          start = start + this[S$._readStreamChunkSize];
        }
      }).bind(this)).stream;
    }
  };
  (file_picker_web.FilePickerWeb.__ = function() {
    this[S$.__FilePickerWeb__target] = null;
    this[S$._kFilePickerInputsDomId] = "__file_picker_web-file-input";
    this[S$._readStreamChunkSize] = 1000 * 1000;
    file_picker_web.FilePickerWeb.__proto__.new.call(this);
    this[S$._target] = this[S$._ensureInitialized](this[S$._kFilePickerInputsDomId]);
  }).prototype = file_picker_web.FilePickerWeb.prototype;
  dart.addTypeTests(file_picker_web.FilePickerWeb);
  dart.addTypeCaches(file_picker_web.FilePickerWeb);
  dart.setMethodSignature(file_picker_web.FilePickerWeb, () => ({
    __proto__: dart.getMethods(file_picker_web.FilePickerWeb.__proto__),
    [S$._ensureInitialized]: dart.fnType(html.Element, [core.String]),
    [S$._openFileReadStream]: dart.fnType(async.Stream$(core.List$(core.int)), [html.File])
  }));
  dart.setStaticMethodSignature(file_picker_web.FilePickerWeb, () => ['registerWith', '_fileType']);
  dart.setGetterSignature(file_picker_web.FilePickerWeb, () => ({
    __proto__: dart.getGetters(file_picker_web.FilePickerWeb.__proto__),
    [S$._target]: html.Element
  }));
  dart.setSetterSignature(file_picker_web.FilePickerWeb, () => ({
    __proto__: dart.getSetters(file_picker_web.FilePickerWeb.__proto__),
    [S$._target]: html.Element
  }));
  dart.setLibraryUri(file_picker_web.FilePickerWeb, I[16]);
  dart.setFieldSignature(file_picker_web.FilePickerWeb, () => ({
    __proto__: dart.getFields(file_picker_web.FilePickerWeb.__proto__),
    [S$.__FilePickerWeb__target]: dart.fieldType(dart.nullable(html.Element)),
    [S$._kFilePickerInputsDomId]: dart.finalFieldType(core.String),
    [S$._readStreamChunkSize]: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(file_picker_web.FilePickerWeb, () => ['platform']);
  dart.defineLazy(file_picker_web.FilePickerWeb, {
    /*file_picker_web.FilePickerWeb.platform*/get platform() {
      return new file_picker_web.FilePickerWeb.__();
    }
  }, false);
  platform_interface_firebase_auth.FirebaseAuthPlatform = class FirebaseAuthPlatform extends plugin_platform_interface.PlatformInterface {
    get appInstance() {
      return this[S$.appInstance$1];
    }
    set appInstance(value) {
      super.appInstance = value;
    }
    get tenantId() {
      return this[S$.tenantId$1];
    }
    set tenantId(value) {
      this[S$.tenantId$1] = value;
    }
    get app() {
      if (this.appInstance == null) {
        return firebase_core.Firebase.app();
      }
      return dart.nullCheck(this.appInstance);
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      return platform_interface_firebase_auth.FirebaseAuthPlatform.instanceFor({app: app, pluginConstants: pluginConstants});
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      let currentUser = pluginConstants[S$.$_get]("APP_CURRENT_USER");
      if (currentUser != null) {
        T$.ListOfObjectN().as(currentUser);
        currentUser = messages$46pigeon.PigeonUserDetails.decode(currentUser);
      }
      return platform_interface_firebase_auth.FirebaseAuthPlatform.instance.delegateFor({app: app}).setInitialValues({languageCode: T$.StringN().as(pluginConstants[S$.$_get]("APP_LANGUAGE_CODE")), currentUser: T$.PigeonUserDetailsN().as(currentUser)});
    }
    static get instance() {
      platform_interface_firebase_auth.FirebaseAuthPlatform._instance == null ? platform_interface_firebase_auth.FirebaseAuthPlatform._instance = method_channel_firebase_auth.MethodChannelFirebaseAuth.instance : null;
      return dart.nullCheck(platform_interface_firebase_auth.FirebaseAuthPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_firebase_auth.FirebaseAuthPlatform._token);
      platform_interface_firebase_auth.FirebaseAuthPlatform._instance = instance;
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      dart.throw(new core.UnimplementedError.new("setInitialValues() is not implemented"));
    }
    get currentUser() {
      dart.throw(new core.UnimplementedError.new("get.currentUser is not implemented"));
    }
    set currentUser(userPlatform) {
      dart.throw(new core.UnimplementedError.new("set.currentUser is not implemented"));
    }
    get languageCode() {
      dart.throw(new core.UnimplementedError.new("languageCode is not implemented"));
    }
    sendAuthChangesEvent(appName, userPlatform) {
      dart.throw(new core.UnimplementedError.new("sendAuthChangesEvent() is not implemented"));
    }
    useAuthEmulator(host, port) {
      dart.throw(new core.UnimplementedError.new("useAuthEmulator() is not implemented"));
    }
    applyActionCode(code) {
      dart.throw(new core.UnimplementedError.new("applyActionCode() is not implemented"));
    }
    checkActionCode(code) {
      dart.throw(new core.UnimplementedError.new("checkActionCode() is not implemented"));
    }
    confirmPasswordReset(code, newPassword) {
      dart.throw(new core.UnimplementedError.new("confirmPasswordReset() is not implemented"));
    }
    createUserWithEmailAndPassword(email, password) {
      dart.throw(new core.UnimplementedError.new("createUserWithEmailAndPassword() is not implemented"));
    }
    fetchSignInMethodsForEmail(email) {
      dart.throw(new core.UnimplementedError.new("fetchSignInMethodsForEmail() is not implemented"));
    }
    getRedirectResult() {
      dart.throw(new core.UnimplementedError.new("getRedirectResult() is not implemented"));
    }
    isSignInWithEmailLink(emailLink) {
      return (emailLink[S$.$contains]("mode=signIn") || emailLink[S$.$contains]("mode%3DsignIn")) && (emailLink[S$.$contains]("oobCode=") || emailLink[S$.$contains]("oobCode%3D"));
    }
    authStateChanges() {
      dart.throw(new core.UnimplementedError.new("authStateChanges() is not implemented"));
    }
    idTokenChanges() {
      dart.throw(new core.UnimplementedError.new("idTokenChanges() is not implemented"));
    }
    userChanges() {
      dart.throw(new core.UnimplementedError.new("userChanges() is not implemented"));
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      dart.throw(new core.UnimplementedError.new("sendPasswordResetEmail() is not implemented"));
    }
    sendSignInLinkToEmail(email, actionCodeSettings) {
      dart.throw(new core.UnimplementedError.new("sendSignInLinkToEmail() is not implemented"));
    }
    setLanguageCode(languageCode) {
      dart.throw(new core.UnimplementedError.new("setLanguageCode() is not implemented"));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : false;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      dart.throw(new core.UnimplementedError.new("setSettings() is not implemented"));
    }
    setPersistence(persistence) {
      return async.async(dart.void, function* setPersistence() {
        dart.throw(new core.UnimplementedError.new("setPersistence() is not implemented"));
      });
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInAnonymously() {
        dart.throw(new core.UnimplementedError.new("signInAnonymously() is not implemented"));
      });
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithCredential() {
        dart.throw(new core.UnimplementedError.new("signInWithCredential() is not implemented"));
      });
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithCustomToken() {
        dart.throw(new core.UnimplementedError.new("signInWithCustomToken() is not implemented"));
      });
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithEmailAndPassword() {
        dart.throw(new core.UnimplementedError.new("signInWithEmailAndPassword() is not implemented"));
      });
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithEmailLink() {
        dart.throw(new core.UnimplementedError.new("signInWithEmailLink() is not implemented"));
      });
    }
    signInWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* signInWithProvider() {
        dart.throw(new core.UnimplementedError.new("signInWithProvider() is not implemented"));
      });
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, function* signInWithPhoneNumber() {
        dart.throw(new core.UnimplementedError.new("signInWithPhoneNumber() is not implemented"));
      });
    }
    signInWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithPopup() is not implemented"));
    }
    signInWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithRedirect() is not implemented"));
    }
    signOut() {
      return async.async(dart.void, function* signOut() {
        dart.throw(new core.UnimplementedError.new("signOut() is not implemented"));
      });
    }
    verifyPasswordResetCode(code) {
      dart.throw(new core.UnimplementedError.new("verifyPasswordResetCode() is not implemented"));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[9] || CT.C9;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      dart.throw(new core.UnimplementedError.new("verifyPhoneNumber() is not implemented"));
    }
    revokeTokenWithAuthorizationCode(authorizationCode) {
      dart.throw(new core.UnimplementedError.new("revokeTokenWithAuthorizationCode() is not implemented"));
    }
  };
  (platform_interface_firebase_auth.FirebaseAuthPlatform.new = function(opts) {
    let appInstance = opts && 'appInstance' in opts ? opts.appInstance : null;
    this[S$.tenantId$1] = null;
    this[S$.appInstance$1] = appInstance;
    platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__.new.call(this, {token: platform_interface_firebase_auth.FirebaseAuthPlatform._token});
    ;
  }).prototype = platform_interface_firebase_auth.FirebaseAuthPlatform.prototype;
  dart.addTypeTests(platform_interface_firebase_auth.FirebaseAuthPlatform);
  dart.addTypeCaches(platform_interface_firebase_auth.FirebaseAuthPlatform);
  dart.setMethodSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_firebase_auth.FirebaseAuthPlatform, [], {}, {app: firebase_core.FirebaseApp}),
    setInitialValues: dart.fnType(platform_interface_firebase_auth.FirebaseAuthPlatform, [], {currentUser: dart.nullable(messages$46pigeon.PigeonUserDetails), languageCode: dart.nullable(core.String)}, {}),
    sendAuthChangesEvent: dart.fnType(dart.void, [core.String, dart.nullable(platform_interface_user.UserPlatform)]),
    useAuthEmulator: dart.fnType(async.Future$(dart.void), [core.String, core.int]),
    applyActionCode: dart.fnType(async.Future$(dart.void), [core.String]),
    checkActionCode: dart.fnType(async.Future$(action_code_info.ActionCodeInfo), [core.String]),
    confirmPasswordReset: dart.fnType(async.Future$(dart.void), [core.String, core.String]),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(core.String)), [core.String]),
    getRedirectResult: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), []),
    isSignInWithEmailLink: dart.fnType(core.bool, [core.String]),
    authStateChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    idTokenChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    userChanges: dart.fnType(async.Stream$(dart.nullable(platform_interface_user.UserPlatform)), []),
    sendPasswordResetEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)]),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [core.String, action_code_settings.ActionCodeSettings]),
    setLanguageCode: dart.fnType(async.Future$(dart.void), [dart.nullable(core.String)]),
    setSettings: dart.fnType(async.Future$(dart.void), [], {appVerificationDisabledForTesting: core.bool, forceRecaptchaFlow: dart.nullable(core.bool), phoneNumber: dart.nullable(core.String), smsCode: dart.nullable(core.String), userAccessGroup: dart.nullable(core.String)}, {}),
    setPersistence: dart.fnType(async.Future$(dart.void), [types.Persistence]),
    signInAnonymously: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), []),
    signInWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    signInWithCustomToken: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    signInWithEmailLink: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String, core.String]),
    signInWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    signInWithPhoneNumber: dart.fnType(async.Future$(platform_interface_confirmation_result.ConfirmationResultPlatform), [core.String, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform]),
    signInWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    signInWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider.AuthProvider]),
    signOut: dart.fnType(async.Future$(dart.void), []),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [core.String]),
    verifyPhoneNumber: dart.fnType(async.Future$(dart.void), [], {autoRetrievedSmsCodeForTesting: dart.nullable(core.String), forceResendingToken: dart.nullable(core.int), multiFactorInfo: dart.nullable(platform_interface_multi_factor.PhoneMultiFactorInfo), multiFactorSession: dart.nullable(platform_interface_multi_factor.MultiFactorSession), phoneNumber: dart.nullable(core.String), timeout: core.Duration}, {codeAutoRetrievalTimeout: dart.fnType(dart.void, [core.String]), codeSent: dart.fnType(dart.void, [core.String, dart.nullable(core.int)]), verificationCompleted: dart.fnType(dart.void, [phone_auth.PhoneAuthCredential]), verificationFailed: dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])}),
    revokeTokenWithAuthorizationCode: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instanceFor']);
  dart.setGetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    app: firebase_core.FirebaseApp,
    currentUser: dart.nullable(platform_interface_user.UserPlatform),
    languageCode: dart.nullable(core.String)
  }));
  dart.setSetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getSetters(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    currentUser: dart.nullable(platform_interface_user.UserPlatform)
  }));
  dart.setStaticGetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_firebase_auth.FirebaseAuthPlatform, I[18]);
  dart.setFieldSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ({
    __proto__: dart.getFields(platform_interface_firebase_auth.FirebaseAuthPlatform.__proto__),
    appInstance: dart.finalFieldType(dart.nullable(firebase_core.FirebaseApp)),
    tenantId: dart.fieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(platform_interface_firebase_auth.FirebaseAuthPlatform, () => ['_token', '_instance']);
  dart.defineLazy(platform_interface_firebase_auth.FirebaseAuthPlatform, {
    /*platform_interface_firebase_auth.FirebaseAuthPlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*platform_interface_firebase_auth.FirebaseAuthPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {}
  }, false);
  firebase_auth_web.FirebaseAuthWeb = class FirebaseAuthWeb extends platform_interface_firebase_auth.FirebaseAuthPlatform {
    static ['_#_#tearOff']() {
      return new firebase_auth_web.FirebaseAuthWeb.__();
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new firebase_auth_web.FirebaseAuthWeb.new({app: app});
    }
    static registerWith(registrar) {
      firebase_core_web.FirebaseCoreWeb.registerService("auth", {ensurePluginInitialized: dart.fn(firebaseApp => async.async(dart.void, function*() {
          let authDelegate = auth$.getAuthInstance(firebaseApp);
          if (html.window[S$.$location].hostname === "localhost" && true) {
            let emulatorOrigin = html.window[S$.$sessionStorage][S$.$_get](firebase_auth_web.getOriginName(firebaseApp.name));
            if (emulatorOrigin != null) {
              try {
                authDelegate.useAuthEmulator(emulatorOrigin);
                core.print("Using previously configured Auth emulator at " + dart.str(emulatorOrigin) + " for " + firebaseApp.name + " \nTo switch back to production, restart your app with the emulator turned off.");
              } catch (e$) {
                let e = dart.getThrown(e$);
                if (core.Object.is(e)) {
                  if (e[S$.$toString]()[S$.$contains]("sooner")) {
                    core.print("Auth emulator is already configured at " + dart.str(emulatorOrigin) + " for " + firebaseApp.name + " and kept across hot reload.\nTo switch back to production, restart your app with the emulator turned off.");
                  } else {
                    dart.rethrow(e$);
                  }
                } else
                  throw e$;
              }
            }
          }
          yield authDelegate.onWaitInitState();
        }), T$.AppToFutureOfvoid())});
      platform_interface_firebase_auth.FirebaseAuthPlatform.instance = firebase_auth_web.FirebaseAuthWeb.instance;
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.instance = new firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new();
      platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.instance = new firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb.new();
      platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.instance = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.instance;
    }
    static get instance() {
      return new firebase_auth_web.FirebaseAuthWeb.__();
    }
    get delegate() {
      this[S$._webAuth] == null ? this[S$._webAuth] = auth$.getAuthInstance(core$.app(this.app.name)) : null;
      return dart.nullCheck(this[S$._webAuth]);
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new firebase_auth_web.FirebaseAuthWeb.new({app: app});
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      return this;
    }
    get currentUser() {
      let webCurrentUser = this.delegate.currentUser;
      if (webCurrentUser == null) {
        return null;
      }
      return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(dart.nullCheck(this.delegate.currentUser))), dart.nullCheck(this.delegate.currentUser), this[S$._webAuth]);
    }
    set currentUser(value) {
      super.currentUser = value;
    }
    get tenantId() {
      return this.delegate.tenantId;
    }
    set tenantId(tenantId) {
      this.delegate.tenantId = tenantId;
    }
    sendAuthChangesEvent(appName, userPlatform) {
      if (!(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](appName) != null)) dart.assertFailed(null, I[17], 192, 12, "_userChangesListeners[appName] != null");
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](appName)).add(userPlatform);
    }
    applyActionCode(code) {
      return async.async(dart.void, (function* applyActionCode() {
        try {
          yield this.delegate.applyActionCode(code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    checkActionCode(code) {
      return async.async(action_code_info.ActionCodeInfo, (function* checkActionCode() {
        try {
          return dart.nullCheck(web_utils$.convertWebActionCodeInfo(yield this.delegate.checkActionCode(code)));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    confirmPasswordReset(code, newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        try {
          yield this.delegate.confirmPasswordReset(code, newPassword);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* createUserWithEmailAndPassword() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.createUserWithEmailAndPassword(email, password), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return async.async(T$.ListOfString(), (function* fetchSignInMethodsForEmail() {
        try {
          return yield this.delegate.fetchSignInMethodsForEmail(email);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getRedirectResult() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* getRedirectResult() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.getRedirectResult(), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    authStateChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* authStateChanges(stream) {
        yield this[S$._initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[S$.$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    idTokenChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* idTokenChanges(stream) {
        yield this[S$._initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[S$.$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    userChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* userChanges(stream) {
        yield this[S$._initialized].future;
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](this.app.name)).stream)) return;
        yield;
      }).bind(this)).stream;
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        try {
          yield this.delegate.sendPasswordResetEmail(email, web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        try {
          yield this.delegate.sendSignInLinkToEmail(email, web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    get languageCode() {
      return this.delegate.languageCode;
    }
    setLanguageCode(languageCode) {
      return async.async(dart.void, (function* setLanguageCode() {
        if (languageCode == null) {
          this.delegate.useDeviceLanguage();
        } else {
          this.delegate.languageCode = languageCode;
        }
      }).bind(this));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return async.async(dart.void, (function* setSettings() {
        this.delegate.settings.appVerificationDisabledForTesting = appVerificationDisabledForTesting;
      }).bind(this));
    }
    setPersistence(persistence) {
      return async.async(dart.void, (function* setPersistence() {
        try {
          return this.delegate.setPersistence(persistence);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInAnonymously() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInAnonymously(), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCredential() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithCredential(dart.nullCheck(web_utils$.convertPlatformCredential(credential))), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCustomToken() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithCustomToken(token), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailAndPassword() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithEmailAndPassword(email, password), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailLink() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithEmailLink(email, emailLink), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, (function* signInWithPhoneNumber() {
        try {
          let verifier = auth$.RecaptchaVerifier.as(applicationVerifier.delegate);
          return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(this, yield this.delegate.signInWithPhoneNumber(phoneNumber, verifier), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithPopup() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this, yield this.delegate.signInWithPopup(web_utils$.convertPlatformAuthProvider(provider)), this[S$._webAuth]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithRedirect(provider) {
      return async.async(dart.void, (function* signInWithRedirect() {
        try {
          return this.delegate.signInWithRedirect(web_utils$.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        try {
          yield this.delegate.signOut();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    useAuthEmulator(host, port) {
      return async.async(dart.void, (function* useAuthEmulator() {
        try {
          let emulatorOrigin = html.window[S$.$sessionStorage][S$.$_get](firebase_auth_web.getOriginName(this.delegate.app.name));
          let origin = "http://" + host + ":" + dart.str(port);
          if (origin === emulatorOrigin) {
            return;
          }
          this.delegate.useAuthEmulator(origin);
          {
            html.window[S$.$sessionStorage][S$.$_set](firebase_auth_web.getOriginName(this.delegate.app.name), origin);
          }
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            if (dart.packageJSType("firebase_auth.AuthError", true).is(e)) {
              let code = auth_interop['AuthErrorExtension|get#code'](e);
              if (code !== "auth/emulator-config-failed") {
                dart.throw(web_utils$.getFirebaseAuthException(e));
              }
            } else {
              dart.rethrow(e$);
            }
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPasswordResetCode(code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        try {
          return yield this.delegate.verifyPasswordResetCode(code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[9] || CT.C9;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      return async.async(dart.void, (function* verifyPhoneNumber() {
        let t52;
        try {
          let data = null;
          if (multiFactorSession != null) {
            let _webMultiFactorSession = firebase_auth_web_multi_factor.MultiFactorSessionWeb.as(multiFactorSession);
            if (multiFactorInfo != null) {
              data = new (T$.IdentityMapOfString$dynamic()).from(["multiFactorUid", multiFactorInfo.uid, "session", _webMultiFactorSession.webSession.jsObject]);
            } else {
              data = new (T$.IdentityMapOfString$dynamic()).from(["phoneNumber", phoneNumber, "session", _webMultiFactorSession.webSession.jsObject]);
            }
          }
          let phoneOptions = dart.nullCheck((t52 = data, t52 == null ? phoneNumber : t52));
          let provider = auth$.PhoneAuthProvider.new(this[S$._webAuth]);
          let verifier = new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: this}).delegate;
          let verificationId = (yield provider.verifyPhoneNumber(utils$.jsify(phoneOptions, dart.fn(object => object, T$.ObjectNToObjectN())), verifier));
          codeSent(verificationId, null);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            verificationFailed(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    revokeTokenWithAuthorizationCode(authorizationCode) {
      return async.async(dart.void, function* revokeTokenWithAuthorizationCode() {
        dart.throw(new core.UnimplementedError.new("revokeTokenWithAuthorizationCode() is only available on apple platforms."));
      });
    }
  };
  (firebase_auth_web.FirebaseAuthWeb.__ = function() {
    this[S$._initialized] = T$.CompleterOfvoid().new();
    this[S$._webAuth] = null;
    firebase_auth_web.FirebaseAuthWeb.__proto__.new.call(this, {appInstance: null});
    ;
  }).prototype = firebase_auth_web.FirebaseAuthWeb.prototype;
  (firebase_auth_web.FirebaseAuthWeb.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[S$._initialized] = T$.CompleterOfvoid().new();
    this[S$._webAuth] = null;
    firebase_auth_web.FirebaseAuthWeb.__proto__.new.call(this, {appInstance: app});
    firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[S$.$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[S$.$_set](app.name, T$.StreamControllerOfUserPlatformN().broadcast());
    this.delegate.onAuthStateChanged.map(T$.UserWebN(), dart.fn(webUser => {
      if (!this[S$._initialized].isCompleted) {
        this[S$._initialized].complete();
      }
      if (webUser == null) {
        return null;
      } else {
        return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(webUser)), webUser, this[S$._webAuth]);
      }
    }, T$.UserNToUserWebN())).listen(dart.fn(webUser => {
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners[S$.$_get](app.name)).add(webUser);
    }, T$.UserWebNTovoid()));
    this.delegate.onIdTokenChanged.map(T$.UserWebN(), dart.fn(webUser => {
      if (webUser == null) {
        return null;
      } else {
        return new firebase_auth_web_user.UserWeb.new(this, new firebase_auth_web_multi_factor.MultiFactorWeb.new(this, multi_factor.multiFactor(webUser)), webUser, this[S$._webAuth]);
      }
    }, T$.UserNToUserWebN())).listen(dart.fn(webUser => {
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners[S$.$_get](app.name)).add(webUser);
      dart.nullCheck(firebase_auth_web.FirebaseAuthWeb._userChangesListeners[S$.$_get](app.name)).add(webUser);
    }, T$.UserWebNTovoid()));
  }).prototype = firebase_auth_web.FirebaseAuthWeb.prototype;
  dart.addTypeTests(firebase_auth_web.FirebaseAuthWeb);
  dart.addTypeCaches(firebase_auth_web.FirebaseAuthWeb);
  dart.setMethodSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getMethods(firebase_auth_web.FirebaseAuthWeb.__proto__),
    setInitialValues: dart.fnType(firebase_auth_web.FirebaseAuthWeb, [], {currentUser: dart.nullable(messages$46pigeon.PigeonUserDetails), languageCode: dart.nullable(core.String)}, {}),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)]),
    setSettings: dart.fnType(async.Future$(dart.void), [], {appVerificationDisabledForTesting: dart.nullable(core.bool), forceRecaptchaFlow: dart.nullable(core.bool), phoneNumber: dart.nullable(core.String), smsCode: dart.nullable(core.String), userAccessGroup: dart.nullable(core.String)}, {})
  }));
  dart.setStaticMethodSignature(firebase_auth_web.FirebaseAuthWeb, () => ['registerWith']);
  dart.setGetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getGetters(firebase_auth_web.FirebaseAuthWeb.__proto__),
    delegate: auth$.Auth,
    tenantId: dart.nullable(core.String),
    languageCode: core.String
  }));
  dart.setSetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getSetters(firebase_auth_web.FirebaseAuthWeb.__proto__),
    tenantId: dart.nullable(core.String)
  }));
  dart.setStaticGetterSignature(firebase_auth_web.FirebaseAuthWeb, () => ['instance']);
  dart.setLibraryUri(firebase_auth_web.FirebaseAuthWeb, I[19]);
  dart.setFieldSignature(firebase_auth_web.FirebaseAuthWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web.FirebaseAuthWeb.__proto__),
    [S$._initialized]: dart.fieldType(async.Completer$(dart.void)),
    [S$._webAuth]: dart.fieldType(dart.nullable(auth$.Auth))
  }));
  dart.setStaticFieldSignature(firebase_auth_web.FirebaseAuthWeb, () => ['_authStateChangesListeners', '_idTokenChangesListeners', '_userChangesListeners']);
  dart.defineLazy(firebase_auth_web.FirebaseAuthWeb, {
    /*firebase_auth_web.FirebaseAuthWeb._authStateChangesListeners*/get _authStateChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _authStateChangesListeners(value) {},
    /*firebase_auth_web.FirebaseAuthWeb._idTokenChangesListeners*/get _idTokenChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _idTokenChangesListeners(value) {},
    /*firebase_auth_web.FirebaseAuthWeb._userChangesListeners*/get _userChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOfUserPlatformN()).new();
    },
    set _userChangesListeners(value) {}
  }, false);
  firebase_auth_web.getOriginName = function getOriginName(appName) {
    return appName + "-firebaseEmulatorOrigin";
  };
  firebase_core_platform_interface.FirebaseAppPlatform = class FirebaseAppPlatform extends plugin_platform_interface.PlatformInterface {
    get name() {
      return this[S$.name];
    }
    set name(value) {
      super.name = value;
    }
    get options() {
      return this[S$.options];
    }
    set options(value) {
      super.options = value;
    }
    static ['_#new#tearOff'](name, options) {
      return new firebase_core_platform_interface.FirebaseAppPlatform.new(name, options);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebaseAppPlatform._token);
    }
    get [S$._isDefault]() {
      return this.name === "[DEFAULT]";
    }
    get isAutomaticDataCollectionEnabled() {
      dart.throw(new core.UnimplementedError.new("isAutomaticDataCollectionEnabled has not been implemented."));
    }
    delete() {
      return async.async(dart.void, function* $delete() {
        dart.throw(new core.UnimplementedError.new("delete() has not been implemented."));
      });
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return async.async(dart.void, function* setAutomaticDataCollectionEnabled() {
        dart.throw(new core.UnimplementedError.new("setAutomaticDataCollectionEnabled() has not been implemented."));
      });
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return async.async(dart.void, function* setAutomaticResourceManagementEnabled() {
        dart.throw(new core.UnimplementedError.new("setAutomaticResourceManagementEnabled() has not been implemented."));
      });
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseAppPlatform.is(other)) return false;
      return other.name === this.name && other.options._equals(this.options);
    }
    get hashCode() {
      return core.Object.hash(this.name, this.options);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_core_platform_interface.FirebaseAppPlatform)) + "(" + this.name + ")";
    }
  };
  (firebase_core_platform_interface.FirebaseAppPlatform.new = function(name, options) {
    this[S$.name] = name;
    this[S$.options] = options;
    firebase_core_platform_interface.FirebaseAppPlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebaseAppPlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebaseAppPlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseAppPlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseAppPlatform);
  dart.setMethodSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.bool])
  }));
  dart.setStaticMethodSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ['verify']);
  dart.setGetterSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    [S$._isDefault]: core.bool,
    isAutomaticDataCollectionEnabled: core.bool
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseAppPlatform, I[5]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseAppPlatform.__proto__),
    name: dart.finalFieldType(core.String),
    options: dart.finalFieldType(firebase_core_platform_interface.FirebaseOptions)
  }));
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebaseAppPlatform, () => ['_token']);
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseAppPlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseAppPlatform, ['hashCode']);
  dart.defineLazy(firebase_core_platform_interface.FirebaseAppPlatform, {
    /*firebase_core_platform_interface.FirebaseAppPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_core_web.FirebaseAppWeb = class FirebaseAppWeb extends firebase_core_platform_interface.FirebaseAppPlatform {
    static ['_#_#tearOff'](name, options) {
      return new firebase_core_web.FirebaseAppWeb.__(name, options);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        yield core$.app(this.name).delete();
      }).bind(this));
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$._isAutomaticDataCollectionEnabled];
    }
    setAutomaticDataCollectionEnabled(enabled) {
      this[S$._isAutomaticDataCollectionEnabled] = enabled;
      return T$.FutureOfvoid().value();
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return T$.FutureOfvoid().value();
    }
  };
  (firebase_core_web.FirebaseAppWeb.__ = function(name, options) {
    this[S$._isAutomaticDataCollectionEnabled] = false;
    firebase_core_web.FirebaseAppWeb.__proto__.new.call(this, name, options);
    ;
  }).prototype = firebase_core_web.FirebaseAppWeb.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseAppWeb);
  dart.addTypeCaches(firebase_core_web.FirebaseAppWeb);
  dart.setLibraryUri(firebase_core_web.FirebaseAppWeb, I[20]);
  dart.setFieldSignature(firebase_core_web.FirebaseAppWeb, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseAppWeb.__proto__),
    [S$._isAutomaticDataCollectionEnabled]: dart.fieldType(core.bool)
  }));
  firebase_core_web.FirebaseWebService = class FirebaseWebService extends core.Object {
    get name() {
      return this[S$.name$1];
    }
    set name(value) {
      this[S$.name$1] = value;
    }
    get override() {
      return this[S$.override];
    }
    set override(value) {
      this[S$.override] = value;
    }
    get ensurePluginInitialized() {
      return this[S$.ensurePluginInitialized];
    }
    set ensurePluginInitialized(value) {
      this[S$.ensurePluginInitialized] = value;
    }
    static ['_#_#tearOff'](name, opts) {
      let override = opts && 'override' in opts ? opts.override : null;
      let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
      return new firebase_core_web.FirebaseWebService.__(name, {override: override, ensurePluginInitialized: ensurePluginInitialized});
    }
  };
  (firebase_core_web.FirebaseWebService.__ = function(name, opts) {
    let override = opts && 'override' in opts ? opts.override : null;
    let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
    this[S$.name$1] = name;
    this[S$.override] = override;
    this[S$.ensurePluginInitialized] = ensurePluginInitialized;
    ;
  }).prototype = firebase_core_web.FirebaseWebService.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseWebService);
  dart.addTypeCaches(firebase_core_web.FirebaseWebService);
  dart.setLibraryUri(firebase_core_web.FirebaseWebService, I[20]);
  dart.setFieldSignature(firebase_core_web.FirebaseWebService, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseWebService.__proto__),
    name: dart.fieldType(core.String),
    override: dart.fieldType(dart.nullable(core.String)),
    ensurePluginInitialized: dart.fieldType(dart.nullable(dart.fnType(async.Future$(dart.void), [app$.App])))
  }));
  firebase_core_platform_interface.FirebasePlatform = class FirebasePlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return firebase_core_platform_interface.FirebasePlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, firebase_core_platform_interface.FirebasePlatform._token);
      firebase_core_platform_interface.FirebasePlatform._instance = instance;
    }
    get apps() {
      dart.throw(new core.UnimplementedError.new("apps has not been implemented."));
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      dart.throw(new core.UnimplementedError.new("initializeApp() has not been implemented."));
    }
    app(name = "[DEFAULT]") {
      dart.throw(new core.UnimplementedError.new("app() has not been implemented."));
    }
  };
  (firebase_core_platform_interface.FirebasePlatform.new = function() {
    firebase_core_platform_interface.FirebasePlatform.__proto__.new.call(this, {token: firebase_core_platform_interface.FirebasePlatform._token});
    ;
  }).prototype = firebase_core_platform_interface.FirebasePlatform.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebasePlatform);
  dart.addTypeCaches(firebase_core_platform_interface.FirebasePlatform);
  dart.setMethodSignature(firebase_core_platform_interface.FirebasePlatform, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.FirebasePlatform.__proto__),
    initializeApp: dart.fnType(async.Future$(firebase_core_platform_interface.FirebaseAppPlatform), [], {name: dart.nullable(core.String), options: dart.nullable(firebase_core_platform_interface.FirebaseOptions)}, {}),
    app: dart.fnType(firebase_core_platform_interface.FirebaseAppPlatform, [], [core.String])
  }));
  dart.setGetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebasePlatform.__proto__),
    apps: core.List$(firebase_core_platform_interface.FirebaseAppPlatform)
  }));
  dart.setStaticGetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ['instance']);
  dart.setStaticSetterSignature(firebase_core_platform_interface.FirebasePlatform, () => ['instance']);
  dart.setLibraryUri(firebase_core_platform_interface.FirebasePlatform, I[5]);
  dart.setStaticFieldSignature(firebase_core_platform_interface.FirebasePlatform, () => ['_token', '_instance']);
  dart.defineLazy(firebase_core_platform_interface.FirebasePlatform, {
    /*firebase_core_platform_interface.FirebasePlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*firebase_core_platform_interface.FirebasePlatform._instance*/get _instance() {
      return new firebase_core_platform_interface.MethodChannelFirebase.new();
    },
    set _instance(value) {}
  }, false);
  firebase_core_web.FirebaseCoreWeb = class FirebaseCoreWeb extends firebase_core_platform_interface.FirebasePlatform {
    static registerService(service, opts) {
      let productNameOverride = opts && 'productNameOverride' in opts ? opts.productNameOverride : null;
      let ensurePluginInitialized = opts && 'ensurePluginInitialized' in opts ? opts.ensurePluginInitialized : null;
      firebase_core_web.FirebaseCoreWeb._services[S$.$putIfAbsent](service, dart.fn(() => new firebase_core_web.FirebaseWebService.__(service, {override: productNameOverride, ensurePluginInitialized: ensurePluginInitialized}), T$.VoidToFirebaseWebService()));
    }
    static registerWith(registrar) {
      firebase_core_platform_interface.FirebasePlatform.instance = new firebase_core_web.FirebaseCoreWeb.new();
    }
    get firebaseSDKVersion() {
      let t53;
      return core.String.as((t53 = js.context._get("flutterfire_web_sdk_version"), t53 == null ? "10.7.0" : t53));
    }
    get [S$._ignoredServiceScripts]() {
      try {
        let ignored = js.JsObject.fromBrowserObject(core.Object.as(js.context._get("flutterfire_ignore_scripts")));
        if (core.Iterable.is(ignored)) {
          return core.Iterable.as(ignored)[S$.$map](core.String, dart.fn(e => dart.toString(e), T$.dynamicToString()))[S$.$toList]({growable: false});
        }
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
        } else
          throw e$;
      }
      return T$.JSArrayOfString().of([]);
    }
    injectSrcScript(src, windowVar) {
      return async.async(dart.void, (function* injectSrcScript() {
        let trustedUrl = null;
        let trustedPolicyName = this[S$._defaultTrustedPolicyName] + windowVar;
        if (dart.global.trustedTypes != null) {
          js$['DomConsoleExtension|get#debug'](dart.global.console)("TrustedTypes available. Creating policy:", trustedPolicyName);
          let factory = dart.nullCheck(dart.global.trustedTypes);
          try {
            let policy = js$['DomTrustedTypePolicyFactoryExtension|createPolicy'](factory, trustedPolicyName, {createScriptURL: js.allowInterop(T$.StringToString(), dart.fn(url => src, T$.StringToString()))});
            trustedUrl = js$['DomTrustedTypePolicyExtension|createScriptURL'](policy, src);
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
              dart.rethrow(e$);
            } else
              throw e$;
          }
        }
        let script = html.ScriptElement.new();
        script[S$.$type] = "text/javascript";
        script.crossOrigin = "anonymous";
        script[S$.$text] = "      window.ff_trigger_" + windowVar + " = async (callback) => {\n        console.debug(\"Initializing Firebase " + windowVar + "\");\n        callback(await import(\"" + dart.str(trustedUrl != null ? js_util._callMethodUnchecked0(dart.dynamic, trustedUrl, "toString") : src) + "\"));\n      };\n    ";
        if (!(html.document[S$.$head] != null)) dart.assertFailed(null, I[21], 137, 12, "document.head != null");
        dart.nullCheck(html.document[S$.$head])[S$.$append](script);
        let completer = async.Completer.new();
        js.context.callMethod("ff_trigger_" + windowVar, [dart.fn(module => {
            js.context._set(windowVar, module);
            js.context.deleteProperty("ff_trigger_" + windowVar);
            completer.complete();
          }, T$.dynamicToNull())]);
        yield completer.future;
      }).bind(this));
    }
    [S$._initializeCore]() {
      return async.async(dart.void, (function* _initializeCore() {
        if (js.context._get("firebase_core") != null) {
          return;
        }
        let version = this.firebaseSDKVersion;
        let ignored = this[S$._ignoredServiceScripts];
        yield async.Future.wait(dart.void, firebase_core_web.FirebaseCoreWeb._services[S$.$values][S$.$map](T$.FutureOfvoid(), dart.fn(service => {
          let t55, t55$;
          if (ignored[S$.$contains]((t55 = service.override, t55 == null ? service.name : t55))) {
            return async.Future.value();
          }
          return this.injectSrcScript("https://www.gstatic.com/firebasejs/" + version + "/firebase-" + service.name + ".js", "firebase_" + dart.str((t55$ = service.override, t55$ == null ? service.name : t55$)));
        }, T$.FirebaseWebServiceToFutureOfvoid())));
      }).bind(this));
    }
    get apps() {
      return firebase_core_web.guardNotInitialized(T$.ListOfFirebaseAppPlatform(), dart.fn(() => core$.apps[S$.$map](firebase_core_platform_interface.FirebaseAppPlatform, C[61] || CT.C61)[S$.$toList]({growable: false}), T$.VoidToListOfFirebaseAppPlatform()));
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core_platform_interface.FirebaseAppPlatform, (function* initializeApp() {
        yield this[S$._initializeCore]();
        firebase_core_web.guardNotInitialized(core.String, dart.fn(() => dart.global.firebase_core.SDK_VERSION, T$.VoidToString()));
        if (!dart.fn(() => {
          if (dart.global.firebase_core.SDK_VERSION !== "10.7.0") {
            core.print("            WARNING: FlutterFire for Web is explicitly tested against Firebase JS SDK version \"" + "10.7.0" + "\"\n            but your currently specifying \"" + dart.global.firebase_core.SDK_VERSION + "\" by either the imported Firebase JS SDKs in your web/index.html\n            file or by providing an override - this may lead to unexpected issues in your application. It is recommended that you change all of the versions of the\n            Firebase JS SDK version \"" + "10.7.0" + "\":\n\n            If you override the version manually:\n              change:\n                <script>window.flutterfire_web_sdk_version = '" + dart.global.firebase_core.SDK_VERSION + "';</script>\n              to:\n                <script>window.flutterfire_web_sdk_version = '" + "10.7.0" + "';</script>\n\n            If you import the Firebase scripts in index.html, instead allow FlutterFire to manage this for you by removing\n            any Firebase scripts in your web/index.html file:\n                e.g. remove: <script src=\"https://www.gstatic.com/firebasejs/" + dart.global.firebase_core.SDK_VERSION + "/firebase-app.js\"></script>\n          ");
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[21], 201, 7, "() {\n        if (firebase.SDK_VERSION != supportedFirebaseJsSdkVersion) {\n          // ignore: avoid_print\n          print(\n            '''\n            WARNING: FlutterFire for Web is explicitly tested against Firebase JS SDK version \"$supportedFirebaseJsSdkVersion\"\n            but your currently specifying \"${firebase.SDK_VERSION}\" by either the imported Firebase JS SDKs in your web/index.html\n            file or by providing an override - this may lead to unexpected issues in your application. It is recommended that you change all of the versions of the\n            Firebase JS SDK version \"$supportedFirebaseJsSdkVersion\":\n\n            If you override the version manually:\n              change:\n                <script>window.flutterfire_web_sdk_version = '${firebase.SDK_VERSION}';</script>\n              to:\n                <script>window.flutterfire_web_sdk_version = '$supportedFirebaseJsSdkVersion';</script>\n\n            If you import the Firebase scripts in index.html, instead allow FlutterFire to manage this for you by removing\n            any Firebase scripts in your web/index.html file:\n                e.g. remove: <script src=\"https://www.gstatic.com/firebasejs/${firebase.SDK_VERSION}/firebase-app.js\"></script>\n          ''',\n          );\n        }\n\n        return true;\n      }()");
        let app = null;
        if (name == null || name === "[DEFAULT]") {
          let defaultAppExists = false;
          try {
            app = core$.app();
            defaultAppExists = true;
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (core.Object.is(e)) {
            } else
              throw e$;
          }
          if (defaultAppExists) {
            if (options != null) {
              if (options.apiKey !== dart.nullCheck(app).options.apiKey || options.databaseURL !== app.options.databaseURL || options.storageBucket !== app.options.storageBucket) {
                dart.throw(firebase_core_platform_interface.duplicateApp("[DEFAULT]"));
              }
            }
          } else {
            if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating the default app.", I[21], 255, 11, "options != null");
            app = core$.initializeApp({apiKey: dart.nullCheck(options).apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
          }
        }
        if (name != null && name !== "[DEFAULT]") {
          if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating a secondary Firebase app.", I[21], 277, 9, "options != null");
          try {
            app = core$.initializeApp({name: name, apiKey: dart.nullCheck(options).apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
          } catch (e$0) {
            let e = dart.getThrown(e$0);
            if (core.Object.is(e)) {
              if (firebase_core_web._getJSErrorCode(e) === "app/duplicate-app") {
                dart.throw(firebase_core_platform_interface.duplicateApp(name));
              }
              dart.throw(firebase_core_web._catchJSError(e));
            } else
              throw e$0;
          }
        }
        let appCheck = firebase_core_web.FirebaseCoreWeb._services[S$.$remove]("app-check");
        if (appCheck != null) {
          yield dart.nullCheck(appCheck.ensurePluginInitialized)(dart.nullCheck(app));
        }
        yield async.Future.wait(dart.void, firebase_core_web.FirebaseCoreWeb._services[S$.$values][S$.$map](T$.FutureOfvoid(), dart.fn(service => {
          let ensureInitializedFunction = service.ensurePluginInitialized;
          if (ensureInitializedFunction == null || app == null) {
            return async.Future.value();
          }
          return ensureInitializedFunction(app);
        }, T$.FirebaseWebServiceToFutureOfvoid())));
        return firebase_core_web._createFromJsApp(dart.nullCheck(app));
      }).bind(this));
    }
    app(name = "[DEFAULT]") {
      let app = null;
      try {
        app = firebase_core_web.guardNotInitialized(app$.App, dart.fn(() => core$.app(name), T$.VoidToApp()));
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          if (firebase_core_web._getJSErrorCode(e) === "app/no-app") {
            dart.throw(firebase_core_platform_interface.noAppExists(name));
          }
          dart.throw(firebase_core_web._catchJSError(e));
        } else
          throw e$;
      }
      return firebase_core_web._createFromJsApp(app);
    }
    static ['_#new#tearOff']() {
      return new firebase_core_web.FirebaseCoreWeb.new();
    }
  };
  (firebase_core_web.FirebaseCoreWeb.new = function() {
    this[S$._defaultTrustedPolicyName] = "flutterfire-";
    firebase_core_web.FirebaseCoreWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_core_web.FirebaseCoreWeb.prototype;
  dart.addTypeTests(firebase_core_web.FirebaseCoreWeb);
  dart.addTypeCaches(firebase_core_web.FirebaseCoreWeb);
  dart.setMethodSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getMethods(firebase_core_web.FirebaseCoreWeb.__proto__),
    injectSrcScript: dart.fnType(async.Future$(dart.void), [core.String, core.String]),
    [S$._initializeCore]: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(firebase_core_web.FirebaseCoreWeb, () => ['registerService', 'registerWith']);
  dart.setGetterSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getGetters(firebase_core_web.FirebaseCoreWeb.__proto__),
    firebaseSDKVersion: core.String,
    [S$._ignoredServiceScripts]: core.List$(core.String)
  }));
  dart.setLibraryUri(firebase_core_web.FirebaseCoreWeb, I[20]);
  dart.setFieldSignature(firebase_core_web.FirebaseCoreWeb, () => ({
    __proto__: dart.getFields(firebase_core_web.FirebaseCoreWeb.__proto__),
    [S$._defaultTrustedPolicyName]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(firebase_core_web.FirebaseCoreWeb, () => ['_services']);
  dart.defineLazy(firebase_core_web.FirebaseCoreWeb, {
    /*firebase_core_web.FirebaseCoreWeb._services*/get _services() {
      return new (T$.IdentityMapOfString$FirebaseWebService()).from(["core", new firebase_core_web.FirebaseWebService.__("app", {override: "core"})]);
    },
    set _services(value) {}
  }, false);
  firebase_core_web._createFromJsApp = function _createFromJsApp(jsApp) {
    return new firebase_core_web.FirebaseAppWeb.__(jsApp.name, firebase_core_web._createFromJsOptions(jsApp.options));
  };
  firebase_core_web._createFromJsOptions = function _createFromJsOptions(options) {
    return new firebase_core_platform_interface.FirebaseOptions.new({apiKey: options.apiKey, authDomain: options.authDomain, databaseURL: options.databaseURL, projectId: options.projectId, storageBucket: options.storageBucket, messagingSenderId: options.messagingSenderId, appId: options.appId, measurementId: options.measurementId});
  };
  firebase_core_web._getJSErrorCode = function _getJSErrorCode(e) {
    let t58;
    if (dart.equals(js_util.getProperty(dart.dynamic, core.Object.as(e), "name"), "FirebaseError")) {
      t58 = js_util.getProperty(T$.StringN(), core.Object.as(e), "code");
      return t58 == null ? "" : t58;
    }
    return "";
  };
  firebase_core_web._catchJSError = function _catchJSError(e) {
    let t58;
    if (dart.equals(js_util.getProperty(dart.dynamic, core.Object.as(e), "name"), "FirebaseError")) {
      let rawCode = js_util.getProperty(core.String, core.Object.as(e), "code");
      let code = rawCode;
      let message = (t58 = js_util.getProperty(T$.StringN(), core.Object.as(e), "message"), t58 == null ? "" : t58);
      if (code[S$.$contains]("/")) {
        let chunks = code[S$.$split]("/");
        code = chunks[S$.$_get](chunks[S$.$length] - 1);
      }
      return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: code, message: message[S$.$replaceAll](" (" + rawCode + ")", "")});
    }
    dart.throw(e);
  };
  firebase_core_web._handleException = function _handleException(exception, stackTrace) {
    if (exception[S$.$toString]()[S$.$contains]("of undefined")) {
      dart.throw(firebase_core_platform_interface.coreNotInitialized());
    }
    core.Error.throwWithStackTrace(exception, stackTrace);
  };
  firebase_core_web.guardNotInitialized = function guardNotInitialized(R, cb) {
    try {
      let value = cb();
      if (async.Future.is(value)) {
        return R.as(value.catchError(C[62] || CT.C62));
      }
      return value;
    } catch (e) {
      let error = dart.getThrown(e);
      let stackTrace = dart.stackTrace(e);
      if (core.Object.is(error)) {
        firebase_core_web._handleException(error, stackTrace);
      } else
        throw e;
    }
  };
  dart.defineLazy(firebase_core_web, {
    /*firebase_core_web.supportedFirebaseJsSdkVersion*/get supportedFirebaseJsSdkVersion() {
      return "10.7.0";
    }
  }, false);
  image_picker_platform.ImagePickerPlatform = class ImagePickerPlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return image_picker_platform.ImagePickerPlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, image_picker_platform.ImagePickerPlatform._token);
      image_picker_platform.ImagePickerPlatform._instance = instance;
    }
    pickImage(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      dart.throw(new core.UnimplementedError.new("pickImage() has not been implemented."));
    }
    pickMultiImage(opts) {
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      dart.throw(new core.UnimplementedError.new("pickMultiImage() has not been implemented."));
    }
    pickVideo(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      let maxDuration = opts && 'maxDuration' in opts ? opts.maxDuration : null;
      dart.throw(new core.UnimplementedError.new("pickVideo() has not been implemented."));
    }
    retrieveLostData() {
      dart.throw(new core.UnimplementedError.new("retrieveLostData() has not been implemented."));
    }
    getImage(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      dart.throw(new core.UnimplementedError.new("getImage() has not been implemented."));
    }
    getMultiImage(opts) {
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      dart.throw(new core.UnimplementedError.new("getMultiImage() has not been implemented."));
    }
    getMedia(opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      dart.throw(new core.UnimplementedError.new("getMedia() has not been implemented."));
    }
    getVideo(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      let maxDuration = opts && 'maxDuration' in opts ? opts.maxDuration : null;
      dart.throw(new core.UnimplementedError.new("getVideo() has not been implemented."));
    }
    getLostData() {
      dart.throw(new core.UnimplementedError.new("getLostData() has not been implemented."));
    }
    getImageFromSource(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let options = opts && 'options' in opts ? opts.options : C[63] || CT.C63;
      return this.getImage({source: source, maxHeight: options.maxHeight, maxWidth: options.maxWidth, imageQuality: options.imageQuality, preferredCameraDevice: options.preferredCameraDevice});
    }
    getMultiImageWithOptions(opts) {
      let options = opts && 'options' in opts ? opts.options : C[65] || CT.C65;
      return async.async(T$.ListOfXFile(), (function* getMultiImageWithOptions() {
        let t59;
        let pickedImages = (yield this.getMultiImage({maxWidth: options.imageOptions.maxWidth, maxHeight: options.imageOptions.maxHeight, imageQuality: options.imageOptions.imageQuality}));
        t59 = pickedImages;
        return t59 == null ? T$.JSArrayOfXFile().of([]) : t59;
      }).bind(this));
    }
    supportsImageSource(source) {
      return source === image_source.ImageSource.gallery || source === image_source.ImageSource.camera;
    }
  };
  (image_picker_platform.ImagePickerPlatform.new = function() {
    image_picker_platform.ImagePickerPlatform.__proto__.new.call(this, {token: image_picker_platform.ImagePickerPlatform._token});
    ;
  }).prototype = image_picker_platform.ImagePickerPlatform.prototype;
  dart.addTypeTests(image_picker_platform.ImagePickerPlatform);
  dart.addTypeCaches(image_picker_platform.ImagePickerPlatform);
  dart.setMethodSignature(image_picker_platform.ImagePickerPlatform, () => ({
    __proto__: dart.getMethods(image_picker_platform.ImagePickerPlatform.__proto__),
    pickImage: dart.fnType(async.Future$(dart.nullable(html$0.PickedFile)), [], {imageQuality: dart.nullable(core.int), maxHeight: dart.nullable(core.double), maxWidth: dart.nullable(core.double), preferredCameraDevice: camera_device.CameraDevice}, {source: image_source.ImageSource}),
    pickMultiImage: dart.fnType(async.Future$(dart.nullable(core.List$(html$0.PickedFile))), [], {imageQuality: dart.nullable(core.int), maxHeight: dart.nullable(core.double), maxWidth: dart.nullable(core.double)}, {}),
    pickVideo: dart.fnType(async.Future$(dart.nullable(html$0.PickedFile)), [], {maxDuration: dart.nullable(core.Duration), preferredCameraDevice: camera_device.CameraDevice}, {source: image_source.ImageSource}),
    retrieveLostData: dart.fnType(async.Future$(lost_data.LostData), []),
    getImage: dart.fnType(async.Future$(dart.nullable(html$.XFile)), [], {imageQuality: dart.nullable(core.int), maxHeight: dart.nullable(core.double), maxWidth: dart.nullable(core.double), preferredCameraDevice: camera_device.CameraDevice}, {source: image_source.ImageSource}),
    getMultiImage: dart.fnType(async.Future$(dart.nullable(core.List$(html$.XFile))), [], {imageQuality: dart.nullable(core.int), maxHeight: dart.nullable(core.double), maxWidth: dart.nullable(core.double)}, {}),
    getMedia: dart.fnType(async.Future$(core.List$(html$.XFile)), [], {}, {options: media_options.MediaOptions}),
    getVideo: dart.fnType(async.Future$(dart.nullable(html$.XFile)), [], {maxDuration: dart.nullable(core.Duration), preferredCameraDevice: camera_device.CameraDevice}, {source: image_source.ImageSource}),
    getLostData: dart.fnType(async.Future$(lost_data_response.LostDataResponse), []),
    getImageFromSource: dart.fnType(async.Future$(dart.nullable(html$.XFile)), [], {options: image_options.ImagePickerOptions}, {source: image_source.ImageSource}),
    getMultiImageWithOptions: dart.fnType(async.Future$(core.List$(html$.XFile)), [], {options: multi_image_picker_options.MultiImagePickerOptions}, {}),
    supportsImageSource: dart.fnType(core.bool, [image_source.ImageSource])
  }));
  dart.setStaticGetterSignature(image_picker_platform.ImagePickerPlatform, () => ['instance']);
  dart.setStaticSetterSignature(image_picker_platform.ImagePickerPlatform, () => ['instance']);
  dart.setLibraryUri(image_picker_platform.ImagePickerPlatform, I[22]);
  dart.setStaticFieldSignature(image_picker_platform.ImagePickerPlatform, () => ['_token', '_instance']);
  dart.defineLazy(image_picker_platform.ImagePickerPlatform, {
    /*image_picker_platform.ImagePickerPlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*image_picker_platform.ImagePickerPlatform._instance*/get _instance() {
      return new method_channel_image_picker.MethodChannelImagePicker.new();
    },
    set _instance(value) {}
  }, false);
  image_picker_for_web.ImagePickerPlugin = class ImagePickerPlugin extends image_picker_platform.ImagePickerPlatform {
    static ['_#new#tearOff'](opts) {
      let overrides = opts && 'overrides' in opts ? opts.overrides : null;
      let imageResizer = opts && 'imageResizer' in opts ? opts.imageResizer : null;
      return new image_picker_for_web.ImagePickerPlugin.new({overrides: overrides, imageResizer: imageResizer});
    }
    get [S$._hasOverrides]() {
      return this[S$._overrides] != null;
    }
    get [S$._target$1]() {
      let t59;
      t59 = this[S$.__ImagePickerPlugin__target];
      return t59 == null ? dart.throw(new _internal.LateError.fieldNI("_target")) : t59;
    }
    set [S$._target$1](_target$35param) {
      this[S$.__ImagePickerPlugin__target] = _target$35param;
    }
    get [S$._imageResizer]() {
      let t59;
      t59 = this[S$.__ImagePickerPlugin__imageResizer];
      return t59 == null ? dart.throw(new _internal.LateError.fieldNI("_imageResizer")) : t59;
    }
    set [S$._imageResizer](_imageResizer$35param) {
      this[S$.__ImagePickerPlugin__imageResizer] = _imageResizer$35param;
    }
    static registerWith(registrar) {
      image_picker_platform.ImagePickerPlatform.instance = new image_picker_for_web.ImagePickerPlugin.new();
    }
    getImageFromSource(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let options = opts && 'options' in opts ? opts.options : C[63] || CT.C63;
      return async.async(T$.XFileN(), (function* getImageFromSource() {
        let capture = this.computeCaptureAttribute(source, options.preferredCameraDevice);
        let files = (yield this.getFiles({accept: "image/*", capture: capture}));
        return files[S$.$isEmpty] ? null : this[S$._imageResizer].resizeImageIfNeeded(files[S$.$first], options.maxWidth, options.maxHeight, options.imageQuality);
      }).bind(this));
    }
    getMultiImageWithOptions(opts) {
      let options = opts && 'options' in opts ? opts.options : C[65] || CT.C65;
      return async.async(T$.ListOfXFile(), (function* getMultiImageWithOptions() {
        let images = (yield this.getFiles({accept: "image/*", multiple: true}));
        let resized = images[S$.$map](T$.FutureOfXFile(), dart.fn(image => this[S$._imageResizer].resizeImageIfNeeded(image, options.imageOptions.maxWidth, options.imageOptions.maxHeight, options.imageOptions.imageQuality), T$.XFileToFutureOfXFile()));
        return async.Future.wait(html$.XFile, resized);
      }).bind(this));
    }
    getVideo(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      let maxDuration = opts && 'maxDuration' in opts ? opts.maxDuration : null;
      return async.async(T$.XFileN(), (function* getVideo() {
        let capture = this.computeCaptureAttribute(source, preferredCameraDevice);
        let files = (yield this.getFiles({accept: image_picker_for_web._kAcceptVideoMimeType, capture: capture}));
        return files[S$.$isEmpty] ? null : files[S$.$first];
      }).bind(this));
    }
    getMedia(opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(T$.ListOfXFile(), (function* getMedia() {
        let images = (yield this.getFiles({accept: "image/*" + "," + image_picker_for_web._kAcceptVideoMimeType, multiple: options.allowMultiple}));
        let resized = images[S$.$map](T$.FutureOfXFile(), dart.fn(media => {
          let t59, t59$;
          if (dart.test((t59$ = (t59 = mime_type.lookupMimeType(media.path), t59 == null ? null : t59[S$.$startsWith]("image/")), t59$ == null ? false : t59$))) {
            return this[S$._imageResizer].resizeImageIfNeeded(media, options.imageOptions.maxWidth, options.imageOptions.maxHeight, options.imageOptions.imageQuality);
          }
          return T$.FutureOfXFile().value(media);
        }, T$.XFileToFutureOfXFile()));
        return async.Future.wait(html$.XFile, resized);
      }).bind(this));
    }
    getFiles(opts) {
      let accept = opts && 'accept' in opts ? opts.accept : null;
      let capture = opts && 'capture' in opts ? opts.capture : null;
      let multiple = opts && 'multiple' in opts ? opts.multiple : false;
      let input = html.FileUploadInputElement.as(this.createInputElement(accept, capture, {multiple: multiple}));
      this[S$._injectAndActivate](input);
      return this[S$._getSelectedXFiles](input);
    }
    getImage(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      return async.async(T$.XFileN(), (function* getImage() {
        return this.getImageFromSource({source: source, options: new image_options.ImagePickerOptions.new({maxWidth: maxWidth, maxHeight: maxHeight, imageQuality: imageQuality, preferredCameraDevice: preferredCameraDevice})});
      }).bind(this));
    }
    getMultiImage(opts) {
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      return async.async(T$.ListOfXFile(), (function* getMultiImage() {
        return this.getMultiImageWithOptions({options: new multi_image_picker_options.MultiImagePickerOptions.new({imageOptions: new image_options.ImageOptions.new({maxWidth: maxWidth, maxHeight: maxHeight, imageQuality: imageQuality})})});
      }).bind(this));
    }
    computeCaptureAttribute(source, device) {
      if (source === image_source.ImageSource.camera) {
        return device === camera_device.CameraDevice.front ? "user" : "environment";
      }
      return null;
    }
    [S$._getFilesFromInput](input) {
      let t60, t59;
      if (this[S$._hasOverrides]) {
        t59 = dart.nullCheck(this[S$._overrides]);
        t60 = input;
        return t59.getMultipleFilesFromInput(t60);
      }
      return input[S$.$files];
    }
    [S$._handleOnChangeEvent](event) {
      let input = T$.FileUploadInputElementN().as(event[S$.$target]);
      return input == null ? null : this[S$._getFilesFromInput](input);
    }
    [S$._getSelectedXFiles](input) {
      let completer = T$.CompleterOfListOfXFile().new();
      input[S$.$onChange].first.then(core.Null, dart.fn(event => {
        let files = this[S$._handleOnChangeEvent](event);
        if (!completer.isCompleted && files != null) {
          completer.complete(files[S$.$map](html$.XFile, dart.fn(file => {
            let t59;
            return new html$.XFile.new(html.Url.createObjectUrl(file), {name: file[S$.$name], length: file[S$.$size], lastModified: new core.DateTime.fromMillisecondsSinceEpoch((t59 = file.lastModified, t59 == null ? new core.DateTime.now().millisecondsSinceEpoch : t59)), mimeType: file[S$.$type]});
          }, T$.FileToXFile()))[S$.$toList]());
        }
      }, T$.EventToNull()));
      input[S$.$addEventListener]("cancel", dart.fn(_ => {
        completer.complete(T$.JSArrayOfXFile().of([]));
      }, T$.EventToNull()));
      input[S$.$onError].first.then(core.Null, dart.fn(event => {
        if (!completer.isCompleted) {
          completer.completeError(event);
        }
      }, T$.EventToNull()));
      return completer.future;
    }
    [S$._ensureInitialized$1](id) {
      let t59;
      let target = html.querySelector("#" + id);
      if (target == null) {
        let targetElement = (t59 = html.Element.tag("flt-image-picker-inputs"), (() => {
          t59[S$.$id] = id;
          return t59;
        })());
        dart.nullCheck(html.querySelector("body"))[S$.$children][S$.$add](targetElement);
        target = targetElement;
      }
      return target;
    }
    createInputElement(accept, capture, opts) {
      let t61, t60, t59, t59$;
      let multiple = opts && 'multiple' in opts ? opts.multiple : false;
      if (this[S$._hasOverrides]) {
        t59 = dart.nullCheck(this[S$._overrides]);
        t60 = accept;
        t61 = capture;
        return t59.createInputElement(t60, t61);
      }
      let element = (t59$ = html.FileUploadInputElement.new(), (() => {
        t59$[S$.$accept] = accept;
        t59$[S$.$multiple] = multiple;
        return t59$;
      })());
      if (capture != null) {
        element[S$.$setAttribute]("capture", capture);
      }
      return element;
    }
    [S$._injectAndActivate](element) {
      this[S$._target$1][S$.$children][S$.$clear]();
      this[S$._target$1][S$.$children][S$.$add](element);
      element.click();
    }
  };
  (image_picker_for_web.ImagePickerPlugin.new = function(opts) {
    let t59;
    let overrides = opts && 'overrides' in opts ? opts.overrides : null;
    let imageResizer = opts && 'imageResizer' in opts ? opts.imageResizer : null;
    this[S$.__ImagePickerPlugin__target] = null;
    this[S$.__ImagePickerPlugin__imageResizer] = null;
    this[S$._overrides] = overrides;
    image_picker_for_web.ImagePickerPlugin.__proto__.new.call(this);
    this[S$._imageResizer] = (t59 = imageResizer, t59 == null ? new image_resizer.ImageResizer.new() : t59);
    this[S$._target$1] = this[S$._ensureInitialized$1]("__image_picker_web-file-input");
  }).prototype = image_picker_for_web.ImagePickerPlugin.prototype;
  dart.addTypeTests(image_picker_for_web.ImagePickerPlugin);
  dart.addTypeCaches(image_picker_for_web.ImagePickerPlugin);
  dart.setMethodSignature(image_picker_for_web.ImagePickerPlugin, () => ({
    __proto__: dart.getMethods(image_picker_for_web.ImagePickerPlugin.__proto__),
    getFiles: dart.fnType(async.Future$(core.List$(html$.XFile)), [], {accept: dart.nullable(core.String), capture: dart.nullable(core.String), multiple: core.bool}, {}),
    getMultiImage: dart.fnType(async.Future$(core.List$(html$.XFile)), [], {imageQuality: dart.nullable(core.int), maxHeight: dart.nullable(core.double), maxWidth: dart.nullable(core.double)}, {}),
    computeCaptureAttribute: dart.fnType(dart.nullable(core.String), [image_source.ImageSource, camera_device.CameraDevice]),
    [S$._getFilesFromInput]: dart.fnType(dart.nullable(core.List$(html.File)), [html.FileUploadInputElement]),
    [S$._handleOnChangeEvent]: dart.fnType(dart.nullable(core.List$(html.File)), [html.Event]),
    [S$._getSelectedXFiles]: dart.fnType(async.Future$(core.List$(html$.XFile)), [html.FileUploadInputElement]),
    [S$._ensureInitialized$1]: dart.fnType(html.Element, [core.String]),
    createInputElement: dart.fnType(html.Element, [dart.nullable(core.String), dart.nullable(core.String)], {multiple: core.bool}, {}),
    [S$._injectAndActivate]: dart.fnType(dart.void, [html.Element])
  }));
  dart.setStaticMethodSignature(image_picker_for_web.ImagePickerPlugin, () => ['registerWith']);
  dart.setGetterSignature(image_picker_for_web.ImagePickerPlugin, () => ({
    __proto__: dart.getGetters(image_picker_for_web.ImagePickerPlugin.__proto__),
    [S$._hasOverrides]: core.bool,
    [S$._target$1]: html.Element,
    [S$._imageResizer]: image_resizer.ImageResizer
  }));
  dart.setSetterSignature(image_picker_for_web.ImagePickerPlugin, () => ({
    __proto__: dart.getSetters(image_picker_for_web.ImagePickerPlugin.__proto__),
    [S$._target$1]: html.Element,
    [S$._imageResizer]: image_resizer.ImageResizer
  }));
  dart.setLibraryUri(image_picker_for_web.ImagePickerPlugin, I[23]);
  dart.setFieldSignature(image_picker_for_web.ImagePickerPlugin, () => ({
    __proto__: dart.getFields(image_picker_for_web.ImagePickerPlugin.__proto__),
    [S$._overrides]: dart.finalFieldType(dart.nullable(image_picker_for_web.ImagePickerPluginTestOverrides)),
    [S$.__ImagePickerPlugin__target]: dart.fieldType(dart.nullable(html.Element)),
    [S$.__ImagePickerPlugin__imageResizer]: dart.fieldType(dart.nullable(image_resizer.ImageResizer))
  }));
  image_picker_for_web.ImagePickerPluginTestOverrides = class ImagePickerPluginTestOverrides extends core.Object {
    get createInputElement() {
      let t59;
      t59 = this[S$.__ImagePickerPluginTestOverrides_createInputElement];
      return t59 == null ? dart.throw(new _internal.LateError.fieldNI("createInputElement")) : t59;
    }
    set createInputElement(createInputElement$35param) {
      this[S$.__ImagePickerPluginTestOverrides_createInputElement] = createInputElement$35param;
    }
    get getMultipleFilesFromInput() {
      let t59;
      t59 = this[S$.__ImagePickerPluginTestOverrides_getMultipleFilesFromInput];
      return t59 == null ? dart.throw(new _internal.LateError.fieldNI("getMultipleFilesFromInput")) : t59;
    }
    set getMultipleFilesFromInput(getMultipleFilesFromInput$35param) {
      this[S$.__ImagePickerPluginTestOverrides_getMultipleFilesFromInput] = getMultipleFilesFromInput$35param;
    }
    static ['_#new#tearOff']() {
      return new image_picker_for_web.ImagePickerPluginTestOverrides.new();
    }
  };
  (image_picker_for_web.ImagePickerPluginTestOverrides.new = function() {
    this[S$.__ImagePickerPluginTestOverrides_createInputElement] = null;
    this[S$.__ImagePickerPluginTestOverrides_getMultipleFilesFromInput] = null;
    ;
  }).prototype = image_picker_for_web.ImagePickerPluginTestOverrides.prototype;
  dart.addTypeTests(image_picker_for_web.ImagePickerPluginTestOverrides);
  dart.addTypeCaches(image_picker_for_web.ImagePickerPluginTestOverrides);
  dart.setGetterSignature(image_picker_for_web.ImagePickerPluginTestOverrides, () => ({
    __proto__: dart.getGetters(image_picker_for_web.ImagePickerPluginTestOverrides.__proto__),
    createInputElement: dart.fnType(html.Element, [dart.nullable(core.String), dart.nullable(core.String)]),
    getMultipleFilesFromInput: dart.fnType(core.List$(html.File), [dart.nullable(html.Element)])
  }));
  dart.setSetterSignature(image_picker_for_web.ImagePickerPluginTestOverrides, () => ({
    __proto__: dart.getSetters(image_picker_for_web.ImagePickerPluginTestOverrides.__proto__),
    createInputElement: dart.fnType(html.Element, [dart.nullable(core.String), dart.nullable(core.String)]),
    getMultipleFilesFromInput: dart.fnType(core.List$(html.File), [dart.nullable(html.Element)])
  }));
  dart.setLibraryUri(image_picker_for_web.ImagePickerPluginTestOverrides, I[23]);
  dart.setFieldSignature(image_picker_for_web.ImagePickerPluginTestOverrides, () => ({
    __proto__: dart.getFields(image_picker_for_web.ImagePickerPluginTestOverrides.__proto__),
    [S$.__ImagePickerPluginTestOverrides_createInputElement]: dart.fieldType(dart.nullable(dart.fnType(html.Element, [dart.nullable(core.String), dart.nullable(core.String)]))),
    [S$.__ImagePickerPluginTestOverrides_getMultipleFilesFromInput]: dart.fieldType(dart.nullable(dart.fnType(core.List$(html.File), [dart.nullable(html.Element)])))
  }));
  dart.defineLazy(image_picker_for_web, {
    /*image_picker_for_web._kImagePickerInputsDomId*/get _kImagePickerInputsDomId() {
      return "__image_picker_web-file-input";
    },
    /*image_picker_for_web._kAcceptImageMimeType*/get _kAcceptImageMimeType() {
      return "image/*";
    },
    /*image_picker_for_web._kAcceptVideoMimeType*/get _kAcceptVideoMimeType() {
      return "video/3gpp,video/x-m4v,video/mp4,video/*";
    }
  }, false);
  firebase_core_platform_interface.FirebaseOptions = class FirebaseOptions extends core.Object {
    get apiKey() {
      return this[S$.apiKey];
    }
    set apiKey(value) {
      super.apiKey = value;
    }
    get appId() {
      return this[S$.appId];
    }
    set appId(value) {
      super.appId = value;
    }
    get messagingSenderId() {
      return this[S$.messagingSenderId];
    }
    set messagingSenderId(value) {
      super.messagingSenderId = value;
    }
    get projectId() {
      return this[S$.projectId];
    }
    set projectId(value) {
      super.projectId = value;
    }
    get authDomain() {
      return this[S$.authDomain];
    }
    set authDomain(value) {
      super.authDomain = value;
    }
    get databaseURL() {
      return this[S$.databaseURL];
    }
    set databaseURL(value) {
      super.databaseURL = value;
    }
    get storageBucket() {
      return this[S$.storageBucket];
    }
    set storageBucket(value) {
      super.storageBucket = value;
    }
    get measurementId() {
      return this[S$.measurementId];
    }
    set measurementId(value) {
      super.measurementId = value;
    }
    get trackingId() {
      return this[S$.trackingId];
    }
    set trackingId(value) {
      super.trackingId = value;
    }
    get deepLinkURLScheme() {
      return this[S$.deepLinkURLScheme];
    }
    set deepLinkURLScheme(value) {
      super.deepLinkURLScheme = value;
    }
    get androidClientId() {
      return this[S$.androidClientId];
    }
    set androidClientId(value) {
      super.androidClientId = value;
    }
    get iosClientId() {
      return this[S$.iosClientId];
    }
    set iosClientId(value) {
      super.iosClientId = value;
    }
    get iosBundleId() {
      return this[S$.iosBundleId];
    }
    set iosBundleId(value) {
      super.iosBundleId = value;
    }
    get appGroupId() {
      return this[S$.appGroupId];
    }
    set appGroupId(value) {
      super.appGroupId = value;
    }
    static ['_#new#tearOff'](opts) {
      let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
      let appId = opts && 'appId' in opts ? opts.appId : null;
      let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
      let projectId = opts && 'projectId' in opts ? opts.projectId : null;
      let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
      let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
      let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
      let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
      let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
      let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
      let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
      let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
      return new firebase_core_platform_interface.FirebaseOptions.new({apiKey: apiKey, appId: appId, messagingSenderId: messagingSenderId, projectId: projectId, authDomain: authDomain, databaseURL: databaseURL, storageBucket: storageBucket, measurementId: measurementId, trackingId: trackingId, deepLinkURLScheme: deepLinkURLScheme, androidClientId: androidClientId, iosClientId: iosClientId, iosBundleId: iosBundleId, appGroupId: appGroupId});
    }
    static ['_#fromPigeon#tearOff'](options) {
      return new firebase_core_platform_interface.FirebaseOptions.fromPigeon(options);
    }
    get asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["apiKey", this.apiKey, "appId", this.appId, "messagingSenderId", this.messagingSenderId, "projectId", this.projectId, "authDomain", this.authDomain, "databaseURL", this.databaseURL, "storageBucket", this.storageBucket, "measurementId", this.measurementId, "trackingId", this.trackingId, "deepLinkURLScheme", this.deepLinkURLScheme, "androidClientId", this.androidClientId, "iosClientId", this.iosClientId, "iosBundleId", this.iosBundleId, "appGroupId", this.appGroupId]);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) return true;
      if (!firebase_core_platform_interface.FirebaseOptions.is(other)) return false;
      return (C[67] || CT.C67).equals(this.asMap, other.asMap);
    }
    get hashCode() {
      return (C[67] || CT.C67).hash(this.asMap);
    }
    toString() {
      return this.asMap[S$.$toString]();
    }
  };
  (firebase_core_platform_interface.FirebaseOptions.new = function(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
    let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
    let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
    let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
    let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
    let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
    this[S$.apiKey] = apiKey;
    this[S$.appId] = appId;
    this[S$.messagingSenderId] = messagingSenderId;
    this[S$.projectId] = projectId;
    this[S$.authDomain] = authDomain;
    this[S$.databaseURL] = databaseURL;
    this[S$.storageBucket] = storageBucket;
    this[S$.measurementId] = measurementId;
    this[S$.trackingId] = trackingId;
    this[S$.deepLinkURLScheme] = deepLinkURLScheme;
    this[S$.androidClientId] = androidClientId;
    this[S$.iosClientId] = iosClientId;
    this[S$.iosBundleId] = iosBundleId;
    this[S$.appGroupId] = appGroupId;
    ;
  }).prototype = firebase_core_platform_interface.FirebaseOptions.prototype;
  (firebase_core_platform_interface.FirebaseOptions.fromPigeon = function(options) {
    this[S$.apiKey] = options.apiKey;
    this[S$.appId] = options.appId;
    this[S$.messagingSenderId] = options.messagingSenderId;
    this[S$.projectId] = options.projectId;
    this[S$.authDomain] = options.authDomain;
    this[S$.databaseURL] = options.databaseURL;
    this[S$.storageBucket] = options.storageBucket;
    this[S$.measurementId] = options.measurementId;
    this[S$.trackingId] = options.trackingId;
    this[S$.deepLinkURLScheme] = options.deepLinkURLScheme;
    this[S$.androidClientId] = options.androidClientId;
    this[S$.iosClientId] = options.iosClientId;
    this[S$.iosBundleId] = options.iosBundleId;
    this[S$.appGroupId] = options.appGroupId;
    ;
  }).prototype = firebase_core_platform_interface.FirebaseOptions.prototype;
  dart.addTypeTests(firebase_core_platform_interface.FirebaseOptions);
  dart.addTypeCaches(firebase_core_platform_interface.FirebaseOptions);
  dart.setGetterSignature(firebase_core_platform_interface.FirebaseOptions, () => ({
    __proto__: dart.getGetters(firebase_core_platform_interface.FirebaseOptions.__proto__),
    asMap: core.Map$(core.String, dart.nullable(core.String))
  }));
  dart.setLibraryUri(firebase_core_platform_interface.FirebaseOptions, I[5]);
  dart.setFieldSignature(firebase_core_platform_interface.FirebaseOptions, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.FirebaseOptions.__proto__),
    apiKey: dart.finalFieldType(core.String),
    appId: dart.finalFieldType(core.String),
    messagingSenderId: dart.finalFieldType(core.String),
    projectId: dart.finalFieldType(core.String),
    authDomain: dart.finalFieldType(dart.nullable(core.String)),
    databaseURL: dart.finalFieldType(dart.nullable(core.String)),
    storageBucket: dart.finalFieldType(dart.nullable(core.String)),
    measurementId: dart.finalFieldType(dart.nullable(core.String)),
    trackingId: dart.finalFieldType(dart.nullable(core.String)),
    deepLinkURLScheme: dart.finalFieldType(dart.nullable(core.String)),
    androidClientId: dart.finalFieldType(dart.nullable(core.String)),
    iosClientId: dart.finalFieldType(dart.nullable(core.String)),
    iosBundleId: dart.finalFieldType(dart.nullable(core.String)),
    appGroupId: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(firebase_core_platform_interface.FirebaseOptions, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_core_platform_interface.FirebaseOptions, ['hashCode']);
  firebase_core_platform_interface.MethodChannelFirebase = class MethodChannelFirebase extends firebase_core_platform_interface.FirebasePlatform {
    [S$._initializeCore$1]() {
      return async.async(dart.void, (function* _initializeCore() {
        let apps = (yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeCore());
        apps[S$.$where](dart.fn(element => element != null, T$.PigeonInitializeResponseNTobool()))[S$.$cast](messages$46pigeon$.PigeonInitializeResponse)[S$.$forEach](dart.bind(this, S$._initializeFirebaseAppFromMap));
        firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized = true;
      }).bind(this));
    }
    [S$._initializeFirebaseAppFromMap](response) {
      let methodChannelFirebaseApp = new firebase_core_platform_interface.MethodChannelFirebaseApp.new(response.name, new firebase_core_platform_interface.FirebaseOptions.fromPigeon(response.options), {isAutomaticDataCollectionEnabled: response.isAutomaticDataCollectionEnabled});
      firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_set](methodChannelFirebaseApp.name, methodChannelFirebaseApp);
      firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[S$.$_set](methodChannelFirebaseApp.name, response.pluginConstants);
    }
    get apps() {
      return firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$values][S$.$toList]({growable: false});
    }
    initializeApp(opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(firebase_core_platform_interface.FirebaseAppPlatform, (function* initializeApp() {
        if (!firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized) {
          yield this[S$._initializeCore$1]();
        }
        if (name == null || name === "[DEFAULT]") {
          let defaultApp = firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get]("[DEFAULT]");
          let _options = options;
          if (platform.defaultTargetPlatform === platform.TargetPlatform.android && defaultApp == null && _options == null) {
            let options = (yield firebase_core_platform_interface.MethodChannelFirebase.api.optionsFromResource());
            _options = new firebase_core_platform_interface.FirebaseOptions.fromPigeon(options);
          }
          if (defaultApp == null && _options != null) {
            this[S$._initializeFirebaseAppFromMap](yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeApp("[DEFAULT]", new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: _options.apiKey, appId: _options.appId, messagingSenderId: _options.messagingSenderId, projectId: _options.projectId, authDomain: _options.authDomain, databaseURL: _options.databaseURL, storageBucket: _options.storageBucket, measurementId: _options.measurementId, trackingId: _options.trackingId, deepLinkURLScheme: _options.deepLinkURLScheme, androidClientId: _options.androidClientId, iosClientId: _options.iosClientId, iosBundleId: _options.iosBundleId, appGroupId: _options.appGroupId})));
            defaultApp = firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get]("[DEFAULT]");
          }
          if (defaultApp == null && _options == null) {
            dart.throw(firebase_core_platform_interface.coreNotInitialized());
          }
          if (defaultApp != null && _options != null) {
            if (_options.apiKey !== defaultApp.options.apiKey || _options.databaseURL != null && _options.databaseURL != defaultApp.options.databaseURL || _options.storageBucket != null && _options.storageBucket != defaultApp.options.storageBucket) {
              dart.throw(firebase_core_platform_interface.duplicateApp("[DEFAULT]"));
            }
          }
          return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get]("[DEFAULT]"));
        }
        if (!(options != null)) dart.assertFailed("FirebaseOptions cannot be null when creating a secondary Firebase app.", I[24], 143, 7, "options != null");
        if (firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$containsKey](name)) {
          let existingApp = dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get](name));
          if (dart.nullCheck(options).apiKey !== existingApp.options.apiKey || options.databaseURL != null && options.databaseURL != existingApp.options.databaseURL || options.storageBucket != null && options.storageBucket != existingApp.options.storageBucket) {
            dart.throw(firebase_core_platform_interface.duplicateApp(name));
          } else {
            return existingApp;
          }
        }
        this[S$._initializeFirebaseAppFromMap](yield firebase_core_platform_interface.MethodChannelFirebase.api.initializeApp(name, new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: dart.nullCheck(options).apiKey, appId: options.appId, messagingSenderId: options.messagingSenderId, projectId: options.projectId, authDomain: options.authDomain, databaseURL: options.databaseURL, storageBucket: options.storageBucket, measurementId: options.measurementId, trackingId: options.trackingId, deepLinkURLScheme: options.deepLinkURLScheme, androidClientId: options.androidClientId, iosClientId: options.iosClientId, iosBundleId: options.iosBundleId, appGroupId: options.appGroupId})));
        return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get](name));
      }).bind(this));
    }
    app(name = "[DEFAULT]") {
      if (firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$containsKey](name)) {
        return dart.nullCheck(firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$_get](name));
      }
      dart.throw(firebase_core_platform_interface.noAppExists(name));
    }
    static ['_#new#tearOff']() {
      return new firebase_core_platform_interface.MethodChannelFirebase.new();
    }
  };
  (firebase_core_platform_interface.MethodChannelFirebase.new = function() {
    firebase_core_platform_interface.MethodChannelFirebase.__proto__.new.call(this);
    ;
  }).prototype = firebase_core_platform_interface.MethodChannelFirebase.prototype;
  dart.addTypeTests(firebase_core_platform_interface.MethodChannelFirebase);
  dart.addTypeCaches(firebase_core_platform_interface.MethodChannelFirebase);
  dart.setMethodSignature(firebase_core_platform_interface.MethodChannelFirebase, () => ({
    __proto__: dart.getMethods(firebase_core_platform_interface.MethodChannelFirebase.__proto__),
    [S$._initializeCore$1]: dart.fnType(async.Future$(dart.void), []),
    [S$._initializeFirebaseAppFromMap]: dart.fnType(dart.void, [messages$46pigeon$.PigeonInitializeResponse])
  }));
  dart.setLibraryUri(firebase_core_platform_interface.MethodChannelFirebase, I[5]);
  dart.setStaticFieldSignature(firebase_core_platform_interface.MethodChannelFirebase, () => ['appInstances', 'isCoreInitialized', 'api']);
  dart.defineLazy(firebase_core_platform_interface.MethodChannelFirebase, {
    /*firebase_core_platform_interface.MethodChannelFirebase.appInstances*/get appInstances() {
      return new (T$.IdentityMapOfString$MethodChannelFirebaseApp()).new();
    },
    set appInstances(value) {},
    /*firebase_core_platform_interface.MethodChannelFirebase.isCoreInitialized*/get isCoreInitialized() {
      return false;
    },
    set isCoreInitialized(value) {},
    /*firebase_core_platform_interface.MethodChannelFirebase.api*/get api() {
      return new messages$46pigeon$.FirebaseCoreHostApi.new();
    },
    set api(value) {}
  }, false);
  firebase_core_platform_interface.MethodChannelFirebaseApp = class MethodChannelFirebaseApp extends firebase_core_platform_interface.FirebaseAppPlatform {
    static ['_#new#tearOff'](name, options, opts) {
      let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
      return new firebase_core_platform_interface.MethodChannelFirebaseApp.new(name, options, {isAutomaticDataCollectionEnabled: isAutomaticDataCollectionEnabled});
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$._isAutomaticDataCollectionEnabled$1];
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        if (this[S$._isDefault]) {
          dart.throw(firebase_core_platform_interface.noDefaultAppDelete());
        }
        if (this[S$._isDeleted]) {
          return;
        }
        yield this[S$._api].delete(this.name);
        firebase_core_platform_interface.MethodChannelFirebase.appInstances[S$.$remove](this.name);
        firebase_core_platform_interface.FirebasePluginPlatform._constantsForPluginApps[S$.$remove](this.name);
        this[S$._isDeleted] = true;
      }).bind(this));
    }
    setAutomaticDataCollectionEnabled(enabled) {
      return async.async(dart.void, (function* setAutomaticDataCollectionEnabled() {
        yield this[S$._api].setAutomaticDataCollectionEnabled(this.name, enabled);
        this[S$._isAutomaticDataCollectionEnabled$1] = enabled;
      }).bind(this));
    }
    setAutomaticResourceManagementEnabled(enabled) {
      return async.async(dart.void, (function* setAutomaticResourceManagementEnabled() {
        yield this[S$._api].setAutomaticResourceManagementEnabled(this.name, enabled);
      }).bind(this));
    }
  };
  (firebase_core_platform_interface.MethodChannelFirebaseApp.new = function(name, options, opts) {
    let t59;
    let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
    this[S$._isDeleted] = false;
    this[S$._api] = new messages$46pigeon$.FirebaseAppHostApi.new();
    this[S$._isAutomaticDataCollectionEnabled$1] = core.bool.as((t59 = isAutomaticDataCollectionEnabled, t59 == null ? false : t59));
    firebase_core_platform_interface.MethodChannelFirebaseApp.__proto__.new.call(this, name, options);
    ;
  }).prototype = firebase_core_platform_interface.MethodChannelFirebaseApp.prototype;
  dart.addTypeTests(firebase_core_platform_interface.MethodChannelFirebaseApp);
  dart.addTypeCaches(firebase_core_platform_interface.MethodChannelFirebaseApp);
  dart.setLibraryUri(firebase_core_platform_interface.MethodChannelFirebaseApp, I[5]);
  dart.setFieldSignature(firebase_core_platform_interface.MethodChannelFirebaseApp, () => ({
    __proto__: dart.getFields(firebase_core_platform_interface.MethodChannelFirebaseApp.__proto__),
    [S$._isDeleted]: dart.fieldType(core.bool),
    [S$._isAutomaticDataCollectionEnabled$1]: dart.fieldType(core.bool),
    [S$._api]: dart.finalFieldType(messages$46pigeon$.FirebaseAppHostApi)
  }));
  firebase_core_platform_interface.noAppExists = function noAppExists(appName) {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "no-app", message: "No Firebase App '" + appName + "' has been created - call Firebase.initializeApp()"});
  };
  firebase_core_platform_interface.duplicateApp = function duplicateApp(appName) {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "duplicate-app", message: "A Firebase App named \"" + appName + "\" already exists"});
  };
  firebase_core_platform_interface.noDefaultAppInitialization = function noDefaultAppInitialization() {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", message: "The " + "[DEFAULT]" + " app cannot be initialized here. " + "To initialize the default app, follow the installation instructions " + "for the specific platform you are developing with."});
  };
  firebase_core_platform_interface.coreNotInitialized = function coreNotInitialized() {
    let message = "Firebase has not been correctly initialized.\n\nUsually this means you've attempted to use a Firebase service before calling `Firebase.initializeApp`.\n\nView the documentation for more information: https://firebase.flutter.dev/docs/overview#initialization\n    ";
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", code: "not-initialized", message: message});
  };
  firebase_core_platform_interface.noDefaultAppDelete = function noDefaultAppDelete() {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "core", message: "The default Firebase app instance cannot be deleted."});
  };
  dart.defineLazy(firebase_core_platform_interface, {
    /*firebase_core_platform_interface.defaultFirebaseAppName*/get defaultFirebaseAppName() {
      return "[DEFAULT]";
    }
  }, false);
  nested.SingleChildStatelessWidget = class SingleChildStatelessWidget extends framework.StatelessWidget {
    get [S$._child$1]() {
      return this[S$._child];
    }
    set [S$._child$1](value) {
      super[S$._child$1] = value;
    }
    build(context) {
      return this.buildWithChild(context, this[S$._child$1]);
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
  };
  (nested.SingleChildStatelessWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[S$._child] = child;
    nested.SingleChildStatelessWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatelessWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidget);
  dart.addTypeCaches(nested.SingleChildStatelessWidget);
  nested.SingleChildStatelessWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested.SingleChildStatelessElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidget, I[26]);
  dart.setFieldSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatelessWidget.__proto__),
    [S$._child$1]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_InheritedProvider_default = Symbol('_is_InheritedProvider_default');
  provider$.InheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderOfT = () => (__t$_CreateInheritedProviderOfT = dart.constFn(provider$._CreateInheritedProvider$(T)))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$_InheritedProviderElementOfT = () => (__t$_InheritedProviderElementOfT = dart.constFn(provider$._InheritedProviderElement$(T)))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeOfTN = () => (__t$_InheritedProviderScopeOfTN = dart.constFn(provider$._InheritedProviderScope$(__t$TN())))();
    class InheritedProvider extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose, builder: builder, lazy: lazy, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, startListening: startListening, lazy: lazy, builder: builder, child: child});
      }
      static ['_#_constructor#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let delegate = opts && 'delegate' in opts ? opts.delegate : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T))._constructor({key: key, delegate: delegate, lazy: lazy, builder: builder, child: child});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[S$._delegate$3].debugFillProperties(properties);
      }
      createElement() {
        return new (__t$_InheritedProviderElementOfT()).new(this);
      }
      buildWithChild(context, child) {
        if (!(this.builder != null || child != null)) dart.assertFailed(dart.str(this[S$.$runtimeType]) + " used outside of MultiProvider must specify a child", I[25], 158, 7, "builder != null || child != null");
        return new (__t$_InheritedProviderScopeOfTN()).new({owner: this, debugType: dart.str(this[S$.$runtimeType]), child: this.builder != null ? new basic.Builder.new({builder: dart.fn(context => dart.nullCheck(this.builder)(context, child), T$.BuildContextToWidget())}) : dart.nullCheck(child)});
      }
    }
    (InheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder] = builder;
      this[S$._lazy] = lazy;
      this[S$._delegate$3] = new (__t$_CreateInheritedProviderOfT()).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder] = builder;
      this[S$._lazy] = lazy;
      this[S$._delegate$3] = new (__t$_ValueInheritedProviderOfT()).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider._constructor = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder] = builder;
      this[S$._lazy] = lazy;
      this[S$._delegate$3] = delegate;
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    dart.addTypeTests(InheritedProvider);
    InheritedProvider.prototype[_is_InheritedProvider_default] = true;
    dart.addTypeCaches(InheritedProvider);
    dart.setMethodSignature(InheritedProvider, () => ({
      __proto__: dart.getMethods(InheritedProvider.__proto__),
      createElement: dart.fnType(provider$._InheritedProviderElement$(T), []),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(InheritedProvider, I[27]);
    dart.setFieldSignature(InheritedProvider, () => ({
      __proto__: dart.getFields(InheritedProvider.__proto__),
      [S$._delegate$3]: dart.finalFieldType(provider$._Delegate$(T)),
      [S$._lazy]: dart.finalFieldType(dart.nullable(core.bool)),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])))
    }));
    return InheritedProvider;
  });
  provider$.InheritedProvider = provider$.InheritedProvider$();
  dart.addTypeTests(provider$.InheritedProvider, _is_InheritedProvider_default);
  const _is_DeferredInheritedProvider_default = Symbol('_is_DeferredInheritedProvider_default');
  provider$.DeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderOfT$R = () => (__t$_CreateDeferredInheritedProviderOfT$R = dart.constFn(provider$._CreateDeferredInheritedProvider$(T, R)))();
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    class DeferredInheritedProvider extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).new({key: key, create: create, dispose: dispose, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).value({key: key, value: value, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (DeferredInheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, child: child, lazy: lazy, builder: builder, delegate: new (__t$_CreateDeferredInheritedProviderOfT$R()).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening})});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    (DeferredInheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, lazy: lazy, builder: builder, delegate: new (__t$_ValueDeferredInheritedProviderOfT$R()).new(value, updateShouldNotify, startListening), child: child});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    dart.addTypeTests(DeferredInheritedProvider);
    DeferredInheritedProvider.prototype[_is_DeferredInheritedProvider_default] = true;
    dart.addTypeCaches(DeferredInheritedProvider);
    dart.setLibraryUri(DeferredInheritedProvider, I[27]);
    return DeferredInheritedProvider;
  });
  provider$.DeferredInheritedProvider = provider$.DeferredInheritedProvider$();
  dart.addTypeTests(provider$.DeferredInheritedProvider, _is_DeferredInheritedProvider_default);
  const _is_StreamProvider_default = Symbol('_is_StreamProvider_default');
  async_provider.StreamProvider$ = dart.generic(T => {
    class StreamProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Stream$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (StreamProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    (StreamProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.value.call(this, {key: key, lazy: lazy, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    dart.addTypeTests(StreamProvider);
    StreamProvider.prototype[_is_StreamProvider_default] = true;
    dart.addTypeCaches(StreamProvider);
    dart.setLibraryUri(StreamProvider, I[28]);
    return StreamProvider;
  });
  async_provider.StreamProvider = async_provider.StreamProvider$();
  dart.addTypeTests(async_provider.StreamProvider, _is_StreamProvider_default);
  const _is_FutureProvider_default = Symbol('_is_FutureProvider_default');
  async_provider.FutureProvider$ = dart.generic(T => {
    class FutureProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Future$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
    }
    (FutureProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    (FutureProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.value.call(this, {key: key, builder: builder, lazy: false, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    dart.addTypeTests(FutureProvider);
    FutureProvider.prototype[_is_FutureProvider_default] = true;
    dart.addTypeCaches(FutureProvider);
    dart.setLibraryUri(FutureProvider, I[28]);
    return FutureProvider;
  });
  async_provider.FutureProvider = async_provider.FutureProvider$();
  dart.addTypeTests(async_provider.FutureProvider, _is_FutureProvider_default);
  async_provider._streamStartListening = function _streamStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      if (!e.hasValue) {
        setState(initialData);
      }
      if (controller == null) {
        return dart.fn(() => {
        }, T$.VoidTovoid());
      }
      let sub = controller.listen(setState, {onError: dart.fn(error => {
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nStreamProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.bind(sub, 'cancel');
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Stream$(T)), dart.nullable(T)]));
  };
  async_provider._futureStartListening = function _futureStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      let t59;
      if (!e.hasValue) {
        setState(initialData);
      }
      let canceled = false;
      t59 = controller;
      t59 == null ? null : t59.then(core.Null, dart.fn(value => {
        if (canceled) {
          return;
        }
        setState(value);
      }, dart.fnType(core.Null, [T])), {onError: dart.fn(error => {
          if (canceled) {
            return;
          }
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nFutureProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.fn(() => canceled = true, T$.VoidTovoid());
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Future$(T)), dart.nullable(T)]));
  };
  const _is_ListenableProvider_default = Symbol('_is_ListenableProvider_default');
  listenable_provider.ListenableProvider$ = dart.generic(T => {
    class ListenableProvider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static _startListening(e, value) {
        let t59;
        t59 = value;
        t59 == null ? null : t59.addListener(dart.bind(e, 'markNeedsNotifyDependents'));
        return dart.fn(() => {
          let t59;
          t59 = value;
          return t59 == null ? null : t59.removeListener(dart.bind(e, 'markNeedsNotifyDependents'));
        }, T$.VoidTovoid());
      }
    }
    (ListenableProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.new.call(this, {key: key, startListening: C[70] || CT.C70, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    (ListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: C[70] || CT.C70, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    dart.addTypeTests(ListenableProvider);
    ListenableProvider.prototype[_is_ListenableProvider_default] = true;
    dart.addTypeCaches(ListenableProvider);
    dart.setStaticMethodSignature(ListenableProvider, () => ['_startListening']);
    dart.setLibraryUri(ListenableProvider, I[29]);
    return ListenableProvider;
  });
  listenable_provider.ListenableProvider = listenable_provider.ListenableProvider$();
  dart.addTypeTests(listenable_provider.ListenableProvider, _is_ListenableProvider_default);
  const _is_ChangeNotifierProvider_default = Symbol('_is_ChangeNotifierProvider_default');
  change_notifier_provider.ChangeNotifierProvider$ = dart.generic(T => {
    class ChangeNotifierProvider extends listenable_provider.ListenableProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).new({key: key, create: create, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).value({key: key, value: value, builder: builder, child: child});
      }
      static _dispose(context, notifier) {
        let t59;
        t59 = notifier;
        t59 == null ? null : t59.dispose();
      }
    }
    (ChangeNotifierProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.new.call(this, {key: key, create: create, dispose: C[69] || CT.C69, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    (ChangeNotifierProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    dart.addTypeTests(ChangeNotifierProvider);
    ChangeNotifierProvider.prototype[_is_ChangeNotifierProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProvider);
    dart.setStaticMethodSignature(ChangeNotifierProvider, () => ['_dispose']);
    dart.setLibraryUri(ChangeNotifierProvider, I[30]);
    return ChangeNotifierProvider;
  });
  change_notifier_provider.ChangeNotifierProvider = change_notifier_provider.ChangeNotifierProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProvider, _is_ChangeNotifierProvider_default);
  const _is_ListenableProxyProvider0_default = Symbol('_is_ListenableProxyProvider0_default');
  listenable_provider.ListenableProxyProvider0$ = dart.generic(R => {
    class ListenableProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider0$(R)).new({key: key, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, lazy: lazy, builder: builder, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: C[70] || CT.C70, child: child});
      ;
    }).prototype = ListenableProxyProvider0.prototype;
    dart.addTypeTests(ListenableProxyProvider0);
    ListenableProxyProvider0.prototype[_is_ListenableProxyProvider0_default] = true;
    dart.addTypeCaches(ListenableProxyProvider0);
    dart.setLibraryUri(ListenableProxyProvider0, I[29]);
    return ListenableProxyProvider0;
  });
  listenable_provider.ListenableProxyProvider0 = listenable_provider.ListenableProxyProvider0$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider0, _is_ListenableProxyProvider0_default);
  const _is_ListenableProxyProvider_default = Symbol('_is_ListenableProxyProvider_default');
  listenable_provider.ListenableProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider$(T, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider.prototype;
    dart.addTypeTests(ListenableProxyProvider);
    ListenableProxyProvider.prototype[_is_ListenableProxyProvider_default] = true;
    dart.addTypeCaches(ListenableProxyProvider);
    dart.setLibraryUri(ListenableProxyProvider, I[29]);
    return ListenableProxyProvider;
  });
  listenable_provider.ListenableProxyProvider = listenable_provider.ListenableProxyProvider$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider, _is_ListenableProxyProvider_default);
  const _is_ChangeNotifierProxyProvider_default = Symbol('_is_ChangeNotifierProxyProvider_default');
  change_notifier_provider.ChangeNotifierProxyProvider$ = dart.generic((T, R) => {
    class ChangeNotifierProxyProvider extends listenable_provider.ListenableProxyProvider$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider$(T, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[69] || CT.C69, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider);
    ChangeNotifierProxyProvider.prototype[_is_ChangeNotifierProxyProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider);
    dart.setLibraryUri(ChangeNotifierProxyProvider, I[30]);
    return ChangeNotifierProxyProvider;
  });
  change_notifier_provider.ChangeNotifierProxyProvider = change_notifier_provider.ChangeNotifierProxyProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider, _is_ChangeNotifierProxyProvider_default);
  const _is_ChangeNotifierProxyProvider0_default = Symbol('_is_ChangeNotifierProxyProvider0_default');
  change_notifier_provider.ChangeNotifierProxyProvider0$ = dart.generic(R => {
    class ChangeNotifierProxyProvider0 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider0$(R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[69] || CT.C69, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider0.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider0);
    ChangeNotifierProxyProvider0.prototype[_is_ChangeNotifierProxyProvider0_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider0);
    dart.setLibraryUri(ChangeNotifierProxyProvider0, I[30]);
    return ChangeNotifierProxyProvider0;
  });
  change_notifier_provider.ChangeNotifierProxyProvider0 = change_notifier_provider.ChangeNotifierProxyProvider0$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider0, _is_ChangeNotifierProxyProvider0_default);
  const _is_ListenableProxyProvider2_default = Symbol('_is_ListenableProxyProvider2_default');
  listenable_provider.ListenableProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider2 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider2.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider2.prototype;
    dart.addTypeTests(ListenableProxyProvider2);
    ListenableProxyProvider2.prototype[_is_ListenableProxyProvider2_default] = true;
    dart.addTypeCaches(ListenableProxyProvider2);
    dart.setLibraryUri(ListenableProxyProvider2, I[29]);
    return ListenableProxyProvider2;
  });
  listenable_provider.ListenableProxyProvider2 = listenable_provider.ListenableProxyProvider2$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider2, _is_ListenableProxyProvider2_default);
  const _is_ChangeNotifierProxyProvider2_default = Symbol('_is_ChangeNotifierProxyProvider2_default');
  change_notifier_provider.ChangeNotifierProxyProvider2$ = dart.generic((T, T2, R) => {
    class ChangeNotifierProxyProvider2 extends listenable_provider.ListenableProxyProvider2$(T, T2, R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider2.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[69] || CT.C69, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider2.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider2);
    ChangeNotifierProxyProvider2.prototype[_is_ChangeNotifierProxyProvider2_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider2);
    dart.setLibraryUri(ChangeNotifierProxyProvider2, I[30]);
    return ChangeNotifierProxyProvider2;
  });
  change_notifier_provider.ChangeNotifierProxyProvider2 = change_notifier_provider.ChangeNotifierProxyProvider2$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider2, _is_ChangeNotifierProxyProvider2_default);
  const _is_ListenableProxyProvider3_default = Symbol('_is_ListenableProxyProvider3_default');
  listenable_provider.ListenableProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider3 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider3.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider3.prototype;
    dart.addTypeTests(ListenableProxyProvider3);
    ListenableProxyProvider3.prototype[_is_ListenableProxyProvider3_default] = true;
    dart.addTypeCaches(ListenableProxyProvider3);
    dart.setLibraryUri(ListenableProxyProvider3, I[29]);
    return ListenableProxyProvider3;
  });
  listenable_provider.ListenableProxyProvider3 = listenable_provider.ListenableProxyProvider3$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider3, _is_ListenableProxyProvider3_default);
  const _is_ChangeNotifierProxyProvider3_default = Symbol('_is_ChangeNotifierProxyProvider3_default');
  change_notifier_provider.ChangeNotifierProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    class ChangeNotifierProxyProvider3 extends listenable_provider.ListenableProxyProvider3$(T, T2, T3, R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider3.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[69] || CT.C69, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider3.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider3);
    ChangeNotifierProxyProvider3.prototype[_is_ChangeNotifierProxyProvider3_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider3);
    dart.setLibraryUri(ChangeNotifierProxyProvider3, I[30]);
    return ChangeNotifierProxyProvider3;
  });
  change_notifier_provider.ChangeNotifierProxyProvider3 = change_notifier_provider.ChangeNotifierProxyProvider3$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider3, _is_ChangeNotifierProxyProvider3_default);
  const _is_ListenableProxyProvider4_default = Symbol('_is_ListenableProxyProvider4_default');
  listenable_provider.ListenableProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider4 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider4.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider4.prototype;
    dart.addTypeTests(ListenableProxyProvider4);
    ListenableProxyProvider4.prototype[_is_ListenableProxyProvider4_default] = true;
    dart.addTypeCaches(ListenableProxyProvider4);
    dart.setLibraryUri(ListenableProxyProvider4, I[29]);
    return ListenableProxyProvider4;
  });
  listenable_provider.ListenableProxyProvider4 = listenable_provider.ListenableProxyProvider4$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider4, _is_ListenableProxyProvider4_default);
  const _is_ChangeNotifierProxyProvider4_default = Symbol('_is_ChangeNotifierProxyProvider4_default');
  change_notifier_provider.ChangeNotifierProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    class ChangeNotifierProxyProvider4 extends listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider4.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[69] || CT.C69, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider4.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider4);
    ChangeNotifierProxyProvider4.prototype[_is_ChangeNotifierProxyProvider4_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider4);
    dart.setLibraryUri(ChangeNotifierProxyProvider4, I[30]);
    return ChangeNotifierProxyProvider4;
  });
  change_notifier_provider.ChangeNotifierProxyProvider4 = change_notifier_provider.ChangeNotifierProxyProvider4$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider4, _is_ChangeNotifierProxyProvider4_default);
  const _is_ListenableProxyProvider5_default = Symbol('_is_ListenableProxyProvider5_default');
  listenable_provider.ListenableProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider5 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider5.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider5.prototype;
    dart.addTypeTests(ListenableProxyProvider5);
    ListenableProxyProvider5.prototype[_is_ListenableProxyProvider5_default] = true;
    dart.addTypeCaches(ListenableProxyProvider5);
    dart.setLibraryUri(ListenableProxyProvider5, I[29]);
    return ListenableProxyProvider5;
  });
  listenable_provider.ListenableProxyProvider5 = listenable_provider.ListenableProxyProvider5$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider5, _is_ListenableProxyProvider5_default);
  const _is_ChangeNotifierProxyProvider5_default = Symbol('_is_ChangeNotifierProxyProvider5_default');
  change_notifier_provider.ChangeNotifierProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    class ChangeNotifierProxyProvider5 extends listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider5.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[69] || CT.C69, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider5.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider5);
    ChangeNotifierProxyProvider5.prototype[_is_ChangeNotifierProxyProvider5_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider5);
    dart.setLibraryUri(ChangeNotifierProxyProvider5, I[30]);
    return ChangeNotifierProxyProvider5;
  });
  change_notifier_provider.ChangeNotifierProxyProvider5 = change_notifier_provider.ChangeNotifierProxyProvider5$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider5, _is_ChangeNotifierProxyProvider5_default);
  const _is_ListenableProxyProvider6_default = Symbol('_is_ListenableProxyProvider6_default');
  listenable_provider.ListenableProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider6 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider6.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider6.prototype;
    dart.addTypeTests(ListenableProxyProvider6);
    ListenableProxyProvider6.prototype[_is_ListenableProxyProvider6_default] = true;
    dart.addTypeCaches(ListenableProxyProvider6);
    dart.setLibraryUri(ListenableProxyProvider6, I[29]);
    return ListenableProxyProvider6;
  });
  listenable_provider.ListenableProxyProvider6 = listenable_provider.ListenableProxyProvider6$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider6, _is_ListenableProxyProvider6_default);
  const _is_ChangeNotifierProxyProvider6_default = Symbol('_is_ChangeNotifierProxyProvider6_default');
  change_notifier_provider.ChangeNotifierProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    class ChangeNotifierProxyProvider6 extends listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider6.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[69] || CT.C69, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider6.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider6);
    ChangeNotifierProxyProvider6.prototype[_is_ChangeNotifierProxyProvider6_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider6);
    dart.setLibraryUri(ChangeNotifierProxyProvider6, I[30]);
    return ChangeNotifierProxyProvider6;
  });
  change_notifier_provider.ChangeNotifierProxyProvider6 = change_notifier_provider.ChangeNotifierProxyProvider6$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider6, _is_ChangeNotifierProxyProvider6_default);
  const _is_Consumer_default = Symbol('_is_Consumer_default');
  consumer.Consumer$ = dart.generic(T => {
    class Consumer extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$1];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer$(T)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t61, t60, t59;
        t59 = context;
        t60 = provider$.Provider.of(T, context);
        t61 = child;
        return this.builder(t59, t60, t61);
      }
    }
    (Consumer.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$1] = builder;
      Consumer.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer.prototype;
    dart.addTypeTests(Consumer);
    Consumer.prototype[_is_Consumer_default] = true;
    dart.addTypeCaches(Consumer);
    dart.setMethodSignature(Consumer, () => ({
      __proto__: dart.getMethods(Consumer.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer, I[31]);
    dart.setFieldSignature(Consumer, () => ({
      __proto__: dart.getFields(Consumer.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)]))
    }));
    return Consumer;
  });
  consumer.Consumer = consumer.Consumer$();
  dart.addTypeTests(consumer.Consumer, _is_Consumer_default);
  const _is_Consumer2_default = Symbol('_is_Consumer2_default');
  consumer.Consumer2$ = dart.generic((A, B) => {
    class Consumer2 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$2];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer2$(A, B)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t62, t61, t60, t59;
        t59 = context;
        t60 = provider$.Provider.of(A, context);
        t61 = provider$.Provider.of(B, context);
        t62 = child;
        return this.builder(t59, t60, t61, t62);
      }
    }
    (Consumer2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$2] = builder;
      Consumer2.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer2.prototype;
    dart.addTypeTests(Consumer2);
    Consumer2.prototype[_is_Consumer2_default] = true;
    dart.addTypeCaches(Consumer2);
    dart.setMethodSignature(Consumer2, () => ({
      __proto__: dart.getMethods(Consumer2.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer2, I[31]);
    dart.setFieldSignature(Consumer2, () => ({
      __proto__: dart.getFields(Consumer2.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, dart.nullable(framework.Widget)]))
    }));
    return Consumer2;
  });
  consumer.Consumer2 = consumer.Consumer2$();
  dart.addTypeTests(consumer.Consumer2, _is_Consumer2_default);
  const _is_Consumer3_default = Symbol('_is_Consumer3_default');
  consumer.Consumer3$ = dart.generic((A, B, C) => {
    class Consumer3 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$3];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer3$(A, B, C)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t63, t62, t61, t60, t59;
        t59 = context;
        t60 = provider$.Provider.of(A, context);
        t61 = provider$.Provider.of(B, context);
        t62 = provider$.Provider.of(C, context);
        t63 = child;
        return this.builder(t59, t60, t61, t62, t63);
      }
    }
    (Consumer3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$3] = builder;
      Consumer3.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer3.prototype;
    dart.addTypeTests(Consumer3);
    Consumer3.prototype[_is_Consumer3_default] = true;
    dart.addTypeCaches(Consumer3);
    dart.setMethodSignature(Consumer3, () => ({
      __proto__: dart.getMethods(Consumer3.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer3, I[31]);
    dart.setFieldSignature(Consumer3, () => ({
      __proto__: dart.getFields(Consumer3.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, dart.nullable(framework.Widget)]))
    }));
    return Consumer3;
  });
  consumer.Consumer3 = consumer.Consumer3$();
  dart.addTypeTests(consumer.Consumer3, _is_Consumer3_default);
  const _is_Consumer4_default = Symbol('_is_Consumer4_default');
  consumer.Consumer4$ = dart.generic((A, B, C, D) => {
    class Consumer4 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$4];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer4$(A, B, C, D)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t64, t63, t62, t61, t60, t59;
        t59 = context;
        t60 = provider$.Provider.of(A, context);
        t61 = provider$.Provider.of(B, context);
        t62 = provider$.Provider.of(C, context);
        t63 = provider$.Provider.of(D, context);
        t64 = child;
        return this.builder(t59, t60, t61, t62, t63, t64);
      }
    }
    (Consumer4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$4] = builder;
      Consumer4.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer4.prototype;
    dart.addTypeTests(Consumer4);
    Consumer4.prototype[_is_Consumer4_default] = true;
    dart.addTypeCaches(Consumer4);
    dart.setMethodSignature(Consumer4, () => ({
      __proto__: dart.getMethods(Consumer4.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer4, I[31]);
    dart.setFieldSignature(Consumer4, () => ({
      __proto__: dart.getFields(Consumer4.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, dart.nullable(framework.Widget)]))
    }));
    return Consumer4;
  });
  consumer.Consumer4 = consumer.Consumer4$();
  dart.addTypeTests(consumer.Consumer4, _is_Consumer4_default);
  const _is_Consumer5_default = Symbol('_is_Consumer5_default');
  consumer.Consumer5$ = dart.generic((A, B, C, D, E) => {
    class Consumer5 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$5];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer5$(A, B, C, D, E)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t65, t64, t63, t62, t61, t60, t59;
        t59 = context;
        t60 = provider$.Provider.of(A, context);
        t61 = provider$.Provider.of(B, context);
        t62 = provider$.Provider.of(C, context);
        t63 = provider$.Provider.of(D, context);
        t64 = provider$.Provider.of(E, context);
        t65 = child;
        return this.builder(t59, t60, t61, t62, t63, t64, t65);
      }
    }
    (Consumer5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$5] = builder;
      Consumer5.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer5.prototype;
    dart.addTypeTests(Consumer5);
    Consumer5.prototype[_is_Consumer5_default] = true;
    dart.addTypeCaches(Consumer5);
    dart.setMethodSignature(Consumer5, () => ({
      __proto__: dart.getMethods(Consumer5.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer5, I[31]);
    dart.setFieldSignature(Consumer5, () => ({
      __proto__: dart.getFields(Consumer5.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, dart.nullable(framework.Widget)]))
    }));
    return Consumer5;
  });
  consumer.Consumer5 = consumer.Consumer5$();
  dart.addTypeTests(consumer.Consumer5, _is_Consumer5_default);
  const _is_Consumer6_default = Symbol('_is_Consumer6_default');
  consumer.Consumer6$ = dart.generic((A, B, C, D, E, F) => {
    class Consumer6 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[S$.builder$6];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, F, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer6$(A, B, C, D, E, F)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t66, t65, t64, t63, t62, t61, t60, t59;
        t59 = context;
        t60 = provider$.Provider.of(A, context);
        t61 = provider$.Provider.of(B, context);
        t62 = provider$.Provider.of(C, context);
        t63 = provider$.Provider.of(D, context);
        t64 = provider$.Provider.of(E, context);
        t65 = provider$.Provider.of(F, context);
        t66 = child;
        return this.builder(t59, t60, t61, t62, t63, t64, t65, t66);
      }
    }
    (Consumer6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$6] = builder;
      Consumer6.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer6.prototype;
    dart.addTypeTests(Consumer6);
    Consumer6.prototype[_is_Consumer6_default] = true;
    dart.addTypeCaches(Consumer6);
    dart.setMethodSignature(Consumer6, () => ({
      __proto__: dart.getMethods(Consumer6.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer6, I[31]);
    dart.setFieldSignature(Consumer6, () => ({
      __proto__: dart.getFields(Consumer6.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, F, dart.nullable(framework.Widget)]))
    }));
    return Consumer6;
  });
  consumer.Consumer6 = consumer.Consumer6$();
  dart.addTypeTests(consumer.Consumer6, _is_Consumer6_default);
  nested.Nested = class Nested extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let children = opts && 'children' in opts ? opts.children : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.Nested.new({key: key, children: children, child: child});
    }
    build(context) {
      dart.throw(new core.StateError.new("implemented internally"));
    }
    createElement() {
      return new nested._NestedElement.new(this);
    }
  };
  (nested.Nested.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (!children[S$.$isNotEmpty]) dart.assertFailed(null, I[32], 71, 16, "children.isNotEmpty");
    this[S$._children] = children;
    this[S$._child$1] = child;
    nested.Nested.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.Nested.prototype;
  dart.addTypeTests(nested.Nested);
  dart.addTypeCaches(nested.Nested);
  nested.Nested[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.Nested, () => ({
    __proto__: dart.getMethods(nested.Nested.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested._NestedElement, [])
  }));
  dart.setLibraryUri(nested.Nested, I[26]);
  dart.setFieldSignature(nested.Nested, () => ({
    __proto__: dart.getFields(nested.Nested.__proto__),
    [S$._children]: dart.finalFieldType(core.List$(nested.SingleChildWidget)),
    [S$._child$1]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  provider$.MultiProvider = class MultiProvider extends nested.Nested {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let providers = opts && 'providers' in opts ? opts.providers : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new provider$.MultiProvider.new({key: key, providers: providers, child: child, builder: builder});
    }
  };
  (provider$.MultiProvider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let providers = opts && 'providers' in opts ? opts.providers : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    provider$.MultiProvider.__proto__.new.call(this, {key: key, children: providers, child: builder != null ? new basic.Builder.new({builder: dart.fn(context => builder(context, child), T$.BuildContextToWidget())}) : child});
    ;
  }).prototype = provider$.MultiProvider.prototype;
  dart.addTypeTests(provider$.MultiProvider);
  dart.addTypeCaches(provider$.MultiProvider);
  dart.setLibraryUri(provider$.MultiProvider, I[27]);
  const _is_Provider_default = Symbol('_is_Provider_default');
  provider$.Provider$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    class Provider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static of(T, context, opts) {
        let t59;
        let listen = opts && 'listen' in opts ? opts.listen : true;
        if (!(dart.nullCheck(context.owner).debugBuilding || listen === false || provider$.debugIsInInheritedProviderUpdate)) dart.assertFailed("Tried to listen to a value exposed with provider, from outside of the widget tree.\n\nThis is likely caused by an event handler (like a button's onPressed) that called\nProvider.of without passing `listen: false`.\n\nTo fix, write:\nProvider.of<" + dart.str(dart.wrapType(T)) + ">(context, listen: false);\n\nIt is unsupported because may pointlessly rebuild the widget associated to the\nevent handler, when the widget tree doesn't care about the value.\n\nThe context used was: " + dart.str(context) + "\n", I[33], 274, 7, "context.owner!.debugBuilding ||\n          listen == false ||\n          debugIsInInheritedProviderUpdate");
        let inheritedElement = provider$.Provider._inheritedElementOf(T, context);
        if (listen) {
          context.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
        }
        let value = (t59 = inheritedElement, t59 == null ? null : t59.value);
        if (provider$._isSoundMode) {
          if (!T.is(value)) {
            dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), context.widget[S$.$runtimeType]));
          }
          return value;
        }
        return T.as(value);
      }
      static _inheritedElementOf(T, context) {
        if (!(context !== null)) dart.assertFailed("Tried to call context.read/watch/select or similar on a `context` that is null.\n\nThis can happen if you used the context of a StatefulWidget and that\nStatefulWidget was disposed.\n", I[33], 319, 12, "context != null");
        if (!(provider$._debugIsSelecting === false)) dart.assertFailed("Cannot call context.read/watch/select inside the callback of a context.select", I[33], 326, 7, "_debugIsSelecting == false");
        if (!!dart.wrapType(T)._equals(dart.wrapType(dart.dynamic))) dart.assertFailed("Tried to call Provider.of<dynamic>. This is likely a mistake and is therefore\nunsupported.\n\nIf you want to expose a variable that can be anything, consider changing\n`dynamic` to `Object` instead.\n", I[33], 330, 7, "T != dynamic");
        let inheritedElement = dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))).as(context.getElementForInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T))));
        if (inheritedElement == null && !T.is(null)) {
          dart.throw(new provider$.ProviderNotFoundException.new(dart.wrapType(T), context.widget[S$.$runtimeType]));
        }
        return inheritedElement;
      }
    }
    (Provider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Provider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, dispose: dispose, debugCheckInvalidValueType: dart.fn(value => {
          let t59;
          t59 = provider$.Provider.debugCheckInvalidValueType;
          return t59 == null ? null : t59(T, value);
        }, __t$TTovoid()), child: child});
      ;
    }).prototype = Provider.prototype;
    (Provider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!dart.fn(() => {
        let t59;
        t59 = provider$.Provider.debugCheckInvalidValueType;
        t59 == null ? null : t59(T, value);
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[33], 243, 16, "() {\n          Provider.debugCheckInvalidValueType?.call<T>(value);\n          return true;\n        }()");
      Provider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, child: child});
      ;
    }).prototype = Provider.prototype;
    dart.addTypeTests(Provider);
    Provider.prototype[_is_Provider_default] = true;
    dart.addTypeCaches(Provider);
    dart.setStaticMethodSignature(Provider, () => ['of', '_inheritedElementOf']);
    dart.setLibraryUri(Provider, I[27]);
    dart.setStaticFieldSignature(Provider, () => ['debugCheckInvalidValueType']);
    return Provider;
  });
  provider$.Provider = provider$.Provider$();
  dart.defineLazy(provider$.Provider, {
    /*provider$.Provider.debugCheckInvalidValueType*/get debugCheckInvalidValueType() {
      return dart.fn((T, value) => {
        if (!dart.fn(() => {
          if (change_notifier.Listenable.is(value) || async.Stream.is(value)) {
            dart.throw(assertions.FlutterError.new("Tried to use Provider with a subtype of Listenable/Stream (" + dart.str(dart.wrapType(T)) + ").\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen " + dart.str(dart.wrapType(T)) + " is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[33], 385, 12, "() {\n      if (value is Listenable || value is Stream) {\n        throw FlutterError('''\nTried to use Provider with a subtype of Listenable/Stream ($T).\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen $T is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n''');\n      }\n      return true;\n    }()");
      }, T$.TTovoid$1());
    },
    set debugCheckInvalidValueType(value) {}
  }, false);
  dart.addTypeTests(provider$.Provider, _is_Provider_default);
  provider$.ProviderNullException = class ProviderNullException extends core.Object {
    get valueType() {
      return this[S$.valueType];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[S$.widgetType];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNullException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: The widget " + dart.str(this.widgetType) + " tried to read Provider<" + dart.str(this.valueType) + "> but the matching\nprovider returned null.\n\nTo fix the error, consider changing Provider<" + dart.str(this.valueType) + "> to Provider<" + dart.str(this.valueType) + "?>.\n";
    }
  };
  (provider$.ProviderNullException.new = function(valueType, widgetType) {
    this[S$.valueType] = valueType;
    this[S$.widgetType] = widgetType;
    ;
  }).prototype = provider$.ProviderNullException.prototype;
  dart.addTypeTests(provider$.ProviderNullException);
  dart.addTypeCaches(provider$.ProviderNullException);
  provider$.ProviderNullException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNullException, I[27]);
  dart.setFieldSignature(provider$.ProviderNullException, () => ({
    __proto__: dart.getFields(provider$.ProviderNullException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNullException, ['toString']);
  provider$.ProviderNotFoundException = class ProviderNotFoundException extends core.Object {
    get valueType() {
      return this[S$.valueType$1];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[S$.widgetType$1];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNotFoundException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: Could not find the correct Provider<" + dart.str(this.valueType) + "> above this " + dart.str(this.widgetType) + " Widget\n\nThis happens because you used a `BuildContext` that does not include the provider\nof your choice. There are a few common scenarios:\n\n- You added a new provider in your `main.dart` and performed a hot-reload.\n  To fix, perform a hot-restart.\n\n- The provider you are trying to read is in a different route.\n\n  Providers are \"scoped\". So if you insert of provider inside a route, then\n  other routes will not be able to access that provider.\n\n- You used a `BuildContext` that is an ancestor of the provider you are trying to read.\n\n  Make sure that " + dart.str(this.widgetType) + " is under your MultiProvider/Provider<" + dart.str(this.valueType) + ">.\n  This usually happens when you are creating a provider and trying to read it immediately.\n\n  For example, instead of:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // Will throw a ProviderNotFoundError, because `context` is associated\n      // to the widget that is the parent of `Provider<Example>`\n      child: Text(context.watch<Example>().toString()),\n    );\n  }\n  ```\n\n  consider using `builder` like so:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // we use `builder` to obtain a new `BuildContext` that has access to the provider\n      builder: (context, child) {\n        // No longer throws\n        return Text(context.watch<Example>().toString());\n      }\n    );\n  }\n  ```\n\nIf none of these solutions work, consider asking for help on StackOverflow:\nhttps://stackoverflow.com/questions/tagged/flutter\n";
    }
  };
  (provider$.ProviderNotFoundException.new = function(valueType, widgetType) {
    this[S$.valueType$1] = valueType;
    this[S$.widgetType$1] = widgetType;
    ;
  }).prototype = provider$.ProviderNotFoundException.prototype;
  dart.addTypeTests(provider$.ProviderNotFoundException);
  dart.addTypeCaches(provider$.ProviderNotFoundException);
  provider$.ProviderNotFoundException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNotFoundException, I[27]);
  dart.setFieldSignature(provider$.ProviderNotFoundException, () => ({
    __proto__: dart.getFields(provider$.ProviderNotFoundException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNotFoundException, ['toString']);
  const _is__Delegate_default = Symbol('_is__Delegate_default');
  provider$._Delegate$ = dart.generic(T => {
    class _Delegate extends core.Object {
      debugFillProperties(properties) {
      }
    }
    (_Delegate.new = function() {
      ;
    }).prototype = _Delegate.prototype;
    dart.addTypeTests(_Delegate);
    _Delegate.prototype[_is__Delegate_default] = true;
    dart.addTypeCaches(_Delegate);
    dart.setMethodSignature(_Delegate, () => ({
      __proto__: dart.getMethods(_Delegate.__proto__),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder])
    }));
    dart.setLibraryUri(_Delegate, I[27]);
    return _Delegate;
  });
  provider$._Delegate = provider$._Delegate$();
  dart.addTypeTests(provider$._Delegate, _is__Delegate_default);
  const _is__DeferredDelegate_default = Symbol('_is__DeferredDelegate_default');
  provider$._DeferredDelegate$ = dart.generic((T, R) => {
    class _DeferredDelegate extends provider$._Delegate$(R) {}
    (_DeferredDelegate.new = function(updateShouldNotify, startListening) {
      this.updateShouldNotify = updateShouldNotify;
      this.startListening = startListening;
      ;
    }).prototype = _DeferredDelegate.prototype;
    dart.addTypeTests(_DeferredDelegate);
    _DeferredDelegate.prototype[_is__DeferredDelegate_default] = true;
    dart.addTypeCaches(_DeferredDelegate);
    dart.setLibraryUri(_DeferredDelegate, I[27]);
    dart.setFieldSignature(_DeferredDelegate, () => ({
      __proto__: dart.getFields(_DeferredDelegate.__proto__),
      updateShouldNotify: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [R, R]))),
      startListening: dart.finalFieldType(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(R)), dart.fnType(dart.void, [R]), T, dart.nullable(R)]))
    }));
    return _DeferredDelegate;
  });
  provider$._DeferredDelegate = provider$._DeferredDelegate$();
  dart.addTypeTests(provider$._DeferredDelegate, _is__DeferredDelegate_default);
  const _is__DelegateState_default = Symbol('_is__DelegateState_default');
  provider$._DelegateState$ = dart.generic((T, D) => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeElementOfTN = () => (__t$_InheritedProviderScopeElementOfTN = dart.constFn(provider$._InheritedProviderScopeElement$(__t$TN())))();
    var __t$_InheritedProviderScopeElementNOfTN = () => (__t$_InheritedProviderScopeElementNOfTN = dart.constFn(dart.nullable(__t$_InheritedProviderScopeElementOfTN())))();
    class _DelegateState extends core.Object {
      get element() {
        return this[S$.element];
      }
      set element(value) {
        this[S$.element] = __t$_InheritedProviderScopeElementNOfTN().as(value);
      }
      get delegate() {
        return D.as(dart.nullCheck(this.element).widget.owner[S$._delegate$3]);
      }
      debugSetInheritedLock(value) {
        return dart.nullCheck(this.element)[S$._debugSetInheritedLock](value);
      }
      willUpdateDelegate(newDelegate) {
        D.as(newDelegate);
        return false;
      }
      dispose() {
      }
      debugFillProperties(properties) {
      }
      build(opts) {
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
      }
    }
    (_DelegateState.new = function() {
      this[S$.element] = null;
      ;
    }).prototype = _DelegateState.prototype;
    dart.addTypeTests(_DelegateState);
    _DelegateState.prototype[_is__DelegateState_default] = true;
    dart.addTypeCaches(_DelegateState);
    dart.setMethodSignature(_DelegateState, () => ({
      __proto__: dart.getMethods(_DelegateState.__proto__),
      debugSetInheritedLock: dart.fnType(core.bool, [core.bool]),
      willUpdateDelegate: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      dispose: dart.fnType(dart.void, []),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder]),
      build: dart.fnType(dart.void, [], {}, {isBuildFromExternalSources: core.bool})
    }));
    dart.setGetterSignature(_DelegateState, () => ({
      __proto__: dart.getGetters(_DelegateState.__proto__),
      delegate: D
    }));
    dart.setLibraryUri(_DelegateState, I[27]);
    dart.setFieldSignature(_DelegateState, () => ({
      __proto__: dart.getFields(_DelegateState.__proto__),
      element: dart.fieldType(dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))))
    }));
    return _DelegateState;
  });
  provider$._DelegateState = provider$._DelegateState$();
  dart.addTypeTests(provider$._DelegateState, _is__DelegateState_default);
  const _is__DeferredDelegateState_default = Symbol('_is__DeferredDelegateState_default');
  provider$._DeferredDelegateState$ = dart.generic((T, R, W) => {
    var __t$InheritedContextOfRNAndFnAndT__ToFn = () => (__t$InheritedContextOfRNAndFnAndT__ToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfRN(), __t$RTovoid(), T, __t$RN()])))();
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$InheritedContextOfRN = () => (__t$InheritedContextOfRN = dart.constFn(provider$.InheritedContext$(__t$RN())))();
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    var __t$RAndRTobool = () => (__t$RAndRTobool = dart.constFn(dart.fnType(core.bool, [R, R])))();
    var __t$RAndRToNbool = () => (__t$RAndRToNbool = dart.constFn(dart.nullable(__t$RAndRTobool())))();
    class _DeferredDelegateState extends provider$._DelegateState$(R, W) {
      get value() {
        let t63, t62, t61, t60, t59;
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = false;
        this[S$._removeListener] == null ? this[S$._removeListener] = (t59 = this.delegate, t60 = dart.nullCheck(this.element), t61 = dart.bind(this, 'setState'), t62 = this.controller, t63 = this[S$._value], __t$InheritedContextOfRNAndFnAndT__ToFn().as(t59.startListening)(t60, t61, t62, t63)) : null;
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = true;
        if (!dart.nullCheck(this.element).hasValue) dart.assertFailed("The callback \"startListening\" was called, but it left DeferredInhertitedProviderElement<" + dart.str(dart.wrapType(T)) + ", " + dart.str(dart.wrapType(R)) + ">\nin an uninitialized state.\n\nIt is necessary for \"startListening\" to call \"setState\" at least once the very\nfirst time \"value\" is requested.\n\nTo fix, consider:\n\nDeferredInheritedProvider(\n  ...,\n  startListening: (element, setState, controller, value) {\n    if (!element.hasValue) {\n      setState(myInitialValue); // TODO replace myInitialValue with your own\n    }\n    ...\n  }\n)\n    ", I[34], 109, 12, "element!.hasValue");
        if (!(this[S$._removeListener] != null)) dart.assertFailed(null, I[34], 128, 12, "_removeListener != null");
        return R.as(this[S$._value]);
      }
      dispose() {
        let t59;
        super.dispose();
        t59 = this[S$._removeListener];
        t59 == null ? null : t59();
      }
      get isLoaded() {
        return this[S$._removeListener] != null;
      }
      get hasValue() {
        return this[S$._hasValue];
      }
      setState(value) {
        R.as(value);
        if (this[S$._hasValue]) {
          let shouldNotify = __t$RAndRToNbool().as(this.delegate.updateShouldNotify) != null ? dart.nullCheck(__t$RAndRToNbool().as(this.delegate.updateShouldNotify))(R.as(this[S$._value]), value) : !dart.equals(this[S$._value], value);
          if (shouldNotify) {
            dart.nullCheck(this.element).markNeedsNotifyDependents();
          }
        }
        this[S$._hasValue] = true;
        this[S$._value] = value;
      }
    }
    (_DeferredDelegateState.new = function() {
      this[S$._removeListener] = null;
      this[S$._value] = null;
      this[S$._hasValue] = false;
      _DeferredDelegateState.__proto__.new.call(this);
      ;
    }).prototype = _DeferredDelegateState.prototype;
    dart.addTypeTests(_DeferredDelegateState);
    _DeferredDelegateState.prototype[_is__DeferredDelegateState_default] = true;
    dart.addTypeCaches(_DeferredDelegateState);
    dart.setMethodSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getMethods(_DeferredDelegateState.__proto__),
      setState: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getGetters(_DeferredDelegateState.__proto__),
      value: R,
      isLoaded: core.bool,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_DeferredDelegateState, I[27]);
    dart.setFieldSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getFields(_DeferredDelegateState.__proto__),
      [S$._removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [S$._value]: dart.fieldType(dart.nullable(R)),
      [S$._hasValue]: dart.fieldType(core.bool)
    }));
    return _DeferredDelegateState;
  });
  provider$._DeferredDelegateState = provider$._DeferredDelegateState$();
  dart.addTypeTests(provider$._DeferredDelegateState, _is__DeferredDelegateState_default);
  const _is__CreateDeferredInheritedProvider_default = Symbol('_is__CreateDeferredInheritedProvider_default');
  provider$._CreateDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderElementOfT$R = () => (__t$_CreateDeferredInheritedProviderElementOfT$R = dart.constFn(provider$._CreateDeferredInheritedProviderElement$(T, R)))();
    class _CreateDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._CreateDeferredInheritedProvider$(T, R)).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      createState() {
        return new (__t$_CreateDeferredInheritedProviderElementOfT$R()).new();
      }
    }
    (_CreateDeferredInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.create = create;
      this.dispose = dispose;
      _CreateDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _CreateDeferredInheritedProvider.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProvider);
    _CreateDeferredInheritedProvider.prototype[_is__CreateDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProvider);
    dart.setMethodSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateDeferredInheritedProviderElement$(T, R), [])
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProvider, I[27]);
    dart.setFieldSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateDeferredInheritedProvider;
  });
  provider$._CreateDeferredInheritedProvider = provider$._CreateDeferredInheritedProvider$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProvider, _is__CreateDeferredInheritedProvider_default);
  const _is__CreateDeferredInheritedProviderElement_default = Symbol('_is__CreateDeferredInheritedProviderElement_default');
  provider$._CreateDeferredInheritedProviderElement$ = dart.generic((T, R) => {
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _CreateDeferredInheritedProviderElement extends provider$._DeferredDelegateState$(T, R, provider$._CreateDeferredInheritedProvider$(T, R)) {
      get controller() {
        let t60, t59;
        if (!this[S$._didBuild]) {
          if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[34], 186, 14, "debugSetInheritedLock(true)");
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[34], 190, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = true;
              provider$.debugIsInInheritedProviderUpdate = false;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[34], 199, 16, "() {\n          debugIsInInheritedProviderCreate = true;\n          debugIsInInheritedProviderUpdate = false;\n          return true;\n        }()");
            this[S$._controller] = (t59 = this.delegate, t60 = dart.nullCheck(this.element), t59.create(t60));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[34], 206, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          this[S$._didBuild] = true;
        }
        return T.as(this[S$._controller]);
      }
      dispose() {
        let t59;
        super.dispose();
        if (this[S$._didBuild]) {
          t59 = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t59 == null ? null : t59(dart.nullCheck(this.element), T.as(this[S$._controller]));
        }
      }
      debugFillProperties(properties) {
        let t59, t59$;
        super.debugFillProperties(properties);
        if (this.isLoaded) {
          t59 = properties;
          (() => {
            t59.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.controller));
            t59.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
            return t59;
          })();
        } else {
          t59$ = properties;
          (() => {
            t59$.add(new diagnostics.FlagProperty.new("controller", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            t59$.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            return t59$;
          })();
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._CreateDeferredInheritedProviderElement$(T, R)).new();
      }
    }
    (_CreateDeferredInheritedProviderElement.new = function() {
      this[S$._didBuild] = false;
      this[S$._controller] = null;
      _CreateDeferredInheritedProviderElement.__proto__.new.call(this);
      ;
    }).prototype = _CreateDeferredInheritedProviderElement.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProviderElement);
    _CreateDeferredInheritedProviderElement.prototype[_is__CreateDeferredInheritedProviderElement_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProviderElement);
    dart.setGetterSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getGetters(_CreateDeferredInheritedProviderElement.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProviderElement, I[27]);
    dart.setFieldSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProviderElement.__proto__),
      [S$._didBuild]: dart.fieldType(core.bool),
      [S$._controller]: dart.fieldType(dart.nullable(T))
    }));
    return _CreateDeferredInheritedProviderElement;
  });
  provider$._CreateDeferredInheritedProviderElement = provider$._CreateDeferredInheritedProviderElement$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProviderElement, _is__CreateDeferredInheritedProviderElement_default);
  const _is__ValueDeferredInheritedProvider_default = Symbol('_is__ValueDeferredInheritedProvider_default');
  provider$._ValueDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderStateOfT$R = () => (__t$_ValueDeferredInheritedProviderStateOfT$R = dart.constFn(provider$._ValueDeferredInheritedProviderState$(T, R)))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _ValueDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, value, updateShouldNotify, startListening) {
        return new (provider$._ValueDeferredInheritedProvider$(T, R)).new(value, updateShouldNotify, startListening);
      }
      createState() {
        return new (__t$_ValueDeferredInheritedProviderStateOfT$R()).new();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.value));
      }
    }
    (_ValueDeferredInheritedProvider.new = function(value, updateShouldNotify, startListening) {
      this.value = value;
      _ValueDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _ValueDeferredInheritedProvider.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProvider);
    _ValueDeferredInheritedProvider.prototype[_is__ValueDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProvider);
    dart.setMethodSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueDeferredInheritedProviderState$(T, R), [])
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProvider, I[27]);
    dart.setFieldSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueDeferredInheritedProvider.__proto__),
      value: dart.finalFieldType(T)
    }));
    return _ValueDeferredInheritedProvider;
  });
  provider$._ValueDeferredInheritedProvider = provider$._ValueDeferredInheritedProvider$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProvider, _is__ValueDeferredInheritedProvider_default);
  const _is__ValueDeferredInheritedProviderState_default = Symbol('_is__ValueDeferredInheritedProviderState_default');
  provider$._ValueDeferredInheritedProviderState$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _ValueDeferredInheritedProviderState extends provider$._DeferredDelegateState$(T, R, provider$._ValueDeferredInheritedProvider$(T, R)) {
      willUpdateDelegate(oldDelegate) {
        __t$_ValueDeferredInheritedProviderOfT$R().as(oldDelegate);
        if (!dart.equals(this.delegate.value, oldDelegate.value)) {
          if (this[S$._removeListener] != null) {
            dart.nullCheck(this[S$._removeListener])();
            this[S$._removeListener] = null;
          }
          return true;
        }
        return false;
      }
      get controller() {
        return this.delegate.value;
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        if (this[S$._removeListener] != null) {
          properties.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._ValueDeferredInheritedProviderState$(T, R)).new();
      }
    }
    (_ValueDeferredInheritedProviderState.new = function() {
      _ValueDeferredInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueDeferredInheritedProviderState.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProviderState);
    _ValueDeferredInheritedProviderState.prototype[_is__ValueDeferredInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProviderState);
    dart.setGetterSignature(_ValueDeferredInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueDeferredInheritedProviderState.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProviderState, I[27]);
    return _ValueDeferredInheritedProviderState;
  });
  provider$._ValueDeferredInheritedProviderState = provider$._ValueDeferredInheritedProviderState$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProviderState, _is__ValueDeferredInheritedProviderState_default);
  provider$.PostEventCall = class PostEventCall extends core.Object {
    get eventKind() {
      return this[S$.eventKind];
    }
    set eventKind(value) {
      super.eventKind = value;
    }
    get event() {
      return this[S$.event];
    }
    set event(value) {
      super.event = value;
    }
    static ['_#_#tearOff'](eventKind, event) {
      return new provider$.PostEventCall.__(eventKind, event);
    }
  };
  (provider$.PostEventCall.__ = function(eventKind, event) {
    this[S$.eventKind] = eventKind;
    this[S$.event] = event;
    ;
  }).prototype = provider$.PostEventCall.prototype;
  dart.addTypeTests(provider$.PostEventCall);
  dart.addTypeCaches(provider$.PostEventCall);
  dart.setLibraryUri(provider$.PostEventCall, I[27]);
  dart.setFieldSignature(provider$.PostEventCall, () => ({
    __proto__: dart.getFields(provider$.PostEventCall.__proto__),
    eventKind: dart.finalFieldType(core.String),
    event: dart.finalFieldType(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))
  }));
  provider$.PostEventSpy = class PostEventSpy extends core.Object {
    get logs() {
      return this[S$.logs];
    }
    set logs(value) {
      super.logs = value;
    }
    static ['_#_#tearOff']() {
      return new provider$.PostEventSpy.__();
    }
    dispose() {
      if (!dart.equals(provider$._debugPostEventOverride, dart.bind(this, S$._postEvent))) dart.assertFailed("disposed a spy different from the current spy", I[35], 43, 7, "_debugPostEventOverride == _postEvent");
      provider$._debugPostEventOverride = null;
    }
    [S$._postEvent](eventKind, event) {
      this.logs[S$.$add](new provider$.PostEventCall.__(eventKind, event));
    }
  };
  (provider$.PostEventSpy.__ = function() {
    this[S$.logs] = T$.JSArrayOfPostEventCall().of([]);
    ;
  }).prototype = provider$.PostEventSpy.prototype;
  dart.addTypeTests(provider$.PostEventSpy);
  dart.addTypeCaches(provider$.PostEventSpy);
  dart.setMethodSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getMethods(provider$.PostEventSpy.__proto__),
    dispose: dart.fnType(dart.void, []),
    [S$._postEvent]: dart.fnType(dart.void, [core.String, core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setLibraryUri(provider$.PostEventSpy, I[27]);
  dart.setFieldSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getFields(provider$.PostEventSpy.__proto__),
    logs: dart.finalFieldType(core.List$(provider$.PostEventCall))
  }));
  provider$.ProviderNode = class ProviderNode extends core.Object {
    get id() {
      return this[S$.id];
    }
    set id(value) {
      super.id = value;
    }
    get type() {
      return this[S$.type];
    }
    set type(value) {
      super.type = value;
    }
    get childrenNodeIds() {
      return this[S$.childrenNodeIds];
    }
    set childrenNodeIds(value) {
      super.childrenNodeIds = value;
    }
    get [S$._element$1]() {
      return this[S$._element];
    }
    set [S$._element$1](value) {
      super[S$._element$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let element = opts && 'element' in opts ? opts.element : null;
      return new provider$.ProviderNode.new({id: id, childrenNodeIds: childrenNodeIds, type: type, element: element});
    }
    get value() {
      return this[S$._element$1][S$._delegateState].value;
    }
  };
  (provider$.ProviderNode.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let element = opts && 'element' in opts ? opts.element : null;
    this[S$.id] = id;
    this[S$.childrenNodeIds] = childrenNodeIds;
    this[S$.type] = type;
    this[S$._element] = element;
    ;
  }).prototype = provider$.ProviderNode.prototype;
  dart.addTypeTests(provider$.ProviderNode);
  dart.addTypeCaches(provider$.ProviderNode);
  dart.setGetterSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getGetters(provider$.ProviderNode.__proto__),
    value: dart.nullable(core.Object)
  }));
  dart.setLibraryUri(provider$.ProviderNode, I[27]);
  dart.setFieldSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getFields(provider$.ProviderNode.__proto__),
    id: dart.finalFieldType(core.String),
    type: dart.finalFieldType(core.String),
    childrenNodeIds: dart.finalFieldType(core.List$(core.String)),
    [S$._element$1]: dart.finalFieldType(provider$._InheritedProviderScopeElement$(dart.nullable(core.Object)))
  }));
  provider$.ProviderBinding = class ProviderBinding extends core.Object {
    static ['_#_#tearOff']() {
      return new provider$.ProviderBinding.__();
    }
    get providerDetails() {
      return this[S$._providerDetails];
    }
    set providerDetails(value) {
      provider$.debugPostEvent("provider:provider_list_changed", new _js_helper.LinkedMap.new());
      this[S$._providerDetails] = value;
    }
    providerDidChange(providerId) {
      provider$.debugPostEvent("provider:provider_changed", new _js_helper.LinkedMap.from(["id", providerId]));
    }
  };
  (provider$.ProviderBinding.__ = function() {
    this[S$._providerDetails] = new (T$.IdentityMapOfString$ProviderNode()).new();
    ;
  }).prototype = provider$.ProviderBinding.prototype;
  dart.addTypeTests(provider$.ProviderBinding);
  dart.addTypeCaches(provider$.ProviderBinding);
  dart.setMethodSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getMethods(provider$.ProviderBinding.__proto__),
    providerDidChange: dart.fnType(dart.void, [core.String])
  }));
  dart.setGetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getGetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setSetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getSetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setLibraryUri(provider$.ProviderBinding, I[27]);
  dart.setFieldSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getFields(provider$.ProviderBinding.__proto__),
    [S$._providerDetails]: dart.fieldType(core.Map$(core.String, provider$.ProviderNode))
  }));
  dart.setStaticFieldSignature(provider$.ProviderBinding, () => ['debugInstance']);
  dart.defineLazy(provider$.ProviderBinding, {
    /*provider$.ProviderBinding.debugInstance*/get debugInstance() {
      return new provider$.ProviderBinding.__();
    }
  }, false);
  nested.SingleChildWidgetElementMixin = class SingleChildWidgetElementMixin extends framework.Element {};
  nested.SingleChildWidgetElementMixin[dart.mixinOn] = Element => class SingleChildWidgetElementMixin extends Element {
    get [S$._parent]() {
      return this[S$._parent$1];
    }
    set [S$._parent](value) {
      this[S$._parent$1] = value;
    }
    mount(parent, newSlot) {
      if (T$._NestedHookElementN().is(parent)) {
        this[S$._parent] = parent;
      }
      super.mount(parent, newSlot);
    }
    activate() {
      super.activate();
      this.visitAncestorElements(dart.fn(parent => {
        if (nested._NestedHookElement.is(parent)) {
          this[S$._parent] = parent;
        }
        return false;
      }, T$.ElementTobool()));
    }
  };
  (nested.SingleChildWidgetElementMixin[dart.mixinNew] = function() {
    this[S$._parent$1] = null;
  }).prototype = nested.SingleChildWidgetElementMixin.prototype;
  dart.addTypeTests(nested.SingleChildWidgetElementMixin);
  dart.addTypeCaches(nested.SingleChildWidgetElementMixin);
  nested.SingleChildWidgetElementMixin[dart.implements] = () => [framework.Element];
  dart.setMethodSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildWidgetElementMixin.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setLibraryUri(nested.SingleChildWidgetElementMixin, I[26]);
  dart.setFieldSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getFields(nested.SingleChildWidgetElementMixin.__proto__),
    [S$._parent]: dart.fieldType(dart.nullable(nested._NestedHookElement))
  }));
  const StatelessElement_SingleChildWidgetElementMixin$36 = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatelessElement = class SingleChildStatelessElement extends StatelessElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatelessElement.new(widget);
    }
    build() {
      if (this[S$._parent] != null) {
        return this.widget.buildWithChild(this, dart.nullCheck(this[S$._parent]).injectedChild);
      }
      return super.build();
    }
    get widget() {
      return nested.SingleChildStatelessWidget.as(super.widget);
    }
  };
  (nested.SingleChildStatelessElement.new = function(widget) {
    nested.SingleChildStatelessElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatelessElement.prototype;
  dart.addTypeTests(nested.SingleChildStatelessElement);
  dart.addTypeCaches(nested.SingleChildStatelessElement);
  dart.setGetterSignature(nested.SingleChildStatelessElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessElement.__proto__),
    widget: nested.SingleChildStatelessWidget
  }));
  dart.setLibraryUri(nested.SingleChildStatelessElement, I[26]);
  const _is__InheritedProviderElement_default = Symbol('_is__InheritedProviderElement_default');
  provider$._InheritedProviderElement$ = dart.generic(T => {
    class _InheritedProviderElement extends nested.SingleChildStatelessElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderElement$(T)).new(widget);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this.visitChildren(dart.fn(e => e.debugFillProperties(properties), T$.ElementTovoid()));
      }
    }
    (_InheritedProviderElement.new = function(widget) {
      _InheritedProviderElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderElement.prototype;
    dart.addTypeTests(_InheritedProviderElement);
    _InheritedProviderElement.prototype[_is__InheritedProviderElement_default] = true;
    dart.addTypeCaches(_InheritedProviderElement);
    dart.setLibraryUri(_InheritedProviderElement, I[27]);
    return _InheritedProviderElement;
  });
  provider$._InheritedProviderElement = provider$._InheritedProviderElement$();
  dart.addTypeTests(provider$._InheritedProviderElement, _is__InheritedProviderElement_default);
  const _is_InheritedContext_default = Symbol('_is_InheritedContext_default');
  provider$.InheritedContext$ = dart.generic(T => {
    class InheritedContext extends framework.BuildContext {}
    (InheritedContext.new = function() {
      ;
    }).prototype = InheritedContext.prototype;
    dart.addTypeTests(InheritedContext);
    InheritedContext.prototype[_is_InheritedContext_default] = true;
    dart.addTypeCaches(InheritedContext);
    dart.setLibraryUri(InheritedContext, I[27]);
    return InheritedContext;
  });
  provider$.InheritedContext = provider$.InheritedContext$();
  dart.addTypeTests(provider$.InheritedContext, _is_InheritedContext_default);
  const _is__InheritedProviderScope_default = Symbol('_is__InheritedProviderScope_default');
  provider$._InheritedProviderScope$ = dart.generic(T => {
    var __t$_InheritedProviderScopeElementOfT = () => (__t$_InheritedProviderScopeElementOfT = dart.constFn(provider$._InheritedProviderScopeElement$(T)))();
    class _InheritedProviderScope extends framework.InheritedWidget {
      get owner() {
        return this[S$.owner];
      }
      set owner(value) {
        super.owner = value;
      }
      get debugType() {
        return this[S$.debugType];
      }
      set debugType(value) {
        super.debugType = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let owner = opts && 'owner' in opts ? opts.owner : null;
        let debugType = opts && 'debugType' in opts ? opts.debugType : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$._InheritedProviderScope$(T)).new({owner: owner, debugType: debugType, child: child});
      }
      updateShouldNotify(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        return false;
      }
      createElement() {
        return new (__t$_InheritedProviderScopeElementOfT()).new(this);
      }
    }
    (_InheritedProviderScope.new = function(opts) {
      let owner = opts && 'owner' in opts ? opts.owner : null;
      let debugType = opts && 'debugType' in opts ? opts.debugType : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.owner] = owner;
      this[S$.debugType] = debugType;
      if (!T.is(null)) dart.assertFailed(null, I[25], 341, 16, "null is T");
      _InheritedProviderScope.__proto__.new.call(this, {child: child});
      ;
    }).prototype = _InheritedProviderScope.prototype;
    dart.addTypeTests(_InheritedProviderScope);
    _InheritedProviderScope.prototype[_is__InheritedProviderScope_default] = true;
    dart.addTypeCaches(_InheritedProviderScope);
    dart.setMethodSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getMethods(_InheritedProviderScope.__proto__),
      updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      createElement: dart.fnType(provider$._InheritedProviderScopeElement$(T), [])
    }));
    dart.setLibraryUri(_InheritedProviderScope, I[27]);
    dart.setFieldSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getFields(_InheritedProviderScope.__proto__),
      owner: dart.finalFieldType(provider$.InheritedProvider$(T)),
      debugType: dart.finalFieldType(core.String)
    }));
    return _InheritedProviderScope;
  });
  provider$._InheritedProviderScope = provider$._InheritedProviderScope$();
  dart.addTypeTests(provider$._InheritedProviderScope, _is__InheritedProviderScope_default);
  const _is__Dependency_default = Symbol('_is__Dependency_default');
  provider$._Dependency$ = dart.generic(T => {
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$JSArrayOfTTobool = () => (__t$JSArrayOfTTobool = dart.constFn(_interceptors.JSArray$(__t$TTobool())))();
    class _Dependency extends core.Object {
      static ['_#new#tearOff'](T) {
        return new (provider$._Dependency$(T)).new();
      }
    }
    (_Dependency.new = function() {
      this.shouldClearSelectors = false;
      this.shouldClearMutationScheduled = false;
      this.selectors = __t$JSArrayOfTTobool().of([]);
      ;
    }).prototype = _Dependency.prototype;
    dart.addTypeTests(_Dependency);
    _Dependency.prototype[_is__Dependency_default] = true;
    dart.addTypeCaches(_Dependency);
    dart.setLibraryUri(_Dependency, I[27]);
    dart.setFieldSignature(_Dependency, () => ({
      __proto__: dart.getFields(_Dependency.__proto__),
      shouldClearSelectors: dart.fieldType(core.bool),
      shouldClearMutationScheduled: dart.fieldType(core.bool),
      selectors: dart.finalFieldType(core.List$(dart.fnType(core.bool, [T])))
    }));
    return _Dependency;
  });
  provider$._Dependency = provider$._Dependency$();
  dart.addTypeTests(provider$._Dependency, _is__Dependency_default);
  const _is__InheritedProviderScopeElement_default = Symbol('_is__InheritedProviderScopeElement_default');
  provider$._InheritedProviderScopeElement$ = dart.generic(T => {
    var __t$_InheritedProviderScopeOfT = () => (__t$_InheritedProviderScopeOfT = dart.constFn(provider$._InheritedProviderScope$(T)))();
    var __t$_DependencyOfT = () => (__t$_DependencyOfT = dart.constFn(provider$._Dependency$(T)))();
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$ListOfTTobool = () => (__t$ListOfTTobool = dart.constFn(core.List$(__t$TTobool())))();
    class _InheritedProviderScopeElement extends framework.InheritedElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderScopeElement$(T)).new(widget);
      }
      get [S$._delegateState]() {
        let t60, t60$, t59;
        t59 = this[S$.___InheritedProviderScopeElement__delegateState];
        return t59 == null ? (t60$ = (t60 = this.widget.owner[S$._delegate$3].createState(), (() => {
          t60.element = this;
          return t60;
        })()), this[S$.___InheritedProviderScopeElement__delegateState] == null ? this[S$.___InheritedProviderScopeElement__delegateState] = t60$ : dart.throw(new _internal.LateError.fieldADI("_delegateState"))) : t59;
      }
      get [S$._debugId]() {
        let t59;
        t59 = this[S$.___InheritedProviderScopeElement__debugId];
        return t59 == null ? dart.throw(new _internal.LateError.fieldNI("_debugId")) : t59;
      }
      set [S$._debugId](_debugId$35param) {
        this[S$.___InheritedProviderScopeElement__debugId] = _debugId$35param;
      }
      getElementForInheritedWidgetOfExactType(InheritedWidgetType) {
        let inheritedElement = null;
        this.visitAncestorElements(dart.fn(parent => {
          inheritedElement = parent.getElementForInheritedWidgetOfExactType(InheritedWidgetType);
          return false;
        }, T$.ElementTobool()));
        return inheritedElement;
      }
      mount(parent, newSlot) {
        let t59;
        {
          this[S$._debugId] = dart.str((t59 = provider$._InheritedProviderScopeElement._nextProviderId, provider$._InheritedProviderScopeElement._nextProviderId = t59 + 1, t59));
          provider$.ProviderBinding.debugInstance.providerDetails = (() => {
            let t59 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            t59[S$.$_set](this[S$._debugId], new provider$.ProviderNode.new({id: this[S$._debugId], childrenNodeIds: C[71] || CT.C71, type: this.widget.debugType, element: this}));
            return t59;
          })();
        }
        super.mount(parent, newSlot);
      }
      get widget() {
        return __t$_InheritedProviderScopeOfT().as(super.widget);
      }
      reassemble() {
        super.reassemble();
        let value = this[S$._delegateState].hasValue ? this[S$._delegateState].value : null;
        if (reassemble_handler.ReassembleHandler.is(value)) {
          value.reassemble();
        }
      }
      updateDependencies(dependent, aspect) {
        let t60;
        let dependencies = this.getDependencies(dependent);
        if (dependencies != null && !__t$_DependencyOfT().is(dependencies)) {
          return;
        }
        if (__t$TTobool().is(aspect)) {
          let selectorDependency = __t$_DependencyOfT().as((t60 = dependencies, t60 == null ? new (__t$_DependencyOfT()).new() : t60));
          if (selectorDependency.shouldClearSelectors) {
            selectorDependency.shouldClearSelectors = false;
            __t$ListOfTTobool().as(selectorDependency.selectors)[S$.$clear]();
          }
          if (selectorDependency.shouldClearMutationScheduled === false) {
            selectorDependency.shouldClearMutationScheduled = true;
            T$.FutureOfNull().microtask(dart.fn(() => {
              let t60;
              t60 = selectorDependency;
              (() => {
                t60.shouldClearMutationScheduled = false;
                t60.shouldClearSelectors = true;
                return t60;
              })();
            }, T$.VoidToNull()));
          }
          __t$ListOfTTobool().as(selectorDependency.selectors)[S$.$add](aspect);
          this.setDependencies(dependent, selectorDependency);
        } else {
          this.setDependencies(dependent, C[10] || CT.C10);
        }
      }
      notifyDependent(oldWidget, dependent) {
        framework.InheritedWidget.as(oldWidget);
        let dependencies = this.getDependencies(dependent);
        {
          provider$.ProviderBinding.debugInstance.providerDidChange(this[S$._debugId]);
        }
        let shouldNotify = false;
        if (dependencies != null) {
          if (__t$_DependencyOfT().is(dependencies)) {
            if (dependent.dirty) {
              return;
            }
            for (let updateShouldNotify of __t$ListOfTTobool().as(dependencies.selectors)) {
              try {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = true;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 480, 20, "() {\n              _debugIsSelecting = true;\n              return true;\n            }()");
                shouldNotify = updateShouldNotify(this.value);
              } finally {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = false;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 486, 20, "() {\n              _debugIsSelecting = false;\n              return true;\n            }()");
              }
              if (shouldNotify) {
                break;
              }
            }
          } else {
            shouldNotify = true;
          }
        }
        if (shouldNotify) {
          dependent.didChangeDependencies();
        }
      }
      update(newWidget) {
        __t$_InheritedProviderScopeOfT().as(newWidget);
        if (!dart.fn(() => {
          if (!this.widget.owner[S$._delegate$3][S$.$runtimeType]._equals(newWidget.owner[S$._delegate$3][S$.$runtimeType])) {
            dart.throw(new core.StateError.new("Rebuilt " + dart.str(this.widget) + " using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 507, 12, "() {\n      if (widget.owner._delegate.runtimeType !=\n          newWidget.owner._delegate.runtimeType) {\n        throw StateError('''\nRebuilt $widget using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n''');\n      }\n      return true;\n    }()");
        this[S$._isBuildFromExternalSources] = true;
        this[S$._updatedShouldNotify] = this[S$._delegateState].willUpdateDelegate(newWidget.owner[S$._delegate$3]);
        super.update(newWidget);
        this[S$._updatedShouldNotify] = false;
      }
      updated(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        super.updated(oldWidget);
        if (this[S$._updatedShouldNotify]) {
          this.notifyClients(oldWidget);
        }
      }
      didChangeDependencies() {
        this[S$._isBuildFromExternalSources] = true;
        super.didChangeDependencies();
      }
      build() {
        if (this.widget.owner[S$._lazy] === false) {
          this.value;
        }
        this[S$._delegateState].build({isBuildFromExternalSources: this[S$._isBuildFromExternalSources]});
        this[S$._isBuildFromExternalSources] = false;
        if (this[S$._shouldNotifyDependents]) {
          this[S$._shouldNotifyDependents] = false;
          this.notifyClients(this.widget);
        }
        return super.build();
      }
      unmount() {
        let t61;
        this[S$._delegateState].dispose();
        {
          provider$.ProviderBinding.debugInstance.providerDetails = (t61 = (() => {
            let t60 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            return t60;
          })(), (() => {
            t61[S$.$remove](this[S$._debugId]);
            return t61;
          })());
        }
        super.unmount();
      }
      get hasValue() {
        return this[S$._delegateState].hasValue;
      }
      markNeedsNotifyDependents() {
        if (!this[S$._isNotifyDependentsEnabled]) {
          return;
        }
        this.markNeedsBuild();
        this[S$._shouldNotifyDependents] = true;
      }
      [S$._debugSetInheritedLock](value) {
        if (!dart.fn(() => {
          this[S$._debugInheritLocked] = value;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 582, 12, "() {\n      _debugInheritLocked = value;\n      return true;\n    }()");
        return true;
      }
      get value() {
        return this[S$._delegateState].value;
      }
      dependOnInheritedElement(ancestor, opts) {
        let aspect = opts && 'aspect' in opts ? opts.aspect : null;
        if (!dart.fn(() => {
          if (this[S$._debugInheritLocked]) {
            dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Tried to listen to an InheritedWidget " + "in a life-cycle that will never be called again."), new assertions.ErrorDescription.new("This error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n")])));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 597, 12, "() {\n      if (_debugInheritLocked) {\n        throw FlutterError.fromParts(\n          <DiagnosticsNode>[\n            ErrorSummary(\n              'Tried to listen to an InheritedWidget '\n              'in a life-cycle that will never be called again.',\n            ),\n            ErrorDescription('''\nThis error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n'''),\n          ],\n        );\n      }\n      return true;\n    }()");
        return super.dependOnInheritedElement(ancestor, {aspect: aspect});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[S$._delegateState].debugFillProperties(properties);
      }
    }
    (_InheritedProviderScopeElement.new = function(widget) {
      this[S$._shouldNotifyDependents] = false;
      this[S$._debugInheritLocked] = false;
      this[S$._isNotifyDependentsEnabled] = true;
      this[S$._updatedShouldNotify] = false;
      this[S$._isBuildFromExternalSources] = false;
      this[S$.___InheritedProviderScopeElement__delegateState] = null;
      this[S$.___InheritedProviderScopeElement__debugId] = null;
      _InheritedProviderScopeElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderScopeElement.prototype;
    dart.addTypeTests(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement.prototype[_is__InheritedProviderScopeElement_default] = true;
    dart.addTypeCaches(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement[dart.implements] = () => [provider$.InheritedContext$(T)];
    dart.setMethodSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getMethods(_InheritedProviderScopeElement.__proto__),
      mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic]),
      markNeedsNotifyDependents: dart.fnType(dart.void, []),
      [S$._debugSetInheritedLock]: dart.fnType(core.bool, [core.bool])
    }));
    dart.setGetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getGetters(_InheritedProviderScopeElement.__proto__),
      [S$._delegateState]: provider$._DelegateState$(T, provider$._Delegate$(T)),
      [S$._debugId]: core.String,
      widget: provider$._InheritedProviderScope$(T),
      hasValue: core.bool,
      value: T
    }));
    dart.setSetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getSetters(_InheritedProviderScopeElement.__proto__),
      [S$._debugId]: core.String
    }));
    dart.setLibraryUri(_InheritedProviderScopeElement, I[27]);
    dart.setFieldSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getFields(_InheritedProviderScopeElement.__proto__),
      [S$._shouldNotifyDependents]: dart.fieldType(core.bool),
      [S$._debugInheritLocked]: dart.fieldType(core.bool),
      [S$._isNotifyDependentsEnabled]: dart.fieldType(core.bool),
      [S$._updatedShouldNotify]: dart.fieldType(core.bool),
      [S$._isBuildFromExternalSources]: dart.fieldType(core.bool),
      [S$.___InheritedProviderScopeElement__delegateState]: dart.fieldType(dart.nullable(provider$._DelegateState$(T, provider$._Delegate$(T)))),
      [S$.___InheritedProviderScopeElement__debugId]: dart.fieldType(dart.nullable(core.String))
    }));
    dart.setStaticFieldSignature(_InheritedProviderScopeElement, () => ['_nextProviderId']);
    return _InheritedProviderScopeElement;
  });
  provider$._InheritedProviderScopeElement = provider$._InheritedProviderScopeElement$();
  dart.defineLazy(provider$._InheritedProviderScopeElement, {
    /*provider$._InheritedProviderScopeElement._nextProviderId*/get _nextProviderId() {
      return 0;
    },
    set _nextProviderId(value) {}
  }, false);
  dart.addTypeTests(provider$._InheritedProviderScopeElement, _is__InheritedProviderScopeElement_default);
  const _is__CreateInheritedProvider_default = Symbol('_is__CreateInheritedProvider_default');
  provider$._CreateInheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderStateOfT = () => (__t$_CreateInheritedProviderStateOfT = dart.constFn(provider$._CreateInheritedProviderState$(T)))();
    class _CreateInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        return new (provider$._CreateInheritedProvider$(T)).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      }
      createState() {
        return new (__t$_CreateInheritedProviderStateOfT()).new();
      }
    }
    (_CreateInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      this.create = create;
      this.update = update;
      this.debugCheckInvalidValueType = debugCheckInvalidValueType;
      this.startListening = startListening;
      this.dispose = dispose;
      if (!(create != null || update != null)) dart.assertFailed(null, I[25], 674, 16, "create != null || update != null");
      this[S$._updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _CreateInheritedProvider.prototype;
    dart.addTypeTests(_CreateInheritedProvider);
    _CreateInheritedProvider.prototype[_is__CreateInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateInheritedProvider);
    dart.setMethodSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_CreateInheritedProvider, I[27]);
    dart.setFieldSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext]))),
      update: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext, dart.nullable(T)]))),
      [S$._updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      debugCheckInvalidValueType: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateInheritedProvider;
  });
  provider$._CreateInheritedProvider = provider$._CreateInheritedProvider$();
  dart.addTypeTests(provider$._CreateInheritedProvider, _is__CreateInheritedProvider_default);
  const _is__CreateInheritedProviderState_default = Symbol('_is__CreateInheritedProviderState_default');
  provider$._CreateInheritedProviderState$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    var __t$TToNvoid = () => (__t$TToNvoid = dart.constFn(dart.nullable(__t$TTovoid())))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$BuildContextAndTNToT = () => (__t$BuildContextAndTNToT = dart.constFn(dart.fnType(T, [framework.BuildContext, __t$TN()])))();
    var __t$BuildContextAndTNToNT = () => (__t$BuildContextAndTNToNT = dart.constFn(dart.nullable(__t$BuildContextAndTNToT())))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _CreateInheritedProviderState extends provider$._DelegateState$(T, provider$._CreateInheritedProvider$(T)) {
      get value() {
        let t61, t62;
        if (this[S$._didInitValue] && this[S$._initError] != null) {
          dart.throw(new core.StateError.new("Tried to read a provider that threw during the creation of its value.\n" + "The exception occurred during the creation of type " + dart.str(dart.wrapType(T)) + ".\n\n" + dart.str((t61 = this[S$._initError], t61 == null ? null : dart.toString(t61)))));
        }
        let _debugPreviousIsInInheritedProviderCreate = null;
        let _debugPreviousIsInInheritedProviderUpdate = null;
        if (!dart.fn(() => {
          _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
          _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 718, 12, "() {\n      _debugPreviousIsInInheritedProviderCreate =\n          debugIsInInheritedProviderCreate;\n      _debugPreviousIsInInheritedProviderUpdate =\n          debugIsInInheritedProviderUpdate;\n      return true;\n    }()");
        if (!this[S$._didInitValue]) {
          this[S$._didInitValue] = true;
          if (this.delegate.create != null) {
            if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[25], 729, 16, "debugSetInheritedLock(true)");
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = true;
                provider$.debugIsInInheritedProviderUpdate = false;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 731, 18, "() {\n            debugIsInInheritedProviderCreate = true;\n            debugIsInInheritedProviderUpdate = false;\n            return true;\n          }()");
              this[S$._value] = dart.nullCheck(this.delegate.create)(dart.nullCheck(this.element));
            } catch (e$) {
              let e = dart.getThrown(e$);
              let stackTrace = dart.stackTrace(e$);
              if (core.Object.is(e)) {
                this[S$._initError] = new assertions.FlutterErrorDetails.new({library: "provider", exception: e, stack: stackTrace});
                dart.rethrow(e$);
              } else
                throw e$;
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 745, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!this.debugSetInheritedLock(false)) dart.assertFailed(null, I[25], 753, 16, "debugSetInheritedLock(false)");
            if (!dart.fn(() => {
              let t62;
              t62 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t62 == null ? null : t62(T.as(this[S$._value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 755, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
          if (__t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = false;
                provider$.debugIsInInheritedProviderUpdate = true;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 762, 18, "() {\n            debugIsInInheritedProviderCreate = false;\n            debugIsInInheritedProviderUpdate = true;\n            return true;\n          }()");
              this[S$._value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), this[S$._value]);
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 769, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!dart.fn(() => {
              let t62;
              t62 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t62 == null ? null : t62(T.as(this[S$._value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 778, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
        }
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = false;
        this[S$._removeListener] == null ? this[S$._removeListener] = (t62 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t62 == null ? null : t62(dart.nullCheck(this.element), T.as(this[S$._value]))) : null;
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[S$._removeListener] != null)) dart.assertFailed(null, I[25], 788, 12, "delegate.startListening == null || _removeListener != null");
        return T.as(this[S$._value]);
      }
      dispose() {
        let t62, t62$;
        super.dispose();
        t62 = this[S$._removeListener];
        t62 == null ? null : t62();
        if (this[S$._didInitValue]) {
          t62$ = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t62$ == null ? null : t62$(dart.nullCheck(this.element), T.as(this[S$._value]));
        }
      }
      debugFillProperties(properties) {
        let t62;
        super.debugFillProperties(properties);
        if (this[S$._didInitValue]) {
          t62 = properties;
          (() => {
            t62.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
            t62.add(new diagnostics.FlagProperty.new("", {value: this[S$._removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
            return t62;
          })();
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      build(opts) {
        let t63, t62;
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
        let shouldNotify = false;
        if (isBuildFromExternalSources && this[S$._didInitValue] && __t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
          let previousValue = this[S$._value];
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 839, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = false;
              provider$.debugIsInInheritedProviderUpdate = true;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 847, 16, "() {\n          debugIsInInheritedProviderCreate = false;\n          debugIsInInheritedProviderUpdate = true;\n          return true;\n        }()");
            this[S$._value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), T.as(this[S$._value]));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 854, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          if (__t$TAndTToNbool().as(this.delegate[S$._updateShouldNotify]) != null) {
            shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[S$._updateShouldNotify]))(T.as(previousValue), T.as(this[S$._value]));
          } else {
            shouldNotify = !dart.equals(this[S$._value], previousValue);
          }
          if (shouldNotify) {
            if (!dart.fn(() => {
              let t62;
              t62 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t62 == null ? null : t62(T.as(this[S$._value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 873, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
            if (this[S$._removeListener] != null) {
              dart.nullCheck(this[S$._removeListener])();
              this[S$._removeListener] = null;
            }
            t62 = this[S$._previousWidget];
            t62 == null ? null : (t63 = __t$BuildContextAndTToNvoid().as(t62.dispose), t63 == null ? null : t63(dart.nullCheck(this.element), T.as(previousValue)));
          }
        }
        if (shouldNotify) {
          dart.nullCheck(this.element)[S$._shouldNotifyDependents] = true;
        }
        this[S$._previousWidget] = this.delegate;
        return super.build({isBuildFromExternalSources: isBuildFromExternalSources});
      }
      get hasValue() {
        return this[S$._didInitValue];
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._CreateInheritedProviderState$(T)).new();
      }
    }
    (_CreateInheritedProviderState.new = function() {
      this[S$._removeListener] = null;
      this[S$._didInitValue] = false;
      this[S$._value] = null;
      this[S$._previousWidget] = null;
      this[S$._initError] = null;
      _CreateInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _CreateInheritedProviderState.prototype;
    dart.addTypeTests(_CreateInheritedProviderState);
    _CreateInheritedProviderState.prototype[_is__CreateInheritedProviderState_default] = true;
    dart.addTypeCaches(_CreateInheritedProviderState);
    dart.setGetterSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getGetters(_CreateInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_CreateInheritedProviderState, I[27]);
    dart.setFieldSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getFields(_CreateInheritedProviderState.__proto__),
      [S$._removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [S$._didInitValue]: dart.fieldType(core.bool),
      [S$._value]: dart.fieldType(dart.nullable(T)),
      [S$._previousWidget]: dart.fieldType(dart.nullable(provider$._CreateInheritedProvider$(T))),
      [S$._initError]: dart.fieldType(dart.nullable(assertions.FlutterErrorDetails))
    }));
    return _CreateInheritedProviderState;
  });
  provider$._CreateInheritedProviderState = provider$._CreateInheritedProviderState$();
  dart.addTypeTests(provider$._CreateInheritedProviderState, _is__CreateInheritedProviderState_default);
  const _is__ValueInheritedProvider_default = Symbol('_is__ValueInheritedProvider_default');
  provider$._ValueInheritedProvider$ = dart.generic(T => {
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$_ValueInheritedProviderStateOfT = () => (__t$_ValueInheritedProviderStateOfT = dart.constFn(provider$._ValueInheritedProviderState$(T)))();
    class _ValueInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._ValueInheritedProvider$(T)).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      createState() {
        return new (__t$_ValueInheritedProviderStateOfT()).new();
      }
    }
    (_ValueInheritedProvider.new = function(opts) {
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.value = value;
      this.startListening = startListening;
      this[S$._updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _ValueInheritedProvider.prototype;
    dart.addTypeTests(_ValueInheritedProvider);
    _ValueInheritedProvider.prototype[_is__ValueInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueInheritedProvider);
    dart.setMethodSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_ValueInheritedProvider, I[27]);
    dart.setFieldSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueInheritedProvider.__proto__),
      value: dart.finalFieldType(T),
      [S$._updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T])))
    }));
    return _ValueInheritedProvider;
  });
  provider$._ValueInheritedProvider = provider$._ValueInheritedProvider$();
  dart.addTypeTests(provider$._ValueInheritedProvider, _is__ValueInheritedProvider_default);
  const _is__ValueInheritedProviderState_default = Symbol('_is__ValueInheritedProviderState_default');
  provider$._ValueInheritedProviderState$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _ValueInheritedProviderState extends provider$._DelegateState$(T, provider$._ValueInheritedProvider$(T)) {
      get value() {
        let t62;
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = false;
        this[S$._removeListener] == null ? this[S$._removeListener] = (t62 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t62 == null ? null : t62(dart.nullCheck(this.element), this.delegate.value)) : null;
        dart.nullCheck(this.element)[S$._isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[S$._removeListener] != null)) dart.assertFailed(null, I[25], 928, 12, "delegate.startListening == null || _removeListener != null");
        return this.delegate.value;
      }
      willUpdateDelegate(newDelegate) {
        __t$_ValueInheritedProviderOfT().as(newDelegate);
        let shouldNotify = null;
        if (__t$TAndTToNbool().as(this.delegate[S$._updateShouldNotify]) != null) {
          shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[S$._updateShouldNotify]))(this.delegate.value, newDelegate.value);
        } else {
          shouldNotify = !dart.equals(newDelegate.value, this.delegate.value);
        }
        if (shouldNotify && this[S$._removeListener] != null) {
          dart.nullCheck(this[S$._removeListener])();
          this[S$._removeListener] = null;
        }
        return shouldNotify;
      }
      dispose() {
        let t62;
        super.dispose();
        t62 = this[S$._removeListener];
        t62 == null ? null : t62();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new diagnostics.FlagProperty.new("", {value: this[S$._removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
      }
      get hasValue() {
        return true;
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._ValueInheritedProviderState$(T)).new();
      }
    }
    (_ValueInheritedProviderState.new = function() {
      this[S$._removeListener] = null;
      _ValueInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueInheritedProviderState.prototype;
    dart.addTypeTests(_ValueInheritedProviderState);
    _ValueInheritedProviderState.prototype[_is__ValueInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueInheritedProviderState);
    dart.setGetterSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_ValueInheritedProviderState, I[27]);
    dart.setFieldSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getFields(_ValueInheritedProviderState.__proto__),
      [S$._removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [])))
    }));
    return _ValueInheritedProviderState;
  });
  provider$._ValueInheritedProviderState = provider$._ValueInheritedProviderState$();
  dart.addTypeTests(provider$._ValueInheritedProviderState, _is__ValueInheritedProviderState_default);
  provider$.debugPostEvent = function debugPostEvent(eventKind, event = C[72] || CT.C72) {
    if (provider$._debugPostEventOverride != null) {
      dart.nullCheck(provider$._debugPostEventOverride)(eventKind, event);
    } else {
      developer.postEvent(eventKind, event);
    }
  };
  provider$.spyPostEvent = function spyPostEvent() {
    if (!(provider$._debugPostEventOverride == null)) dart.assertFailed("postEvent is already spied", I[35], 22, 10, "_debugPostEventOverride == null");
    let spy = new provider$.PostEventSpy.__();
    provider$._debugPostEventOverride = dart.bind(spy, S$._postEvent);
    return spy;
  };
  provider$['SelectContext|select'] = function SelectContext$124select(T, R, $this, selector) {
    let t63;
    if (!!sliver.SliverWithKeepAliveWidget.is($this.widget)) dart.assertFailed("    Tried to use context.select inside a SliverList/SliderGridView.\n\n    This is likely a mistake, as instead of rebuilding only the item that cares\n    about the selected value, this would rebuild the entire list/grid.\n\n    To fix, add a `Builder` or extract the content of `itemBuilder` in a separate widget:\n\n    ```dart\n    ListView.builder(\n      itemBuilder: (context, index) {\n        return Builder(builder: (context) {\n          final todo = context.select((TodoList list) => list[index]);\n          return Text(todo.name);\n        });\n      },\n    );\n    ```\n    ", I[25], 247, 12, "widget is! SliverWithKeepAliveWidget");
    if (!(layout_builder.LayoutBuilder.is($this.widget) || $this.debugDoingBuild)) dart.assertFailed("Tried to use `context.select` outside of the `build` method of a widget.\n\nAny usage other than inside the `build` method of a widget are not supported.\n", I[25], 266, 12, "widget is LayoutBuilder || debugDoingBuild");
    let inheritedElement = provider$.Provider._inheritedElementOf(T, $this);
    try {
      let value = (t63 = inheritedElement, t63 == null ? null : t63.value);
      if (!T.is(value)) {
        dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[S$.$runtimeType]));
      }
      if (!dart.fn(() => {
        provider$._debugIsSelecting = true;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 279, 14, "() {\n        _debugIsSelecting = true;\n        return true;\n      }()");
      let selected = selector(value);
      if (inheritedElement != null) {
        $this.dependOnInheritedElement(inheritedElement, {aspect: dart.fn(newValue => {
            if (!T.is(newValue)) {
              dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[S$.$runtimeType]));
            }
            return !(C[73] || CT.C73).equals(selector(newValue), selected);
          }, dart.fnType(core.bool, [dart.nullable(T)]))});
      } else {
        $this.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
      }
      return selected;
    } finally {
      if (!dart.fn(() => {
        provider$._debugIsSelecting = false;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[25], 304, 14, "() {\n        _debugIsSelecting = false;\n        return true;\n      }()");
    }
  };
  provider$['SelectContext|get#select'] = function SelectContext$124get$35select($this) {
    return dart.fn((T, R, selector) => provider$['SelectContext|select'](T, R, $this, selector), T$.FnToR());
  };
  provider$['ReadContext|read'] = function ReadContext$124read(T, $this) {
    return provider$.Provider.of(T, $this, {listen: false});
  };
  provider$['ReadContext|get#read'] = function ReadContext$124get$35read($this) {
    return dart.fn(T => provider$['ReadContext|read'](T, $this), T$.VoidToT());
  };
  provider$['WatchContext|watch'] = function WatchContext$124watch(T, $this) {
    return provider$.Provider.of(T, $this);
  };
  provider$['WatchContext|get#watch'] = function WatchContext$124get$35watch($this) {
    return dart.fn(T => provider$['WatchContext|watch'](T, $this), T$.VoidToT());
  };
  dart.defineLazy(provider$, {
    /*provider$._isSoundMode*/get _isSoundMode() {
      return !T$.ListOfint().is(T$.JSArrayOfintN().of([]));
    },
    /*provider$._debugPostEventOverride*/get _debugPostEventOverride() {
      return null;
    },
    set _debugPostEventOverride(value) {},
    /*provider$._debugIsSelecting*/get _debugIsSelecting() {
      return false;
    },
    set _debugIsSelecting(value) {},
    /*provider$.debugIsInInheritedProviderUpdate*/get debugIsInInheritedProviderUpdate() {
      return false;
    },
    set debugIsInInheritedProviderUpdate(value) {},
    /*provider$.debugIsInInheritedProviderCreate*/get debugIsInInheritedProviderCreate() {
      return false;
    },
    set debugIsInInheritedProviderCreate(value) {}
  }, false);
  const _is_ProxyProvider0_default = Symbol('_is_ProxyProvider0_default');
  proxy_provider.ProxyProvider0$ = dart.generic(R => {
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    class ProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider0$(R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider0.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: dart.fn(value => {
          let t68;
          t68 = provider$.Provider.debugCheckInvalidValueType;
          return t68 == null ? null : t68(R, value);
        }, __t$RTovoid()), child: child});
      ;
    }).prototype = ProxyProvider0.prototype;
    dart.addTypeTests(ProxyProvider0);
    ProxyProvider0.prototype[_is_ProxyProvider0_default] = true;
    dart.addTypeCaches(ProxyProvider0);
    dart.setLibraryUri(ProxyProvider0, I[36]);
    return ProxyProvider0;
  });
  proxy_provider.ProxyProvider0 = proxy_provider.ProxyProvider0$();
  dart.addTypeTests(proxy_provider.ProxyProvider0, _is_ProxyProvider0_default);
  const _is_ProxyProvider_default = Symbol('_is_ProxyProvider_default');
  proxy_provider.ProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider$(T, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider.prototype;
    dart.addTypeTests(ProxyProvider);
    ProxyProvider.prototype[_is_ProxyProvider_default] = true;
    dart.addTypeCaches(ProxyProvider);
    dart.setLibraryUri(ProxyProvider, I[36]);
    return ProxyProvider;
  });
  proxy_provider.ProxyProvider = proxy_provider.ProxyProvider$();
  dart.addTypeTests(proxy_provider.ProxyProvider, _is_ProxyProvider_default);
  const _is_ProxyProvider2_default = Symbol('_is_ProxyProvider2_default');
  proxy_provider.ProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider2 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider2.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider2.prototype;
    dart.addTypeTests(ProxyProvider2);
    ProxyProvider2.prototype[_is_ProxyProvider2_default] = true;
    dart.addTypeCaches(ProxyProvider2);
    dart.setLibraryUri(ProxyProvider2, I[36]);
    return ProxyProvider2;
  });
  proxy_provider.ProxyProvider2 = proxy_provider.ProxyProvider2$();
  dart.addTypeTests(proxy_provider.ProxyProvider2, _is_ProxyProvider2_default);
  const _is_ProxyProvider3_default = Symbol('_is_ProxyProvider3_default');
  proxy_provider.ProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider3 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider3.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider3.prototype;
    dart.addTypeTests(ProxyProvider3);
    ProxyProvider3.prototype[_is_ProxyProvider3_default] = true;
    dart.addTypeCaches(ProxyProvider3);
    dart.setLibraryUri(ProxyProvider3, I[36]);
    return ProxyProvider3;
  });
  proxy_provider.ProxyProvider3 = proxy_provider.ProxyProvider3$();
  dart.addTypeTests(proxy_provider.ProxyProvider3, _is_ProxyProvider3_default);
  const _is_ProxyProvider4_default = Symbol('_is_ProxyProvider4_default');
  proxy_provider.ProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider4 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider4.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider4.prototype;
    dart.addTypeTests(ProxyProvider4);
    ProxyProvider4.prototype[_is_ProxyProvider4_default] = true;
    dart.addTypeCaches(ProxyProvider4);
    dart.setLibraryUri(ProxyProvider4, I[36]);
    return ProxyProvider4;
  });
  proxy_provider.ProxyProvider4 = proxy_provider.ProxyProvider4$();
  dart.addTypeTests(proxy_provider.ProxyProvider4, _is_ProxyProvider4_default);
  const _is_ProxyProvider5_default = Symbol('_is_ProxyProvider5_default');
  proxy_provider.ProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider5 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider5.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider5.prototype;
    dart.addTypeTests(ProxyProvider5);
    ProxyProvider5.prototype[_is_ProxyProvider5_default] = true;
    dart.addTypeCaches(ProxyProvider5);
    dart.setLibraryUri(ProxyProvider5, I[36]);
    return ProxyProvider5;
  });
  proxy_provider.ProxyProvider5 = proxy_provider.ProxyProvider5$();
  dart.addTypeTests(proxy_provider.ProxyProvider5, _is_ProxyProvider5_default);
  const _is_ProxyProvider6_default = Symbol('_is_ProxyProvider6_default');
  proxy_provider.ProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider6 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider6.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider6.prototype;
    dart.addTypeTests(ProxyProvider6);
    ProxyProvider6.prototype[_is_ProxyProvider6_default] = true;
    dart.addTypeCaches(ProxyProvider6);
    dart.setLibraryUri(ProxyProvider6, I[36]);
    return ProxyProvider6;
  });
  proxy_provider.ProxyProvider6 = proxy_provider.ProxyProvider6$();
  dart.addTypeTests(proxy_provider.ProxyProvider6, _is_ProxyProvider6_default);
  reassemble_handler.ReassembleHandler = class ReassembleHandler extends core.Object {};
  (reassemble_handler.ReassembleHandler.new = function() {
    ;
  }).prototype = reassemble_handler.ReassembleHandler.prototype;
  dart.addTypeTests(reassemble_handler.ReassembleHandler);
  dart.addTypeCaches(reassemble_handler.ReassembleHandler);
  dart.setLibraryUri(reassemble_handler.ReassembleHandler, I[37]);
  nested.SingleChildStatefulWidget = class SingleChildStatefulWidget extends framework.StatefulWidget {
    get [S$._child$1]() {
      return this[S$._child$2];
    }
    set [S$._child$1](value) {
      super[S$._child$1] = value;
    }
    createElement() {
      return new nested.SingleChildStatefulElement.new(this);
    }
  };
  (nested.SingleChildStatefulWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[S$._child$2] = child;
    nested.SingleChildStatefulWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatefulWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatefulWidget);
  dart.addTypeCaches(nested.SingleChildStatefulWidget);
  nested.SingleChildStatefulWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidget.__proto__),
    createElement: dart.fnType(nested.SingleChildStatefulElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidget, I[26]);
  dart.setFieldSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatefulWidget.__proto__),
    [S$._child$1]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_Selector0_default = Symbol('_is_Selector0_default');
  selector$.Selector0$ = dart.generic(T => {
    var __t$_Selector0StateOfT = () => (__t$_Selector0StateOfT = dart.constFn(selector$._Selector0State$(T)))();
    class Selector0 extends nested.SingleChildStatefulWidget {
      get builder() {
        return this[S$.builder$7];
      }
      set builder(value) {
        super.builder = value;
      }
      get selector() {
        return this[S$.selector];
      }
      set selector(value) {
        super.selector = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector0$(T)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
      createState() {
        return new (__t$_Selector0StateOfT()).new();
      }
    }
    (Selector0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$.builder$7] = builder;
      this[S$.selector] = selector;
      this[S$._shouldRebuild] = shouldRebuild;
      Selector0.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Selector0.prototype;
    dart.addTypeTests(Selector0);
    Selector0.prototype[_is_Selector0_default] = true;
    dart.addTypeCaches(Selector0);
    dart.setMethodSignature(Selector0, () => ({
      __proto__: dart.getMethods(Selector0.__proto__),
      createState: dart.fnType(selector$._Selector0State$(T), [])
    }));
    dart.setLibraryUri(Selector0, I[38]);
    dart.setFieldSignature(Selector0, () => ({
      __proto__: dart.getFields(Selector0.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)])),
      selector: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      [S$._shouldRebuild]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return Selector0;
  });
  selector$.Selector0 = selector$.Selector0$();
  dart.addTypeTests(selector$.Selector0, _is_Selector0_default);
  const _is_SingleChildState_default = Symbol('_is_SingleChildState_default');
  nested.SingleChildState$ = dart.generic(T => {
    class SingleChildState extends framework.State$(T) {
      build(context) {
        return this.buildWithChild(context, this.widget[S$._child$1]);
      }
    }
    (SingleChildState.new = function() {
      SingleChildState.__proto__.new.call(this);
      ;
    }).prototype = SingleChildState.prototype;
    dart.addTypeTests(SingleChildState);
    SingleChildState.prototype[_is_SingleChildState_default] = true;
    dart.addTypeCaches(SingleChildState);
    dart.setMethodSignature(SingleChildState, () => ({
      __proto__: dart.getMethods(SingleChildState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildState, I[26]);
    return SingleChildState;
  });
  nested.SingleChildState = nested.SingleChildState$();
  dart.addTypeTests(nested.SingleChildState, _is_SingleChildState_default);
  const _is__Selector0State_default = Symbol('_is__Selector0State_default');
  selector$._Selector0State$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    var __t$BuildContextAndTAndWidgetNToWidget = () => (__t$BuildContextAndTAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _Selector0State extends nested.SingleChildState$(selector$.Selector0$(T)) {
      get value() {
        return this[S$.value];
      }
      set value(value) {
        this[S$.value] = __t$TN().as(value);
      }
      buildWithChild(context, child) {
        let t69, t68;
        let selected = (t68 = this.widget, t69 = context, t68.selector(t69));
        let shouldInvalidateCache = !dart.equals(this.oldWidget, this.widget) || __t$TAndTToNbool().as(this.widget[S$._shouldRebuild]) != null && dart.nullCheck(__t$TAndTToNbool().as(this.widget[S$._shouldRebuild]))(T.as(this.value), selected) || __t$TAndTToNbool().as(this.widget[S$._shouldRebuild]) == null && !(C[73] || CT.C73).equals(this.value, selected);
        if (shouldInvalidateCache) {
          this.value = selected;
          this.oldWidget = this.widget;
          this.cache = new basic.Builder.new({builder: dart.fn(context => {
              let t71, t70, t69, t68;
              t68 = this.widget;
              t69 = context;
              t70 = selected;
              t71 = child;
              return __t$BuildContextAndTAndWidgetNToWidget().as(t68.builder)(t69, t70, t71);
            }, T$.BuildContextToWidget())});
        }
        return dart.nullCheck(this.cache);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      static ['_#new#tearOff'](T) {
        return new (selector$._Selector0State$(T)).new();
      }
    }
    (_Selector0State.new = function() {
      this[S$.value] = null;
      this.cache = null;
      this.oldWidget = null;
      _Selector0State.__proto__.new.call(this);
      ;
    }).prototype = _Selector0State.prototype;
    dart.addTypeTests(_Selector0State);
    _Selector0State.prototype[_is__Selector0State_default] = true;
    dart.addTypeCaches(_Selector0State);
    dart.setMethodSignature(_Selector0State, () => ({
      __proto__: dart.getMethods(_Selector0State.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(_Selector0State, I[38]);
    dart.setFieldSignature(_Selector0State, () => ({
      __proto__: dart.getFields(_Selector0State.__proto__),
      value: dart.fieldType(dart.nullable(T)),
      cache: dart.fieldType(dart.nullable(framework.Widget)),
      oldWidget: dart.fieldType(dart.nullable(framework.Widget))
    }));
    return _Selector0State;
  });
  selector$._Selector0State = selector$._Selector0State$();
  dart.addTypeTests(selector$._Selector0State, _is__Selector0State_default);
  const _is_Selector_default = Symbol('_is_Selector_default');
  selector$.Selector$ = dart.generic((A, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector$(A, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector.prototype;
    dart.addTypeTests(Selector);
    Selector.prototype[_is_Selector_default] = true;
    dart.addTypeCaches(Selector);
    dart.setLibraryUri(Selector, I[38]);
    return Selector;
  });
  selector$.Selector = selector$.Selector$();
  dart.addTypeTests(selector$.Selector, _is_Selector_default);
  const _is_Selector2_default = Symbol('_is_Selector2_default');
  selector$.Selector2$ = dart.generic((A, B, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector2 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector2$(A, B, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector2.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector2.prototype;
    dart.addTypeTests(Selector2);
    Selector2.prototype[_is_Selector2_default] = true;
    dart.addTypeCaches(Selector2);
    dart.setLibraryUri(Selector2, I[38]);
    return Selector2;
  });
  selector$.Selector2 = selector$.Selector2$();
  dart.addTypeTests(selector$.Selector2, _is_Selector2_default);
  const _is_Selector3_default = Symbol('_is_Selector3_default');
  selector$.Selector3$ = dart.generic((A, B, C, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector3 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector3$(A, B, C, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector3.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector3.prototype;
    dart.addTypeTests(Selector3);
    Selector3.prototype[_is_Selector3_default] = true;
    dart.addTypeCaches(Selector3);
    dart.setLibraryUri(Selector3, I[38]);
    return Selector3;
  });
  selector$.Selector3 = selector$.Selector3$();
  dart.addTypeTests(selector$.Selector3, _is_Selector3_default);
  const _is_Selector4_default = Symbol('_is_Selector4_default');
  selector$.Selector4$ = dart.generic((A, B, C, D, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector4 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector4$(A, B, C, D, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector4.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector4.prototype;
    dart.addTypeTests(Selector4);
    Selector4.prototype[_is_Selector4_default] = true;
    dart.addTypeCaches(Selector4);
    dart.setLibraryUri(Selector4, I[38]);
    return Selector4;
  });
  selector$.Selector4 = selector$.Selector4$();
  dart.addTypeTests(selector$.Selector4, _is_Selector4_default);
  const _is_Selector5_default = Symbol('_is_Selector5_default');
  selector$.Selector5$ = dart.generic((A, B, C, D, E, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector5 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector5$(A, B, C, D, E, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector5.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector5.prototype;
    dart.addTypeTests(Selector5);
    Selector5.prototype[_is_Selector5_default] = true;
    dart.addTypeCaches(Selector5);
    dart.setLibraryUri(Selector5, I[38]);
    return Selector5;
  });
  selector$.Selector5 = selector$.Selector5$();
  dart.addTypeTests(selector$.Selector5, _is_Selector5_default);
  const _is_Selector6_default = Symbol('_is_Selector6_default');
  selector$.Selector6$ = dart.generic((A, B, C, D, E, F, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector6 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, F, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector6$(A, B, C, D, E, F, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector6.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context), provider$.Provider.of(F, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector6.prototype;
    dart.addTypeTests(Selector6);
    Selector6.prototype[_is_Selector6_default] = true;
    dart.addTypeCaches(Selector6);
    dart.setLibraryUri(Selector6, I[38]);
    return Selector6;
  });
  selector$.Selector6 = selector$.Selector6$();
  dart.addTypeTests(selector$.Selector6, _is_Selector6_default);
  const _is_ValueListenableProvider_default = Symbol('_is_ValueListenableProvider_default');
  value_listenable_provider.ValueListenableProvider$ = dart.generic(T => {
    var __t$ValueListenableBuilderOfT = () => (__t$ValueListenableBuilderOfT = dart.constFn(value_listenable_builder.ValueListenableBuilder$(T)))();
    var __t$ProviderOfT = () => (__t$ProviderOfT = dart.constFn(provider$.Provider$(T)))();
    var __t$BuildContextAndTAndWidgetNToProviderOfT = () => (__t$BuildContextAndTAndWidgetNToProviderOfT = dart.constFn(dart.fnType(__t$ProviderOfT(), [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class ValueListenableProvider extends nested.SingleChildStatelessWidget {
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (value_listenable_provider.ValueListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, child: child});
      }
      buildWithChild(context, child) {
        return new (__t$ValueListenableBuilderOfT()).new({valueListenable: this[S$._valueListenable], builder: dart.fn((context, value, _) => new (__t$ProviderOfT()).value({value: value, updateShouldNotify: this[S$._updateShouldNotify$1], child: child}), __t$BuildContextAndTAndWidgetNToProviderOfT())});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this[S$._valueListenable].value));
      }
    }
    (ValueListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[S$._valueListenable] = value;
      this[S$._updateShouldNotify$1] = updateShouldNotify;
      ValueListenableProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = ValueListenableProvider.prototype;
    dart.addTypeTests(ValueListenableProvider);
    ValueListenableProvider.prototype[_is_ValueListenableProvider_default] = true;
    dart.addTypeCaches(ValueListenableProvider);
    dart.setMethodSignature(ValueListenableProvider, () => ({
      __proto__: dart.getMethods(ValueListenableProvider.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(ValueListenableProvider, I[39]);
    dart.setFieldSignature(ValueListenableProvider, () => ({
      __proto__: dart.getFields(ValueListenableProvider.__proto__),
      [S$._valueListenable]: dart.finalFieldType(change_notifier.ValueListenable$(T)),
      [S$._updateShouldNotify$1]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return ValueListenableProvider;
  });
  value_listenable_provider.ValueListenableProvider = value_listenable_provider.ValueListenableProvider$();
  dart.addTypeTests(value_listenable_provider.ValueListenableProvider, _is_ValueListenableProvider_default);
  user$.User = class User extends core.Object {
    get email() {
      return this[S$.email$1];
    }
    set email(value) {
      super.email = value;
    }
    get uid() {
      return this[S$.uid];
    }
    set uid(value) {
      super.uid = value;
    }
    get photoUrl() {
      return this[S$.photoUrl];
    }
    set photoUrl(value) {
      super.photoUrl = value;
    }
    get username() {
      return this[S$.username];
    }
    set username(value) {
      super.username = value;
    }
    get bio() {
      return this[S$.bio];
    }
    set bio(value) {
      super.bio = value;
    }
    get followers() {
      return this[S$.followers];
    }
    set followers(value) {
      super.followers = value;
    }
    get following() {
      return this[S$.following];
    }
    set following(value) {
      super.following = value;
    }
    static ['_#new#tearOff'](opts) {
      let username = opts && 'username' in opts ? opts.username : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let bio = opts && 'bio' in opts ? opts.bio : null;
      let followers = opts && 'followers' in opts ? opts.followers : null;
      let following = opts && 'following' in opts ? opts.following : null;
      return new user$.User.new({username: username, uid: uid, photoUrl: photoUrl, email: email, bio: bio, followers: followers, following: following});
    }
    static fromSnap(snap) {
      let snapshot = T$.MapOfString$dynamic().as(snap.data());
      return new user$.User.new({username: core.String.as(snapshot[S$.$_get]("username")), uid: core.String.as(snapshot[S$.$_get]("uid")), email: core.String.as(snapshot[S$.$_get]("email")), photoUrl: core.String.as(snapshot[S$.$_get]("photoUrl")), bio: core.String.as(snapshot[S$.$_get]("bio")), followers: core.List.as(snapshot[S$.$_get]("followers")), following: core.List.as(snapshot[S$.$_get]("following"))});
    }
    toJson() {
      return new (T$.IdentityMapOfString$dynamic()).from(["username", this.username, "uid", this.uid, "email", this.email, "photoUrl", this.photoUrl, "bio", this.bio, "followers", this.followers, "following", this.following]);
    }
  };
  (user$.User.new = function(opts) {
    let username = opts && 'username' in opts ? opts.username : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let bio = opts && 'bio' in opts ? opts.bio : null;
    let followers = opts && 'followers' in opts ? opts.followers : null;
    let following = opts && 'following' in opts ? opts.following : null;
    this[S$.username] = username;
    this[S$.uid] = uid;
    this[S$.photoUrl] = photoUrl;
    this[S$.email$1] = email;
    this[S$.bio] = bio;
    this[S$.followers] = followers;
    this[S$.following] = following;
    ;
  }).prototype = user$.User.prototype;
  dart.addTypeTests(user$.User);
  dart.addTypeCaches(user$.User);
  dart.setMethodSignature(user$.User, () => ({
    __proto__: dart.getMethods(user$.User.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setStaticMethodSignature(user$.User, () => ['fromSnap']);
  dart.setLibraryUri(user$.User, I[40]);
  dart.setFieldSignature(user$.User, () => ({
    __proto__: dart.getFields(user$.User.__proto__),
    email: dart.finalFieldType(core.String),
    uid: dart.finalFieldType(core.String),
    photoUrl: dart.finalFieldType(core.String),
    username: dart.finalFieldType(core.String),
    bio: dart.finalFieldType(core.String),
    followers: dart.finalFieldType(core.List),
    following: dart.finalFieldType(core.List)
  }));
  auth_methods.AuthMethods = class AuthMethods extends core.Object {
    getUserDetails() {
      return async.async(user$.User, (function* getUserDetails() {
        let currentUser = dart.nullCheck(this[S$._auth$1].currentUser);
        let documentSnapshot = (yield this[S$._firestore].collection("users").doc(currentUser.uid).get());
        return user$.User.fromSnap(documentSnapshot);
      }).bind(this));
    }
    signUpUser(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      let username = opts && 'username' in opts ? opts.username : null;
      let bio = opts && 'bio' in opts ? opts.bio : null;
      let file = opts && 'file' in opts ? opts.file : null;
      return async.async(core.String, (function* signUpUser() {
        let res = "Some error Occurred";
        try {
          if (email[S$.$isNotEmpty] || password[S$.$isNotEmpty] || username[S$.$isNotEmpty] || bio[S$.$isNotEmpty] || file !== null) {
            let cred = (yield this[S$._auth$1].createUserWithEmailAndPassword({email: email, password: password}));
            let photoUrl = (yield new storage_methods.StorageMethods.new().uploadImageToStorage("profilePics", file, false));
            let user = new user$.User.new({username: username, uid: dart.nullCheck(cred.user).uid, photoUrl: photoUrl, email: email, bio: bio, followers: [], following: []});
            yield this[S$._firestore].collection("users").doc(dart.nullCheck(cred.user).uid).set(user.toJson());
            res = "success";
          } else {
            res = "Please enter all the fields";
          }
        } catch (e) {
          let err = dart.getThrown(e);
          if (core.Object.is(err)) {
            return err[S$.$toString]();
          } else
            throw e;
        }
        return res;
      }).bind(this));
    }
    loginUser(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      return async.async(core.String, (function* loginUser() {
        let res = "Some error Occurred";
        try {
          if (email[S$.$isNotEmpty] || password[S$.$isNotEmpty]) {
            yield this[S$._auth$1].signInWithEmailAndPassword({email: email, password: password});
            res = "success";
          } else {
            res = "Please enter all the fields";
          }
        } catch (e) {
          let err = dart.getThrown(e);
          if (core.Object.is(err)) {
            return err[S$.$toString]();
          } else
            throw e;
        }
        return res;
      }).bind(this));
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        yield this[S$._auth$1].signOut();
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new auth_methods.AuthMethods.new();
    }
  };
  (auth_methods.AuthMethods.new = function() {
    this[S$._firestore] = cloud_firestore.FirebaseFirestore.instance;
    this[S$._auth$1] = firebase_auth.FirebaseAuth.instance;
    ;
  }).prototype = auth_methods.AuthMethods.prototype;
  dart.addTypeTests(auth_methods.AuthMethods);
  dart.addTypeCaches(auth_methods.AuthMethods);
  dart.setMethodSignature(auth_methods.AuthMethods, () => ({
    __proto__: dart.getMethods(auth_methods.AuthMethods.__proto__),
    getUserDetails: dart.fnType(async.Future$(user$.User), []),
    signUpUser: dart.fnType(async.Future$(core.String), [], {}, {bio: core.String, email: core.String, file: typed_data.Uint8List, password: core.String, username: core.String}),
    loginUser: dart.fnType(async.Future$(core.String), [], {}, {email: core.String, password: core.String}),
    signOut: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setLibraryUri(auth_methods.AuthMethods, I[41]);
  dart.setFieldSignature(auth_methods.AuthMethods, () => ({
    __proto__: dart.getFields(auth_methods.AuthMethods.__proto__),
    [S$._firestore]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$._auth$1]: dart.finalFieldType(firebase_auth.FirebaseAuth)
  }));
  dart.defineLazy(colors$0, {
    /*colors$0.mobileBackgroundColor*/get mobileBackgroundColor() {
      return C[20] || CT.C20;
    },
    /*colors$0.webBackgroundColor*/get webBackgroundColor() {
      return C[74] || CT.C74;
    },
    /*colors$0.mobileSearchColor*/get mobileSearchColor() {
      return C[75] || CT.C75;
    },
    /*colors$0.blueColor*/get blueColor() {
      return C[76] || CT.C76;
    },
    /*colors$0.primaryColor*/get primaryColor() {
      return C[45] || CT.C45;
    },
    /*colors$0.secondaryColor*/get secondaryColor() {
      return C[77] || CT.C77;
    }
  }, false);
  dart.defineLazy(global_variable, {
    /*global_variable.webScreenSize*/get webScreenSize() {
      return 600;
    },
    /*global_variable.homeScreenItems*/get homeScreenItems() {
      return T$.JSArrayOfWidget().of([C[91] || CT.C91, C[92] || CT.C92, C[93] || CT.C93, C[94] || CT.C94, new profile_screen.ProfileScreen.new({uid: dart.nullCheck(firebase_auth.FirebaseAuth.instance.currentUser).uid})]);
    },
    set homeScreenItems(value) {}
  }, false);
  utils.pickImage = function pickImage(source) {
    return async.async(dart.dynamic, function* pickImage() {
      let imagePicker = new image_picker.ImagePicker.new();
      let file = (yield imagePicker.pickImage({source: source}));
      if (file != null) {
        return yield file.readAsBytes();
      }
    });
  };
  utils.showSnackBar = function showSnackBar(context, text) {
    return scaffold.ScaffoldMessenger.of(context).showSnackBar(new snack_bar.SnackBar.new({content: new text$.Text.new(text)}));
  };
  signup_screen.SignupScreen = class SignupScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new signup_screen.SignupScreen.new({key: key});
    }
    createState() {
      return new signup_screen._SignupScreenState.new();
    }
  };
  (signup_screen.SignupScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    signup_screen.SignupScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = signup_screen.SignupScreen.prototype;
  dart.addTypeTests(signup_screen.SignupScreen);
  dart.addTypeCaches(signup_screen.SignupScreen);
  dart.setMethodSignature(signup_screen.SignupScreen, () => ({
    __proto__: dart.getMethods(signup_screen.SignupScreen.__proto__),
    createState: dart.fnType(framework.State$(signup_screen.SignupScreen), [])
  }));
  dart.setLibraryUri(signup_screen.SignupScreen, I[42]);
  signup_screen._SignupScreenState = class _SignupScreenState extends framework.State$(signup_screen.SignupScreen) {
    dispose() {
      super.dispose();
      this[S$._emailController$1].dispose();
      this[S$._passwordController$1].dispose();
      this[S$._usernameController].dispose();
    }
    signUpUser() {
      return async.async(dart.void, (function* signUpUser() {
        if (this[S$._image] == null) {
          utils.showSnackBar(this.context, "Please select an image");
          return;
        }
        this.setState(dart.fn(() => {
          this[S$._isLoading$1] = true;
        }, T$.VoidTovoid()));
        let res = (yield new auth_methods.AuthMethods.new().signUpUser({email: this[S$._emailController$1].text, password: this[S$._passwordController$1].text, username: this[S$._usernameController].text, bio: this[S$._bioController].text, file: dart.nullCheck(this[S$._image])}));
        if (res === "success") {
          this.setState(dart.fn(() => {
            this[S$._isLoading$1] = false;
          }, T$.VoidTovoid()));
          if (this.context.mounted) {
            navigator.Navigator.of(this.context).pushReplacement(dart.dynamic, T$.ObjectN(), new page.MaterialPageRoute.new({builder: dart.fn(context => C[1] || CT.C1, T$.BuildContextToMobileScreenLayout())}));
          }
        } else {
          this.setState(dart.fn(() => {
            this[S$._isLoading$1] = false;
          }, T$.VoidTovoid()));
          if (this.context.mounted) {
            utils.showSnackBar(this.context, res);
          }
        }
      }).bind(this));
    }
    selectImage() {
      return async.async(dart.dynamic, (function* selectImage() {
        let im = typed_data.Uint8List.as(yield utils.pickImage(image_source.ImageSource.gallery));
        this.setState(dart.fn(() => {
          this[S$._image] = im;
        }, T$.VoidTovoid()));
      }).bind(this));
    }
    build(context) {
      return new scaffold.Scaffold.new({resizeToAvoidBottomInset: false, body: new safe_area.SafeArea.new({child: new container.Container.new({padding: C[15] || CT.C15, width: 1 / 0, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.center, children: T$.JSArrayOfWidget().of([new basic.Flexible.new({flex: 2, child: new container.Container.new()}), new container.Container.new({alignment: alignment.Alignment.center, padding: C[16] || CT.C16, child: C[17] || CT.C17}), C[95] || CT.C95, new basic.Stack.new({children: T$.JSArrayOfWidget().of([this[S$._image] != null ? new circle_avatar.CircleAvatar.new({radius: 50, backgroundImage: new image_provider.MemoryImage.new(dart.nullCheck(this[S$._image]))}) : C[96] || CT.C96, new basic.Positioned.new({bottom: -10, left: 65, child: new icon_button.IconButton.new({iconSize: 28, onPressed: dart.bind(this, 'selectImage'), icon: C[98] || CT.C98})})])}), C[101] || CT.C101, new container.Container.new({padding: C[16] || CT.C16, child: new text_field.TextField.new({controller: this[S$._usernameController], decoration: C[102] || CT.C102})}), new container.Container.new({padding: C[16] || CT.C16, child: new text_field.TextField.new({controller: this[S$._emailController$1], decoration: C[103] || CT.C103})}), new container.Container.new({padding: C[16] || CT.C16, child: new text_field.TextField.new({controller: this[S$._passwordController$1], decoration: C[104] || CT.C104})}), new container.Container.new({padding: C[16] || CT.C16, child: new text_field.TextField.new({controller: this[S$._bioController], decoration: C[105] || CT.C105})}), C[101] || CT.C101, new container.Container.new({height: 70, width: 1 / 0, padding: C[16] || CT.C16, child: new elevated_button.ElevatedButton.new({onPressed: this[S$._isLoading$1] ? null : dart.bind(this, 'signUpUser'), style: elevated_button.ElevatedButton.styleFrom({shape: new rounded_rectangle_border.RoundedRectangleBorder.new({borderRadius: new border_radius.BorderRadius.circular(4)}), backgroundColor: colors.Colors.blue, foregroundColor: colors.Colors.white}), child: !this[S$._isLoading$1] ? C[106] || CT.C106 : C[44] || CT.C44})}), C[107] || CT.C107, new basic.Flexible.new({flex: 2, child: new container.Container.new()}), new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new container.Container.new({padding: C[14] || CT.C14, child: C[108] || CT.C108}), new gesture_detector.GestureDetector.new({onTap: dart.fn(() => navigator.Navigator.of(context).push(dart.dynamic, new page.MaterialPageRoute.new({builder: dart.fn(context => C[6] || CT.C6, T$.BuildContextToLoginScreen())})), T$.VoidTovoid()), child: new container.Container.new({padding: C[14] || CT.C14, child: C[109] || CT.C109})})])})])})})})});
    }
    static ['_#new#tearOff']() {
      return new signup_screen._SignupScreenState.new();
    }
  };
  (signup_screen._SignupScreenState.new = function() {
    this[S$._usernameController] = new editable_text.TextEditingController.new();
    this[S$._emailController$1] = new editable_text.TextEditingController.new();
    this[S$._passwordController$1] = new editable_text.TextEditingController.new();
    this[S$._bioController] = new editable_text.TextEditingController.new();
    this[S$._isLoading$1] = false;
    this[S$._image] = null;
    signup_screen._SignupScreenState.__proto__.new.call(this);
    ;
  }).prototype = signup_screen._SignupScreenState.prototype;
  dart.addTypeTests(signup_screen._SignupScreenState);
  dart.addTypeCaches(signup_screen._SignupScreenState);
  dart.setMethodSignature(signup_screen._SignupScreenState, () => ({
    __proto__: dart.getMethods(signup_screen._SignupScreenState.__proto__),
    signUpUser: dart.fnType(dart.void, []),
    selectImage: dart.fnType(dart.dynamic, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(signup_screen._SignupScreenState, I[42]);
  dart.setFieldSignature(signup_screen._SignupScreenState, () => ({
    __proto__: dart.getFields(signup_screen._SignupScreenState.__proto__),
    [S$._usernameController]: dart.finalFieldType(editable_text.TextEditingController),
    [S$._emailController$1]: dart.finalFieldType(editable_text.TextEditingController),
    [S$._passwordController$1]: dart.finalFieldType(editable_text.TextEditingController),
    [S$._bioController]: dart.finalFieldType(editable_text.TextEditingController),
    [S$._isLoading$1]: dart.fieldType(core.bool),
    [S$._image]: dart.fieldType(dart.nullable(typed_data.Uint8List))
  }));
  cloud_firestore_platform_interface.isValidCollectionPath = function isValidCollectionPath(collectionPath) {
    return new pointer.Pointer.new(collectionPath).isCollection();
  };
  cloud_firestore_platform_interface.isValidDocumentPath = function isValidDocumentPath(documentPath) {
    return new pointer.Pointer.new(documentPath).isDocument();
  };
  internals.convertWebExceptions = function convertWebExceptions(R, cb) {
    return _flutterfire_internals.guardWebExceptions(R, cb, {plugin: "cloud_firestore", codeParser: dart.fn(code => code[S$.$replaceFirst]("firestore/", ""), T$.StringToString())});
  };
  const _is_LoadBundleTaskPlatform_default = Symbol('_is_LoadBundleTaskPlatform_default');
  platform_interface_load_bundle_task.LoadBundleTaskPlatform$ = dart.generic(T => {
    class LoadBundleTaskPlatform extends plugin_platform_interface.PlatformInterface {
      static verify(instance) {
        plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_load_bundle_task.LoadBundleTaskPlatform._token);
      }
    }
    (LoadBundleTaskPlatform.new = function() {
      LoadBundleTaskPlatform.__proto__.new.call(this, {token: platform_interface_load_bundle_task.LoadBundleTaskPlatform._token});
      ;
    }).prototype = LoadBundleTaskPlatform.prototype;
    dart.addTypeTests(LoadBundleTaskPlatform);
    LoadBundleTaskPlatform.prototype[_is_LoadBundleTaskPlatform_default] = true;
    dart.addTypeCaches(LoadBundleTaskPlatform);
    dart.setStaticMethodSignature(LoadBundleTaskPlatform, () => ['verify']);
    dart.setLibraryUri(LoadBundleTaskPlatform, I[43]);
    dart.setStaticFieldSignature(LoadBundleTaskPlatform, () => ['_token']);
    return LoadBundleTaskPlatform;
  });
  platform_interface_load_bundle_task.LoadBundleTaskPlatform = platform_interface_load_bundle_task.LoadBundleTaskPlatform$();
  dart.defineLazy(platform_interface_load_bundle_task.LoadBundleTaskPlatform, {
    /*platform_interface_load_bundle_task.LoadBundleTaskPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  dart.addTypeTests(platform_interface_load_bundle_task.LoadBundleTaskPlatform, _is_LoadBundleTaskPlatform_default);
  load_bundle_task_web.LoadBundleTaskWeb = class LoadBundleTaskWeb extends platform_interface_load_bundle_task.LoadBundleTaskPlatform {
    static ['_#new#tearOff'](task) {
      return new load_bundle_task_web.LoadBundleTaskWeb.new(task);
    }
    get stream() {
      let t70;
      t70 = this[S$.__LoadBundleTaskWeb_stream];
      return t70 == null ? dart.throw(new _internal.LateError.fieldNI("stream")) : t70;
    }
    set stream(stream$35param) {
      if (this[S$.__LoadBundleTaskWeb_stream] == null)
        this[S$.__LoadBundleTaskWeb_stream] = stream$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("stream"));
    }
  };
  (load_bundle_task_web.LoadBundleTaskWeb.new = function(task) {
    this[S$.__LoadBundleTaskWeb_stream] = null;
    load_bundle_task_web.LoadBundleTaskWeb.__proto__.new.call(this);
    this.stream = task.stream.asBroadcastStream({onListen: dart.fn(sub => sub.resume(), T$.StreamSubscriptionOfLoadBundleTaskProgressTovoid()), onCancel: dart.fn(sub => sub.pause(), T$.StreamSubscriptionOfLoadBundleTaskProgressTovoid())}).map(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, dart.fn(snapshot => {
      let data = new (T$.IdentityMapOfString$dynamic()).from(["bytesLoaded", snapshot.bytesLoaded, "documentsLoaded", snapshot.documentsLoaded, "totalBytes", snapshot.totalBytes, "totalDocuments", snapshot.totalDocuments]);
      return new platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new(snapshot.taskState, data);
    }, T$.LoadBundleTaskProgressToLoadBundleTaskSnapshotPlatform()));
  }).prototype = load_bundle_task_web.LoadBundleTaskWeb.prototype;
  dart.addTypeTests(load_bundle_task_web.LoadBundleTaskWeb);
  dart.addTypeCaches(load_bundle_task_web.LoadBundleTaskWeb);
  dart.setGetterSignature(load_bundle_task_web.LoadBundleTaskWeb, () => ({
    __proto__: dart.getGetters(load_bundle_task_web.LoadBundleTaskWeb.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setSetterSignature(load_bundle_task_web.LoadBundleTaskWeb, () => ({
    __proto__: dart.getSetters(load_bundle_task_web.LoadBundleTaskWeb.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setLibraryUri(load_bundle_task_web.LoadBundleTaskWeb, I[44]);
  dart.setFieldSignature(load_bundle_task_web.LoadBundleTaskWeb, () => ({
    __proto__: dart.getFields(load_bundle_task_web.LoadBundleTaskWeb.__proto__),
    [S$.__LoadBundleTaskWeb_stream]: dart.fieldType(dart.nullable(async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))
  }));
  web_utils.getServerTimestampBehaviorString = function getServerTimestampBehaviorString(serverTimestampBehavior) {
    switch (serverTimestampBehavior) {
      case C[53] || CT.C53:
        {
          return "none";
        }
      case C[110] || CT.C110:
        {
          return "estimate";
        }
      case C[111] || CT.C111:
        {
          return "previous";
        }
    }
  };
  web_utils.convertWebQuerySnapshot = function convertWebQuerySnapshot(firestore, webQuerySnapshot, serverTimestampBehavior) {
    return new platform_interface_query_snapshot.QuerySnapshotPlatform.new(webQuerySnapshot.docs[S$.$map](platform_interface_document_snapshot.DocumentSnapshotPlatform, dart.fn(webDocumentSnapshot => web_utils.convertWebDocumentSnapshot(firestore, dart.nullCheck(webDocumentSnapshot), serverTimestampBehavior), T$.DocumentSnapshotNToDocumentSnapshotPlatform()))[S$.$toList](), webQuerySnapshot.docChanges()[S$.$map](platform_interface_document_change.DocumentChangePlatform, dart.fn(webDocumentChange => web_utils.convertWebDocumentChange(firestore, webDocumentChange, serverTimestampBehavior), T$.DocumentChangeToDocumentChangePlatform()))[S$.$toList](), web_utils.convertWebSnapshotMetadata(webQuerySnapshot.metadata));
  };
  web_utils.convertWebDocumentSnapshot = function convertWebDocumentSnapshot(firestore, webSnapshot, serverTimestampBehavior) {
    return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(firestore, dart.nullCheck(webSnapshot.ref).path, decode_utility.DecodeUtility.decodeMapData(webSnapshot.data({serverTimestamps: web_utils.getServerTimestampBehaviorString(serverTimestampBehavior)}), firestore), new messages$46pigeon$0.PigeonSnapshotMetadata.new({hasPendingWrites: webSnapshot.metadata.hasPendingWrites, isFromCache: webSnapshot.metadata.fromCache}));
  };
  web_utils.convertWebDocumentChange = function convertWebDocumentChange(firestore, webDocumentChange, serverTimestampBehavior) {
    return new platform_interface_document_change.DocumentChangePlatform.new(web_utils.convertWebDocumentChangeType(webDocumentChange.type), dart.asInt(webDocumentChange.oldIndex), dart.asInt(webDocumentChange.newIndex), web_utils.convertWebDocumentSnapshot(firestore, dart.nullCheck(webDocumentChange.doc), serverTimestampBehavior));
  };
  web_utils.convertWebDocumentChangeType = function convertWebDocumentChangeType(changeType) {
    switch (changeType[S$.$toLowerCase]()) {
      case "added":
        {
          return messages$46pigeon$0.DocumentChangeType.added;
        }
      case "modified":
        {
          return messages$46pigeon$0.DocumentChangeType.modified;
        }
      case "removed":
        {
          return messages$46pigeon$0.DocumentChangeType.removed;
        }
      default:
        {
          dart.throw(new core.UnsupportedError.new("Unknown DocumentChangeType: " + changeType + "."));
        }
    }
  };
  web_utils.convertWebSnapshotMetadata = function convertWebSnapshotMetadata(webSnapshotMetadata) {
    return new snapshot_metadata.SnapshotMetadataPlatform.new(webSnapshotMetadata.hasPendingWrites, webSnapshotMetadata.fromCache);
  };
  web_utils.convertGetOptions = function convertGetOptions(options) {
    if (options == null) return null;
    let source = null;
    switch (options.source) {
      case C[54] || CT.C54:
        {
          source = "default";
          break;
        }
      case C[112] || CT.C112:
        {
          source = "cache";
          break;
        }
      case C[113] || CT.C113:
        {
          source = "server";
          break;
        }
      default:
        {
          source = "default";
          break;
        }
    }
    return {source: source};
  };
  web_utils.convertSetOptions = function convertSetOptions(options) {
    if (options == null) return null;
    let parsedOptions = null;
    if (options.merge != null) {
      parsedOptions = {merge: options.merge};
    } else if (options.mergeFields != null) {
      parsedOptions = {mergeFields: dart.nullCheck(options.mergeFields)[S$.$map](core.String, dart.fn(e => e.components[S$.$toList]()[S$.$join]("."), T$.FieldPathToString()))[S$.$toList]()};
    }
    return parsedOptions;
  };
  web_utils.convertFieldPath = function convertFieldPath(fieldPath) {
    return new dart.global.firebase_firestore.FieldPath(fieldPath.components[S$.$toList]()[S$.$join]("."));
  };
  dart.defineLazy(web_utils, {
    /*web_utils._kChangeTypeAdded*/get _kChangeTypeAdded() {
      return "added";
    },
    /*web_utils._kChangeTypeModified*/get _kChangeTypeModified() {
      return "modified";
    },
    /*web_utils._kChangeTypeRemoved*/get _kChangeTypeRemoved() {
      return "removed";
    }
  }, false);
  platform_interface_query.QueryPlatform = class QueryPlatform extends plugin_platform_interface.PlatformInterface {
    get firestore() {
      return this[S$.firestore];
    }
    set firestore(value) {
      super.firestore = value;
    }
    get parameters() {
      return this[S$.parameters];
    }
    set parameters(value) {
      super.parameters = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_query.QueryPlatform._token);
    }
    get isCollectionGroupQuery() {
      dart.throw(new core.UnimplementedError.new("isCollectionGroupQuery is not implemented"));
    }
    endAtDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("endAtDocument() is not implemented"));
    }
    endAt(fields) {
      dart.throw(new core.UnimplementedError.new("endAt() is not implemented"));
    }
    endBeforeDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("endBeforeDocument() is not implemented"));
    }
    endBefore(fields) {
      dart.throw(new core.UnimplementedError.new("endBefore() is not implemented"));
    }
    get(options = C[52] || CT.C52) {
      dart.throw(new core.UnimplementedError.new("get() is not implemented"));
    }
    limit(limit) {
      dart.throw(new core.UnimplementedError.new("limit() is not implemented"));
    }
    limitToLast(limit) {
      dart.throw(new core.UnimplementedError.new("limitToLast() is not implemented"));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      dart.throw(new core.UnimplementedError.new("snapshots() is not implemented"));
    }
    orderBy(orders) {
      dart.throw(new core.UnimplementedError.new("orderBy() is not implemented"));
    }
    startAfterDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("startAfterDocument() is not implemented"));
    }
    startAfter(fields) {
      dart.throw(new core.UnimplementedError.new("startAfter() is not implemented"));
    }
    startAtDocument(orders, values) {
      dart.throw(new core.UnimplementedError.new("startAtDocument() is not implemented"));
    }
    startAt(fields) {
      dart.throw(new core.UnimplementedError.new("startAt() is not implemented"));
    }
    where(conditions) {
      dart.throw(new core.UnimplementedError.new("where() is not implemented"));
    }
    whereFilter(filter) {
      dart.throw(new core.UnimplementedError.new("whereFilter() is not implemented"));
    }
    count() {
      dart.throw(new core.UnimplementedError.new("count() is not implemented"));
    }
    aggregate(aggregateField1, aggregateField2 = null, aggregateField3 = null, aggregateField4 = null, aggregateField5 = null, aggregateField6 = null, aggregateField7 = null, aggregateField8 = null, aggregateField9 = null, aggregateField10 = null, aggregateField11 = null, aggregateField12 = null, aggregateField13 = null, aggregateField14 = null, aggregateField15 = null, aggregateField16 = null, aggregateField17 = null, aggregateField18 = null, aggregateField19 = null, aggregateField20 = null, aggregateField21 = null, aggregateField22 = null, aggregateField23 = null, aggregateField24 = null, aggregateField25 = null, aggregateField26 = null, aggregateField27 = null, aggregateField28 = null, aggregateField29 = null, aggregateField30 = null) {
      dart.throw(new core.UnimplementedError.new("aggregate() is not implemented"));
    }
    sum(field) {
      dart.throw(new core.UnimplementedError.new("sum() is not implemented"));
    }
    average(field) {
      dart.throw(new core.UnimplementedError.new("average() is not implemented"));
    }
  };
  (platform_interface_query.QueryPlatform.new = function(firestore, params) {
    let t72;
    this[S$.firestore] = firestore;
    this[S$.parameters] = (t72 = params, t72 == null ? platform_interface_query._initialParameters : t72);
    platform_interface_query.QueryPlatform.__proto__.new.call(this, {token: platform_interface_query.QueryPlatform._token});
    ;
  }).prototype = platform_interface_query.QueryPlatform.prototype;
  dart.addTypeTests(platform_interface_query.QueryPlatform);
  dart.addTypeCaches(platform_interface_query.QueryPlatform);
  dart.setMethodSignature(platform_interface_query.QueryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_query.QueryPlatform.__proto__),
    endAtDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.List, core.List]),
    endAt: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable]),
    endBeforeDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable, core.Iterable]),
    endBefore: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable]),
    get: dart.fnType(async.Future$(platform_interface_query_snapshot.QuerySnapshotPlatform), [], [get_options.GetOptions]),
    limit: dart.fnType(platform_interface_query.QueryPlatform, [core.int]),
    limitToLast: dart.fnType(platform_interface_query.QueryPlatform, [core.int]),
    snapshots: dart.fnType(async.Stream$(platform_interface_query_snapshot.QuerySnapshotPlatform), [], {includeMetadataChanges: core.bool}, {}),
    orderBy: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable$(core.List)]),
    startAfterDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.List, core.List]),
    startAfter: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable]),
    startAtDocument: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable, core.Iterable]),
    startAt: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable]),
    where: dart.fnType(platform_interface_query.QueryPlatform, [core.List$(core.List)]),
    whereFilter: dart.fnType(platform_interface_query.QueryPlatform, [filters.FilterPlatformInterface]),
    count: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, []),
    aggregate: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, [platform_interface_query.AggregateField], [dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField)]),
    sum: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, [core.String]),
    average: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_query.QueryPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_query.QueryPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_query.QueryPlatform.__proto__),
    isCollectionGroupQuery: core.bool
  }));
  dart.setLibraryUri(platform_interface_query.QueryPlatform, I[45]);
  dart.setFieldSignature(platform_interface_query.QueryPlatform, () => ({
    __proto__: dart.getFields(platform_interface_query.QueryPlatform.__proto__),
    firestore: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    parameters: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  dart.setStaticFieldSignature(platform_interface_query.QueryPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_query.QueryPlatform, {
    /*platform_interface_query.QueryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  query_web.QueryWeb = class QueryWeb extends platform_interface_query.QueryPlatform {
    get isCollectionGroupQuery() {
      return this[S$.isCollectionGroupQuery];
    }
    set isCollectionGroupQuery(value) {
      super.isCollectionGroupQuery = value;
    }
    static ['_#new#tearOff'](firestore, _path, _webQuery, opts) {
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
      return new query_web.QueryWeb.new(firestore, _path, _webQuery, {parameters: parameters, isCollectionGroupQuery: isCollectionGroupQuery});
    }
    _equals(other) {
      if (other == null) return false;
      return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && query_web.QueryWeb.is(other) && other.firestore._equals(this.firestore) && other[S$._path] === this[S$._path] && other.isCollectionGroupQuery === this.isCollectionGroupQuery && (C[73] || CT.C73).equals(other.parameters, this.parameters);
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.firestore, this[S$._path], this.isCollectionGroupQuery, (C[73] || CT.C73).hash(this.parameters));
    }
    [S$._copyWithParameters](parameters) {
      let t70;
      return new query_web.QueryWeb.new(this.firestore, this[S$._path], this[S$._webQuery], {isCollectionGroupQuery: this.isCollectionGroupQuery, parameters: T$.MapOfString$dynamic().unmodifiable((t70 = T$.LinkedHashMapOfString$dynamic().from(this.parameters), (() => {
          t70[S$.$addAll](parameters);
          return t70;
        })()))});
    }
    [S$._buildWebQueryWithParameters]() {
      let query = this[S$._webQuery];
      for (let t70 of core.Iterable.as(this.parameters[S$.$_get]("orderBy"))) {
        let order = core.List.as(t70);
        query = query.orderBy(encode_utility.EncodeUtility.valueEncode(order[S$.$_get](0)), dart.dtest(order[S$.$_get](1)) ? "desc" : "asc");
      }
      if (this.parameters[S$.$_get]("startAt") != null) {
        query = query.startAt({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("startAt")))});
      }
      if (this.parameters[S$.$_get]("startAfter") != null) {
        query = query.startAfter({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("startAfter")))});
      }
      if (this.parameters[S$.$_get]("endAt") != null) {
        query = query.endAt({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("endAt")))});
      }
      if (this.parameters[S$.$_get]("endBefore") != null) {
        query = query.endBefore({fieldValues: T$.ListN().as(encode_utility.EncodeUtility.valueEncode(this.parameters[S$.$_get]("endBefore")))});
      }
      if (this.parameters[S$.$_get]("limit") != null) {
        query = query.limit(core.num.as(this.parameters[S$.$_get]("limit")));
      }
      if (this.parameters[S$.$_get]("limitToLast") != null) {
        query = query.limitToLast(core.num.as(this.parameters[S$.$_get]("limitToLast")));
      }
      if (this.parameters[S$.$_get]("filters") != null) {
        let filter = T$.MapOfString$ObjectN().as(dart.nullCheck(this.parameters[S$.$_get]("filters")));
        query = query.filterWith(filter);
      }
      for (let t71 of core.Iterable.as(this.parameters[S$.$_get]("where"))) {
        let condition = core.List.as(t71);
        let fieldPath = encode_utility.EncodeUtility.valueEncode(condition[S$.$_get](0));
        let opStr = core.String.as(condition[S$.$_get](1));
        let value = encode_utility.EncodeUtility.valueEncode(condition[S$.$_get](2));
        query = query.where(fieldPath, opStr, value);
      }
      return query;
    }
    endAtDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", values, "endBefore", null]));
    }
    endAt(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["endAt", fields, "endBefore", null]));
    }
    endBeforeDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", null, "endBefore", values]));
    }
    endBefore(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["endAt", null, "endBefore", fields]));
    }
    get(options = C[52] || CT.C52) {
      return internals.convertWebExceptions(T$.FutureOfQuerySnapshotPlatform(), dart.fn(() => async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function*() {
        return web_utils.convertWebQuerySnapshot(this.firestore, yield this[S$._buildWebQueryWithParameters]().get(web_utils.convertGetOptions(options)), options.serverTimestampBehavior);
      }).bind(this)), T$.VoidToFutureOfQuerySnapshotPlatform()));
    }
    limit(limit) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["limit", limit, "limitToLast", null]));
    }
    limitToLast(limit) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["limit", null, "limitToLast", limit]));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let querySnapshots = null;
      if (includeMetadataChanges) {
        querySnapshots = this[S$._buildWebQueryWithParameters]().onSnapshotMetadata;
      } else {
        querySnapshots = this[S$._buildWebQueryWithParameters]().onSnapshot;
      }
      return internals.convertWebExceptions(T$.StreamOfQuerySnapshotPlatform(), dart.fn(() => querySnapshots.map(platform_interface_query_snapshot.QuerySnapshotPlatform, dart.fn(webQuerySnapshot => web_utils.convertWebQuerySnapshot(this.firestore, webQuerySnapshot, messages$46pigeon$0.ServerTimestampBehavior.none), T$.QuerySnapshotToQuerySnapshotPlatform())), T$.VoidToStreamOfQuerySnapshotPlatform()));
    }
    orderBy(orders) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders]));
    }
    startAfterDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", null, "startAfter", values]));
    }
    startAfter(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["startAt", null, "startAfter", fields]));
    }
    startAtDocument(orders, values) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", values, "startAfter", null]));
    }
    startAt(fields) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["startAt", fields, "startAfter", null]));
    }
    where(conditions) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["where", conditions]));
    }
    whereFilter(filter) {
      return this[S$._copyWithParameters](new (T$.IdentityMapOfString$dynamic()).from(["filters", filter.toJson()]));
    }
    count() {
      return new aggregate_query_web.AggregateQueryWeb.new(this, this[S$._buildWebQueryWithParameters](), T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.count})]));
    }
    aggregate(aggregateField1, aggregateField2 = null, aggregateField3 = null, aggregateField4 = null, aggregateField5 = null, aggregateField6 = null, aggregateField7 = null, aggregateField8 = null, aggregateField9 = null, aggregateField10 = null, aggregateField11 = null, aggregateField12 = null, aggregateField13 = null, aggregateField14 = null, aggregateField15 = null, aggregateField16 = null, aggregateField17 = null, aggregateField18 = null, aggregateField19 = null, aggregateField20 = null, aggregateField21 = null, aggregateField22 = null, aggregateField23 = null, aggregateField24 = null, aggregateField25 = null, aggregateField26 = null, aggregateField27 = null, aggregateField28 = null, aggregateField29 = null, aggregateField30 = null) {
      let fields = T$.JSArrayOfAggregateFieldN().of([aggregateField1, aggregateField2, aggregateField3, aggregateField4, aggregateField5, aggregateField6, aggregateField7, aggregateField8, aggregateField9, aggregateField10, aggregateField11, aggregateField12, aggregateField13, aggregateField14, aggregateField15, aggregateField16, aggregateField17, aggregateField18, aggregateField19, aggregateField20, aggregateField21, aggregateField22, aggregateField23, aggregateField24, aggregateField25, aggregateField26, aggregateField27, aggregateField28, aggregateField29, aggregateField30])[S$.$whereType](platform_interface_query.AggregateField);
      return new aggregate_query_web.AggregateQueryWeb.new(this, this[S$._buildWebQueryWithParameters](), fields[S$.$map](messages$46pigeon$0.AggregateQuery, dart.fn(e => {
        if (platform_interface_query.count.is(e)) {
          return new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.count});
        } else if (platform_interface_query.sum.is(e)) {
          return new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.sum, field: e.field});
        } else if (platform_interface_query.average.is(e)) {
          return new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.average, field: e.field});
        } else {
          dart.throw(new core.UnsupportedError.new("Unsupported aggregate field type " + dart.str(e[S$.$runtimeType])));
        }
      }, T$.AggregateFieldToAggregateQuery()))[S$.$toList]());
    }
    sum(field) {
      return new aggregate_query_web.AggregateQueryWeb.new(this, this[S$._buildWebQueryWithParameters](), T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.sum, field: field})]));
    }
    average(field) {
      return new aggregate_query_web.AggregateQueryWeb.new(this, this[S$._buildWebQueryWithParameters](), T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.average, field: field})]));
    }
  };
  (query_web.QueryWeb.new = function(firestore, _path, _webQuery, opts) {
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
    this[S$._path] = _path;
    this[S$._webQuery] = _webQuery;
    this[S$.isCollectionGroupQuery] = isCollectionGroupQuery;
    query_web.QueryWeb.__proto__.new.call(this, firestore, parameters);
    ;
  }).prototype = query_web.QueryWeb.prototype;
  dart.addTypeTests(query_web.QueryWeb);
  dart.addTypeCaches(query_web.QueryWeb);
  dart.setMethodSignature(query_web.QueryWeb, () => ({
    __proto__: dart.getMethods(query_web.QueryWeb.__proto__),
    [S$._copyWithParameters]: dart.fnType(query_web.QueryWeb, [core.Map$(core.String, dart.dynamic)]),
    [S$._buildWebQueryWithParameters]: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), []),
    where: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable$(core.List)])
  }));
  dart.setLibraryUri(query_web.QueryWeb, I[46]);
  dart.setFieldSignature(query_web.QueryWeb, () => ({
    __proto__: dart.getFields(query_web.QueryWeb.__proto__),
    [S$._webQuery]: dart.finalFieldType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false))),
    [S$._path]: dart.finalFieldType(core.String),
    isCollectionGroupQuery: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(query_web.QueryWeb, ['_equals']);
  dart.defineExtensionAccessors(query_web.QueryWeb, ['hashCode']);
  collection_reference_web.CollectionReferenceWeb = class CollectionReferenceWeb extends query_web.QueryWeb {
    static ['_#new#tearOff'](_firestorePlatform, _webFirestore, path) {
      return new collection_reference_web.CollectionReferenceWeb.new(_firestorePlatform, _webFirestore, path);
    }
    get path() {
      return this[S$._delegate$4].path;
    }
    doc(path = null) {
      let documentReference = this[S$._delegate$4].doc(path);
      return new document_reference_web.DocumentReferenceWeb.new(this[S$._firestorePlatform], this[S$._webFirestore$1], documentReference.path);
    }
    get id() {
      return this[S$._delegate$4].id;
    }
    get parent() {
      let documentReference = this[S$._delegate$4].parent;
      if (documentReference == null) {
        return null;
      }
      return new document_reference_web.DocumentReferenceWeb.new(this[S$._firestorePlatform], this[S$._webFirestore$1], documentReference.path);
    }
    get [S$._pointer$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[114] || CT.C114)));
    }
  };
  (collection_reference_web.CollectionReferenceWeb.new = function(_firestorePlatform, _webFirestore, path) {
    this[S$._firestorePlatform] = _firestorePlatform;
    this[S$._webFirestore$1] = _webFirestore;
    this[S$._delegate$4] = _webFirestore.collection(path);
    collection_reference_web.CollectionReferenceWeb.__proto__.new.call(this, _firestorePlatform, path, _webFirestore.collection(path));
    ;
  }).prototype = collection_reference_web.CollectionReferenceWeb.prototype;
  dart.addTypeTests(collection_reference_web.CollectionReferenceWeb);
  dart.addTypeCaches(collection_reference_web.CollectionReferenceWeb);
  collection_reference_web.CollectionReferenceWeb[dart.implements] = () => [platform_interface_collection_reference.CollectionReferencePlatform];
  dart.setMethodSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getMethods(collection_reference_web.CollectionReferenceWeb.__proto__),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [], [dart.nullable(core.String)])
  }));
  dart.setGetterSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getGetters(collection_reference_web.CollectionReferenceWeb.__proto__),
    path: core.String,
    id: core.String,
    parent: dart.nullable(platform_interface_document_reference.DocumentReferencePlatform),
    [S$._pointer$1]: pointer.Pointer
  }));
  dart.setLibraryUri(collection_reference_web.CollectionReferenceWeb, I[47]);
  dart.setFieldSignature(collection_reference_web.CollectionReferenceWeb, () => ({
    __proto__: dart.getFields(collection_reference_web.CollectionReferenceWeb.__proto__),
    [S$._webFirestore$1]: dart.finalFieldType(firestore$.Firestore),
    [S$._firestorePlatform]: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [S$._delegate$4]: dart.finalFieldType(firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false)))
  }));
  platform_interface_document_reference.DocumentReferencePlatform = class DocumentReferencePlatform extends plugin_platform_interface.PlatformInterface {
    get firestore() {
      return this[S$.firestore$1];
    }
    set firestore(value) {
      super.firestore = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_document_reference.DocumentReferencePlatform._token);
    }
    get path() {
      return this[S$._pointer$2].path;
    }
    get id() {
      return this[S$._pointer$2].id;
    }
    get parent() {
      return this.firestore.collection(dart.nullCheck(this[S$._pointer$2].parentPath()));
    }
    collection(collectionPath) {
      return this.firestore.collection(this[S$._pointer$2].collectionPath(collectionPath));
    }
    delete() {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    get(options = C[52] || CT.C52) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, function* get() {
        dart.throw(new core.UnimplementedError.new("get() is not implemented"));
      });
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      dart.throw(new core.UnimplementedError.new("snapshots() is not implemented"));
    }
    set(data, options = null) {
      dart.throw(new core.UnimplementedError.new("set() is not implemented"));
    }
    update(data) {
      dart.throw(new core.UnimplementedError.new("update() is not implemented"));
    }
    _equals(other) {
      if (other == null) return false;
      return platform_interface_document_reference.DocumentReferencePlatform.is(other) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return this.path[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(platform_interface_document_reference.DocumentReferencePlatform)) + "(" + this.path + ")";
    }
  };
  (platform_interface_document_reference.DocumentReferencePlatform.new = function(firestore, path) {
    this[S$.firestore$1] = firestore;
    this[S$._pointer$2] = new pointer.Pointer.new(path);
    platform_interface_document_reference.DocumentReferencePlatform.__proto__.new.call(this, {token: platform_interface_document_reference.DocumentReferencePlatform._token});
    ;
  }).prototype = platform_interface_document_reference.DocumentReferencePlatform.prototype;
  dart.addTypeTests(platform_interface_document_reference.DocumentReferencePlatform);
  dart.addTypeCaches(platform_interface_document_reference.DocumentReferencePlatform);
  dart.setMethodSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_document_reference.DocumentReferencePlatform.__proto__),
    collection: dart.fnType(platform_interface_collection_reference.CollectionReferencePlatform, [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    get: dart.fnType(async.Future$(platform_interface_document_snapshot.DocumentSnapshotPlatform), [], [get_options.GetOptions]),
    snapshots: dart.fnType(async.Stream$(platform_interface_document_snapshot.DocumentSnapshotPlatform), [], {includeMetadataChanges: core.bool}, {}),
    set: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(field_path.FieldPath, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_document_reference.DocumentReferencePlatform.__proto__),
    path: core.String,
    id: core.String,
    parent: platform_interface_collection_reference.CollectionReferencePlatform
  }));
  dart.setLibraryUri(platform_interface_document_reference.DocumentReferencePlatform, I[48]);
  dart.setFieldSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ({
    __proto__: dart.getFields(platform_interface_document_reference.DocumentReferencePlatform.__proto__),
    firestore: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [S$._pointer$2]: dart.finalFieldType(pointer.Pointer)
  }));
  dart.setStaticFieldSignature(platform_interface_document_reference.DocumentReferencePlatform, () => ['_token']);
  dart.defineExtensionMethods(platform_interface_document_reference.DocumentReferencePlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(platform_interface_document_reference.DocumentReferencePlatform, ['hashCode']);
  dart.defineLazy(platform_interface_document_reference.DocumentReferencePlatform, {
    /*platform_interface_document_reference.DocumentReferencePlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  document_reference_web.DocumentReferenceWeb = class DocumentReferenceWeb extends platform_interface_document_reference.DocumentReferencePlatform {
    get firestoreWeb() {
      return this[S$.firestoreWeb];
    }
    set firestoreWeb(value) {
      super.firestoreWeb = value;
    }
    static ['_#new#tearOff'](firestore, firestoreWeb, path) {
      return new document_reference_web.DocumentReferenceWeb.new(firestore, firestoreWeb, path);
    }
    set(data, options = null) {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.fn(() => this[S$._delegate$5].set(dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)), web_utils.convertSetOptions(options)), T$.VoidToFutureOfvoid()));
    }
    update(data) {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.fn(() => this[S$._delegate$5].update(dart.nullCheck(encode_utility.EncodeUtility.encodeMapDataFieldPath(data))), T$.VoidToFutureOfvoid()));
    }
    get(options = C[52] || CT.C52) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function* get() {
        let documentSnapshot = (yield internals.convertWebExceptions(T$.FutureOrOfDocumentSnapshot(), dart.fn(() => this[S$._delegate$5].get(web_utils.convertGetOptions(options)), T$.VoidToFutureOfDocumentSnapshot())));
        return web_utils.convertWebDocumentSnapshot(this.firestore, documentSnapshot, options.serverTimestampBehavior);
      }).bind(this));
    }
    delete() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._delegate$5], 'delete'));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let querySnapshots = this[S$._delegate$5].onSnapshot;
      if (includeMetadataChanges) {
        querySnapshots = this[S$._delegate$5].onMetadataChangesSnapshot;
      }
      return internals.convertWebExceptions(T$.StreamOfDocumentSnapshotPlatform(), dart.fn(() => querySnapshots.map(platform_interface_document_snapshot.DocumentSnapshotPlatform, dart.fn(webSnapshot => web_utils.convertWebDocumentSnapshot(this.firestore, webSnapshot, messages$46pigeon$0.ServerTimestampBehavior.none), T$.DocumentSnapshotToDocumentSnapshotPlatform())), T$.VoidToStreamOfDocumentSnapshotPlatform()));
    }
  };
  (document_reference_web.DocumentReferenceWeb.new = function(firestore, firestoreWeb, path) {
    this[S$.firestoreWeb] = firestoreWeb;
    this[S$._delegate$5] = firestoreWeb.doc(path);
    document_reference_web.DocumentReferenceWeb.__proto__.new.call(this, firestore, path);
    ;
  }).prototype = document_reference_web.DocumentReferenceWeb.prototype;
  dart.addTypeTests(document_reference_web.DocumentReferenceWeb);
  dart.addTypeCaches(document_reference_web.DocumentReferenceWeb);
  dart.setMethodSignature(document_reference_web.DocumentReferenceWeb, () => ({
    __proto__: dart.getMethods(document_reference_web.DocumentReferenceWeb.__proto__),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(core.Object, dart.dynamic)])
  }));
  dart.setLibraryUri(document_reference_web.DocumentReferenceWeb, I[49]);
  dart.setFieldSignature(document_reference_web.DocumentReferenceWeb, () => ({
    __proto__: dart.getFields(document_reference_web.DocumentReferenceWeb.__proto__),
    firestoreWeb: dart.finalFieldType(firestore$.Firestore),
    [S$._delegate$5]: dart.finalFieldType(firestore$.DocumentReference)
  }));
  platform_interface_field_value_factory.FieldValueFactoryPlatform = class FieldValueFactoryPlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return platform_interface_field_value_factory.FieldValueFactoryPlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_field_value_factory.FieldValueFactoryPlatform._token);
      platform_interface_field_value_factory.FieldValueFactoryPlatform._instance = instance;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_field_value_factory.FieldValueFactoryPlatform._token);
    }
    arrayUnion(elements) {
      dart.throw(new core.UnimplementedError.new("arrayUnion() is not implemented"));
    }
    arrayRemove(elements) {
      dart.throw(new core.UnimplementedError.new("arrayRemove() is not implemented"));
    }
    delete() {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    serverTimestamp() {
      dart.throw(new core.UnimplementedError.new("serverTimestamp() is not implemented"));
    }
    increment(value) {
      dart.throw(new core.UnimplementedError.new("increment() is not implemented"));
    }
  };
  (platform_interface_field_value_factory.FieldValueFactoryPlatform.new = function() {
    platform_interface_field_value_factory.FieldValueFactoryPlatform.__proto__.new.call(this, {token: platform_interface_field_value_factory.FieldValueFactoryPlatform._token});
    ;
  }).prototype = platform_interface_field_value_factory.FieldValueFactoryPlatform.prototype;
  dart.addTypeTests(platform_interface_field_value_factory.FieldValueFactoryPlatform);
  dart.addTypeCaches(platform_interface_field_value_factory.FieldValueFactoryPlatform);
  dart.setMethodSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_field_value_factory.FieldValueFactoryPlatform.__proto__),
    arrayUnion: dart.fnType(dart.dynamic, [core.List]),
    arrayRemove: dart.fnType(dart.dynamic, [core.List]),
    delete: dart.fnType(dart.dynamic, []),
    serverTimestamp: dart.fnType(dart.dynamic, []),
    increment: dart.fnType(dart.dynamic, [core.num])
  }));
  dart.setStaticMethodSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['verify']);
  dart.setStaticGetterSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_field_value_factory.FieldValueFactoryPlatform, I[50]);
  dart.setStaticFieldSignature(platform_interface_field_value_factory.FieldValueFactoryPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_field_value_factory.FieldValueFactoryPlatform, {
    /*platform_interface_field_value_factory.FieldValueFactoryPlatform._instance*/get _instance() {
      return new method_channel_field_value_factory.MethodChannelFieldValueFactory.new();
    },
    set _instance(value) {},
    /*platform_interface_field_value_factory.FieldValueFactoryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  field_value_factory_web.FieldValueFactoryWeb = class FieldValueFactoryWeb extends platform_interface_field_value_factory.FieldValueFactoryPlatform {
    arrayRemove(elements) {
      return new field_value_web.FieldValueWeb.new(firestore$.FieldValue.arrayRemove(T$.ListN().as(encode_utility.EncodeUtility.valueEncode(elements))));
    }
    arrayUnion(elements) {
      return new field_value_web.FieldValueWeb.new(firestore$.FieldValue.arrayUnion(T$.ListN().as(encode_utility.EncodeUtility.valueEncode(elements))));
    }
    delete() {
      return new field_value_web.FieldValueWeb.new(firestore$.FieldValue.delete());
    }
    increment(value) {
      return new field_value_web.FieldValueWeb.new(firestore$.FieldValue.increment(value));
    }
    serverTimestamp() {
      return new field_value_web.FieldValueWeb.new(firestore$.FieldValue.serverTimestamp());
    }
    static ['_#new#tearOff']() {
      return new field_value_factory_web.FieldValueFactoryWeb.new();
    }
  };
  (field_value_factory_web.FieldValueFactoryWeb.new = function() {
    field_value_factory_web.FieldValueFactoryWeb.__proto__.new.call(this);
    ;
  }).prototype = field_value_factory_web.FieldValueFactoryWeb.prototype;
  dart.addTypeTests(field_value_factory_web.FieldValueFactoryWeb);
  dart.addTypeCaches(field_value_factory_web.FieldValueFactoryWeb);
  dart.setMethodSignature(field_value_factory_web.FieldValueFactoryWeb, () => ({
    __proto__: dart.getMethods(field_value_factory_web.FieldValueFactoryWeb.__proto__),
    arrayRemove: dart.fnType(field_value_web.FieldValueWeb, [core.List]),
    arrayUnion: dart.fnType(field_value_web.FieldValueWeb, [core.List]),
    delete: dart.fnType(field_value_web.FieldValueWeb, []),
    increment: dart.fnType(field_value_web.FieldValueWeb, [core.num]),
    serverTimestamp: dart.fnType(field_value_web.FieldValueWeb, [])
  }));
  dart.setLibraryUri(field_value_factory_web.FieldValueFactoryWeb, I[51]);
  const _is_JsObjectWrapper_default = Symbol('_is_JsObjectWrapper_default');
  js$0.JsObjectWrapper$ = dart.generic(T => {
    class JsObjectWrapper extends core.Object {
      get jsObject() {
        return this[S$.jsObject];
      }
      set jsObject(value) {
        super.jsObject = value;
      }
    }
    (JsObjectWrapper.fromJsObject = function(jsObject) {
      this[S$.jsObject] = jsObject;
      ;
    }).prototype = JsObjectWrapper.prototype;
    dart.addTypeTests(JsObjectWrapper);
    JsObjectWrapper.prototype[_is_JsObjectWrapper_default] = true;
    dart.addTypeCaches(JsObjectWrapper);
    dart.setLibraryUri(JsObjectWrapper, I[52]);
    dart.setFieldSignature(JsObjectWrapper, () => ({
      __proto__: dart.getFields(JsObjectWrapper.__proto__),
      jsObject: dart.finalFieldType(T)
    }));
    return JsObjectWrapper;
  });
  js$0.JsObjectWrapper = js$0.JsObjectWrapper$();
  dart.addTypeTests(js$0.JsObjectWrapper, _is_JsObjectWrapper_default);
  firestore$.Firestore = class Firestore extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.Firestore", false)) {
    get app() {
      return app$.App.getInstance(this.jsObject.app);
    }
    static getInstance(jsObject) {
      let t75, t74, t73, t72;
      t72 = firestore$.Firestore._expando;
      t73 = jsObject;
      t74 = t72._get(t73);
      return t74 == null ? (t75 = new firestore$.Firestore._fromJsObject(jsObject), t72._set(t73, t75), t75) : t74;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.Firestore._fromJsObject(jsObject);
    }
    batch() {
      return firestore$.WriteBatch.getInstance(dart.global.firebase_firestore.writeBatch(this.jsObject));
    }
    collection(collectionPath) {
      return firestore$.CollectionReference.getInstance(dart.global.firebase_firestore.collection(this.jsObject, collectionPath));
    }
    collectionGroup(collectionId) {
      return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.collectionGroup(this.jsObject, collectionId));
    }
    doc(documentPath) {
      return firestore$.DocumentReference.getInstance(dart.global.firebase_firestore.doc(this.jsObject, documentPath));
    }
    enablePersistence(settings = null) {
      if (settings != null && settings.synchronizeTabs === true) {
        return utils$0.handleThenable(dart.void, dart.global.firebase_firestore.enableMultiTabIndexedDbPersistence(this.jsObject));
      }
      return utils$0.handleThenable(dart.void, dart.global.firebase_firestore.enableIndexedDbPersistence(this.jsObject));
    }
    snapshotsInSync() {
      let controller = null;
      function controller$35get() {
        let t73;
        t73 = controller;
        return t73 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t73;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let onSnapshotsInSyncUnsubscribe = null;
      function onSnapshotsInSyncUnsubscribe$35get() {
        let t76;
        t76 = onSnapshotsInSyncUnsubscribe;
        return t76 == null ? dart.throw(new _internal.LateError.localNI("onSnapshotsInSyncUnsubscribe")) : t76;
      }
      function onSnapshotsInSyncUnsubscribe$35set(onSnapshotsInSyncUnsubscribe$35param) {
        return onSnapshotsInSyncUnsubscribe = onSnapshotsInSyncUnsubscribe$35param;
      }
      let nextWrapper = js.allowInterop(T$.ObjectNToNull(), dart.fn(noValue => {
        controller$35get().add(null);
      }, T$.ObjectNToNull()));
      const startListen = () => {
        onSnapshotsInSyncUnsubscribe$35set(dart.global.firebase_firestore.onSnapshotsInSync(this.jsObject, dart.assertInterop(nextWrapper)));
      };
      dart.fn(startListen, T$.VoidTovoid());
      function stopListen() {
        onSnapshotsInSyncUnsubscribe$35get()();
        controller$35get().close();
      }
      dart.fn(stopListen, T$.VoidTovoid());
      controller$35set(T$.StreamControllerOfvoid().broadcast({onListen: startListen, onCancel: stopListen}));
      return controller$35get().stream;
    }
    clearPersistence() {
      return utils$0.handleThenable(dart.void, dart.global.firebase_firestore.clearIndexedDbPersistence(this.jsObject));
    }
    runTransaction(updateFunction, maxAttempts) {
      let updateFunctionWrap = js.allowInterop(T$.dynamicToPromiseJsImpl(), dart.fn(transaction => utils$0.handleFutureWithMapper(T$.ObjectN(), dart.dynamic, T$.FutureOfObjectN().as(updateFunction(firestore$.Transaction.getInstance(dart.packageJSType("firebase_firestore.Transaction", false).as(transaction)))), C[115] || CT.C115), T$.dynamicToPromiseJsImpl()));
      return utils$0.handleThenable(dart.void, dart.global.firebase_firestore.runTransaction(this.jsObject, dart.assertInterop(updateFunctionWrap), {maxAttempts: maxAttempts})).then(dart.dynamic, dart.fn(value => utils$1.dartify(null), T$.voidTodynamic()));
    }
    useEmulator(host, port) {
      return dart.global.firebase_firestore.connectFirestoreEmulator(this.jsObject, host, port);
    }
    enableNetwork() {
      return utils$0.handleThenable(dart.dynamic, dart.global.firebase_firestore.enableNetwork(this.jsObject));
    }
    disableNetwork() {
      return utils$0.handleThenable(dart.dynamic, dart.global.firebase_firestore.disableNetwork(this.jsObject));
    }
    terminate() {
      return utils$0.handleThenable(dart.void, dart.global.firebase_firestore.terminate(this.jsObject));
    }
    waitForPendingWrites() {
      return utils$0.handleThenable(dart.void, dart.global.firebase_firestore.waitForPendingWrites(this.jsObject));
    }
    loadBundle(bundle) {
      return firestore$.LoadBundleTask.getInstance(dart.global.firebase_firestore.loadBundle(this.jsObject, bundle));
    }
    setIndexConfiguration(indexConfiguration) {
      return utils$0.handleThenable(dart.void, dart.global.firebase_firestore.setIndexConfiguration(this.jsObject, indexConfiguration));
    }
    namedQuery(name) {
      return async.async(T$.QueryOfQueryJsImpl(), (function* namedQuery() {
        let query = (yield utils$0.handleThenable(dart.nullable(dart.packageJSType("firebase_firestore.Query", false)), dart.global.firebase_firestore.namedQuery(this.jsObject, name)));
        if (query == null) {
          dart.throw(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", message: "Named query has not been found. Please check it has been loaded properly via loadBundle().", code: "non-existent-named-query"}));
        }
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(query);
      }).bind(this));
    }
    refEqual(left, right) {
      return dart.global.firebase_firestore.refEqual(left, right);
    }
    setLoggingEnabled(logLevel) {
      dart.global.firebase_firestore.setLogLevel(logLevel);
    }
  };
  (firestore$.Firestore._fromJsObject = function(jsObject) {
    firestore$.Firestore.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.Firestore.prototype;
  dart.addTypeTests(firestore$.Firestore);
  dart.addTypeCaches(firestore$.Firestore);
  dart.setMethodSignature(firestore$.Firestore, () => ({
    __proto__: dart.getMethods(firestore$.Firestore.__proto__),
    batch: dart.fnType(dart.nullable(firestore$.WriteBatch), []),
    collection: dart.fnType(firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false)), [core.String]),
    collectionGroup: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [core.String]),
    doc: dart.fnType(firestore$.DocumentReference, [core.String]),
    enablePersistence: dart.fnType(async.Future$(dart.void), [], [dart.nullable(dart.packageJSType("PersistenceSettings", false))]),
    snapshotsInSync: dart.fnType(async.Stream$(dart.void), []),
    clearPersistence: dart.fnType(async.Future$(dart.void), []),
    runTransaction: dart.fnType(async.Future, [dart.fnType(dart.dynamic, [dart.nullable(firestore$.Transaction)]), core.int]),
    useEmulator: dart.fnType(dart.void, [core.String, core.int]),
    enableNetwork: dart.fnType(async.Future, []),
    disableNetwork: dart.fnType(async.Future, []),
    terminate: dart.fnType(async.Future$(dart.void), []),
    waitForPendingWrites: dart.fnType(async.Future$(dart.void), []),
    loadBundle: dart.fnType(firestore$.LoadBundleTask, [typed_data.Uint8List]),
    setIndexConfiguration: dart.fnType(async.Future$(dart.void), [core.String]),
    namedQuery: dart.fnType(async.Future$(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false))), [core.String]),
    refEqual: dart.fnType(core.bool, [dart.dynamic, dart.dynamic]),
    setLoggingEnabled: dart.fnType(dart.void, [core.String])
  }));
  dart.setStaticMethodSignature(firestore$.Firestore, () => ['getInstance']);
  dart.setGetterSignature(firestore$.Firestore, () => ({
    __proto__: dart.getGetters(firestore$.Firestore.__proto__),
    app: app$.App
  }));
  dart.setLibraryUri(firestore$.Firestore, I[53]);
  dart.setStaticFieldSignature(firestore$.Firestore, () => ['_expando']);
  dart.defineLazy(firestore$.Firestore, {
    /*firestore$.Firestore._expando*/get _expando() {
      return new (T$.ExpandoOfFirestore()).new();
    }
  }, false);
  firestore$.LoadBundleTask = class LoadBundleTask extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.LoadBundleTask", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.LoadBundleTask._fromJsObject(jsObject);
    }
    static getInstance(jsObject) {
      let t81, t80, t79, t78;
      t78 = firestore$.LoadBundleTask._expando;
      t79 = jsObject;
      t80 = t78._get(t79);
      return t80 == null ? (t81 = new firestore$.LoadBundleTask._fromJsObject(jsObject), t78._set(t79, t81), t81) : t80;
    }
    get stream() {
      let controller = null;
      function controller$35get() {
        let t79;
        t79 = controller;
        return t79 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t79;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      controller$35set(T$.StreamControllerOfLoadBundleTaskProgress().new({onListen: dart.fn(() => {
          this.jsObject.onProgress(js.allowInterop(T$.LoadBundleTaskProgressJsImplTovoid(), dart.fn(data => {
            let taskProgress = new firestore$.LoadBundleTaskProgress._fromJsObject(data);
            if (load_bundle_task_state.LoadBundleTaskState.error !== taskProgress.taskState) {
              controller$35get().add(taskProgress);
            }
          }, T$.LoadBundleTaskProgressJsImplTovoid())));
          this.jsObject.then(js.allowInterop(T$.dynamicTodynamic(), dart.fn(value => {
            controller$35get().close();
          }, T$.dynamicToNull())), js.allowInterop(T$.FirestoreErrorTodynamic(), dart.fn(error => {
            controller$35get().addError(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", message: error.message, code: "load-bundle-error", stackTrace: new core._StringStackTrace.new(error.stack)}));
            controller$35get().close();
          }, T$.FirestoreErrorToNull())));
        }, T$.VoidTovoid()), onCancel: dart.fn(() => {
          controller$35get().close();
        }, T$.VoidToNull())}));
      return controller$35get().stream;
    }
  };
  (firestore$.LoadBundleTask._fromJsObject = function(jsObject) {
    firestore$.LoadBundleTask.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.LoadBundleTask.prototype;
  dart.addTypeTests(firestore$.LoadBundleTask);
  dart.addTypeCaches(firestore$.LoadBundleTask);
  dart.setStaticMethodSignature(firestore$.LoadBundleTask, () => ['getInstance']);
  dart.setGetterSignature(firestore$.LoadBundleTask, () => ({
    __proto__: dart.getGetters(firestore$.LoadBundleTask.__proto__),
    stream: async.Stream$(firestore$.LoadBundleTaskProgress)
  }));
  dart.setLibraryUri(firestore$.LoadBundleTask, I[53]);
  dart.setStaticFieldSignature(firestore$.LoadBundleTask, () => ['_expando']);
  dart.defineLazy(firestore$.LoadBundleTask, {
    /*firestore$.LoadBundleTask._expando*/get _expando() {
      return new (T$.ExpandoOfLoadBundleTask()).new();
    }
  }, false);
  firestore$.LoadBundleTaskProgress = class LoadBundleTaskProgress extends js$0.JsObjectWrapper$(dart.packageJSType("LoadBundleTaskProgressJsImpl", false)) {
    get taskState() {
      return this[S$.taskState];
    }
    set taskState(value) {
      super.taskState = value;
    }
    get bytesLoaded() {
      return this[S$.bytesLoaded];
    }
    set bytesLoaded(value) {
      super.bytesLoaded = value;
    }
    get documentsLoaded() {
      return this[S$.documentsLoaded];
    }
    set documentsLoaded(value) {
      super.documentsLoaded = value;
    }
    get totalBytes() {
      return this[S$.totalBytes];
    }
    set totalBytes(value) {
      super.totalBytes = value;
    }
    get totalDocuments() {
      return this[S$.totalDocuments];
    }
    set totalDocuments(value) {
      super.totalDocuments = value;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.LoadBundleTaskProgress._fromJsObject(jsObject);
    }
    static getInstance(jsObject) {
      let t84, t83, t82, t81;
      t81 = firestore$.LoadBundleTaskProgress._expando;
      t82 = jsObject;
      t83 = t81._get(t82);
      return t83 == null ? (t84 = new firestore$.LoadBundleTaskProgress._fromJsObject(jsObject), t81._set(t82, t84), t84) : t83;
    }
  };
  (firestore$.LoadBundleTaskProgress._fromJsObject = function(jsObject) {
    this[S$.taskState] = load_bundle_task_state$.convertToTaskState(jsObject.taskState[S$.$toLowerCase]());
    this[S$.bytesLoaded] = core.int.parse(jsObject.bytesLoaded);
    this[S$.documentsLoaded] = jsObject.documentsLoaded;
    this[S$.totalBytes] = core.int.parse(jsObject.totalBytes);
    this[S$.totalDocuments] = jsObject.totalDocuments;
    firestore$.LoadBundleTaskProgress.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.LoadBundleTaskProgress.prototype;
  dart.addTypeTests(firestore$.LoadBundleTaskProgress);
  dart.addTypeCaches(firestore$.LoadBundleTaskProgress);
  dart.setStaticMethodSignature(firestore$.LoadBundleTaskProgress, () => ['getInstance']);
  dart.setLibraryUri(firestore$.LoadBundleTaskProgress, I[53]);
  dart.setFieldSignature(firestore$.LoadBundleTaskProgress, () => ({
    __proto__: dart.getFields(firestore$.LoadBundleTaskProgress.__proto__),
    taskState: dart.finalFieldType(load_bundle_task_state.LoadBundleTaskState),
    bytesLoaded: dart.finalFieldType(core.int),
    documentsLoaded: dart.finalFieldType(core.int),
    totalBytes: dart.finalFieldType(core.int),
    totalDocuments: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(firestore$.LoadBundleTaskProgress, () => ['_expando']);
  dart.defineLazy(firestore$.LoadBundleTaskProgress, {
    /*firestore$.LoadBundleTaskProgress._expando*/get _expando() {
      return new (T$.ExpandoOfLoadBundleTaskProgress()).new();
    }
  }, false);
  firestore$._Updatable = class _Updatable extends core.Object {};
  firestore$._Updatable[dart.mixinOn] = Object => class _Updatable extends Object {
    [S$._wrapUpdateFunctionCall](T, jsObject, data, documentRef = null) {
      let args = [utils$1.jsify(data)];
      if (documentRef != null) {
        args[S$.$insert](0, documentRef.jsObject);
      }
      return dart.nullable(T).as(utils$0.callMethod(core.Object.as(jsObject), "update", args));
    }
  };
  (firestore$._Updatable[dart.mixinNew] = function() {
  }).prototype = firestore$._Updatable.prototype;
  dart.addTypeTests(firestore$._Updatable);
  dart.addTypeCaches(firestore$._Updatable);
  firestore$._Updatable[dart.implements] = () => [core.Object];
  dart.setMethodSignature(firestore$._Updatable, () => ({
    __proto__: dart.getMethods(firestore$._Updatable.__proto__),
    [S$._wrapUpdateFunctionCall]: dart.gFnType(T => [dart.nullable(T), [dart.dynamic, core.Map$(core.String, dart.dynamic)], [dart.nullable(firestore$.DocumentReference)]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(firestore$._Updatable, I[53]);
  const JsObjectWrapper__Updatable$36 = class JsObjectWrapper__Updatable extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.WriteBatch", false)) {};
  (JsObjectWrapper__Updatable$36.fromJsObject = function(jsObject) {
    JsObjectWrapper__Updatable$36.__proto__.fromJsObject.call(this, jsObject);
  }).prototype = JsObjectWrapper__Updatable$36.prototype;
  dart.applyMixin(JsObjectWrapper__Updatable$36, firestore$._Updatable);
  firestore$.WriteBatch = class WriteBatch extends JsObjectWrapper__Updatable$36 {
    static getInstance(jsObject) {
      let t84, t83, t82, t81;
      t81 = firestore$.WriteBatch._expando;
      t82 = jsObject;
      t83 = t81._get(t82);
      return t83 == null ? (t84 = new firestore$.WriteBatch._fromJsObject(jsObject), t81._set(t82, t84), t84) : t83;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.WriteBatch._fromJsObject(jsObject);
    }
    commit() {
      return utils$0.handleThenable(dart.void, this.jsObject.commit());
    }
    delete(documentRef) {
      return firestore$.WriteBatch.getInstance(this.jsObject.delete(documentRef.jsObject));
    }
    set(documentRef, data, options = null) {
      let jsObjectSet = options != null ? this.jsObject.set(documentRef.jsObject, utils$1.jsify(data), options) : this.jsObject.set(documentRef.jsObject, utils$1.jsify(data));
      return firestore$.WriteBatch.getInstance(jsObjectSet);
    }
    update(documentRef, data) {
      return firestore$.WriteBatch.getInstance(dart.packageJSType("firebase_firestore.WriteBatch", false).as(this[S$._wrapUpdateFunctionCall](dart.dynamic, this.jsObject, data, documentRef)));
    }
  };
  (firestore$.WriteBatch._fromJsObject = function(jsObject) {
    firestore$.WriteBatch.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.WriteBatch.prototype;
  dart.addTypeTests(firestore$.WriteBatch);
  dart.addTypeCaches(firestore$.WriteBatch);
  dart.setMethodSignature(firestore$.WriteBatch, () => ({
    __proto__: dart.getMethods(firestore$.WriteBatch.__proto__),
    commit: dart.fnType(async.Future$(dart.void), []),
    delete: dart.fnType(firestore$.WriteBatch, [firestore$.DocumentReference]),
    set: dart.fnType(firestore$.WriteBatch, [firestore$.DocumentReference, core.Map$(core.String, dart.dynamic)], [dart.nullable(dart.packageJSType("SetOptions", false))]),
    update: dart.fnType(firestore$.WriteBatch, [firestore$.DocumentReference, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(firestore$.WriteBatch, () => ['getInstance']);
  dart.setLibraryUri(firestore$.WriteBatch, I[53]);
  dart.setStaticFieldSignature(firestore$.WriteBatch, () => ['_expando']);
  dart.defineLazy(firestore$.WriteBatch, {
    /*firestore$.WriteBatch._expando*/get _expando() {
      return new (T$.ExpandoOfWriteBatch()).new();
    }
  }, false);
  const JsObjectWrapper__Updatable$36$ = class JsObjectWrapper__Updatable extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.DocumentReference", false)) {};
  (JsObjectWrapper__Updatable$36$.fromJsObject = function(jsObject) {
    JsObjectWrapper__Updatable$36$.__proto__.fromJsObject.call(this, jsObject);
  }).prototype = JsObjectWrapper__Updatable$36$.prototype;
  dart.applyMixin(JsObjectWrapper__Updatable$36$, firestore$._Updatable);
  firestore$.DocumentReference = class DocumentReference extends JsObjectWrapper__Updatable$36$ {
    get firestore() {
      return firestore$.Firestore.getInstance(this.jsObject.firestore);
    }
    get id() {
      return this.jsObject.id;
    }
    get parent() {
      return firestore$.CollectionReference.getInstance(this.jsObject.parent);
    }
    get path() {
      return this.jsObject.path;
    }
    static getInstance(jsObject) {
      let t84, t83, t82, t81;
      t81 = firestore$.DocumentReference._expando;
      t82 = jsObject;
      t83 = t81._get(t82);
      return t83 == null ? (t84 = new firestore$.DocumentReference._fromJsObject(jsObject), t81._set(t82, t84), t84) : t83;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.DocumentReference._fromJsObject(jsObject);
    }
    collection(collectionPath) {
      return firestore$.CollectionReference.getInstance(dart.global.firebase_firestore.collection(this.firestore.jsObject, this.path + "/" + collectionPath));
    }
    delete() {
      return utils$0.handleThenable(dart.void, dart.global.firebase_firestore.deleteDoc(this.jsObject));
    }
    get(options = null) {
      if (options == null || options.source === "default") {
        return utils$0.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), dart.global.firebase_firestore.getDoc(this.jsObject)).then(firestore$.DocumentSnapshot, C[116] || CT.C116);
      } else if (options.source === "server") {
        return utils$0.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), dart.global.firebase_firestore.getDocFromServer(this.jsObject)).then(firestore$.DocumentSnapshot, C[116] || CT.C116);
      } else {
        return utils$0.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), dart.global.firebase_firestore.getDocFromCache(this.jsObject)).then(firestore$.DocumentSnapshot, C[116] || CT.C116);
      }
    }
    get onSnapshot() {
      return this[S$._createSnapshotStream]().stream;
    }
    get onMetadataChangesSnapshot() {
      return this[S$._createSnapshotStream]({includeMetadataChanges: true}).stream;
    }
    [S$._createSnapshotStream](options = null) {
      let onSnapshotUnsubscribe = null;
      function onSnapshotUnsubscribe$35get() {
        let t82;
        t82 = onSnapshotUnsubscribe;
        return t82 == null ? dart.throw(new _internal.LateError.localNI("onSnapshotUnsubscribe")) : t82;
      }
      function onSnapshotUnsubscribe$35set(onSnapshotUnsubscribe$35param) {
        return onSnapshotUnsubscribe = onSnapshotUnsubscribe$35param;
      }
      let controller = null;
      function controller$35get() {
        let t85;
        t85 = controller;
        return t85 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t85;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let nextWrapper = js.allowInterop(T$.DocumentSnapshotJsImplToNull(), dart.fn(snapshot => {
        controller$35get().add(firestore$.DocumentSnapshot.getInstance(snapshot));
      }, T$.DocumentSnapshotJsImplToNull()));
      let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => controller$35get().addError(core.Object.as(e)), T$.dynamicTovoid()));
      const startListen = () => {
        onSnapshotUnsubscribe$35set(options != null ? dart.global.firebase_firestore.onSnapshot(this.jsObject, options, dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper)) : dart.global.firebase_firestore.onSnapshot(this.jsObject, dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper)));
      };
      dart.fn(startListen, T$.VoidTovoid());
      function stopListen() {
        onSnapshotUnsubscribe$35get()();
      }
      dart.fn(stopListen, T$.VoidTovoid());
      return controller$35set(T$.StreamControllerOfDocumentSnapshot().broadcast({onListen: startListen, onCancel: stopListen, sync: true}));
    }
    set(data, options = null) {
      let jsObjectSet = options != null ? dart.global.firebase_firestore.setDoc(this.jsObject, utils$1.jsify(data), options) : dart.global.firebase_firestore.setDoc(this.jsObject, utils$1.jsify(data));
      return utils$0.handleThenable(dart.void, jsObjectSet);
    }
    update(data) {
      let alternatingFieldValues = data[S$.$keys][S$.$map](core.List, dart.fn(e => [utils$1.jsify(e), utils$1.jsify(data[S$.$_get](e))], T$.FieldPathToList()))[S$.$expand](dart.dynamic, dart.fn(e => e, T$.ListToList()))[S$.$toList]();
      return utils$0.handleThenable(dart.void, dart.packageJSType("Promise", false).as(utils$0.callMethod(dart.global.firebase_firestore.updateDoc, "apply", [null, (() => {
          let t87 = [this.jsObject];
          t87[S$.$addAll](alternatingFieldValues);
          return t87;
        })()])));
    }
  };
  (firestore$.DocumentReference._fromJsObject = function(jsObject) {
    firestore$.DocumentReference.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.DocumentReference.prototype;
  dart.addTypeTests(firestore$.DocumentReference);
  dart.addTypeCaches(firestore$.DocumentReference);
  dart.setMethodSignature(firestore$.DocumentReference, () => ({
    __proto__: dart.getMethods(firestore$.DocumentReference.__proto__),
    collection: dart.fnType(dart.nullable(firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))), [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    get: dart.fnType(async.Future$(firestore$.DocumentSnapshot), [], [dart.nullable(dart.packageJSType("GetOptions", false))]),
    [S$._createSnapshotStream]: dart.fnType(async.StreamController$(firestore$.DocumentSnapshot), [], [dart.nullable(dart.packageJSType("DocumentListenOptions", false))]),
    set: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.dynamic)], [dart.nullable(dart.packageJSType("SetOptions", false))]),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(dart.packageJSType("firebase_firestore.FieldPath", false), dart.dynamic)])
  }));
  dart.setStaticMethodSignature(firestore$.DocumentReference, () => ['getInstance']);
  dart.setGetterSignature(firestore$.DocumentReference, () => ({
    __proto__: dart.getGetters(firestore$.DocumentReference.__proto__),
    firestore: firestore$.Firestore,
    id: core.String,
    parent: dart.nullable(firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))),
    path: core.String,
    onSnapshot: async.Stream$(firestore$.DocumentSnapshot),
    onMetadataChangesSnapshot: async.Stream$(firestore$.DocumentSnapshot)
  }));
  dart.setLibraryUri(firestore$.DocumentReference, I[53]);
  dart.setStaticFieldSignature(firestore$.DocumentReference, () => ['_expando']);
  dart.defineLazy(firestore$.DocumentReference, {
    /*firestore$.DocumentReference._expando*/get _expando() {
      return new (T$.ExpandoOfDocumentReference()).new();
    }
  }, false);
  const _is_Query_default = Symbol('_is_Query_default');
  firestore$.Query$ = dart.generic(T => {
    class Query extends js$0.JsObjectWrapper$(T) {
      get firestore() {
        return firestore$.Firestore.getInstance(this.jsObject.firestore);
      }
      static ['_#fromJsObject#tearOff'](T, jsObject) {
        return new (firestore$.Query$(T)).fromJsObject(jsObject);
      }
      endAt(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.endAt, snapshot, fieldValues))));
      }
      endBefore(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.endBefore, snapshot, fieldValues))));
      }
      get(options = null) {
        if (options == null || options.source === "default") {
          return utils$0.handleThenable(dart.packageJSType("firebase_firestore.QuerySnapshot", false), dart.global.firebase_firestore.getDocs(this.jsObject)).then(firestore$.QuerySnapshot, C[117] || CT.C117);
        } else if (options.source === "server") {
          return utils$0.handleThenable(dart.packageJSType("firebase_firestore.QuerySnapshot", false), dart.global.firebase_firestore.getDocsFromServer(this.jsObject)).then(firestore$.QuerySnapshot, C[117] || CT.C117);
        } else {
          return utils$0.handleThenable(dart.packageJSType("firebase_firestore.QuerySnapshot", false), dart.global.firebase_firestore.getDocsFromCache(this.jsObject)).then(firestore$.QuerySnapshot, C[117] || CT.C117);
        }
      }
      limit(limit) {
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.global.firebase_firestore.limit(limit)));
      }
      limitToLast(limit) {
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.global.firebase_firestore.limitToLast(limit)));
      }
      get onSnapshot() {
        let t89, t88;
        t88 = this[S$.__Query_onSnapshot];
        return t88 == null ? (t89 = this[S$._createSnapshotStream](false).stream, this[S$.__Query_onSnapshot] == null ? this[S$.__Query_onSnapshot] = t89 : dart.throw(new _internal.LateError.fieldADI("onSnapshot"))) : t88;
      }
      get onSnapshotMetadata() {
        let t89, t88;
        t88 = this[S$.__Query_onSnapshotMetadata];
        return t88 == null ? (t89 = this[S$._createSnapshotStream](true).stream, this[S$.__Query_onSnapshotMetadata] == null ? this[S$.__Query_onSnapshotMetadata] = t89 : dart.throw(new _internal.LateError.fieldADI("onSnapshotMetadata"))) : t88;
      }
      [S$._createSnapshotStream](includeMetadataChanges) {
        let onSnapshotUnsubscribe = null;
        function onSnapshotUnsubscribe$35get() {
          let t89;
          t89 = onSnapshotUnsubscribe;
          return t89 == null ? dart.throw(new _internal.LateError.localNI("onSnapshotUnsubscribe")) : t89;
        }
        function onSnapshotUnsubscribe$35set(onSnapshotUnsubscribe$35param) {
          return onSnapshotUnsubscribe = onSnapshotUnsubscribe$35param;
        }
        let controller = null;
        function controller$35get() {
          let t92;
          t92 = controller;
          return t92 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t92;
        }
        function controller$35set(controller$35param) {
          return controller = controller$35param;
        }
        let nextWrapper = js.allowInterop(T$.QuerySnapshotJsImplToNull(), dart.fn(snapshot => {
          controller$35get().add(new firestore$.QuerySnapshot._fromJsObject(snapshot));
        }, T$.QuerySnapshotJsImplToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => controller$35get().addError(core.Object.as(e)), T$.dynamicTovoid()));
        let options = {includeMetadataChanges: includeMetadataChanges};
        const startListen = () => {
          onSnapshotUnsubscribe$35set(dart.global.firebase_firestore.onSnapshot(this.jsObject, options, dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper)));
        };
        dart.fn(startListen, T$.VoidTovoid());
        function stopListen() {
          onSnapshotUnsubscribe$35get()();
        }
        dart.fn(stopListen, T$.VoidTovoid());
        return controller$35set(T$.StreamControllerOfQuerySnapshot().broadcast({onListen: startListen, onCancel: stopListen, sync: true}));
      }
      orderBy(fieldPath, directionStr = null) {
        let jsObjectOrderBy = directionStr != null ? dart.global.firebase_firestore.orderBy(fieldPath, directionStr) : dart.global.firebase_firestore.orderBy(fieldPath);
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, jsObjectOrderBy));
      }
      startAfter(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.startAfter, snapshot, fieldValues))));
      }
      startAt(opts) {
        let snapshot = opts && 'snapshot' in opts ? opts.snapshot : null;
        let fieldValues = opts && 'fieldValues' in opts ? opts.fieldValues : null;
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._createQueryConstraint](dart.dynamic, dart.global.firebase_firestore.startAt, snapshot, fieldValues))));
      }
      where(fieldPath, opStr, value) {
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.global.firebase_firestore.where(fieldPath, opStr, utils$1.jsify(value))));
      }
      [S$._createQueryConstraint](S, method, snapshot, fieldValues) {
        if (snapshot == null && fieldValues == null) {
          dart.throw(new core.ArgumentError.new("Please provide either snapshot or fieldValues parameter."));
        }
        let args = snapshot != null ? T$.JSArrayOfDocumentSnapshotJsImpl().of([snapshot.jsObject]) : dart.nullCheck(fieldValues)[S$.$map](dart.dynamic, C[115] || CT.C115)[S$.$toList]();
        return dart.nullable(S).as(utils$0.callMethod(method, "apply", [null, utils$1.jsify(args)]));
      }
      [S$._parseFilterWith](map) {
        if (map[S$.$_get]("fieldPath") != null) {
          let fieldPath = encode_utility.EncodeUtility.valueEncode(map[S$.$_get]("fieldPath"));
          let opStr = core.String.as(dart.nullCheck(map[S$.$_get]("op")));
          let value = encode_utility.EncodeUtility.valueEncode(map[S$.$_get]("value"));
          return dart.global.firebase_firestore.where(fieldPath, opStr, utils$1.jsify(value));
        }
        let opStr = core.String.as(dart.nullCheck(map[S$.$_get]("op")));
        let filters = core.List.as(dart.nullCheck(map[S$.$_get]("queries")));
        let jsFilters = [];
        for (let t94 of filters) {
          let filter = T$.MapOfString$ObjectN().as(t94);
          jsFilters[S$.$add](this[S$._parseFilterWith](filter));
        }
        if (opStr === "OR") {
          return core.Object.as(utils$0.callMethod(dart.global.firebase_firestore.or, "apply", [null, jsFilters]));
        } else if (opStr === "AND") {
          return core.Object.as(utils$0.callMethod(dart.global.firebase_firestore.and, "apply", [null, jsFilters]));
        }
        dart.throw(core.Exception.new("InvalidOperator"));
      }
      filterWith(map) {
        return new (T$.QueryOfQueryJsImpl()).fromJsObject(dart.global.firebase_firestore.query(this.jsObject, dart.packageJSType("firebase_firestore.QueryConstraint", false).as(this[S$._parseFilterWith](map))));
      }
    }
    (Query.fromJsObject = function(jsObject) {
      this[S$.__Query_onSnapshot] = null;
      this[S$.__Query_onSnapshotMetadata] = null;
      Query.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = Query.prototype;
    dart.addTypeTests(Query);
    Query.prototype[_is_Query_default] = true;
    dart.addTypeCaches(Query);
    dart.setMethodSignature(Query, () => ({
      __proto__: dart.getMethods(Query.__proto__),
      endAt: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore$.DocumentSnapshot)}, {}),
      endBefore: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore$.DocumentSnapshot)}, {}),
      get: dart.fnType(async.Future$(firestore$.QuerySnapshot), [], [dart.nullable(dart.packageJSType("GetOptions", false))]),
      limit: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [core.num]),
      limitToLast: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [core.num]),
      [S$._createSnapshotStream]: dart.fnType(async.StreamController$(firestore$.QuerySnapshot), [core.bool]),
      orderBy: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [dart.dynamic], [dart.nullable(core.String)]),
      startAfter: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore$.DocumentSnapshot)}, {}),
      startAt: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [], {fieldValues: dart.nullable(core.List), snapshot: dart.nullable(firestore$.DocumentSnapshot)}, {}),
      where: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [dart.dynamic, core.String, dart.dynamic]),
      [S$._createQueryConstraint]: dart.gFnType(S => [dart.nullable(S), [core.Object, dart.nullable(firestore$.DocumentSnapshot), dart.nullable(core.List)]], S => [dart.nullable(core.Object)]),
      [S$._parseFilterWith]: dart.fnType(core.Object, [core.Map$(core.String, dart.nullable(core.Object))]),
      filterWith: dart.fnType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)), [core.Map$(core.String, dart.nullable(core.Object))])
    }));
    dart.setGetterSignature(Query, () => ({
      __proto__: dart.getGetters(Query.__proto__),
      firestore: firestore$.Firestore,
      onSnapshot: async.Stream$(firestore$.QuerySnapshot),
      onSnapshotMetadata: async.Stream$(firestore$.QuerySnapshot)
    }));
    dart.setLibraryUri(Query, I[53]);
    dart.setFieldSignature(Query, () => ({
      __proto__: dart.getFields(Query.__proto__),
      [S$.__Query_onSnapshot]: dart.fieldType(dart.nullable(async.Stream$(firestore$.QuerySnapshot))),
      [S$.__Query_onSnapshotMetadata]: dart.fieldType(dart.nullable(async.Stream$(firestore$.QuerySnapshot)))
    }));
    return Query;
  });
  firestore$.Query = firestore$.Query$();
  dart.addTypeTests(firestore$.Query, _is_Query_default);
  const _is_CollectionReference_default = Symbol('_is_CollectionReference_default');
  firestore$.CollectionReference$ = dart.generic(T => {
    class CollectionReference extends firestore$.Query$(T) {
      get id() {
        return this.jsObject.id;
      }
      get parent() {
        return firestore$.DocumentReference.getInstance(this.jsObject.parent);
      }
      get path() {
        return this.jsObject.path;
      }
      static getInstance(jsObject) {
        let t98, t97, t96, t95;
        t95 = firestore$.CollectionReference._expando;
        t96 = jsObject;
        t97 = t95._get(t96);
        return t97 == null ? (t98 = new (T$.CollectionReferenceOfCollectionReferenceJsImpl())._fromJsObject(jsObject), t95._set(t96, t98), t98) : t97;
      }
      static new() {
        return new (firestore$.CollectionReference$(T))._fromJsObject(new dart.global.firebase_firestore.CollectionReference());
      }
      static ['_#new#tearOff'](T) {
        return firestore$.CollectionReference$(T).new();
      }
      static ['_#_fromJsObject#tearOff'](T, jsObject) {
        return new (firestore$.CollectionReference$(T))._fromJsObject(jsObject);
      }
      add(data) {
        return utils$0.handleThenable(dart.packageJSType("firebase_firestore.DocumentReference", false), dart.global.firebase_firestore.addDoc(this.jsObject, utils$1.jsify(data))).then(firestore$.DocumentReference, C[118] || CT.C118);
      }
      doc(documentPath = null) {
        let ref = documentPath != null ? dart.global.firebase_firestore.doc(this.jsObject, documentPath) : dart.global.firebase_firestore.doc(this.jsObject);
        return firestore$.DocumentReference.getInstance(ref);
      }
      isEqual(other) {
        return dart.global.firebase_firestore.queryEqual(this.jsObject, other.jsObject);
      }
    }
    (CollectionReference._fromJsObject = function(jsObject) {
      CollectionReference.__proto__.fromJsObject.call(this, T.as(jsObject));
      ;
    }).prototype = CollectionReference.prototype;
    dart.addTypeTests(CollectionReference);
    CollectionReference.prototype[_is_CollectionReference_default] = true;
    dart.addTypeCaches(CollectionReference);
    dart.setMethodSignature(CollectionReference, () => ({
      __proto__: dart.getMethods(CollectionReference.__proto__),
      add: dart.fnType(async.Future$(firestore$.DocumentReference), [core.Map$(core.String, dart.dynamic)]),
      doc: dart.fnType(firestore$.DocumentReference, [], [dart.nullable(core.String)]),
      isEqual: dart.fnType(core.bool, [firestore$.CollectionReference$(dart.packageJSType("firebase_firestore.CollectionReference", false))])
    }));
    dart.setStaticMethodSignature(CollectionReference, () => ['getInstance', 'new']);
    dart.setGetterSignature(CollectionReference, () => ({
      __proto__: dart.getGetters(CollectionReference.__proto__),
      id: core.String,
      parent: dart.nullable(firestore$.DocumentReference),
      path: core.String
    }));
    dart.setLibraryUri(CollectionReference, I[53]);
    dart.setStaticFieldSignature(CollectionReference, () => ['_expando']);
    return CollectionReference;
  });
  firestore$.CollectionReference = firestore$.CollectionReference$();
  dart.defineLazy(firestore$.CollectionReference, {
    /*firestore$.CollectionReference._expando*/get _expando() {
      return new (T$.ExpandoOfCollectionReferenceOfCollectionReferenceJsImpl()).new();
    }
  }, false);
  dart.addTypeTests(firestore$.CollectionReference, _is_CollectionReference_default);
  firestore$.DocumentChange = class DocumentChange extends js$0.JsObjectWrapper$(dart.packageJSType("DocumentChangeJsImpl", false)) {
    get type() {
      return this.jsObject.type;
    }
    get doc() {
      return firestore$.DocumentSnapshot.getInstance(this.jsObject.doc);
    }
    get oldIndex() {
      return this.jsObject.oldIndex;
    }
    get newIndex() {
      return this.jsObject.newIndex;
    }
    static getInstance(jsObject) {
      let t98, t97, t96, t95;
      t95 = firestore$.DocumentChange._expando;
      t96 = jsObject;
      t97 = t95._get(t96);
      return t97 == null ? (t98 = new firestore$.DocumentChange._fromJsObject(jsObject), t95._set(t96, t98), t98) : t97;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.DocumentChange._fromJsObject(jsObject);
    }
  };
  (firestore$.DocumentChange._fromJsObject = function(jsObject) {
    firestore$.DocumentChange.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.DocumentChange.prototype;
  dart.addTypeTests(firestore$.DocumentChange);
  dart.addTypeCaches(firestore$.DocumentChange);
  dart.setStaticMethodSignature(firestore$.DocumentChange, () => ['getInstance']);
  dart.setGetterSignature(firestore$.DocumentChange, () => ({
    __proto__: dart.getGetters(firestore$.DocumentChange.__proto__),
    type: core.String,
    doc: dart.nullable(firestore$.DocumentSnapshot),
    oldIndex: core.num,
    newIndex: core.num
  }));
  dart.setLibraryUri(firestore$.DocumentChange, I[53]);
  dart.setStaticFieldSignature(firestore$.DocumentChange, () => ['_expando']);
  dart.defineLazy(firestore$.DocumentChange, {
    /*firestore$.DocumentChange._expando*/get _expando() {
      return new (T$.ExpandoOfDocumentChange()).new();
    }
  }, false);
  firestore$.DocumentSnapshot = class DocumentSnapshot extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.DocumentSnapshot", false)) {
    get exists() {
      return this.jsObject.exists();
    }
    get id() {
      return this.jsObject.id;
    }
    get metadata() {
      return this.jsObject.metadata;
    }
    get ref() {
      return firestore$.DocumentReference.getInstance(this.jsObject.ref);
    }
    static getInstance(jsObject) {
      let t98, t97, t96, t95;
      t95 = firestore$.DocumentSnapshot._expando;
      t96 = jsObject;
      t97 = t95._get(t96);
      return t97 == null ? (t98 = new firestore$.DocumentSnapshot._fromJsObject(jsObject), t95._set(t96, t98), t98) : t97;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.DocumentSnapshot._fromJsObject(jsObject);
    }
    data(options = null) {
      return T$.MapNOfString$dynamic().as(utils$1.dartify(this.jsObject.data(options)));
    }
    get(fieldPath) {
      return utils$1.dartify(this.jsObject.get(fieldPath));
    }
    isEqual(other) {
      return dart.global.firebase_firestore.snapshotEqual(this.jsObject, other.jsObject);
    }
  };
  (firestore$.DocumentSnapshot._fromJsObject = function(jsObject) {
    firestore$.DocumentSnapshot.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.DocumentSnapshot.prototype;
  dart.addTypeTests(firestore$.DocumentSnapshot);
  dart.addTypeCaches(firestore$.DocumentSnapshot);
  dart.setMethodSignature(firestore$.DocumentSnapshot, () => ({
    __proto__: dart.getMethods(firestore$.DocumentSnapshot.__proto__),
    data: dart.fnType(dart.nullable(core.Map$(core.String, dart.dynamic)), [], [dart.nullable(dart.packageJSType("SnapshotOptions", false))]),
    get: dart.fnType(dart.dynamic, [dart.dynamic]),
    isEqual: dart.fnType(core.bool, [firestore$.DocumentSnapshot])
  }));
  dart.setStaticMethodSignature(firestore$.DocumentSnapshot, () => ['getInstance']);
  dart.setGetterSignature(firestore$.DocumentSnapshot, () => ({
    __proto__: dart.getGetters(firestore$.DocumentSnapshot.__proto__),
    exists: core.bool,
    id: core.String,
    metadata: dart.packageJSType("firebase_firestore.SnapshotMetadata", false),
    ref: dart.nullable(firestore$.DocumentReference)
  }));
  dart.setLibraryUri(firestore$.DocumentSnapshot, I[53]);
  dart.setStaticFieldSignature(firestore$.DocumentSnapshot, () => ['_expando']);
  dart.defineLazy(firestore$.DocumentSnapshot, {
    /*firestore$.DocumentSnapshot._expando*/get _expando() {
      return new (T$.ExpandoOfDocumentSnapshot()).new();
    }
  }, false);
  firestore$.QuerySnapshot = class QuerySnapshot extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.QuerySnapshot", false)) {
    docChanges(options = null) {
      let changes = options != null ? this.jsObject.docChanges(dart.nullable(dart.packageJSType("SnapshotListenOptions", false)).as(utils$1.jsify(options))) : this.jsObject.docChanges();
      return changes[S$.$map](firestore$.DocumentChange, dart.fn(e => firestore$.DocumentChange.getInstance(dart.packageJSType("DocumentChangeJsImpl", false).as(e)), T$.dynamicToDocumentChange()))[S$.$toList]();
    }
    get docs() {
      return this.jsObject.docs[S$.$map](firestore$.DocumentSnapshot, dart.fn(e => firestore$.DocumentSnapshot.getInstance(dart.packageJSType("firebase_firestore.DocumentSnapshot", false).as(e)), T$.dynamicToDocumentSnapshot()))[S$.$toList]();
    }
    get empty() {
      return this.jsObject.empty;
    }
    get metadata() {
      return this.jsObject.metadata;
    }
    get query() {
      return new (T$.QueryOfQueryJsImpl()).fromJsObject(this.jsObject.query);
    }
    get size() {
      return this.jsObject.size;
    }
    static getInstance(jsObject) {
      let t98, t97, t96, t95;
      t95 = firestore$.QuerySnapshot._expando;
      t96 = jsObject;
      t97 = t95._get(t96);
      return t97 == null ? (t98 = new firestore$.QuerySnapshot._fromJsObject(jsObject), t95._set(t96, t98), t98) : t97;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.QuerySnapshot._fromJsObject(jsObject);
    }
    forEach(callback) {
      let callbackWrap = js.allowInterop(T$.dynamicTodynamic(), dart.fn(s => callback(firestore$.DocumentSnapshot.getInstance(dart.packageJSType("firebase_firestore.DocumentSnapshot", false).as(s))), T$.dynamicTodynamic()));
      return this.jsObject.forEach(dart.assertInterop(callbackWrap));
    }
    isEqual(other) {
      return dart.global.firebase_firestore.snapshotEqual(this.jsObject, other.jsObject);
    }
  };
  (firestore$.QuerySnapshot._fromJsObject = function(jsObject) {
    firestore$.QuerySnapshot.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.QuerySnapshot.prototype;
  dart.addTypeTests(firestore$.QuerySnapshot);
  dart.addTypeCaches(firestore$.QuerySnapshot);
  dart.setMethodSignature(firestore$.QuerySnapshot, () => ({
    __proto__: dart.getMethods(firestore$.QuerySnapshot.__proto__),
    docChanges: dart.fnType(core.List$(firestore$.DocumentChange), [], [dart.nullable(dart.packageJSType("SnapshotListenOptions", false))]),
    forEach: dart.fnType(dart.void, [dart.fnType(dart.dynamic, [dart.nullable(firestore$.DocumentSnapshot)])]),
    isEqual: dart.fnType(core.bool, [firestore$.QuerySnapshot])
  }));
  dart.setStaticMethodSignature(firestore$.QuerySnapshot, () => ['getInstance']);
  dart.setGetterSignature(firestore$.QuerySnapshot, () => ({
    __proto__: dart.getGetters(firestore$.QuerySnapshot.__proto__),
    docs: core.List$(dart.nullable(firestore$.DocumentSnapshot)),
    empty: core.bool,
    metadata: dart.packageJSType("firebase_firestore.SnapshotMetadata", false),
    query: firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)),
    size: core.num
  }));
  dart.setLibraryUri(firestore$.QuerySnapshot, I[53]);
  dart.setStaticFieldSignature(firestore$.QuerySnapshot, () => ['_expando']);
  dart.defineLazy(firestore$.QuerySnapshot, {
    /*firestore$.QuerySnapshot._expando*/get _expando() {
      return new (T$.ExpandoOfQuerySnapshot()).new();
    }
  }, false);
  const JsObjectWrapper__Updatable$36$0 = class JsObjectWrapper__Updatable extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.Transaction", false)) {};
  (JsObjectWrapper__Updatable$36$0.fromJsObject = function(jsObject) {
    JsObjectWrapper__Updatable$36$0.__proto__.fromJsObject.call(this, jsObject);
  }).prototype = JsObjectWrapper__Updatable$36$0.prototype;
  dart.applyMixin(JsObjectWrapper__Updatable$36$0, firestore$._Updatable);
  firestore$.Transaction = class Transaction extends JsObjectWrapper__Updatable$36$0 {
    static getInstance(jsObject) {
      let t98, t97, t96, t95;
      t95 = firestore$.Transaction._expando;
      t96 = jsObject;
      t97 = t95._get(t96);
      return t97 == null ? (t98 = new firestore$.Transaction._fromJsObject(jsObject), t95._set(t96, t98), t98) : t97;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.Transaction._fromJsObject(jsObject);
    }
    delete(documentRef) {
      return firestore$.Transaction.getInstance(this.jsObject.delete(documentRef.jsObject));
    }
    get(documentRef) {
      return utils$0.handleThenable(dart.packageJSType("firebase_firestore.DocumentSnapshot", false), this.jsObject.get(documentRef.jsObject)).then(firestore$.DocumentSnapshot, C[116] || CT.C116);
    }
    set(documentRef, data, options = null) {
      let jsObjectSet = options != null ? this.jsObject.set(documentRef.jsObject, utils$1.jsify(data), options) : this.jsObject.set(documentRef.jsObject, utils$1.jsify(data));
      return firestore$.Transaction.getInstance(jsObjectSet);
    }
    update(documentRef, data) {
      return firestore$.Transaction.getInstance(dart.packageJSType("firebase_firestore.Transaction", false).as(this[S$._wrapUpdateFunctionCall](dart.dynamic, this.jsObject, data, documentRef)));
    }
  };
  (firestore$.Transaction._fromJsObject = function(jsObject) {
    firestore$.Transaction.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.Transaction.prototype;
  dart.addTypeTests(firestore$.Transaction);
  dart.addTypeCaches(firestore$.Transaction);
  dart.setMethodSignature(firestore$.Transaction, () => ({
    __proto__: dart.getMethods(firestore$.Transaction.__proto__),
    delete: dart.fnType(firestore$.Transaction, [firestore$.DocumentReference]),
    get: dart.fnType(async.Future$(firestore$.DocumentSnapshot), [firestore$.DocumentReference]),
    set: dart.fnType(firestore$.Transaction, [firestore$.DocumentReference, core.Map$(core.String, dart.dynamic)], [dart.nullable(dart.packageJSType("SetOptions", false))]),
    update: dart.fnType(firestore$.Transaction, [firestore$.DocumentReference, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(firestore$.Transaction, () => ['getInstance']);
  dart.setLibraryUri(firestore$.Transaction, I[53]);
  dart.setStaticFieldSignature(firestore$.Transaction, () => ['_expando']);
  dart.defineLazy(firestore$.Transaction, {
    /*firestore$.Transaction._expando*/get _expando() {
      return new (T$.ExpandoOfTransaction()).new();
    }
  }, false);
  firestore$._FieldValueDelete = class _FieldValueDelete extends core.Object {
    [S$._jsify]() {
      return dart.global.firebase_firestore.deleteField();
    }
    toString() {
      return "FieldValue.delete()";
    }
    static ['_#new#tearOff']() {
      return new firestore$._FieldValueDelete.new();
    }
  };
  (firestore$._FieldValueDelete.new = function() {
    ;
  }).prototype = firestore$._FieldValueDelete.prototype;
  dart.addTypeTests(firestore$._FieldValueDelete);
  dart.addTypeCaches(firestore$._FieldValueDelete);
  firestore$._FieldValueDelete[dart.implements] = () => [firestore$.FieldValue];
  dart.setMethodSignature(firestore$._FieldValueDelete, () => ({
    __proto__: dart.getMethods(firestore$._FieldValueDelete.__proto__),
    [S$._jsify]: dart.fnType(dart.packageJSType("FieldValue", false), [])
  }));
  dart.setLibraryUri(firestore$._FieldValueDelete, I[53]);
  dart.defineExtensionMethods(firestore$._FieldValueDelete, ['toString']);
  firestore$._FieldValueServerTimestamp = class _FieldValueServerTimestamp extends core.Object {
    [S$._jsify]() {
      return dart.global.firebase_firestore.serverTimestamp();
    }
    toString() {
      return "FieldValue.serverTimestamp()";
    }
    static ['_#new#tearOff']() {
      return new firestore$._FieldValueServerTimestamp.new();
    }
  };
  (firestore$._FieldValueServerTimestamp.new = function() {
    ;
  }).prototype = firestore$._FieldValueServerTimestamp.prototype;
  dart.addTypeTests(firestore$._FieldValueServerTimestamp);
  dart.addTypeCaches(firestore$._FieldValueServerTimestamp);
  firestore$._FieldValueServerTimestamp[dart.implements] = () => [firestore$.FieldValue];
  dart.setMethodSignature(firestore$._FieldValueServerTimestamp, () => ({
    __proto__: dart.getMethods(firestore$._FieldValueServerTimestamp.__proto__),
    [S$._jsify]: dart.fnType(dart.packageJSType("FieldValue", false), [])
  }));
  dart.setLibraryUri(firestore$._FieldValueServerTimestamp, I[53]);
  dart.defineExtensionMethods(firestore$._FieldValueServerTimestamp, ['toString']);
  firestore$._FieldValueArray = class _FieldValueArray extends core.Object {};
  (firestore$._FieldValueArray.new = function(elements) {
    this.elements = elements;
    ;
  }).prototype = firestore$._FieldValueArray.prototype;
  dart.addTypeTests(firestore$._FieldValueArray);
  dart.addTypeCaches(firestore$._FieldValueArray);
  firestore$._FieldValueArray[dart.implements] = () => [firestore$.FieldValue];
  dart.setLibraryUri(firestore$._FieldValueArray, I[53]);
  dart.setFieldSignature(firestore$._FieldValueArray, () => ({
    __proto__: dart.getFields(firestore$._FieldValueArray.__proto__),
    elements: dart.finalFieldType(dart.nullable(core.List))
  }));
  firestore$._FieldValueArrayUnion = class _FieldValueArrayUnion extends firestore$._FieldValueArray {
    static ['_#new#tearOff'](elements) {
      return new firestore$._FieldValueArrayUnion.new(elements);
    }
    [S$._jsify]() {
      return dart.nullable(dart.packageJSType("FieldValue", false)).as(utils$0.callMethod(dart.global.firebase_firestore.arrayUnion, "apply", [null, utils$1.jsify(this.elements)]));
    }
    toString() {
      return "FieldValue.arrayUnion(" + dart.str(this.elements) + ")";
    }
  };
  (firestore$._FieldValueArrayUnion.new = function(elements) {
    firestore$._FieldValueArrayUnion.__proto__.new.call(this, elements);
    ;
  }).prototype = firestore$._FieldValueArrayUnion.prototype;
  dart.addTypeTests(firestore$._FieldValueArrayUnion);
  dart.addTypeCaches(firestore$._FieldValueArrayUnion);
  dart.setMethodSignature(firestore$._FieldValueArrayUnion, () => ({
    __proto__: dart.getMethods(firestore$._FieldValueArrayUnion.__proto__),
    [S$._jsify]: dart.fnType(dart.nullable(dart.packageJSType("FieldValue", false)), [])
  }));
  dart.setLibraryUri(firestore$._FieldValueArrayUnion, I[53]);
  dart.defineExtensionMethods(firestore$._FieldValueArrayUnion, ['toString']);
  firestore$._FieldValueArrayRemove = class _FieldValueArrayRemove extends firestore$._FieldValueArray {
    static ['_#new#tearOff'](elements) {
      return new firestore$._FieldValueArrayRemove.new(elements);
    }
    [S$._jsify]() {
      return dart.nullable(dart.packageJSType("FieldValue", false)).as(utils$0.callMethod(dart.global.firebase_firestore.arrayRemove, "apply", [null, utils$1.jsify(this.elements)]));
    }
    toString() {
      return "FieldValue.arrayRemove(" + dart.str(this.elements) + ")";
    }
  };
  (firestore$._FieldValueArrayRemove.new = function(elements) {
    firestore$._FieldValueArrayRemove.__proto__.new.call(this, elements);
    ;
  }).prototype = firestore$._FieldValueArrayRemove.prototype;
  dart.addTypeTests(firestore$._FieldValueArrayRemove);
  dart.addTypeCaches(firestore$._FieldValueArrayRemove);
  dart.setMethodSignature(firestore$._FieldValueArrayRemove, () => ({
    __proto__: dart.getMethods(firestore$._FieldValueArrayRemove.__proto__),
    [S$._jsify]: dart.fnType(dart.nullable(dart.packageJSType("FieldValue", false)), [])
  }));
  dart.setLibraryUri(firestore$._FieldValueArrayRemove, I[53]);
  dart.defineExtensionMethods(firestore$._FieldValueArrayRemove, ['toString']);
  firestore$._FieldValueIncrement = class _FieldValueIncrement extends core.Object {
    static ['_#new#tearOff'](n) {
      return new firestore$._FieldValueIncrement.new(n);
    }
    [S$._jsify]() {
      return dart.global.firebase_firestore.increment(this.n);
    }
    toString() {
      return "FieldValue.increment(" + dart.str(this.n) + ")";
    }
  };
  (firestore$._FieldValueIncrement.new = function(n) {
    this.n = n;
    ;
  }).prototype = firestore$._FieldValueIncrement.prototype;
  dart.addTypeTests(firestore$._FieldValueIncrement);
  dart.addTypeCaches(firestore$._FieldValueIncrement);
  firestore$._FieldValueIncrement[dart.implements] = () => [firestore$.FieldValue];
  dart.setMethodSignature(firestore$._FieldValueIncrement, () => ({
    __proto__: dart.getMethods(firestore$._FieldValueIncrement.__proto__),
    [S$._jsify]: dart.fnType(dart.packageJSType("FieldValue", false), [])
  }));
  dart.setLibraryUri(firestore$._FieldValueIncrement, I[53]);
  dart.setFieldSignature(firestore$._FieldValueIncrement, () => ({
    __proto__: dart.getFields(firestore$._FieldValueIncrement.__proto__),
    n: dart.finalFieldType(core.num)
  }));
  dart.defineExtensionMethods(firestore$._FieldValueIncrement, ['toString']);
  firestore$.FieldValue = class FieldValue extends core.Object {
    [S$._jsify]() {
      dart.throw(new core.UnimplementedError.new("_jsify() has not been implemented"));
    }
    static serverTimestamp() {
      return firestore$.FieldValue._serverTimestamp;
    }
    static delete() {
      return firestore$.FieldValue._delete;
    }
    static arrayUnion(elements) {
      return new firestore$._FieldValueArrayUnion.new(elements);
    }
    static arrayRemove(elements) {
      return new firestore$._FieldValueArrayRemove.new(elements);
    }
    static increment(n) {
      return new firestore$._FieldValueIncrement.new(n);
    }
  };
  (firestore$.FieldValue.__ = function() {
    ;
  }).prototype = firestore$.FieldValue.prototype;
  dart.addTypeTests(firestore$.FieldValue);
  dart.addTypeCaches(firestore$.FieldValue);
  dart.setMethodSignature(firestore$.FieldValue, () => ({
    __proto__: dart.getMethods(firestore$.FieldValue.__proto__),
    [S$._jsify]: dart.fnType(dart.nullable(dart.packageJSType("FieldValue", false)), [])
  }));
  dart.setStaticMethodSignature(firestore$.FieldValue, () => ['serverTimestamp', 'delete', 'arrayUnion', 'arrayRemove', 'increment']);
  dart.setLibraryUri(firestore$.FieldValue, I[53]);
  dart.setStaticFieldSignature(firestore$.FieldValue, () => ['_serverTimestamp', '_delete']);
  dart.defineLazy(firestore$.FieldValue, {
    /*firestore$.FieldValue._serverTimestamp*/get _serverTimestamp() {
      return new firestore$._FieldValueServerTimestamp.new();
    },
    /*firestore$.FieldValue._delete*/get _delete() {
      return new firestore$._FieldValueDelete.new();
    }
  }, false);
  firestore$.AggregateQuery = class AggregateQuery extends core.Object {
    static ['_#new#tearOff'](query) {
      return new firestore$.AggregateQuery.new(query);
    }
    static name_(query) {
      return core['EnumName|get#name'](query.type) + "_" + dart.str(query.field);
    }
    get(aggregateQueries) {
      return async.async(firestore$.AggregateQuerySnapshot, (function* get() {
        let requests = new (T$.IdentityMapOfString$Object()).new();
        for (let aggregateQuery of aggregateQueries) {
          switch (aggregateQuery.type) {
            case C[119] || CT.C119:
              {
                requests[S$.$_set]("count", dart.global.firebase_firestore.count());
                break;
              }
            case C[120] || CT.C120:
              {
                requests[S$.$_set](firestore$.AggregateQuery.name_(aggregateQuery), dart.global.firebase_firestore.sum(dart.nullCheck(aggregateQuery.field)));
                break;
              }
            case C[121] || CT.C121:
              {
                requests[S$.$_set](firestore$.AggregateQuery.name_(aggregateQuery), dart.global.firebase_firestore.average(dart.nullCheck(aggregateQuery.field)));
                break;
              }
          }
        }
        return utils$0.handleThenable(dart.packageJSType("firebase_firestore.AggregateQuerySnapshot", false), dart.global.firebase_firestore.getAggregateFromServer(this[S$._jsQuery], core.Object.as(utils$1.jsify(requests)))).then(firestore$.AggregateQuerySnapshot, C[122] || CT.C122);
      }).bind(this));
    }
  };
  (firestore$.AggregateQuery.new = function(query) {
    this[S$._jsQuery] = query.jsObject;
    ;
  }).prototype = firestore$.AggregateQuery.prototype;
  dart.addTypeTests(firestore$.AggregateQuery);
  dart.addTypeCaches(firestore$.AggregateQuery);
  dart.setMethodSignature(firestore$.AggregateQuery, () => ({
    __proto__: dart.getMethods(firestore$.AggregateQuery.__proto__),
    get: dart.fnType(async.Future$(firestore$.AggregateQuerySnapshot), [core.List$(messages$46pigeon$0.AggregateQuery)])
  }));
  dart.setStaticMethodSignature(firestore$.AggregateQuery, () => ['name_']);
  dart.setLibraryUri(firestore$.AggregateQuery, I[53]);
  dart.setFieldSignature(firestore$.AggregateQuery, () => ({
    __proto__: dart.getFields(firestore$.AggregateQuery.__proto__),
    [S$._jsQuery]: dart.finalFieldType(dart.packageJSType("firebase_firestore.Query", false))
  }));
  firestore$.AggregateQuerySnapshot = class AggregateQuerySnapshot extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_firestore.AggregateQuerySnapshot", false)) {
    get [S$._data]() {
      let t95;
      t95 = this[S$.__AggregateQuerySnapshot__data];
      return t95 == null ? dart.throw(new _internal.LateError.fieldNI("_data")) : t95;
    }
    set [S$._data](_data$35param) {
      if (this[S$.__AggregateQuerySnapshot__data] == null)
        this[S$.__AggregateQuerySnapshot__data] = _data$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("_data"));
    }
    static getInstance(jsObject) {
      let t98, t97, t96, t95;
      t95 = firestore$.AggregateQuerySnapshot._expando;
      t96 = jsObject;
      t97 = t95._get(t96);
      return t97 == null ? (t98 = new firestore$.AggregateQuerySnapshot._fromJsObject(jsObject), t95._set(t96, t98), t98) : t97;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new firestore$.AggregateQuerySnapshot._fromJsObject(jsObject);
    }
    get count() {
      return T$.intN().as(this[S$._data][S$.$_get]("count"));
    }
    getDataValue(query) {
      return core.double.as(dart.nullCheck(this[S$._data][S$.$_get](firestore$.AggregateQuery.name_(query))));
    }
  };
  (firestore$.AggregateQuerySnapshot._fromJsObject = function(jsObject) {
    this[S$.__AggregateQuerySnapshot__data] = null;
    this[S$.__AggregateQuerySnapshot__data] = T$.LinkedHashMapOfString$Object().from(core.Map.as(utils$1.dartify(jsObject.data())));
    firestore$.AggregateQuerySnapshot.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = firestore$.AggregateQuerySnapshot.prototype;
  dart.addTypeTests(firestore$.AggregateQuerySnapshot);
  dart.addTypeCaches(firestore$.AggregateQuerySnapshot);
  dart.setMethodSignature(firestore$.AggregateQuerySnapshot, () => ({
    __proto__: dart.getMethods(firestore$.AggregateQuerySnapshot.__proto__),
    getDataValue: dart.fnType(core.double, [messages$46pigeon$0.AggregateQuery])
  }));
  dart.setStaticMethodSignature(firestore$.AggregateQuerySnapshot, () => ['getInstance']);
  dart.setGetterSignature(firestore$.AggregateQuerySnapshot, () => ({
    __proto__: dart.getGetters(firestore$.AggregateQuerySnapshot.__proto__),
    [S$._data]: core.Map$(core.String, core.Object),
    count: dart.nullable(core.int)
  }));
  dart.setSetterSignature(firestore$.AggregateQuerySnapshot, () => ({
    __proto__: dart.getSetters(firestore$.AggregateQuerySnapshot.__proto__),
    [S$._data]: core.Map$(core.String, core.Object)
  }));
  dart.setLibraryUri(firestore$.AggregateQuerySnapshot, I[53]);
  dart.setFieldSignature(firestore$.AggregateQuerySnapshot, () => ({
    __proto__: dart.getFields(firestore$.AggregateQuerySnapshot.__proto__),
    [S$.__AggregateQuerySnapshot__data]: dart.fieldType(dart.nullable(core.Map$(core.String, core.Object)))
  }));
  dart.setStaticFieldSignature(firestore$.AggregateQuerySnapshot, () => ['_expando']);
  dart.defineLazy(firestore$.AggregateQuerySnapshot, {
    /*firestore$.AggregateQuerySnapshot._expando*/get _expando() {
      return new (T$.ExpandoOfAggregateQuerySnapshot()).new();
    }
  }, false);
  firestore$.getFirestoreInstance = function getFirestoreInstance(app = null, settings = null, databaseURL = null) {
    let t95;
    let database = (t95 = databaseURL, t95 == null ? "(default)" : t95);
    if (app != null && settings != null) {
      return firestore$.Firestore.getInstance(dart.global.firebase_firestore.initializeFirestore(app.jsObject, settings, database));
    }
    return firestore$.Firestore.getInstance(app != null ? dart.global.firebase_firestore.getFirestore(app.jsObject, database) : dart.global.firebase_firestore.getFirestore());
  };
  firestore$.jsifyFieldValue = function jsifyFieldValue(fieldValue) {
    return fieldValue[S$._jsify]();
  };
  platform_interface_transaction.TransactionPlatform = class TransactionPlatform extends plugin_platform_interface.PlatformInterface {
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_transaction.TransactionPlatform._token);
    }
    get commands() {
      dart.throw(new core.UnimplementedError.new("commands is not implemented"));
    }
    get(documentPath) {
      dart.throw(new core.UnimplementedError.new("get() is not implemented"));
    }
    delete(documentPath) {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    update(documentPath, data) {
      dart.throw(new core.UnimplementedError.new("update() is not implemented"));
    }
    set(documentPath, data, options = null) {
      dart.throw(new core.UnimplementedError.new("set() is not implemented"));
    }
  };
  (platform_interface_transaction.TransactionPlatform.new = function() {
    platform_interface_transaction.TransactionPlatform.__proto__.new.call(this, {token: platform_interface_transaction.TransactionPlatform._token});
    ;
  }).prototype = platform_interface_transaction.TransactionPlatform.prototype;
  dart.addTypeTests(platform_interface_transaction.TransactionPlatform);
  dart.addTypeCaches(platform_interface_transaction.TransactionPlatform);
  dart.setMethodSignature(platform_interface_transaction.TransactionPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_transaction.TransactionPlatform.__proto__),
    get: dart.fnType(async.Future$(platform_interface_document_snapshot.DocumentSnapshotPlatform), [core.String]),
    delete: dart.fnType(platform_interface_transaction.TransactionPlatform, [core.String]),
    update: dart.fnType(platform_interface_transaction.TransactionPlatform, [core.String, core.Map$(core.String, dart.dynamic)]),
    set: dart.fnType(platform_interface_transaction.TransactionPlatform, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)])
  }));
  dart.setStaticMethodSignature(platform_interface_transaction.TransactionPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_transaction.TransactionPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_transaction.TransactionPlatform.__proto__),
    commands: core.List$(messages$46pigeon$0.PigeonTransactionCommand)
  }));
  dart.setLibraryUri(platform_interface_transaction.TransactionPlatform, I[54]);
  dart.setStaticFieldSignature(platform_interface_transaction.TransactionPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_transaction.TransactionPlatform, {
    /*platform_interface_transaction.TransactionPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  transaction_web.TransactionWeb = class TransactionWeb extends platform_interface_transaction.TransactionPlatform {
    static ['_#new#tearOff'](_firestore, _webFirestoreDelegate, _webTransactionDelegate) {
      return new transaction_web.TransactionWeb.new(_firestore, _webFirestoreDelegate, _webTransactionDelegate);
    }
    delete(documentPath) {
      this[S$._webTransactionDelegate].delete(this[S$._webFirestoreDelegate].doc(documentPath));
      return this;
    }
    get(documentPath) {
      return internals.convertWebExceptions(T$.FutureOfDocumentSnapshotPlatform(), dart.fn(() => async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function*() {
        let webDocumentSnapshot = (yield this[S$._webTransactionDelegate].get(this[S$._webFirestoreDelegate].doc(documentPath)));
        return web_utils.convertWebDocumentSnapshot(this[S$._firestore$1], webDocumentSnapshot, messages$46pigeon$0.ServerTimestampBehavior.none);
      }).bind(this)), T$.VoidToFutureOfDocumentSnapshotPlatform()));
    }
    set(documentPath, data, options = null) {
      this[S$._webTransactionDelegate].set(this[S$._webFirestoreDelegate].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)), web_utils.convertSetOptions(options));
      return this;
    }
    update(documentPath, data) {
      this[S$._webTransactionDelegate].update(this[S$._webFirestoreDelegate].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)));
      return this;
    }
  };
  (transaction_web.TransactionWeb.new = function(_firestore, _webFirestoreDelegate, _webTransactionDelegate) {
    this[S$._firestore$1] = _firestore;
    this[S$._webFirestoreDelegate] = _webFirestoreDelegate;
    this[S$._webTransactionDelegate] = _webTransactionDelegate;
    transaction_web.TransactionWeb.__proto__.new.call(this);
    ;
  }).prototype = transaction_web.TransactionWeb.prototype;
  dart.addTypeTests(transaction_web.TransactionWeb);
  dart.addTypeCaches(transaction_web.TransactionWeb);
  dart.setMethodSignature(transaction_web.TransactionWeb, () => ({
    __proto__: dart.getMethods(transaction_web.TransactionWeb.__proto__),
    delete: dart.fnType(transaction_web.TransactionWeb, [core.String]),
    set: dart.fnType(transaction_web.TransactionWeb, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(transaction_web.TransactionWeb, [core.String, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setLibraryUri(transaction_web.TransactionWeb, I[55]);
  dart.setFieldSignature(transaction_web.TransactionWeb, () => ({
    __proto__: dart.getFields(transaction_web.TransactionWeb.__proto__),
    [S$._webFirestoreDelegate]: dart.finalFieldType(firestore$.Firestore),
    [S$._webTransactionDelegate]: dart.finalFieldType(firestore$.Transaction),
    [S$._firestore$1]: dart.fieldType(platform_interface_firestore.FirebaseFirestorePlatform)
  }));
  platform_interface_write_batch.WriteBatchPlatform = class WriteBatchPlatform extends plugin_platform_interface.PlatformInterface {
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_write_batch.WriteBatchPlatform._token);
    }
    commit() {
      return async.async(dart.void, function* commit() {
        dart.throw(new core.UnimplementedError.new("commit() is not implemented"));
      });
    }
    delete(documentPath) {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    set(documentPath, data, options = null) {
      dart.throw(new core.UnimplementedError.new("set() is not implemented"));
    }
    update(documentPath, data) {
      dart.throw(new core.UnimplementedError.new("update() is not implemented"));
    }
  };
  (platform_interface_write_batch.WriteBatchPlatform.new = function() {
    platform_interface_write_batch.WriteBatchPlatform.__proto__.new.call(this, {token: platform_interface_write_batch.WriteBatchPlatform._token});
    ;
  }).prototype = platform_interface_write_batch.WriteBatchPlatform.prototype;
  dart.addTypeTests(platform_interface_write_batch.WriteBatchPlatform);
  dart.addTypeCaches(platform_interface_write_batch.WriteBatchPlatform);
  dart.setMethodSignature(platform_interface_write_batch.WriteBatchPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_write_batch.WriteBatchPlatform.__proto__),
    commit: dart.fnType(async.Future$(dart.void), []),
    delete: dart.fnType(dart.void, [core.String]),
    set: dart.fnType(dart.void, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(dart.void, [core.String, core.Map$(core.String, dart.dynamic)])
  }));
  dart.setStaticMethodSignature(platform_interface_write_batch.WriteBatchPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_write_batch.WriteBatchPlatform, I[56]);
  dart.setStaticFieldSignature(platform_interface_write_batch.WriteBatchPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_write_batch.WriteBatchPlatform, {
    /*platform_interface_write_batch.WriteBatchPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  write_batch_web.WriteBatchWeb = class WriteBatchWeb extends platform_interface_write_batch.WriteBatchPlatform {
    static ['_#new#tearOff'](_webFirestoreDelegate) {
      return new write_batch_web.WriteBatchWeb.new(_webFirestoreDelegate);
    }
    commit() {
      return internals.convertWebExceptions(T$.FutureOfvoid(), dart.bind(this[S$._webWriteBatchDelegate], 'commit'));
    }
    delete(documentPath) {
      this[S$._webWriteBatchDelegate].delete(this[S$._webFirestoreDelegate$1].doc(documentPath));
    }
    set(documentPath, data, options = null) {
      this[S$._webWriteBatchDelegate].set(this[S$._webFirestoreDelegate$1].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)), web_utils.convertSetOptions(options));
    }
    update(documentPath, data) {
      this[S$._webWriteBatchDelegate].update(this[S$._webFirestoreDelegate$1].doc(documentPath), dart.nullCheck(encode_utility.EncodeUtility.encodeMapData(data)));
    }
  };
  (write_batch_web.WriteBatchWeb.new = function(_webFirestoreDelegate) {
    this[S$._webFirestoreDelegate$1] = _webFirestoreDelegate;
    this[S$._webWriteBatchDelegate] = dart.nullCheck(_webFirestoreDelegate.batch());
    write_batch_web.WriteBatchWeb.__proto__.new.call(this);
    ;
  }).prototype = write_batch_web.WriteBatchWeb.prototype;
  dart.addTypeTests(write_batch_web.WriteBatchWeb);
  dart.addTypeCaches(write_batch_web.WriteBatchWeb);
  dart.setLibraryUri(write_batch_web.WriteBatchWeb, I[57]);
  dart.setFieldSignature(write_batch_web.WriteBatchWeb, () => ({
    __proto__: dart.getFields(write_batch_web.WriteBatchWeb.__proto__),
    [S$._webFirestoreDelegate$1]: dart.finalFieldType(firestore$.Firestore),
    [S$._webWriteBatchDelegate]: dart.fieldType(firestore$.WriteBatch)
  }));
  platform_interface_multi_factor.MultiFactorPlatform = class MultiFactorPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[S$.auth];
    }
    set auth(value) {
      super.auth = value;
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      dart.throw(new core.UnimplementedError.new("enroll() is not implemented"));
    }
    getSession() {
      dart.throw(new core.UnimplementedError.new("getSession() is not implemented"));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      dart.throw(new core.UnimplementedError.new("unenroll() is not implemented"));
    }
    getEnrolledFactors() {
      dart.throw(new core.UnimplementedError.new("getEnrolledFactors() is not implemented"));
    }
  };
  (platform_interface_multi_factor.MultiFactorPlatform.new = function(auth) {
    this[S$.auth] = auth;
    platform_interface_multi_factor.MultiFactorPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.MultiFactorPlatform.__proto__),
    enroll: dart.fnType(async.Future$(dart.void), [platform_interface_multi_factor.MultiFactorAssertionPlatform], {displayName: dart.nullable(core.String)}, {}),
    getSession: dart.fnType(async.Future$(platform_interface_multi_factor.MultiFactorSession), []),
    unenroll: dart.fnType(async.Future$(dart.void), [], {factorUid: dart.nullable(core.String), multiFactorInfo: dart.nullable(platform_interface_multi_factor.MultiFactorInfo)}, {}),
    getEnrolledFactors: dart.fnType(async.Future$(core.List$(platform_interface_multi_factor.MultiFactorInfo)), [])
  }));
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorPlatform, I[58]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorPlatform, {
    /*platform_interface_multi_factor.MultiFactorPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorWeb = class MultiFactorWeb extends platform_interface_multi_factor.MultiFactorPlatform {
    static ['_#new#tearOff'](auth, _webMultiFactorUser) {
      return new firebase_auth_web_multi_factor.MultiFactorWeb.new(auth, _webMultiFactorUser);
    }
    getSession() {
      return async.async(platform_interface_multi_factor.MultiFactorSession, (function* getSession() {
        try {
          return web_utils$.convertMultiFactorSession(yield this[S$._webMultiFactorUser].session);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      return async.async(dart.void, (function* enroll() {
        try {
          let webAssertion = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.as(assertion);
          return yield this[S$._webMultiFactorUser].enroll(webAssertion.assertion, displayName);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      return async.async(dart.void, (function* unenroll() {
        let t98, t97;
        let uidToUnenroll = (t97 = factorUid, t97 == null ? (t98 = multiFactorInfo, t98 == null ? null : t98.uid) : t97);
        if (uidToUnenroll == null) {
          dart.throw(new core.ArgumentError.new("Either factorUid or multiFactorInfo must not be null"));
        }
        try {
          yield this[S$._webMultiFactorUser].unenroll(uidToUnenroll);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getEnrolledFactors() {
      return async.async(T$.ListOfMultiFactorInfo(), (function* getEnrolledFactors() {
        let data = this[S$._webMultiFactorUser].enrolledFactors;
        return data[S$.$map](platform_interface_multi_factor.MultiFactorInfo, C[123] || CT.C123)[S$.$toList]();
      }).bind(this));
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorWeb.new = function(auth, _webMultiFactorUser) {
    this[S$._webMultiFactorUser] = _webMultiFactorUser;
    firebase_auth_web_multi_factor.MultiFactorWeb.__proto__.new.call(this, auth);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorWeb, I[59]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorWeb.__proto__),
    [S$._webMultiFactorUser]: dart.finalFieldType(multi_factor.MultiFactorUser)
  }));
  platform_interface_multi_factor.MultiFactorAssertionPlatform = class MultiFactorAssertionPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff']() {
      return new platform_interface_multi_factor.MultiFactorAssertionPlatform.new();
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_multi_factor.MultiFactorAssertionPlatform._token);
    }
  };
  (platform_interface_multi_factor.MultiFactorAssertionPlatform.new = function() {
    platform_interface_multi_factor.MultiFactorAssertionPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorAssertionPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorAssertionPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorAssertionPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorAssertionPlatform);
  dart.setStaticMethodSignature(platform_interface_multi_factor.MultiFactorAssertionPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorAssertionPlatform, I[58]);
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorAssertionPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorAssertionPlatform, {
    /*platform_interface_multi_factor.MultiFactorAssertionPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorAssertionWeb = class MultiFactorAssertionWeb extends platform_interface_multi_factor.MultiFactorAssertionPlatform {
    get assertion() {
      return this[S$.assertion];
    }
    set assertion(value) {
      super.assertion = value;
    }
    static ['_#new#tearOff'](assertion) {
      return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(assertion);
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new = function(assertion) {
    this[S$.assertion] = assertion;
    firebase_auth_web_multi_factor.MultiFactorAssertionWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorAssertionWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorAssertionWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorAssertionWeb, I[59]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorAssertionWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorAssertionWeb.__proto__),
    assertion: dart.finalFieldType(multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false)))
  }));
  platform_interface_multi_factor.MultiFactorResolverPlatform = class MultiFactorResolverPlatform extends plugin_platform_interface.PlatformInterface {
    get hints() {
      return this[S$.hints];
    }
    set hints(value) {
      super.hints = value;
    }
    get session() {
      return this[S$.session];
    }
    set session(value) {
      super.session = value;
    }
    static ['_#new#tearOff'](hints, session) {
      return new platform_interface_multi_factor.MultiFactorResolverPlatform.new(hints, session);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_multi_factor.MultiFactorResolverPlatform._token);
    }
    resolveSignIn(assertion) {
      dart.throw(new core.UnimplementedError.new("resolveSignIn() is not implemented"));
    }
  };
  (platform_interface_multi_factor.MultiFactorResolverPlatform.new = function(hints, session) {
    this[S$.hints] = hints;
    this[S$.session] = session;
    platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.MultiFactorResolverPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorResolverPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorResolverPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorResolverPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__),
    resolveSignIn: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [platform_interface_multi_factor.MultiFactorAssertionPlatform])
  }));
  dart.setStaticMethodSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorResolverPlatform, I[58]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorResolverPlatform.__proto__),
    hints: dart.finalFieldType(core.List$(platform_interface_multi_factor.MultiFactorInfo)),
    session: dart.finalFieldType(platform_interface_multi_factor.MultiFactorSession)
  }));
  dart.setStaticFieldSignature(platform_interface_multi_factor.MultiFactorResolverPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.MultiFactorResolverPlatform, {
    /*platform_interface_multi_factor.MultiFactorResolverPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.MultiFactorResolverWeb = class MultiFactorResolverWeb extends platform_interface_multi_factor.MultiFactorResolverPlatform {
    static ['_#new#tearOff'](hints, session, _auth, _webMultiFactorResolver, _webAuth) {
      return new firebase_auth_web_multi_factor.MultiFactorResolverWeb.new(hints, session, _auth, _webMultiFactorResolver, _webAuth);
    }
    resolveSignIn(assertion) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* resolveSignIn() {
        let webAssertion = firebase_auth_web_multi_factor.MultiFactorAssertionWeb.as(assertion);
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this[S$._auth$2], yield this[S$._webMultiFactorResolver].resolveSignIn(webAssertion.assertion), this[S$._webAuth$1]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorResolverWeb.new = function(hints, session, _auth, _webMultiFactorResolver, _webAuth) {
    this[S$._auth$2] = _auth;
    this[S$._webMultiFactorResolver] = _webMultiFactorResolver;
    this[S$._webAuth$1] = _webAuth;
    firebase_auth_web_multi_factor.MultiFactorResolverWeb.__proto__.new.call(this, hints, session);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorResolverWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorResolverWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorResolverWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorResolverWeb, I[59]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorResolverWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorResolverWeb.__proto__),
    [S$._webMultiFactorResolver]: dart.finalFieldType(multi_factor.MultiFactorResolver),
    [S$._webAuth$1]: dart.finalFieldType(dart.nullable(auth$.Auth)),
    [S$._auth$2]: dart.finalFieldType(firebase_auth_web.FirebaseAuthWeb)
  }));
  platform_interface_multi_factor.MultiFactorSession = class MultiFactorSession extends core.Object {
    get id() {
      return this[S$.id$1];
    }
    set id(value) {
      super.id = value;
    }
    static ['_#new#tearOff'](id) {
      return new platform_interface_multi_factor.MultiFactorSession.new(id);
    }
  };
  (platform_interface_multi_factor.MultiFactorSession.new = function(id) {
    this[S$.id$1] = id;
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorSession.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorSession);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorSession);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorSession, I[58]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorSession, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorSession.__proto__),
    id: dart.finalFieldType(core.String)
  }));
  firebase_auth_web_multi_factor.MultiFactorSessionWeb = class MultiFactorSessionWeb extends platform_interface_multi_factor.MultiFactorSession {
    get webSession() {
      return this[S$.webSession];
    }
    set webSession(value) {
      super.webSession = value;
    }
    static ['_#new#tearOff'](id, webSession) {
      return new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new(id, webSession);
    }
  };
  (firebase_auth_web_multi_factor.MultiFactorSessionWeb.new = function(id, webSession) {
    this[S$.webSession] = webSession;
    firebase_auth_web_multi_factor.MultiFactorSessionWeb.__proto__.new.call(this, id);
    ;
  }).prototype = firebase_auth_web_multi_factor.MultiFactorSessionWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.MultiFactorSessionWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.MultiFactorSessionWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.MultiFactorSessionWeb, I[59]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.MultiFactorSessionWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.MultiFactorSessionWeb.__proto__),
    webSession: dart.finalFieldType(multi_factor.MultiFactorSession)
  }));
  platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform = class PhoneMultiFactorGeneratorPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff']() {
      return new platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.new();
    }
    static get instance() {
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance == null ? platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance = new method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new() : null;
      return dart.nullCheck(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token);
      platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance = instance;
    }
    getAssertion(credential) {
      dart.throw(new core.UnimplementedError.new("getAssertion() is not implemented"));
    }
  };
  (platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.new = function() {
    platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform.__proto__),
    getAssertion: dart.fnType(platform_interface_multi_factor.MultiFactorAssertionPlatform, [phone_auth.PhoneAuthCredential])
  }));
  dart.setStaticGetterSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, I[58]);
  dart.setStaticFieldSignature(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform, {
    /*platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb = class PhoneMultiFactorGeneratorWeb extends platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform {
    getAssertion(credential) {
      let verificationId = credential.verificationId;
      let verificationCode = credential.smsCode;
      if (verificationCode == null) {
        dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
      }
      if (verificationId == null) {
        dart.throw(new core.ArgumentError.new("verificationId must not be null"));
      }
      let cred = auth$.PhoneAuthProvider.credential(verificationId, verificationCode);
      return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(multi_factor.PhoneMultiFactorGenerator.assertion(cred));
    }
    static ['_#new#tearOff']() {
      return new firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new();
    }
  };
  (firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.new = function() {
    firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.PhoneMultiFactorGeneratorWeb, I[59]);
  platform_interface_multi_factor.TotpSecretPlatform = class TotpSecretPlatform extends plugin_platform_interface.PlatformInterface {
    get codeIntervalSeconds() {
      return this[S$.codeIntervalSeconds$1];
    }
    set codeIntervalSeconds(value) {
      super.codeIntervalSeconds = value;
    }
    get codeLength() {
      return this[S$.codeLength$1];
    }
    set codeLength(value) {
      super.codeLength = value;
    }
    get enrollmentCompletionDeadline() {
      return this[S$.enrollmentCompletionDeadline$1];
    }
    set enrollmentCompletionDeadline(value) {
      super.enrollmentCompletionDeadline = value;
    }
    get hashingAlgorithm() {
      return this[S$.hashingAlgorithm$1];
    }
    set hashingAlgorithm(value) {
      super.hashingAlgorithm = value;
    }
    get secretKey() {
      return this[S$.secretKey$1];
    }
    set secretKey(value) {
      super.secretKey = value;
    }
    static ['_#new#tearOff'](codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
      return new platform_interface_multi_factor.TotpSecretPlatform.new(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey);
    }
    generateQrCodeUrl(opts) {
      let accountName = opts && 'accountName' in opts ? opts.accountName : null;
      let issuer = opts && 'issuer' in opts ? opts.issuer : null;
      dart.throw(new core.UnimplementedError.new("generateQrCodeUrl() is not implemented"));
    }
    openInOtpApp(qrCodeUrl) {
      return async.async(dart.void, function* openInOtpApp() {
        dart.throw(new core.UnimplementedError.new("openInOtpApp() is not implemented"));
      });
    }
  };
  (platform_interface_multi_factor.TotpSecretPlatform.new = function(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
    this[S$.codeIntervalSeconds$1] = codeIntervalSeconds;
    this[S$.codeLength$1] = codeLength;
    this[S$.enrollmentCompletionDeadline$1] = enrollmentCompletionDeadline;
    this[S$.hashingAlgorithm$1] = hashingAlgorithm;
    this[S$.secretKey$1] = secretKey;
    platform_interface_multi_factor.TotpSecretPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.TotpSecretPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.TotpSecretPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.TotpSecretPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.TotpSecretPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.TotpSecretPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.TotpSecretPlatform.__proto__),
    generateQrCodeUrl: dart.fnType(async.Future$(core.String), [], {accountName: dart.nullable(core.String), issuer: dart.nullable(core.String)}, {}),
    openInOtpApp: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setLibraryUri(platform_interface_multi_factor.TotpSecretPlatform, I[58]);
  dart.setFieldSignature(platform_interface_multi_factor.TotpSecretPlatform, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.TotpSecretPlatform.__proto__),
    codeIntervalSeconds: dart.finalFieldType(dart.nullable(core.int)),
    codeLength: dart.finalFieldType(dart.nullable(core.int)),
    enrollmentCompletionDeadline: dart.finalFieldType(dart.nullable(core.DateTime)),
    hashingAlgorithm: dart.finalFieldType(dart.nullable(core.String)),
    secretKey: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(platform_interface_multi_factor.TotpSecretPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_multi_factor.TotpSecretPlatform, {
    /*platform_interface_multi_factor.TotpSecretPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.TotpSecretWeb = class TotpSecretWeb extends platform_interface_multi_factor.TotpSecretPlatform {
    get webSecret() {
      return this[S$.webSecret];
    }
    set webSecret(value) {
      super.webSecret = value;
    }
    static ['_#new#tearOff'](webSecret, codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
      return new firebase_auth_web_multi_factor.TotpSecretWeb.new(webSecret, codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey);
    }
    generateQrCodeUrl(opts) {
      let accountName = opts && 'accountName' in opts ? opts.accountName : null;
      let issuer = opts && 'issuer' in opts ? opts.issuer : null;
      return T$.FutureOfString().value(this.webSecret.generateQrCodeUrl(accountName, issuer));
    }
    openInOtpApp(qrCodeUrl) {
      return async.async(dart.void, function* openInOtpApp() {
        dart.throw(new core.UnimplementedError.new("openInOtpApp() is not available on Web"));
      });
    }
  };
  (firebase_auth_web_multi_factor.TotpSecretWeb.new = function(webSecret, codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
    this[S$.webSecret] = webSecret;
    firebase_auth_web_multi_factor.TotpSecretWeb.__proto__.new.call(this, codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey);
    ;
  }).prototype = firebase_auth_web_multi_factor.TotpSecretWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.TotpSecretWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.TotpSecretWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.TotpSecretWeb, I[59]);
  dart.setFieldSignature(firebase_auth_web_multi_factor.TotpSecretWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_multi_factor.TotpSecretWeb.__proto__),
    webSecret: dart.finalFieldType(multi_factor.TotpSecret)
  }));
  platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform = class TotpMultiFactorGeneratorPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff']() {
      return new platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.new();
    }
    static get instance() {
      platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._instance == null ? platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._instance = new method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.new() : null;
      return dart.nullCheck(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._token);
      platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._instance = instance;
    }
    generateSecret(session) {
      dart.throw(new core.UnimplementedError.new("generateSecret() is not implemented"));
    }
    getAssertionForEnrollment(secret, oneTimePassword) {
      dart.throw(new core.UnimplementedError.new("getAssertionForEnrollment() is not implemented"));
    }
    getAssertionForSignIn(enrollmentId, oneTimePassword) {
      dart.throw(new core.UnimplementedError.new("getAssertionForSignIn() is not implemented"));
    }
  };
  (platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.new = function() {
    platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.__proto__.new.call(this, {token: platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._token});
    ;
  }).prototype = platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.prototype;
  dart.addTypeTests(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform);
  dart.addTypeCaches(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform);
  dart.setMethodSignature(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform.__proto__),
    generateSecret: dart.fnType(async.Future$(platform_interface_multi_factor.TotpSecretPlatform), [platform_interface_multi_factor.MultiFactorSession]),
    getAssertionForEnrollment: dart.fnType(async.Future$(platform_interface_multi_factor.MultiFactorAssertionPlatform), [platform_interface_multi_factor.TotpSecretPlatform, core.String]),
    getAssertionForSignIn: dart.fnType(async.Future$(platform_interface_multi_factor.MultiFactorAssertionPlatform), [core.String, core.String])
  }));
  dart.setStaticGetterSignature(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, I[58]);
  dart.setStaticFieldSignature(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform, {
    /*platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb = class TotpMultiFactorGeneratorWeb extends platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform {
    generateSecret(session) {
      return async.async(platform_interface_multi_factor.TotpSecretPlatform, function* generateSecret() {
        let _webMultiFactorSession = firebase_auth_web_multi_factor.MultiFactorSessionWeb.as(session);
        let _webSecret = (yield multi_factor.TotpMultiFactorGenerator.generateSecret(_webMultiFactorSession.webSession));
        return new firebase_auth_web_multi_factor.TotpSecretWeb.new(_webSecret, _webSecret.codeInterval, _webSecret.codeLength, _webSecret.enrollmentCompletionDeadline, _webSecret.hashingAlgorithm, _webSecret.secretKey);
      });
    }
    getAssertionForEnrollment(secret, oneTimePassword) {
      return async.async(platform_interface_multi_factor.MultiFactorAssertionPlatform, function* getAssertionForEnrollment() {
        let _webSecret = firebase_auth_web_multi_factor.TotpSecretWeb.as(secret);
        let totpAssertion = multi_factor.TotpMultiFactorGenerator.assertionForEnrollment(_webSecret.webSecret, oneTimePassword);
        return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(totpAssertion);
      });
    }
    getAssertionForSignIn(enrollmentId, oneTimePassword) {
      return async.async(platform_interface_multi_factor.MultiFactorAssertionPlatform, function* getAssertionForSignIn() {
        let totpAssertion = multi_factor.TotpMultiFactorGenerator.assertionForSignIn(enrollmentId, oneTimePassword);
        return new firebase_auth_web_multi_factor.MultiFactorAssertionWeb.new(totpAssertion);
      });
    }
    static ['_#new#tearOff']() {
      return new firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb.new();
    }
  };
  (firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb.new = function() {
    firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb.prototype;
  dart.addTypeTests(firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb);
  dart.addTypeCaches(firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb);
  dart.setLibraryUri(firebase_auth_web_multi_factor.TotpMultiFactorGeneratorWeb, I[59]);
  utils$.dartify = function dartify(jsObject) {
    return utils$0.dartify(jsObject);
  };
  utils$.jsify = function jsify(dartObject, customJsify = null) {
    return utils$0.jsify(dartObject, customJsify);
  };
  web_utils$._isFirebaseAuthError = function _isFirebaseAuthError(e) {
    return js_util.instanceof(e, dart.global.Error) && js_util.hasProperty(e, "customData");
  };
  web_utils$._hasFirebaseAuthErrorCodeAndMessage = function _hasFirebaseAuthErrorCodeAndMessage(e) {
    if (web_utils$._isFirebaseAuthError(e)) {
      let code = js_util.getProperty(T$.StringN(), e, "code");
      let message = js_util.getProperty(T$.StringN(), e, "message");
      if (code == null || !code[S$.$startsWith]("auth/")) return false;
      if (message == null || !message[S$.$contains]("Firebase")) return false;
      return true;
    } else {
      return false;
    }
  };
  web_utils$.getFirebaseAuthException = function getFirebaseAuthException(exception, auth = null) {
    if (!web_utils$._hasFirebaseAuthErrorCodeAndMessage(exception)) {
      return new firebase_auth_exception.FirebaseAuthException.new({code: "unknown", message: "An unknown error occurred: " + dart.str(exception)});
    }
    let firebaseError = dart.packageJSType("firebase_auth.AuthError", true).as(exception);
    let code = auth_interop['AuthErrorExtension|get#code'](firebaseError)[S$.$replaceFirst]("auth/", "");
    let message = auth_interop['AuthErrorExtension|get#message'](firebaseError)[S$.$replaceFirst](" (" + auth_interop['AuthErrorExtension|get#code'](firebaseError) + ").", "")[S$.$replaceFirst]("Firebase: ", "");
    let customData = dart.packageJSType("firebase_auth.AuthErrorCustomData", true).as(js_util.getProperty(dart.dynamic, exception, "customData"));
    if (code === "multi-factor-auth-required") {
      let _auth = auth;
      if (_auth == null) {
        dart.throw(new core.ArgumentError.new("Multi-factor authentication is required, but the auth instance is null. " + "Please ensure that the auth instance is not null before calling " + "`getFirebaseAuthException()`."));
      }
      let resolverWeb = multi_factor.getMultiFactorResolver(_auth, exception);
      return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({code: code, message: message, email: auth_interop['AuthErrorCustomDataExtension|get#email'](customData), phoneNumber: auth_interop['AuthErrorCustomDataExtension|get#phoneNumber'](customData), tenantId: auth_interop['AuthErrorCustomDataExtension|get#tenantId'](customData), resolver: new firebase_auth_web_multi_factor.MultiFactorResolverWeb.new(resolverWeb.hints[S$.$map](platform_interface_multi_factor.MultiFactorInfo, C[123] || CT.C123)[S$.$toList](), new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new("web", resolverWeb.session), firebase_auth_web.FirebaseAuthWeb.instance, resolverWeb, auth)});
    }
    return new firebase_auth_exception.FirebaseAuthException.new({code: code, message: message, email: auth_interop['AuthErrorCustomDataExtension|get#email'](customData), phoneNumber: auth_interop['AuthErrorCustomDataExtension|get#phoneNumber'](customData), tenantId: auth_interop['AuthErrorCustomDataExtension|get#tenantId'](customData)});
  };
  web_utils$.fromInteropMultiFactorInfo = function fromInteropMultiFactorInfo(e) {
    if (multi_factor.PhoneMultiFactorInfo.is(e)) {
      return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: e.displayName, factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, uid: e.uid, phoneNumber: e.phoneNumber});
    } else if (multi_factor.TotpMultiFactorInfo.is(e)) {
      return new platform_interface_multi_factor.TotpMultiFactorInfo.new({displayName: e.displayName, factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, uid: e.uid});
    }
    return new platform_interface_multi_factor.MultiFactorInfo.new({displayName: e.displayName, factorId: e.factorId, enrollmentTimestamp: _http.HttpDate.parse(e.enrollmentTime).millisecondsSinceEpoch / 1000, uid: e.uid});
  };
  web_utils$.convertWebActionCodeInfo = function convertWebActionCodeInfo(webActionCodeInfo) {
    if (webActionCodeInfo == null) {
      return null;
    }
    return new action_code_info.ActionCodeInfo.new({operation: messages$46pigeon.ActionCodeInfoOperation.passwordReset, data: new action_code_info.ActionCodeInfoData.new({email: webActionCodeInfo.data.email, previousEmail: webActionCodeInfo.data.previousEmail})});
  };
  web_utils$.convertWebAdditionalUserInfo = function convertWebAdditionalUserInfo(webAdditionalUserInfo) {
    if (webAdditionalUserInfo == null) {
      return null;
    }
    return new additional_user_info.AdditionalUserInfo.new({isNewUser: webAdditionalUserInfo.isNewUser, profile: webAdditionalUserInfo.profile, providerId: webAdditionalUserInfo.providerId, username: webAdditionalUserInfo.username});
  };
  web_utils$.convertWebIdTokenResult = function convertWebIdTokenResult(webIdTokenResult) {
    return new id_token_result.IdTokenResult.new(new messages$46pigeon.PigeonIdTokenResult.new({claims: webIdTokenResult.claims, token: webIdTokenResult.token, authTimestamp: webIdTokenResult.authTime.millisecondsSinceEpoch, issuedAtTimestamp: webIdTokenResult.issuedAtTime.millisecondsSinceEpoch, expirationTimestamp: webIdTokenResult.expirationTime.millisecondsSinceEpoch, signInProvider: webIdTokenResult.signInProvider}));
  };
  web_utils$.convertPlatformActionCodeSettings = function convertPlatformActionCodeSettings(actionCodeSettings) {
    if (actionCodeSettings == null) {
      return null;
    }
    let actionCodeSettingsMap = actionCodeSettings.asMap();
    let webActionCodeSettings = null;
    if (actionCodeSettings.dynamicLinkDomain != null) {
      webActionCodeSettings = {url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain};
    } else {
      webActionCodeSettings = {url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp};
    }
    if (actionCodeSettingsMap[S$.$_get]("android") != null) {
      webActionCodeSettings.android = {packageName: T$.StringN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("android"), '_get', ["packageName"])), minimumVersion: T$.StringN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("android"), '_get', ["minimumVersion"])), installApp: T$.boolN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("android"), '_get', ["installApp"]))};
    }
    if (actionCodeSettingsMap[S$.$_get]("iOS") != null) {
      webActionCodeSettings.iOS = {bundleId: T$.StringN().as(dart.dsend(actionCodeSettingsMap[S$.$_get]("iOS"), '_get', ["bundleId"]))};
    }
    return webActionCodeSettings;
  };
  web_utils$.convertPlatformAuthProvider = function convertPlatformAuthProvider(authProvider) {
    if (email_auth.EmailAuthProvider.is(authProvider)) {
      return auth$.EmailAuthProvider.new();
    }
    if (facebook_auth.FacebookAuthProvider.is(authProvider)) {
      let facebookAuthProvider = auth$.FacebookAuthProvider.new();
      authProvider.scopes[S$.$forEach](dart.bind(facebookAuthProvider, 'addScope'));
      facebookAuthProvider.setCustomParameters(authProvider.parameters);
      return facebookAuthProvider;
    }
    if (apple_auth.AppleAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (github_auth.GithubAuthProvider.is(authProvider)) {
      let githubAuthProvider = auth$.GithubAuthProvider.new();
      authProvider.scopes[S$.$forEach](dart.bind(githubAuthProvider, 'addScope'));
      githubAuthProvider.setCustomParameters(authProvider.parameters);
      return githubAuthProvider;
    }
    if (google_auth.GoogleAuthProvider.is(authProvider)) {
      let googleAuthProvider = auth$.GoogleAuthProvider.new();
      authProvider.scopes[S$.$forEach](dart.bind(googleAuthProvider, 'addScope'));
      googleAuthProvider.setCustomParameters(authProvider.parameters);
      return googleAuthProvider;
    }
    if (microsoft_auth.MicrosoftAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (yahoo_auth.YahooAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (twitter_auth.TwitterAuthProvider.is(authProvider)) {
      let twitterAuthProvider = auth$.TwitterAuthProvider.new();
      twitterAuthProvider.setCustomParameters(authProvider.parameters);
      return twitterAuthProvider;
    }
    if (phone_auth.PhoneAuthProvider.is(authProvider)) {
      return auth$.PhoneAuthProvider.new();
    }
    if (oauth.OAuthProvider.is(authProvider)) {
      let oAuthProvider = auth$.OAuthProvider.new(authProvider.providerId);
      authProvider.scopes[S$.$forEach](dart.bind(oAuthProvider, 'addScope'));
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (saml_auth.SAMLAuthProvider.is(authProvider)) {
      return auth$.SAMLAuthProvider.new(authProvider.providerId);
    }
    dart.throw(new core.UnsupportedError.new("Unknown AuthProvider: " + dart.str(authProvider) + "."));
  };
  web_utils$.convertWebAuthCredential = function convertWebAuthCredential(authCredential) {
    if (authCredential == null) {
      return null;
    }
    return new auth_credential.AuthCredential.new({providerId: authCredential.providerId, signInMethod: authCredential.signInMethod});
  };
  web_utils$.convertWebOAuthCredential = function convertWebOAuthCredential(userCredential) {
    if (userCredential == null) {
      return null;
    }
    let authCredential = auth$.OAuthProvider.credentialFromResult(userCredential.jsObject);
    if (authCredential == null) {
      return null;
    }
    return new oauth.OAuthProvider.new(authCredential.providerId).credential({signInMethod: authCredential.signInMethod, accessToken: authCredential.accessToken, secret: authCredential.secret, idToken: authCredential.idToken});
  };
  web_utils$.convertPlatformCredential = function convertPlatformCredential(credential) {
    if (email_auth.EmailAuthCredential.is(credential)) {
      if (credential.emailLink != null) {
        return auth$.EmailAuthProvider.credentialWithLink(credential.email, dart.nullCheck(credential.emailLink));
      }
      return auth$.EmailAuthProvider.credential(credential.email, dart.nullCheck(credential.password));
    }
    if (facebook_auth.FacebookAuthCredential.is(credential)) {
      return auth$.FacebookAuthProvider.credential(dart.nullCheck(credential.accessToken));
    }
    if (github_auth.GithubAuthCredential.is(credential)) {
      return auth$.GithubAuthProvider.credential(dart.nullCheck(credential.accessToken));
    }
    if (google_auth.GoogleAuthCredential.is(credential)) {
      return auth$.GoogleAuthProvider.credential(credential.idToken, credential.accessToken);
    }
    if (twitter_auth.TwitterAuthCredential.is(credential)) {
      return auth$.TwitterAuthProvider.credential(dart.nullCheck(credential.accessToken), dart.nullCheck(credential.secret));
    }
    if (phone_auth.PhoneAuthCredential.is(credential)) {
      return dart.packageJSType("OAuthCredential", false).as(auth$.PhoneAuthProvider.credential(dart.nullCheck(credential.verificationId), dart.nullCheck(credential.smsCode)));
    }
    if (oauth.OAuthCredential.is(credential)) {
      let credentialOptions = {accessToken: credential.accessToken, rawNonce: credential.rawNonce, idToken: credential.idToken};
      return auth$.OAuthProvider.new(credential.providerId).credential(credentialOptions);
    }
    return null;
  };
  web_utils$.convertRecaptchaVerifierSize = function convertRecaptchaVerifierSize(size) {
    switch (size) {
      case C[124] || CT.C124:
        {
          return "compact";
        }
      case C[11] || CT.C11:
      default:
        {
          return "normal";
        }
    }
  };
  web_utils$.convertRecaptchaVerifierTheme = function convertRecaptchaVerifierTheme(theme) {
    switch (theme) {
      case C[125] || CT.C125:
        {
          return "dark";
        }
      case C[12] || CT.C12:
      default:
        {
          return "light";
        }
    }
  };
  web_utils$.convertMultiFactorSession = function convertMultiFactorSession(multiFactorSession) {
    return new firebase_auth_web_multi_factor.MultiFactorSessionWeb.new("web", multiFactorSession);
  };
  platform_interface_confirmation_result.ConfirmationResultPlatform = class ConfirmationResultPlatform extends plugin_platform_interface.PlatformInterface {
    get verificationId() {
      return this[S$.verificationId];
    }
    set verificationId(value) {
      super.verificationId = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_confirmation_result.ConfirmationResultPlatform._token);
    }
    confirm(verificationCode) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, function* confirm() {
        dart.throw(new core.UnimplementedError.new("confirm() is not implemented"));
      });
    }
  };
  (platform_interface_confirmation_result.ConfirmationResultPlatform.new = function(verificationId) {
    this[S$.verificationId] = verificationId;
    platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__.new.call(this, {token: platform_interface_confirmation_result.ConfirmationResultPlatform._token});
    ;
  }).prototype = platform_interface_confirmation_result.ConfirmationResultPlatform.prototype;
  dart.addTypeTests(platform_interface_confirmation_result.ConfirmationResultPlatform);
  dart.addTypeCaches(platform_interface_confirmation_result.ConfirmationResultPlatform);
  dart.setMethodSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__),
    confirm: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_confirmation_result.ConfirmationResultPlatform, I[60]);
  dart.setFieldSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ({
    __proto__: dart.getFields(platform_interface_confirmation_result.ConfirmationResultPlatform.__proto__),
    verificationId: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(platform_interface_confirmation_result.ConfirmationResultPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_confirmation_result.ConfirmationResultPlatform, {
    /*platform_interface_confirmation_result.ConfirmationResultPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_confirmation_result.ConfirmationResultWeb = class ConfirmationResultWeb extends platform_interface_confirmation_result.ConfirmationResultPlatform {
    static ['_#new#tearOff'](_auth, _webConfirmationResult, _webAuth) {
      return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(_auth, _webConfirmationResult, _webAuth);
    }
    confirm(verificationCode) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* confirm() {
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this[S$._auth$3], yield this[S$._webConfirmationResult].confirm(verificationCode), this[S$._webAuth$2]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_confirmation_result.ConfirmationResultWeb.new = function(_auth, _webConfirmationResult, _webAuth) {
    this[S$._auth$3] = _auth;
    this[S$._webConfirmationResult] = _webConfirmationResult;
    this[S$._webAuth$2] = _webAuth;
    firebase_auth_web_confirmation_result.ConfirmationResultWeb.__proto__.new.call(this, _webConfirmationResult.verificationId);
    ;
  }).prototype = firebase_auth_web_confirmation_result.ConfirmationResultWeb.prototype;
  dart.addTypeTests(firebase_auth_web_confirmation_result.ConfirmationResultWeb);
  dart.addTypeCaches(firebase_auth_web_confirmation_result.ConfirmationResultWeb);
  dart.setLibraryUri(firebase_auth_web_confirmation_result.ConfirmationResultWeb, I[61]);
  dart.setFieldSignature(firebase_auth_web_confirmation_result.ConfirmationResultWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_confirmation_result.ConfirmationResultWeb.__proto__),
    [S$._auth$3]: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    [S$._webConfirmationResult]: dart.finalFieldType(auth$.ConfirmationResult),
    [S$._webAuth$2]: dart.finalFieldType(dart.nullable(auth$.Auth))
  }));
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform = class RecaptchaVerifierFactoryPlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      if (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance == null) {
        dart.throw(new core.UnimplementedError.new("RecaptchaVerifier is not implemented"));
      }
      return dart.nullCheck(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance);
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token);
      platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance = instance;
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token);
    }
    get delegate() {
      dart.throw(new core.UnimplementedError.new("delegate is not implemented"));
    }
    delegateFor(opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[11] || CT.C11;
      let theme = opts && 'theme' in opts ? opts.theme : C[12] || CT.C12;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    get type() {
      dart.throw(new core.UnimplementedError.new("type is not implemented"));
    }
    clear() {
      dart.throw(new core.UnimplementedError.new("clear() is not implemented"));
    }
    render() {
      return async.async(core.int, function* render() {
        dart.throw(new core.UnimplementedError.new("render() is not implemented"));
      });
    }
    verify() {
      return async.async(core.String, function* verify() {
        dart.throw(new core.UnimplementedError.new("verify() is not implemented"));
      });
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.new = function() {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__.new.call(this, {token: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token});
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, [], {container: dart.nullable(core.String), onError: dart.nullable(dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])), onExpired: dart.nullable(dart.fnType(dart.void, [])), onSuccess: dart.nullable(dart.fnType(dart.void, [])), size: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, theme: platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme}, {auth: platform_interface_firebase_auth.FirebaseAuthPlatform}),
    clear: dart.fnType(dart.void, []),
    render: dart.fnType(async.Future$(core.int), []),
    verify: dart.fnType(async.Future$(core.String), [])
  }));
  dart.setStaticMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform.__proto__),
    delegate: dart.dynamic,
    type: core.String
  }));
  dart.setStaticGetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, I[63]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, () => ['_instance', '_token']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {},
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb = class RecaptchaVerifierFactoryWeb extends platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform {
    get [S$._delegate$6]() {
      let t100;
      t100 = this[S$.__RecaptchaVerifierFactoryWeb__delegate];
      return t100 == null ? dart.throw(new _internal.LateError.fieldNI("_delegate")) : t100;
    }
    set [S$._delegate$6](_delegate$35param) {
      this[S$.__RecaptchaVerifierFactoryWeb__delegate] = _delegate$35param;
    }
    static get instance() {
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__();
    }
    static ['_#_#tearOff']() {
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__();
    }
    static ['_#new#tearOff'](opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[11] || CT.C11;
      let theme = opts && 'theme' in opts ? opts.theme : C[12] || CT.C12;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: auth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired});
    }
    delegateFor(opts) {
      let auth = opts && 'auth' in opts ? opts.auth : null;
      let container = opts && 'container' in opts ? opts.container : null;
      let size = opts && 'size' in opts ? opts.size : C[11] || CT.C11;
      let theme = opts && 'theme' in opts ? opts.theme : C[12] || CT.C12;
      let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
      let _webAuth = firebase_auth_web.FirebaseAuthWeb.as(auth);
      return new firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new({auth: _webAuth, container: container, size: size, theme: theme, onSuccess: onSuccess, onError: onError, onExpired: onExpired});
    }
    get delegate() {
      return this[S$._delegate$6];
    }
    get type() {
      return this[S$._delegate$6].type;
    }
    clear() {
      let t100;
      this[S$._delegate$6].clear();
      t100 = html.window[S$.$document].getElementById("__ff-recaptcha-container");
      t100 == null ? null : t100[S$.$remove]();
    }
    verify() {
      try {
        return this[S$._delegate$6].verify();
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          dart.throw(web_utils$.getFirebaseAuthException(e));
        } else
          throw e$;
      }
    }
    render() {
      return async.async(core.int, (function* render() {
        try {
          return dart.asInt(yield this[S$._delegate$6].render());
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__ = function() {
    this[S$.__RecaptchaVerifierFactoryWeb__delegate] = null;
    firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__.new.call(this);
    ;
  }).prototype = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.prototype;
  (firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.new = function(opts) {
    let t100;
    let auth = opts && 'auth' in opts ? opts.auth : null;
    let container = opts && 'container' in opts ? opts.container : null;
    let size = opts && 'size' in opts ? opts.size : C[11] || CT.C11;
    let theme = opts && 'theme' in opts ? opts.theme : C[12] || CT.C12;
    let onSuccess = opts && 'onSuccess' in opts ? opts.onSuccess : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let onExpired = opts && 'onExpired' in opts ? opts.onExpired : null;
    this[S$.__RecaptchaVerifierFactoryWeb__delegate] = null;
    firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__.new.call(this);
    let element = null;
    let parameters = new (T$.IdentityMapOfString$dynamic()).new();
    if (onSuccess != null) {
      parameters[S$.$_set]("callback", dart.fn(resp => {
        onSuccess();
      }, T$.dynamicToNull()));
    }
    if (onExpired != null) {
      parameters[S$.$_set]("expired-callback", dart.fn(() => {
        onExpired();
      }, T$.VoidToNull()));
    }
    if (onError != null) {
      parameters[S$.$_set]("error-callback", dart.fn(error => {
        onError(web_utils$.getFirebaseAuthException(error));
      }, T$.ObjectToNull()));
    }
    if (container == null || container[S$.$isEmpty]) {
      parameters[S$.$_set]("size", "invisible");
      let el = html.window[S$.$document].getElementById("__ff-recaptcha-container");
      if (el != null) {
        el[S$.$remove]();
      }
      dart.nullCheck(html.window[S$.$document].documentElement)[S$.$children][S$.$add]((t100 = html.DivElement.new(), (() => {
        t100[S$.$id] = "__ff-recaptcha-container";
        return t100;
      })()));
      element = "__ff-recaptcha-container";
    } else {
      parameters[S$.$_set]("size", web_utils$.convertRecaptchaVerifierSize(size));
      parameters[S$.$_set]("theme", web_utils$.convertRecaptchaVerifierTheme(theme));
      if (!(html.window[S$.$document].getElementById(container) != null)) dart.assertFailed("An exception was thrown whilst creating a RecaptchaVerifier instance. No DOM element with an ID of " + dart.str(container) + " could be found.", I[62], 84, 9, "window.document.getElementById(container) != null");
      element = container;
    }
    this[S$._delegate$6] = auth$.RecaptchaVerifier.new(element, parameters, auth.delegate);
  }).prototype = firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.prototype;
  dart.addTypeTests(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb);
  dart.addTypeCaches(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb);
  dart.setGetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getGetters(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [S$._delegate$6]: auth$.RecaptchaVerifier,
    delegate: auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))
  }));
  dart.setSetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getSetters(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [S$._delegate$6]: auth$.RecaptchaVerifier
  }));
  dart.setStaticGetterSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ['instance']);
  dart.setLibraryUri(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, I[64]);
  dart.setFieldSignature(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_recaptcha_verifier_factory.RecaptchaVerifierFactoryWeb.__proto__),
    [S$.__RecaptchaVerifierFactoryWeb__delegate]: dart.fieldType(dart.nullable(auth$.RecaptchaVerifier))
  }));
  dart.defineLazy(firebase_auth_web_recaptcha_verifier_factory, {
    /*firebase_auth_web_recaptcha_verifier_factory._kInvisibleElementId*/get _kInvisibleElementId() {
      return "__ff-recaptcha-container";
    }
  }, false);
  platform_interface_user.UserPlatform = class UserPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[S$.auth$1];
    }
    set auth(value) {
      super.auth = value;
    }
    get multiFactor() {
      return this[S$.multiFactor];
    }
    set multiFactor(value) {
      super.multiFactor = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_user.UserPlatform._token);
    }
    get displayName() {
      return this[S$._user$1].userInfo.displayName;
    }
    get email() {
      return this[S$._user$1].userInfo.email;
    }
    get isEmailVerified() {
      return this[S$._user$1].userInfo.isEmailVerified;
    }
    get isAnonymous() {
      return this[S$._user$1].userInfo.isAnonymous;
    }
    get metadata() {
      return new user_metadata.UserMetadata.new(this[S$._user$1].userInfo.creationTimestamp, this[S$._user$1].userInfo.lastSignInTimestamp);
    }
    get phoneNumber() {
      return this[S$._user$1].userInfo.phoneNumber;
    }
    get photoURL() {
      return this[S$._user$1].userInfo.photoUrl;
    }
    get providerData() {
      let inputData = iterable_extensions['IterableNullableExtension|whereNotNull'](T$.MapOfObjectN$ObjectN(), this[S$._user$1].providerData);
      let providerData = T$.JSArrayOfUserInfo().of([]);
      for (let info of inputData) {
        providerData[S$.$add](new user_info.UserInfo.fromJson(info));
      }
      return providerData;
    }
    get refreshToken() {
      return this[S$._user$1].userInfo.refreshToken;
    }
    get tenantId() {
      return this[S$._user$1].userInfo.tenantId;
    }
    get uid() {
      return this[S$._user$1].userInfo.uid;
    }
    delete() {
      return async.async(dart.void, function* $delete() {
        dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
      });
    }
    getIdToken(forceRefresh) {
      dart.throw(new core.UnimplementedError.new("getIdToken() is not implemented"));
    }
    getIdTokenResult(forceRefresh) {
      dart.throw(new core.UnimplementedError.new("getIdTokenResult() is not implemented"));
    }
    linkWithCredential(credential) {
      dart.throw(new core.UnimplementedError.new("linkWithCredential() is not implemented"));
    }
    linkWithProvider(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithProvider() is not implemented"));
    }
    reauthenticateWithProvider(provider) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithProvider() is not implemented"));
    }
    reauthenticateWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithPopup() is not implemented"));
    }
    reauthenticateWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithRedirect() is not implemented"));
    }
    linkWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithPopup() is not implemented"));
    }
    linkWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("linkWithRedirect() is not implemented"));
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      dart.throw(new core.UnimplementedError.new("linkWithPhoneNumber() is not implemented"));
    }
    reauthenticateWithCredential(credential) {
      dart.throw(new core.UnimplementedError.new("reauthenticateWithCredential() is not implemented"));
    }
    reload() {
      return async.async(dart.void, function* reload() {
        dart.throw(new core.UnimplementedError.new("reload() is not implemented"));
      });
    }
    sendEmailVerification(actionCodeSettings) {
      return async.async(dart.void, function* sendEmailVerification() {
        dart.throw(new core.UnimplementedError.new("sendEmailVerification() is not implemented"));
      });
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, function* unlink() {
        dart.throw(new core.UnimplementedError.new("unlink() is not implemented"));
      });
    }
    updateEmail(newEmail) {
      return async.async(dart.void, function* updateEmail() {
        dart.throw(new core.UnimplementedError.new("updateEmail() is not implemented"));
      });
    }
    updatePassword(newPassword) {
      return async.async(dart.void, function* updatePassword() {
        dart.throw(new core.UnimplementedError.new("updatePassword() is not implemented"));
      });
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, function* updatePhoneNumber() {
        dart.throw(new core.UnimplementedError.new("updatePhoneNumber() is not implemented"));
      });
    }
    updateProfile(profile) {
      return async.async(dart.void, function* updateProfile() {
        dart.throw(new core.UnimplementedError.new("updateProfile() is not implemented"));
      });
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, function* verifyBeforeUpdateEmail() {
        dart.throw(new core.UnimplementedError.new("verifyBeforeUpdateEmail() is not implemented"));
      });
    }
  };
  (platform_interface_user.UserPlatform.new = function(auth, multiFactor, user) {
    this[S$.auth$1] = auth;
    this[S$.multiFactor] = multiFactor;
    this[S$._user$1] = user;
    platform_interface_user.UserPlatform.__proto__.new.call(this, {token: platform_interface_user.UserPlatform._token});
    ;
  }).prototype = platform_interface_user.UserPlatform.prototype;
  dart.addTypeTests(platform_interface_user.UserPlatform);
  dart.addTypeCaches(platform_interface_user.UserPlatform);
  dart.setMethodSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_user.UserPlatform.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    getIdToken: dart.fnType(async.Future$(dart.nullable(core.String)), [core.bool]),
    getIdTokenResult: dart.fnType(async.Future$(id_token_result.IdTokenResult), [core.bool]),
    linkWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    linkWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    reauthenticateWithProvider: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    reauthenticateWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    reauthenticateWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider.AuthProvider]),
    linkWithPopup: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_provider.AuthProvider]),
    linkWithRedirect: dart.fnType(async.Future$(dart.void), [auth_provider.AuthProvider]),
    linkWithPhoneNumber: dart.fnType(async.Future$(platform_interface_confirmation_result.ConfirmationResultPlatform), [core.String, platform_interface_recaptcha_verifier_factory.RecaptchaVerifierFactoryPlatform]),
    reauthenticateWithCredential: dart.fnType(async.Future$(platform_interface_user_credential.UserCredentialPlatform), [auth_credential.AuthCredential]),
    reload: dart.fnType(async.Future$(dart.void), []),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [dart.nullable(action_code_settings.ActionCodeSettings)]),
    unlink: dart.fnType(async.Future$(platform_interface_user.UserPlatform), [core.String]),
    updateEmail: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePassword: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(dart.void), [phone_auth.PhoneAuthCredential]),
    updateProfile: dart.fnType(async.Future$(dart.void), [core.Map$(core.String, dart.nullable(core.String))]),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(action_code_settings.ActionCodeSettings)])
  }));
  dart.setStaticMethodSignature(platform_interface_user.UserPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_user.UserPlatform.__proto__),
    displayName: dart.nullable(core.String),
    email: dart.nullable(core.String),
    isEmailVerified: core.bool,
    isAnonymous: core.bool,
    metadata: user_metadata.UserMetadata,
    phoneNumber: dart.nullable(core.String),
    photoURL: dart.nullable(core.String),
    providerData: core.List$(user_info.UserInfo),
    refreshToken: dart.nullable(core.String),
    tenantId: dart.nullable(core.String),
    uid: core.String
  }));
  dart.setLibraryUri(platform_interface_user.UserPlatform, I[65]);
  dart.setFieldSignature(platform_interface_user.UserPlatform, () => ({
    __proto__: dart.getFields(platform_interface_user.UserPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    multiFactor: dart.finalFieldType(platform_interface_multi_factor.MultiFactorPlatform),
    [S$._user$1]: dart.finalFieldType(messages$46pigeon.PigeonUserDetails)
  }));
  dart.setStaticFieldSignature(platform_interface_user.UserPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_user.UserPlatform, {
    /*platform_interface_user.UserPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_user.UserWeb = class UserWeb extends platform_interface_user.UserPlatform {
    static ['_#new#tearOff'](auth, multiFactor, _webUser, _webAuth) {
      return new firebase_auth_web_user.UserWeb.new(auth, multiFactor, _webUser, _webAuth);
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].delete();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdToken(forceRefresh) {
      return async.async(core.String, (function* getIdToken() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return yield this[S$._webUser].getIdToken(forceRefresh);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdTokenResult(forceRefresh) {
      return async.async(id_token_result.IdTokenResult, (function* getIdTokenResult() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        return web_utils$.convertWebIdTokenResult(yield this[S$._webUser].getIdTokenResult(forceRefresh));
      }).bind(this));
    }
    linkWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithCredential() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, yield this[S$._webUser].linkWithCredential(web_utils$.convertPlatformCredential(credential)), this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithPopup() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, yield this[S$._webUser].linkWithPopup(web_utils$.convertPlatformAuthProvider(provider)), this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithRedirect(provider) {
      return async.async(dart.void, (function* linkWithRedirect() {
        try {
          return this[S$._webUser].linkWithRedirect(web_utils$.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      return async.async(platform_interface_confirmation_result.ConfirmationResultPlatform, (function* linkWithPhoneNumber() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let verifier = auth$.RecaptchaVerifier.as(applicationVerifier.delegate);
          return new firebase_auth_web_confirmation_result.ConfirmationResultWeb.new(this.auth, yield this[S$._webUser].linkWithPhoneNumber(phoneNumber, verifier), this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithCredential() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let userCredential = (yield this[S$._webUser].reauthenticateWithCredential(dart.nullCheck(web_utils$.convertPlatformCredential(credential))));
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, userCredential, this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithPopup(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithPopup() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let userCredential = (yield this[S$._webUser].reauthenticateWithPopup(web_utils$.convertPlatformAuthProvider(provider)));
          return new firebase_auth_web_user_credential.UserCredentialWeb.new(this.auth, userCredential, this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithRedirect(provider) {
      return async.async(dart.void, (function* reauthenticateWithRedirect() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return this[S$._webUser].reauthenticateWithRedirect(web_utils$.convertPlatformAuthProvider(provider));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e));
          } else
            throw e$;
        }
      }).bind(this));
    }
    reload() {
      return async.async(dart.void, (function* reload() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendEmailVerification(actionCodeSettings) {
      firebase_auth_web_user._assertIsSignedOut(this.auth);
      try {
        return this[S$._webUser].sendEmailVerification(web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
      } catch (e$) {
        let e = dart.getThrown(e$);
        if (core.Object.is(e)) {
          dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
        } else
          throw e$;
      }
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, (function* unlink() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          return new firebase_auth_web_user.UserWeb.new(this.auth, this.multiFactor, yield this[S$._webUser].unlink(providerId), this[S$._webAuth$3]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateEmail(newEmail) {
      return async.async(dart.void, (function* updateEmail() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].updateEmail(newEmail);
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePassword(newPassword) {
      return async.async(dart.void, (function* updatePassword() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].updatePassword(newPassword);
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, (function* updatePhoneNumber() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].updatePhoneNumber(web_utils$.convertPlatformCredential(phoneCredential));
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateProfile(profile) {
      return async.async(dart.void, (function* updateProfile() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          let newProfile = null;
          if (profile[S$.$containsKey]("displayName") && profile[S$.$containsKey]("photoURL")) {
            newProfile = {displayName: profile[S$.$_get]("displayName"), photoURL: profile[S$.$_get]("photoURL")};
          } else if (profile[S$.$containsKey]("displayName")) {
            newProfile = {displayName: profile[S$.$_get]("displayName")};
          } else {
            newProfile = {photoURL: profile[S$.$_get]("photoURL")};
          }
          yield this[S$._webUser].updateProfile(newProfile);
          yield this[S$._webUser].reload();
          this.auth.sendAuthChangesEvent(this.auth.app.name, this.auth.currentUser);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        firebase_auth_web_user._assertIsSignedOut(this.auth);
        try {
          yield this[S$._webUser].verifyBeforeUpdateEmail(newEmail, web_utils$.convertPlatformActionCodeSettings(actionCodeSettings));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            dart.throw(web_utils$.getFirebaseAuthException(e, this[S$._webAuth$3]));
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (firebase_auth_web_user.UserWeb.new = function(auth, multiFactor, _webUser, _webAuth) {
    this[S$._webUser] = _webUser;
    this[S$._webAuth$3] = _webAuth;
    firebase_auth_web_user.UserWeb.__proto__.new.call(this, auth, multiFactor, new messages$46pigeon.PigeonUserDetails.new({userInfo: new messages$46pigeon.PigeonUserInfo.new({displayName: _webUser.displayName, email: _webUser.email, isEmailVerified: _webUser.emailVerified, isAnonymous: _webUser.isAnonymous, creationTimestamp: T$.intN().as(_webUser.metadata.creationTime != null ? dart.dsend(js.context._get("Date"), 'callMethod', ["parse", T$.JSArrayOfStringN().of([_webUser.metadata.creationTime])]) : null), lastSignInTimestamp: T$.intN().as(_webUser.metadata.lastSignInTime != null ? dart.dsend(js.context._get("Date"), 'callMethod', ["parse", T$.JSArrayOfStringN().of([_webUser.metadata.lastSignInTime])]) : null), phoneNumber: _webUser.phoneNumber, photoUrl: _webUser.photoURL, refreshToken: _webUser.refreshToken, tenantId: _webUser.tenantId, uid: _webUser.uid}), providerData: _webUser.providerData[S$.$map](T$.MapOfString$dynamic(), dart.fn(webUserInfo => new (T$.IdentityMapOfString$dynamic()).from(["displayName", webUserInfo.displayName, "email", webUserInfo.email, "isAnonymous", false, "isEmailVerified", true, "phoneNumber", webUserInfo.phoneNumber, "providerId", webUserInfo.providerId, "photoUrl", webUserInfo.photoURL, "uid", webUserInfo.uid]), T$.UserInfoOfUserInfoJsImplToMapOfString$dynamic()))[S$.$toList]()}));
    ;
  }).prototype = firebase_auth_web_user.UserWeb.prototype;
  dart.addTypeTests(firebase_auth_web_user.UserWeb);
  dart.addTypeCaches(firebase_auth_web_user.UserWeb);
  dart.setMethodSignature(firebase_auth_web_user.UserWeb, () => ({
    __proto__: dart.getMethods(firebase_auth_web_user.UserWeb.__proto__),
    getIdToken: dart.fnType(async.Future$(core.String), [core.bool])
  }));
  dart.setLibraryUri(firebase_auth_web_user.UserWeb, I[66]);
  dart.setFieldSignature(firebase_auth_web_user.UserWeb, () => ({
    __proto__: dart.getFields(firebase_auth_web_user.UserWeb.__proto__),
    [S$._webUser]: dart.finalFieldType(auth$.User),
    [S$._webAuth$3]: dart.finalFieldType(dart.nullable(auth$.Auth))
  }));
  firebase_auth_web_user._assertIsSignedOut = function _assertIsSignedOut(instance) {
    if (instance.currentUser == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "no-current-user", message: "No user currently signed in."}));
    }
  };
  platform_interface_user_credential.UserCredentialPlatform = class UserCredentialPlatform extends plugin_platform_interface.PlatformInterface {
    get auth() {
      return this[S$.auth$2];
    }
    set auth(value) {
      super.auth = value;
    }
    get additionalUserInfo() {
      return this[S$.additionalUserInfo];
    }
    set additionalUserInfo(value) {
      super.additionalUserInfo = value;
    }
    get credential() {
      return this[S$.credential$1];
    }
    set credential(value) {
      super.credential = value;
    }
    get user() {
      return this[S$.user];
    }
    set user(value) {
      super.user = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_user_credential.UserCredentialPlatform._token);
    }
  };
  (platform_interface_user_credential.UserCredentialPlatform.new = function(opts) {
    let auth = opts && 'auth' in opts ? opts.auth : null;
    let additionalUserInfo = opts && 'additionalUserInfo' in opts ? opts.additionalUserInfo : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let user = opts && 'user' in opts ? opts.user : null;
    this[S$.auth$2] = auth;
    this[S$.additionalUserInfo] = additionalUserInfo;
    this[S$.credential$1] = credential;
    this[S$.user] = user;
    platform_interface_user_credential.UserCredentialPlatform.__proto__.new.call(this, {token: platform_interface_user_credential.UserCredentialPlatform._token});
    ;
  }).prototype = platform_interface_user_credential.UserCredentialPlatform.prototype;
  dart.addTypeTests(platform_interface_user_credential.UserCredentialPlatform);
  dart.addTypeCaches(platform_interface_user_credential.UserCredentialPlatform);
  dart.setStaticMethodSignature(platform_interface_user_credential.UserCredentialPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_user_credential.UserCredentialPlatform, I[67]);
  dart.setFieldSignature(platform_interface_user_credential.UserCredentialPlatform, () => ({
    __proto__: dart.getFields(platform_interface_user_credential.UserCredentialPlatform.__proto__),
    auth: dart.finalFieldType(platform_interface_firebase_auth.FirebaseAuthPlatform),
    additionalUserInfo: dart.finalFieldType(dart.nullable(additional_user_info.AdditionalUserInfo)),
    credential: dart.finalFieldType(dart.nullable(auth_credential.AuthCredential)),
    user: dart.finalFieldType(dart.nullable(platform_interface_user.UserPlatform))
  }));
  dart.setStaticFieldSignature(platform_interface_user_credential.UserCredentialPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_user_credential.UserCredentialPlatform, {
    /*platform_interface_user_credential.UserCredentialPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  firebase_auth_web_user_credential.UserCredentialWeb = class UserCredentialWeb extends platform_interface_user_credential.UserCredentialPlatform {
    static ['_#new#tearOff'](auth, webUserCredential, webAuth) {
      return new firebase_auth_web_user_credential.UserCredentialWeb.new(auth, webUserCredential, webAuth);
    }
  };
  (firebase_auth_web_user_credential.UserCredentialWeb.new = function(auth, webUserCredential, webAuth) {
    let t119;
    firebase_auth_web_user_credential.UserCredentialWeb.__proto__.new.call(this, {auth: auth, additionalUserInfo: web_utils$.convertWebAdditionalUserInfo((t119 = webUserCredential, t119 == null ? null : t119.additionalUserInfo)), credential: web_utils$.convertWebOAuthCredential(webUserCredential), user: webUserCredential == null ? null : new firebase_auth_web_user.UserWeb.new(auth, new firebase_auth_web_multi_factor.MultiFactorWeb.new(auth, multi_factor.multiFactor(dart.nullCheck(webUserCredential.user))), dart.nullCheck(webUserCredential.user), webAuth)});
    ;
  }).prototype = firebase_auth_web_user_credential.UserCredentialWeb.prototype;
  dart.addTypeTests(firebase_auth_web_user_credential.UserCredentialWeb);
  dart.addTypeCaches(firebase_auth_web_user_credential.UserCredentialWeb);
  dart.setLibraryUri(firebase_auth_web_user_credential.UserCredentialWeb, I[68]);
  const _is_UserInfo_default = Symbol('_is_UserInfo_default');
  auth$.UserInfo$ = dart.generic(T => {
    class UserInfo extends js$0.JsObjectWrapper$(T) {
      get displayName() {
        return this.jsObject.displayName;
      }
      get email() {
        return this.jsObject.email;
      }
      get phoneNumber() {
        return this.jsObject.phoneNumber;
      }
      get photoURL() {
        return this.jsObject.photoURL;
      }
      get providerId() {
        return this.jsObject.providerId;
      }
      get uid() {
        return this.jsObject.uid;
      }
      static ['_#_fromJsObject#tearOff'](T, jsObject) {
        return new (auth$.UserInfo$(T))._fromJsObject(jsObject);
      }
    }
    (UserInfo._fromJsObject = function(jsObject) {
      UserInfo.__proto__.fromJsObject.call(this, T.as(jsObject));
      ;
    }).prototype = UserInfo.prototype;
    dart.addTypeTests(UserInfo);
    UserInfo.prototype[_is_UserInfo_default] = true;
    dart.addTypeCaches(UserInfo);
    dart.setGetterSignature(UserInfo, () => ({
      __proto__: dart.getGetters(UserInfo.__proto__),
      displayName: dart.nullable(core.String),
      email: dart.nullable(core.String),
      phoneNumber: dart.nullable(core.String),
      photoURL: dart.nullable(core.String),
      providerId: core.String,
      uid: core.String
    }));
    dart.setLibraryUri(UserInfo, I[69]);
    return UserInfo;
  });
  auth$.UserInfo = auth$.UserInfo$();
  dart.addTypeTests(auth$.UserInfo, _is_UserInfo_default);
  auth$.User = class User extends auth$.UserInfo$(dart.packageJSType("UserJsImpl", false)) {
    get uid() {
      return this.jsObject.uid;
    }
    get emailVerified() {
      return this.jsObject.emailVerified;
    }
    get isAnonymous() {
      return this.jsObject.isAnonymous;
    }
    get tenantId() {
      return this.jsObject.tenantId;
    }
    get metadata() {
      return this.jsObject.metadata;
    }
    get providerData() {
      return this.jsObject.providerData[S$.$map](T$.UserInfoOfUserInfoJsImpl(), dart.fn(data => new (T$.UserInfoOfUserInfoJsImpl())._fromJsObject(dart.packageJSType("UserInfoJsImpl", false).as(data)), T$.dynamicToUserInfoOfUserInfoJsImpl()))[S$.$toList]();
    }
    get refreshToken() {
      return this.jsObject.refreshToken;
    }
    static getInstance(jsObject) {
      let t122, t121, t120, t119;
      if (jsObject == null) {
        return null;
      }
      t119 = auth$.User._expando;
      t120 = jsObject;
      t121 = t119._get(t120);
      return t121 == null ? (t122 = new auth$.User._fromJsObject(jsObject), t119._set(t120, t122), t122) : t121;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.User._fromJsObject(jsObject);
    }
    delete() {
      return utils$0.handleThenable(dart.void, this.jsObject.delete());
    }
    getIdToken(forceRefresh = false) {
      return utils$0.handleThenable(core.String, this.jsObject.getIdToken(forceRefresh));
    }
    linkWithCredential(credential) {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.linkWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[126] || CT.C126);
    }
    linkWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$0.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.linkWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[127] || CT.C127);
    }
    linkWithPopup(provider) {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.linkWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[126] || CT.C126);
    }
    linkWithRedirect(provider) {
      return utils$0.handleThenable(dart.void, dart.global.firebase_auth.linkWithRedirect(this.jsObject, provider.jsObject));
    }
    reauthenticateWithCredential(credential) {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.reauthenticateWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[126] || CT.C126);
    }
    reauthenticateWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$0.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.reauthenticateWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[127] || CT.C127);
    }
    reauthenticateWithPopup(provider) {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.reauthenticateWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[126] || CT.C126);
    }
    reauthenticateWithRedirect(provider) {
      return utils$0.handleThenable(dart.void, dart.global.firebase_auth.reauthenticateWithRedirect(this.jsObject, provider.jsObject));
    }
    reload() {
      return utils$0.handleThenable(dart.void, this.jsObject.reload());
    }
    sendEmailVerification(actionCodeSettings = null) {
      return utils$0.handleThenable(dart.void, dart.global.firebase_auth.sendEmailVerification(this.jsObject, actionCodeSettings));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return utils$0.handleThenable(dart.void, dart.global.firebase_auth.verifyBeforeUpdateEmail(this.jsObject, newEmail, actionCodeSettings));
    }
    unlink(providerId) {
      return utils$0.handleThenable(dart.packageJSType("UserJsImpl", false), dart.global.firebase_auth.unlink(this.jsObject, providerId)).then(auth$.User, dart.fn(user => dart.nullCheck(auth$.User.getInstance(user)), T$.UserJsImplToUser()));
    }
    updateEmail(newEmail) {
      return utils$0.handleThenable(dart.void, dart.global.firebase_auth.updateEmail(this.jsObject, newEmail));
    }
    updatePassword(newPassword) {
      return utils$0.handleThenable(dart.void, dart.global.firebase_auth.updatePassword(this.jsObject, newPassword));
    }
    updatePhoneNumber(phoneCredential) {
      return utils$0.handleThenable(dart.void, dart.global.firebase_auth.updatePhoneNumber(this.jsObject, phoneCredential));
    }
    updateProfile(profile) {
      return utils$0.handleThenable(dart.void, dart.global.firebase_auth.updateProfile(this.jsObject, profile));
    }
    getIdTokenResult(forceRefresh = null) {
      let promise = forceRefresh == null ? this.jsObject.getIdTokenResult() : this.jsObject.getIdTokenResult(forceRefresh);
      return utils$0.handleThenable(dart.packageJSType("IdTokenResultImpl", false), promise).then(auth$.IdTokenResult, C[128] || CT.C128);
    }
    toJson() {
      return T$.MapOfString$dynamic().as(utils$.dartify(this.jsObject.toJSON()));
    }
    toString() {
      return "User: " + this.uid;
    }
  };
  (auth$.User._fromJsObject = function(jsObject) {
    auth$.User.__proto__._fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.User.prototype;
  dart.addTypeTests(auth$.User);
  dart.addTypeCaches(auth$.User);
  dart.setMethodSignature(auth$.User, () => ({
    __proto__: dart.getMethods(auth$.User.__proto__),
    delete: dart.fnType(async.Future$(dart.void), []),
    getIdToken: dart.fnType(async.Future$(core.String), [], [core.bool]),
    linkWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.nullable(dart.packageJSType("OAuthCredential", false))]),
    linkWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    linkWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    linkWithRedirect: dart.fnType(async.Future$(dart.void), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reauthenticateWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.packageJSType("OAuthCredential", false)]),
    reauthenticateWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    reauthenticateWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reauthenticateWithRedirect: dart.fnType(async.Future$(dart.void), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    reload: dart.fnType(async.Future$(dart.void), []),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    unlink: dart.fnType(async.Future$(auth$.User), [core.String]),
    updateEmail: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePassword: dart.fnType(async.Future$(dart.void), [core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(dart.void), [dart.nullable(dart.packageJSType("OAuthCredential", false))]),
    updateProfile: dart.fnType(async.Future$(dart.void), [dart.packageJSType("UserProfile", false)]),
    getIdTokenResult: dart.fnType(async.Future$(auth$.IdTokenResult), [], [dart.nullable(core.bool)]),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setStaticMethodSignature(auth$.User, () => ['getInstance']);
  dart.setGetterSignature(auth$.User, () => ({
    __proto__: dart.getGetters(auth$.User.__proto__),
    emailVerified: core.bool,
    isAnonymous: core.bool,
    tenantId: dart.nullable(core.String),
    metadata: dart.packageJSType("firebase_auth.UserMetadata", false),
    providerData: core.List$(auth$.UserInfo$(dart.packageJSType("UserInfoJsImpl", false))),
    refreshToken: core.String
  }));
  dart.setLibraryUri(auth$.User, I[69]);
  dart.setStaticFieldSignature(auth$.User, () => ['_expando']);
  dart.defineExtensionMethods(auth$.User, ['toString']);
  dart.defineLazy(auth$.User, {
    /*auth$.User._expando*/get _expando() {
      return new (T$.ExpandoOfUser()).new();
    }
  }, false);
  auth$.IdTokenResult = class IdTokenResult extends js$0.JsObjectWrapper$(dart.packageJSType("IdTokenResultImpl", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.IdTokenResult._fromJsObject(jsObject);
    }
    get authTime() {
      return http_date.parseHttpDate(this.jsObject.authTime);
    }
    get claims() {
      return T$.MapNOfString$dynamic().as(utils$.dartify(this.jsObject.claims));
    }
    get expirationTime() {
      return http_date.parseHttpDate(this.jsObject.expirationTime);
    }
    get issuedAtTime() {
      return http_date.parseHttpDate(this.jsObject.issuedAtTime);
    }
    get signInProvider() {
      return this.jsObject.signInProvider;
    }
    get token() {
      return this.jsObject.token;
    }
  };
  (auth$.IdTokenResult._fromJsObject = function(jsObject) {
    auth$.IdTokenResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.IdTokenResult.prototype;
  dart.addTypeTests(auth$.IdTokenResult);
  dart.addTypeCaches(auth$.IdTokenResult);
  dart.setGetterSignature(auth$.IdTokenResult, () => ({
    __proto__: dart.getGetters(auth$.IdTokenResult.__proto__),
    authTime: core.DateTime,
    claims: dart.nullable(core.Map$(core.String, dart.dynamic)),
    expirationTime: core.DateTime,
    issuedAtTime: core.DateTime,
    signInProvider: core.String,
    token: core.String
  }));
  dart.setLibraryUri(auth$.IdTokenResult, I[69]);
  auth$.Auth = class Auth extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.Auth", false)) {
    get app() {
      return app$.App.getInstance(this.jsObject.app);
    }
    get currentUser() {
      return auth$.User.getInstance(this.jsObject.currentUser);
    }
    get tenantId() {
      return this.jsObject.tenantId;
    }
    set tenantId(tenantId) {
      this.jsObject.tenantId = tenantId;
    }
    get languageCode() {
      return this.jsObject.languageCode;
    }
    set languageCode(s) {
      this.jsObject.languageCode = s;
    }
    get settings() {
      return this.jsObject.settings;
    }
    onWaitInitState() {
      return async.async(dart.void, (function* onWaitInitState() {
        let completer = async.Completer.new();
        let nextWrapper = js.allowInterop(T$.UserJsImplNToNull(), dart.fn(user => {
          this[S$._initUser] = auth$.User.getInstance(user);
          completer.complete();
        }, T$.UserJsImplNToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => dart.nullCheck(this[S$._changeController]).addError(core.Object.as(e)), T$.dynamicTovoid()));
        let unsubscribe = this.jsObject.onAuthStateChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        yield completer.future;
        unsubscribe();
      }).bind(this));
    }
    get onAuthStateChanged() {
      if (this[S$._changeController] == null) {
        let nextWrapper = js.allowInterop(T$.UserJsImplNToNull(), dart.fn(user => {
          dart.nullCheck(this[S$._changeController]).add(auth$.User.getInstance(user));
        }, T$.UserJsImplNToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => dart.nullCheck(this[S$._changeController]).addError(core.Object.as(e)), T$.dynamicTovoid()));
        const startListen = () => {
          if (!(this[S$._onAuthUnsubscribe] == null)) dart.assertFailed(null, I[70], 383, 16, "_onAuthUnsubscribe == null");
          this[S$._onAuthUnsubscribe] = this.jsObject.onAuthStateChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        };
        dart.fn(startListen, T$.VoidTovoid());
        const stopListen = () => {
          dart.nullCheck(this[S$._onAuthUnsubscribe])();
          this[S$._onAuthUnsubscribe] = null;
        };
        dart.fn(stopListen, T$.VoidTovoid());
        this[S$._changeController] = T$.StreamControllerOfUserN().broadcast({onListen: startListen, onCancel: stopListen, sync: true});
        dart.nullCheck(this[S$._changeController]).add(this[S$._initUser]);
      }
      return dart.nullCheck(this[S$._changeController]).stream;
    }
    get onIdTokenChanged() {
      if (this[S$._idTokenChangedController] == null) {
        let nextWrapper = js.allowInterop(T$.UserJsImplNToNull(), dart.fn(user => {
          dart.nullCheck(this[S$._idTokenChangedController]).add(auth$.User.getInstance(user));
        }, T$.UserJsImplNToNull()));
        let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => dart.nullCheck(this[S$._idTokenChangedController]).addError(core.Object.as(e)), T$.dynamicTovoid()));
        const startListen = () => {
          if (!(this[S$._onIdTokenChangedUnsubscribe] == null)) dart.assertFailed(null, I[70], 425, 16, "_onIdTokenChangedUnsubscribe == null");
          this[S$._onIdTokenChangedUnsubscribe] = this.jsObject.onIdTokenChanged(dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper));
        };
        dart.fn(startListen, T$.VoidTovoid());
        const stopListen = () => {
          dart.nullCheck(this[S$._onIdTokenChangedUnsubscribe])();
          this[S$._onIdTokenChangedUnsubscribe] = null;
        };
        dart.fn(stopListen, T$.VoidTovoid());
        this[S$._idTokenChangedController] = T$.StreamControllerOfUserN().broadcast({onListen: startListen, onCancel: stopListen, sync: true});
      }
      return dart.nullCheck(this[S$._idTokenChangedController]).stream;
    }
    static getInstance(jsObject) {
      let t122, t121, t120, t119;
      t119 = auth$.Auth._expando;
      t120 = jsObject;
      t121 = t119._get(t120);
      return t121 == null ? (t122 = new auth$.Auth._fromJsObject(jsObject), t119._set(t120, t122), t122) : t121;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new auth$.Auth._fromJsObject(jsObject);
    }
    applyActionCode(oobCode) {
      return utils$0.handleThenable(dart.dynamic, dart.global.firebase_auth.applyActionCode(this.jsObject, oobCode));
    }
    checkActionCode(code) {
      return utils$0.handleThenable(dart.packageJSType("firebase_auth.ActionCodeInfo", false), dart.global.firebase_auth.checkActionCode(this.jsObject, code));
    }
    confirmPasswordReset(code, newPassword) {
      return utils$0.handleThenable(dart.dynamic, dart.global.firebase_auth.confirmPasswordReset(this.jsObject, code, newPassword));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(auth$.UserCredential, (function* createUserWithEmailAndPassword() {
        let u = (yield utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.createUserWithEmailAndPassword(this.jsObject, email, password)));
        return new auth$.UserCredential.fromJsObject(u);
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return utils$0.handleThenable(core.List, dart.global.firebase_auth.fetchSignInMethodsForEmail(this.jsObject, email)).then(T$.ListOfString(), C[129] || CT.C129);
    }
    isSignInWithEmailLink(emailLink) {
      return dart.global.firebase_auth.isSignInWithEmailLink(emailLink);
    }
    getRedirectResult() {
      return utils$0.handleThenable(dart.nullable(dart.packageJSType("UserCredentialJsImpl", false)), dart.global.firebase_auth.getRedirectResult(this.jsObject)).then(T$.UserCredentialN(), dart.fn(value => value == null ? null : new auth$.UserCredential.fromJsObject(value), T$.UserCredentialJsImplNToUserCredentialN()));
    }
    sendSignInLinkToEmail(email, actionCodeSettings = null) {
      return utils$0.handleThenable(dart.dynamic, dart.global.firebase_auth.sendSignInLinkToEmail(this.jsObject, email, actionCodeSettings));
    }
    setPersistence(persistence) {
      let instance = null;
      switch (persistence) {
        case C[131] || CT.C131:
          {
            instance = dart.global.firebase_auth.browserLocalPersistence;
            break;
          }
        case C[132] || CT.C132:
          {
            instance = dart.global.firebase_auth.indexedDBLocalPersistence;
            break;
          }
        case C[133] || CT.C133:
          {
            instance = dart.global.firebase_auth.browserSessionPersistence;
            break;
          }
        case C[134] || CT.C134:
          {
            instance = dart.global.firebase_auth.inMemoryPersistence;
            break;
          }
      }
      return utils$0.handleThenable(dart.dynamic, dart.global.firebase_auth.setPersistence(this.jsObject, instance));
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return utils$0.handleThenable(dart.dynamic, dart.global.firebase_auth.sendPasswordResetEmail(this.jsObject, email, actionCodeSettings));
    }
    signInWithCredential(credential) {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithCredential(this.jsObject, credential)).then(auth$.UserCredential, C[126] || CT.C126);
    }
    signInAnonymously() {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInAnonymously(this.jsObject)).then(auth$.UserCredential, C[126] || CT.C126);
    }
    signInWithCustomToken(token) {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithCustomToken(this.jsObject, token)).then(auth$.UserCredential, C[126] || CT.C126);
    }
    signInAndRetrieveDataWithCustomToken(token) {
      return this.signInWithCustomToken(token);
    }
    signInWithEmailAndPassword(email, password) {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithEmailAndPassword(this.jsObject, email, password)).then(auth$.UserCredential, C[126] || CT.C126);
    }
    signInWithEmailLink(email, emailLink) {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithEmailLink(this.jsObject, email, emailLink)).then(auth$.UserCredential, C[126] || CT.C126);
    }
    signInWithPhoneNumber(phoneNumber, applicationVerifier) {
      return utils$0.handleThenable(dart.packageJSType("firebase_auth.ConfirmationResult", false), dart.global.firebase_auth.signInWithPhoneNumber(this.jsObject, phoneNumber, applicationVerifier.jsObject)).then(auth$.ConfirmationResult, C[127] || CT.C127);
    }
    signInWithPopup(provider) {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), dart.global.firebase_auth.signInWithPopup(this.jsObject, provider.jsObject)).then(auth$.UserCredential, C[126] || CT.C126);
    }
    signInWithRedirect(provider) {
      return utils$0.handleThenable(dart.dynamic, dart.global.firebase_auth.signInWithRedirect(this.jsObject, provider.jsObject));
    }
    signOut() {
      return utils$0.handleThenable(dart.dynamic, this.jsObject.signOut());
    }
    useAuthEmulator(origin) {
      return dart.global.firebase_auth.connectAuthEmulator(this.jsObject, origin);
    }
    useDeviceLanguage() {
      return dart.global.firebase_auth.useDeviceLanguage(this.jsObject);
    }
    verifyPasswordResetCode(code) {
      return utils$0.handleThenable(core.String, dart.global.firebase_auth.verifyPasswordResetCode(this.jsObject, code));
    }
  };
  (auth$.Auth._fromJsObject = function(jsObject) {
    this[S$._initUser] = null;
    this[S$._onAuthUnsubscribe] = null;
    this[S$._changeController] = null;
    this[S$._onIdTokenChangedUnsubscribe] = null;
    this[S$._idTokenChangedController] = null;
    auth$.Auth.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.Auth.prototype;
  dart.addTypeTests(auth$.Auth);
  dart.addTypeCaches(auth$.Auth);
  dart.setMethodSignature(auth$.Auth, () => ({
    __proto__: dart.getMethods(auth$.Auth.__proto__),
    onWaitInitState: dart.fnType(async.Future$(dart.void), []),
    applyActionCode: dart.fnType(async.Future, [core.String]),
    checkActionCode: dart.fnType(async.Future$(dart.packageJSType("firebase_auth.ActionCodeInfo", false)), [core.String]),
    confirmPasswordReset: dart.fnType(async.Future, [core.String, core.String]),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(core.String)), [core.String]),
    isSignInWithEmailLink: dart.fnType(core.bool, [core.String]),
    getRedirectResult: dart.fnType(async.Future$(dart.nullable(auth$.UserCredential)), []),
    sendSignInLinkToEmail: dart.fnType(async.Future, [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    setPersistence: dart.fnType(async.Future, [types.Persistence]),
    sendPasswordResetEmail: dart.fnType(async.Future, [core.String], [dart.nullable(dart.packageJSType("ActionCodeSettings", false))]),
    signInWithCredential: dart.fnType(async.Future$(auth$.UserCredential), [dart.packageJSType("OAuthCredential", false)]),
    signInAnonymously: dart.fnType(async.Future$(auth$.UserCredential), []),
    signInWithCustomToken: dart.fnType(async.Future$(auth$.UserCredential), [core.String]),
    signInAndRetrieveDataWithCustomToken: dart.fnType(async.Future$(auth$.UserCredential), [core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    signInWithEmailLink: dart.fnType(async.Future$(auth$.UserCredential), [core.String, core.String]),
    signInWithPhoneNumber: dart.fnType(async.Future$(auth$.ConfirmationResult), [core.String, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))]),
    signInWithPopup: dart.fnType(async.Future$(auth$.UserCredential), [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    signInWithRedirect: dart.fnType(async.Future, [auth$.AuthProvider$(dart.packageJSType("AuthProviderJsImpl", false))]),
    signOut: dart.fnType(async.Future, []),
    useAuthEmulator: dart.fnType(dart.void, [core.String]),
    useDeviceLanguage: dart.fnType(dart.void, []),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [core.String])
  }));
  dart.setStaticMethodSignature(auth$.Auth, () => ['getInstance']);
  dart.setGetterSignature(auth$.Auth, () => ({
    __proto__: dart.getGetters(auth$.Auth.__proto__),
    app: app$.App,
    currentUser: dart.nullable(auth$.User),
    tenantId: dart.nullable(core.String),
    languageCode: core.String,
    settings: dart.packageJSType("AuthSettings", false),
    onAuthStateChanged: async.Stream$(dart.nullable(auth$.User)),
    onIdTokenChanged: async.Stream$(dart.nullable(auth$.User))
  }));
  dart.setSetterSignature(auth$.Auth, () => ({
    __proto__: dart.getSetters(auth$.Auth.__proto__),
    tenantId: dart.nullable(core.String),
    languageCode: dart.nullable(core.String)
  }));
  dart.setLibraryUri(auth$.Auth, I[69]);
  dart.setFieldSignature(auth$.Auth, () => ({
    __proto__: dart.getFields(auth$.Auth.__proto__),
    [S$._initUser]: dart.fieldType(dart.nullable(auth$.User)),
    [S$._onAuthUnsubscribe]: dart.fieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    [S$._changeController]: dart.fieldType(dart.nullable(async.StreamController$(dart.nullable(auth$.User)))),
    [S$._onIdTokenChangedUnsubscribe]: dart.fieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    [S$._idTokenChangedController]: dart.fieldType(dart.nullable(async.StreamController$(dart.nullable(auth$.User))))
  }));
  dart.setStaticFieldSignature(auth$.Auth, () => ['_expando']);
  dart.defineLazy(auth$.Auth, {
    /*auth$.Auth._expando*/get _expando() {
      return new (T$.ExpandoOfAuth()).new();
    }
  }, false);
  const _is_AuthProvider_default = Symbol('_is_AuthProvider_default');
  auth$.AuthProvider$ = dart.generic(T => {
    class AuthProvider extends js$0.JsObjectWrapper$(T) {
      get providerId() {
        return this.jsObject.providerId;
      }
    }
    (AuthProvider.fromJsObject = function(jsObject) {
      AuthProvider.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = AuthProvider.prototype;
    dart.addTypeTests(AuthProvider);
    AuthProvider.prototype[_is_AuthProvider_default] = true;
    dart.addTypeCaches(AuthProvider);
    dart.setGetterSignature(AuthProvider, () => ({
      __proto__: dart.getGetters(AuthProvider.__proto__),
      providerId: core.String
    }));
    dart.setLibraryUri(AuthProvider, I[69]);
    return AuthProvider;
  });
  auth$.AuthProvider = auth$.AuthProvider$();
  dart.addTypeTests(auth$.AuthProvider, _is_AuthProvider_default);
  auth$.EmailAuthProvider = class EmailAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.EmailAuthProvider", false)) {
    static new() {
      return new auth$.EmailAuthProvider.fromJsObject(new dart.global.firebase_auth.EmailAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.EmailAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.EmailAuthProvider.fromJsObject(jsObject);
    }
    static credential(email, password) {
      return dart.packageJSType("OAuthCredential", false).as(dart.global.firebase_auth.EmailAuthProvider.credential(email, password));
    }
    static credentialWithLink(email, emailLink) {
      return dart.packageJSType("OAuthCredential", false).as(dart.global.firebase_auth.EmailAuthProvider.credentialWithLink(email, emailLink));
    }
  };
  (auth$.EmailAuthProvider.fromJsObject = function(jsObject) {
    auth$.EmailAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.EmailAuthProvider.prototype;
  dart.addTypeTests(auth$.EmailAuthProvider);
  dart.addTypeCaches(auth$.EmailAuthProvider);
  dart.setStaticMethodSignature(auth$.EmailAuthProvider, () => ['new', 'credential', 'credentialWithLink']);
  dart.setLibraryUri(auth$.EmailAuthProvider, I[69]);
  dart.setStaticFieldSignature(auth$.EmailAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.EmailAuthProvider, {
    /*auth$.EmailAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.EmailAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.FacebookAuthProvider = class FacebookAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.FacebookAuthProvider", false)) {
    static new() {
      return new auth$.FacebookAuthProvider.fromJsObject(new dart.global.firebase_auth.FacebookAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.FacebookAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.FacebookAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.FacebookAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.FacebookAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils$.jsify(customOAuthParameters)));
    }
    static credential(token) {
      return dart.global.firebase_auth.FacebookAuthProvider.credential(token);
    }
  };
  (auth$.FacebookAuthProvider.fromJsObject = function(jsObject) {
    auth$.FacebookAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.FacebookAuthProvider.prototype;
  dart.addTypeTests(auth$.FacebookAuthProvider);
  dart.addTypeCaches(auth$.FacebookAuthProvider);
  dart.setMethodSignature(auth$.FacebookAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.FacebookAuthProvider.__proto__),
    addScope: dart.fnType(auth$.FacebookAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.FacebookAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.FacebookAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.FacebookAuthProvider, I[69]);
  dart.setStaticFieldSignature(auth$.FacebookAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.FacebookAuthProvider, {
    /*auth$.FacebookAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.FacebookAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.GithubAuthProvider = class GithubAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.GithubAuthProvider", false)) {
    static new() {
      return new auth$.GithubAuthProvider.fromJsObject(new dart.global.firebase_auth.GithubAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.GithubAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.GithubAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.GithubAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.GithubAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils$.jsify(customOAuthParameters)));
    }
    static credential(token) {
      return dart.global.firebase_auth.GithubAuthProvider.credential(token);
    }
  };
  (auth$.GithubAuthProvider.fromJsObject = function(jsObject) {
    auth$.GithubAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.GithubAuthProvider.prototype;
  dart.addTypeTests(auth$.GithubAuthProvider);
  dart.addTypeCaches(auth$.GithubAuthProvider);
  dart.setMethodSignature(auth$.GithubAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.GithubAuthProvider.__proto__),
    addScope: dart.fnType(auth$.GithubAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.GithubAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.GithubAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.GithubAuthProvider, I[69]);
  dart.setStaticFieldSignature(auth$.GithubAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.GithubAuthProvider, {
    /*auth$.GithubAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.GithubAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.GoogleAuthProvider = class GoogleAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.GoogleAuthProvider", false)) {
    static new() {
      return new auth$.GoogleAuthProvider.fromJsObject(new dart.global.firebase_auth.GoogleAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.GoogleAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.GoogleAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.GoogleAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.GoogleAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils$.jsify(customOAuthParameters)));
    }
    static credential(idToken = null, accessToken = null) {
      return dart.global.firebase_auth.GoogleAuthProvider.credential(idToken, accessToken);
    }
  };
  (auth$.GoogleAuthProvider.fromJsObject = function(jsObject) {
    auth$.GoogleAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.GoogleAuthProvider.prototype;
  dart.addTypeTests(auth$.GoogleAuthProvider);
  dart.addTypeCaches(auth$.GoogleAuthProvider);
  dart.setMethodSignature(auth$.GoogleAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.GoogleAuthProvider.__proto__),
    addScope: dart.fnType(auth$.GoogleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.GoogleAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.GoogleAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.GoogleAuthProvider, I[69]);
  dart.setStaticFieldSignature(auth$.GoogleAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.GoogleAuthProvider, {
    /*auth$.GoogleAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.GoogleAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.OAuthProvider = class OAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.OAuthProvider", false)) {
    static new(providerId) {
      return new auth$.OAuthProvider.fromJsObject(new dart.global.firebase_auth.OAuthProvider(providerId));
    }
    static ['_#new#tearOff'](providerId) {
      return auth$.OAuthProvider.new(providerId);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.OAuthProvider.fromJsObject(jsObject);
    }
    addScope(scope) {
      return new auth$.OAuthProvider.fromJsObject(this.jsObject.addScope(scope));
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.OAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils$.jsify(customOAuthParameters)));
    }
    credential(credentialOptions) {
      return this.jsObject.credential(credentialOptions);
    }
    static credentialFromResult(userCredential) {
      return dart.global.firebase_auth.OAuthProvider.credentialFromResult(userCredential);
    }
  };
  (auth$.OAuthProvider.fromJsObject = function(jsObject) {
    auth$.OAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.OAuthProvider.prototype;
  dart.addTypeTests(auth$.OAuthProvider);
  dart.addTypeCaches(auth$.OAuthProvider);
  dart.setMethodSignature(auth$.OAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.OAuthProvider.__proto__),
    addScope: dart.fnType(auth$.OAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(auth$.OAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))]),
    credential: dart.fnType(dart.packageJSType("OAuthCredential", false), [dart.packageJSType("OAuthCredentialOptions", false)])
  }));
  dart.setStaticMethodSignature(auth$.OAuthProvider, () => ['new', 'credentialFromResult']);
  dart.setLibraryUri(auth$.OAuthProvider, I[69]);
  auth$.TwitterAuthProvider = class TwitterAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.TwitterAuthProvider", false)) {
    static new() {
      return new auth$.TwitterAuthProvider.fromJsObject(new dart.global.firebase_auth.TwitterAuthProvider());
    }
    static ['_#new#tearOff']() {
      return auth$.TwitterAuthProvider.new();
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.TwitterAuthProvider.fromJsObject(jsObject);
    }
    setCustomParameters(customOAuthParameters) {
      return new auth$.TwitterAuthProvider.fromJsObject(this.jsObject.setCustomParameters(utils$.jsify(customOAuthParameters)));
    }
    static credential(token, secret) {
      return dart.global.firebase_auth.TwitterAuthProvider.credential(token, secret);
    }
  };
  (auth$.TwitterAuthProvider.fromJsObject = function(jsObject) {
    auth$.TwitterAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.TwitterAuthProvider.prototype;
  dart.addTypeTests(auth$.TwitterAuthProvider);
  dart.addTypeCaches(auth$.TwitterAuthProvider);
  dart.setMethodSignature(auth$.TwitterAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.TwitterAuthProvider.__proto__),
    setCustomParameters: dart.fnType(auth$.TwitterAuthProvider, [core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setStaticMethodSignature(auth$.TwitterAuthProvider, () => ['new', 'credential']);
  dart.setLibraryUri(auth$.TwitterAuthProvider, I[69]);
  dart.setStaticFieldSignature(auth$.TwitterAuthProvider, () => ['PROVIDER_ID']);
  dart.defineLazy(auth$.TwitterAuthProvider, {
    /*auth$.TwitterAuthProvider.PROVIDER_ID*/get PROVIDER_ID() {
      return dart.global.firebase_auth.TwitterAuthProvider.PROVIDER_ID;
    },
    set PROVIDER_ID(value) {}
  }, false);
  auth$.SAMLAuthProvider = class SAMLAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.SAMLAuthProvider", false)) {
    static new(providerId) {
      return new auth$.SAMLAuthProvider.fromJsObject(new dart.global.firebase_auth.SAMLAuthProvider(providerId));
    }
    static ['_#new#tearOff'](providerId) {
      return auth$.SAMLAuthProvider.new(providerId);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.SAMLAuthProvider.fromJsObject(jsObject);
    }
    static credentialFromResult(userCredential) {
      return dart.global.firebase_auth.SAMLAuthProvider.credentialFromResult(userCredential);
    }
  };
  (auth$.SAMLAuthProvider.fromJsObject = function(jsObject) {
    auth$.SAMLAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.SAMLAuthProvider.prototype;
  dart.addTypeTests(auth$.SAMLAuthProvider);
  dart.addTypeCaches(auth$.SAMLAuthProvider);
  dart.setStaticMethodSignature(auth$.SAMLAuthProvider, () => ['new', 'credentialFromResult']);
  dart.setLibraryUri(auth$.SAMLAuthProvider, I[69]);
  auth$.PhoneAuthProvider = class PhoneAuthProvider extends auth$.AuthProvider$(dart.packageJSType("firebase_auth.PhoneAuthProvider", false)) {
    static get PROVIDER_ID() {
      return dart.global.firebase_auth.PhoneAuthProvider.PROVIDER_ID;
    }
    static new(auth = null) {
      return new auth$.PhoneAuthProvider.fromJsObject(auth != null ? new dart.global.firebase_auth.PhoneAuthProvider(auth.jsObject) : new dart.global.firebase_auth.PhoneAuthProvider());
    }
    static ['_#new#tearOff'](auth = null) {
      return auth$.PhoneAuthProvider.new(auth);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.PhoneAuthProvider.fromJsObject(jsObject);
    }
    verifyPhoneNumber(phoneOptions, applicationVerifier) {
      return utils$0.handleThenable(core.String, this.jsObject.verifyPhoneNumber(phoneOptions, applicationVerifier.jsObject));
    }
    static credential(verificationId, verificationCode) {
      return dart.global.firebase_auth.PhoneAuthProvider.credential(verificationId, verificationCode);
    }
  };
  (auth$.PhoneAuthProvider.fromJsObject = function(jsObject) {
    auth$.PhoneAuthProvider.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.PhoneAuthProvider.prototype;
  dart.addTypeTests(auth$.PhoneAuthProvider);
  dart.addTypeCaches(auth$.PhoneAuthProvider);
  dart.setMethodSignature(auth$.PhoneAuthProvider, () => ({
    __proto__: dart.getMethods(auth$.PhoneAuthProvider.__proto__),
    verifyPhoneNumber: dart.fnType(async.Future$(core.String), [dart.dynamic, auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.ApplicationVerifier", false))])
  }));
  dart.setStaticMethodSignature(auth$.PhoneAuthProvider, () => ['new', 'credential']);
  dart.setStaticGetterSignature(auth$.PhoneAuthProvider, () => ['PROVIDER_ID']);
  dart.setLibraryUri(auth$.PhoneAuthProvider, I[69]);
  const _is_ApplicationVerifier_default = Symbol('_is_ApplicationVerifier_default');
  auth$.ApplicationVerifier$ = dart.generic(T => {
    class ApplicationVerifier extends js$0.JsObjectWrapper$(T) {
      get type() {
        return this.jsObject.type;
      }
      verify() {
        return utils$0.handleThenable(core.String, this.jsObject.verify());
      }
    }
    (ApplicationVerifier.fromJsObject = function(jsObject) {
      ApplicationVerifier.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = ApplicationVerifier.prototype;
    dart.addTypeTests(ApplicationVerifier);
    ApplicationVerifier.prototype[_is_ApplicationVerifier_default] = true;
    dart.addTypeCaches(ApplicationVerifier);
    dart.setMethodSignature(ApplicationVerifier, () => ({
      __proto__: dart.getMethods(ApplicationVerifier.__proto__),
      verify: dart.fnType(async.Future$(core.String), [])
    }));
    dart.setGetterSignature(ApplicationVerifier, () => ({
      __proto__: dart.getGetters(ApplicationVerifier.__proto__),
      type: core.String
    }));
    dart.setLibraryUri(ApplicationVerifier, I[69]);
    return ApplicationVerifier;
  });
  auth$.ApplicationVerifier = auth$.ApplicationVerifier$();
  dart.addTypeTests(auth$.ApplicationVerifier, _is_ApplicationVerifier_default);
  auth$.RecaptchaVerifier = class RecaptchaVerifier extends auth$.ApplicationVerifier$(dart.packageJSType("firebase_auth.RecaptchaVerifier", false)) {
    static new(container, parameters, auth) {
      return new auth$.RecaptchaVerifier.fromJsObject(new dart.global.firebase_auth.RecaptchaVerifier(auth.jsObject, container, core.Object.as(utils$.jsify(parameters))));
    }
    static ['_#new#tearOff'](container, parameters, auth) {
      return auth$.RecaptchaVerifier.new(container, parameters, auth);
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.RecaptchaVerifier.fromJsObject(jsObject);
    }
    clear() {
      return this.jsObject.clear();
    }
    render() {
      return utils$0.handleThenable(core.num, this.jsObject.render());
    }
  };
  (auth$.RecaptchaVerifier.fromJsObject = function(jsObject) {
    auth$.RecaptchaVerifier.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.RecaptchaVerifier.prototype;
  dart.addTypeTests(auth$.RecaptchaVerifier);
  dart.addTypeCaches(auth$.RecaptchaVerifier);
  dart.setMethodSignature(auth$.RecaptchaVerifier, () => ({
    __proto__: dart.getMethods(auth$.RecaptchaVerifier.__proto__),
    clear: dart.fnType(dart.void, []),
    render: dart.fnType(async.Future$(core.num), [])
  }));
  dart.setStaticMethodSignature(auth$.RecaptchaVerifier, () => ['new']);
  dart.setLibraryUri(auth$.RecaptchaVerifier, I[69]);
  auth$.ConfirmationResult = class ConfirmationResult extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.ConfirmationResult", false)) {
    get verificationId() {
      return this.jsObject.verificationId;
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.ConfirmationResult.fromJsObject(jsObject);
    }
    confirm(verificationCode) {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), this.jsObject.confirm(verificationCode)).then(auth$.UserCredential, C[126] || CT.C126);
    }
  };
  (auth$.ConfirmationResult.fromJsObject = function(jsObject) {
    auth$.ConfirmationResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.ConfirmationResult.prototype;
  dart.addTypeTests(auth$.ConfirmationResult);
  dart.addTypeCaches(auth$.ConfirmationResult);
  dart.setMethodSignature(auth$.ConfirmationResult, () => ({
    __proto__: dart.getMethods(auth$.ConfirmationResult.__proto__),
    confirm: dart.fnType(async.Future$(auth$.UserCredential), [core.String])
  }));
  dart.setGetterSignature(auth$.ConfirmationResult, () => ({
    __proto__: dart.getGetters(auth$.ConfirmationResult.__proto__),
    verificationId: core.String
  }));
  dart.setLibraryUri(auth$.ConfirmationResult, I[69]);
  auth$.UserCredential = class UserCredential extends js$0.JsObjectWrapper$(dart.packageJSType("UserCredentialJsImpl", false)) {
    get user() {
      return auth$.User.getInstance(this.jsObject.user);
    }
    get operationType() {
      return this.jsObject.operationType;
    }
    get additionalUserInfo() {
      return new auth$.AdditionalUserInfo.fromJsObject(dart.global.firebase_auth.getAdditionalUserInfo(this.jsObject));
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.UserCredential.fromJsObject(jsObject);
    }
  };
  (auth$.UserCredential.fromJsObject = function(jsObject) {
    auth$.UserCredential.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.UserCredential.prototype;
  dart.addTypeTests(auth$.UserCredential);
  dart.addTypeCaches(auth$.UserCredential);
  dart.setGetterSignature(auth$.UserCredential, () => ({
    __proto__: dart.getGetters(auth$.UserCredential.__proto__),
    user: dart.nullable(auth$.User),
    operationType: core.String,
    additionalUserInfo: dart.nullable(auth$.AdditionalUserInfo)
  }));
  dart.setLibraryUri(auth$.UserCredential, I[69]);
  auth$.AdditionalUserInfo = class AdditionalUserInfo extends js$0.JsObjectWrapper$(dart.packageJSType("AdditionalUserInfoJsImpl", false)) {
    get providerId() {
      return this.jsObject.providerId;
    }
    get profile() {
      return T$.MapNOfString$dynamic().as(utils$.dartify(this.jsObject.profile));
    }
    get username() {
      return this.jsObject.username;
    }
    get isNewUser() {
      return this.jsObject.isNewUser;
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new auth$.AdditionalUserInfo.fromJsObject(jsObject);
    }
  };
  (auth$.AdditionalUserInfo.fromJsObject = function(jsObject) {
    auth$.AdditionalUserInfo.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = auth$.AdditionalUserInfo.prototype;
  dart.addTypeTests(auth$.AdditionalUserInfo);
  dart.addTypeCaches(auth$.AdditionalUserInfo);
  dart.setGetterSignature(auth$.AdditionalUserInfo, () => ({
    __proto__: dart.getGetters(auth$.AdditionalUserInfo.__proto__),
    providerId: core.String,
    profile: dart.nullable(core.Map$(core.String, dart.dynamic)),
    username: core.String,
    isNewUser: core.bool
  }));
  dart.setLibraryUri(auth$.AdditionalUserInfo, I[69]);
  auth$.getAuthInstance = function getAuthInstance(app) {
    return auth$.Auth.getInstance(dart.global.firebase_auth.initializeAuth(app.jsObject, utils$.jsify(new (T$.IdentityMapOfString$dynamic()).from(["errorMap", dart.global.firebase_auth.debugErrorMap, "persistence", T$.JSArrayOfPersistence().of([dart.global.firebase_auth.indexedDBLocalPersistence, dart.global.firebase_auth.browserLocalPersistence, dart.global.firebase_auth.browserSessionPersistence]), "popupRedirectResolver", dart.global.firebase_auth.browserPopupRedirectResolver]))));
  };
  multi_factor.MultiFactorUser = class MultiFactorUser extends js$0.JsObjectWrapper$(dart.packageJSType("MultiFactorUserJsImpl", false)) {
    static getInstance(jsObject) {
      let t122, t121, t120, t119;
      t119 = multi_factor.MultiFactorUser._expando;
      t120 = jsObject;
      t121 = t119._get(t120);
      return t121 == null ? (t122 = new multi_factor.MultiFactorUser._fromJsObject(jsObject), t119._set(t120, t122), t122) : t121;
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorUser._fromJsObject(jsObject);
    }
    get enrolledFactors() {
      return this.jsObject.enrolledFactors[S$.$map](T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), C[135] || CT.C135)[S$.$toList]();
    }
    get session() {
      return utils$0.handleThenable(dart.packageJSType("MultiFactorSessionJsImpl", false), this.jsObject.getSession()).then(multi_factor.MultiFactorSession, C[136] || CT.C136);
    }
    enroll(assertion, displayName) {
      return utils$0.handleThenable(dart.void, this.jsObject.enroll(assertion.jsObject, displayName));
    }
    unenroll(multiFactorInfoId) {
      return utils$0.handleThenable(dart.void, this.jsObject.unenroll(multiFactorInfoId));
    }
  };
  (multi_factor.MultiFactorUser._fromJsObject = function(jsObject) {
    multi_factor.MultiFactorUser.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorUser.prototype;
  dart.addTypeTests(multi_factor.MultiFactorUser);
  dart.addTypeCaches(multi_factor.MultiFactorUser);
  dart.setMethodSignature(multi_factor.MultiFactorUser, () => ({
    __proto__: dart.getMethods(multi_factor.MultiFactorUser.__proto__),
    enroll: dart.fnType(async.Future$(dart.void), [multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false)), dart.nullable(core.String)]),
    unenroll: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setStaticMethodSignature(multi_factor.MultiFactorUser, () => ['getInstance']);
  dart.setGetterSignature(multi_factor.MultiFactorUser, () => ({
    __proto__: dart.getGetters(multi_factor.MultiFactorUser.__proto__),
    enrolledFactors: core.List$(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))),
    session: async.Future$(multi_factor.MultiFactorSession)
  }));
  dart.setLibraryUri(multi_factor.MultiFactorUser, I[71]);
  dart.setStaticFieldSignature(multi_factor.MultiFactorUser, () => ['_expando']);
  dart.defineLazy(multi_factor.MultiFactorUser, {
    /*multi_factor.MultiFactorUser._expando*/get _expando() {
      return new (T$.ExpandoOfMultiFactorUser()).new();
    }
  }, false);
  const _is_MultiFactorInfo_default = Symbol('_is_MultiFactorInfo_default');
  multi_factor.MultiFactorInfo$ = dart.generic(T => {
    class MultiFactorInfo extends js$0.JsObjectWrapper$(T) {
      static ['_#fromJsObject#tearOff'](T, jsObject) {
        return new (multi_factor.MultiFactorInfo$(T)).fromJsObject(jsObject);
      }
      get displayName() {
        return this.jsObject.displayName;
      }
      get enrollmentTime() {
        return this.jsObject.enrollmentTime;
      }
      get factorId() {
        return this.jsObject.factorId;
      }
      get uid() {
        return this.jsObject.uid;
      }
    }
    (MultiFactorInfo.fromJsObject = function(jsObject) {
      MultiFactorInfo.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = MultiFactorInfo.prototype;
    dart.addTypeTests(MultiFactorInfo);
    MultiFactorInfo.prototype[_is_MultiFactorInfo_default] = true;
    dart.addTypeCaches(MultiFactorInfo);
    dart.setGetterSignature(MultiFactorInfo, () => ({
      __proto__: dart.getGetters(MultiFactorInfo.__proto__),
      displayName: dart.nullable(core.String),
      enrollmentTime: core.String,
      factorId: core.String,
      uid: core.String
    }));
    dart.setLibraryUri(MultiFactorInfo, I[71]);
    return MultiFactorInfo;
  });
  multi_factor.MultiFactorInfo = multi_factor.MultiFactorInfo$();
  dart.addTypeTests(multi_factor.MultiFactorInfo, _is_MultiFactorInfo_default);
  multi_factor.PhoneMultiFactorInfo = class PhoneMultiFactorInfo extends multi_factor.MultiFactorInfo$(dart.packageJSType("firebase_auth.PhoneMultiFactorInfo", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorInfo.fromJsObject(jsObject);
    }
    get phoneNumber() {
      return this.jsObject.phoneNumber;
    }
  };
  (multi_factor.PhoneMultiFactorInfo.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorInfo.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorInfo.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorInfo);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorInfo);
  dart.setGetterSignature(multi_factor.PhoneMultiFactorInfo, () => ({
    __proto__: dart.getGetters(multi_factor.PhoneMultiFactorInfo.__proto__),
    phoneNumber: core.String
  }));
  dart.setLibraryUri(multi_factor.PhoneMultiFactorInfo, I[71]);
  multi_factor.TotpMultiFactorInfo = class TotpMultiFactorInfo extends multi_factor.MultiFactorInfo$(dart.packageJSType("firebase_auth.TotpMultiFactorInfo", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.TotpMultiFactorInfo.fromJsObject(jsObject);
    }
  };
  (multi_factor.TotpMultiFactorInfo.fromJsObject = function(jsObject) {
    multi_factor.TotpMultiFactorInfo.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.TotpMultiFactorInfo.prototype;
  dart.addTypeTests(multi_factor.TotpMultiFactorInfo);
  dart.addTypeCaches(multi_factor.TotpMultiFactorInfo);
  dart.setLibraryUri(multi_factor.TotpMultiFactorInfo, I[71]);
  multi_factor.MultiFactorSession = class MultiFactorSession extends js$0.JsObjectWrapper$(dart.packageJSType("MultiFactorSessionJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorSession.fromJsObject(jsObject);
    }
  };
  (multi_factor.MultiFactorSession.fromJsObject = function(jsObject) {
    multi_factor.MultiFactorSession.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorSession.prototype;
  dart.addTypeTests(multi_factor.MultiFactorSession);
  dart.addTypeCaches(multi_factor.MultiFactorSession);
  dart.setLibraryUri(multi_factor.MultiFactorSession, I[71]);
  const _is_MultiFactorAssertion_default = Symbol('_is_MultiFactorAssertion_default');
  multi_factor.MultiFactorAssertion$ = dart.generic(T => {
    class MultiFactorAssertion extends js$0.JsObjectWrapper$(T) {
      static ['_#fromJsObject#tearOff'](T, jsObject) {
        return new (multi_factor.MultiFactorAssertion$(T)).fromJsObject(jsObject);
      }
      get factorId() {
        return this.jsObject.factorId;
      }
    }
    (MultiFactorAssertion.fromJsObject = function(jsObject) {
      MultiFactorAssertion.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = MultiFactorAssertion.prototype;
    dart.addTypeTests(MultiFactorAssertion);
    MultiFactorAssertion.prototype[_is_MultiFactorAssertion_default] = true;
    dart.addTypeCaches(MultiFactorAssertion);
    dart.setGetterSignature(MultiFactorAssertion, () => ({
      __proto__: dart.getGetters(MultiFactorAssertion.__proto__),
      factorId: core.String
    }));
    dart.setLibraryUri(MultiFactorAssertion, I[71]);
    return MultiFactorAssertion;
  });
  multi_factor.MultiFactorAssertion = multi_factor.MultiFactorAssertion$();
  dart.addTypeTests(multi_factor.MultiFactorAssertion, _is_MultiFactorAssertion_default);
  multi_factor.PhoneMultiFactorAssertion = class PhoneMultiFactorAssertion extends multi_factor.MultiFactorAssertion$(dart.packageJSType("PhoneMultiFactorAssertionJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorAssertion.fromJsObject(jsObject);
    }
  };
  (multi_factor.PhoneMultiFactorAssertion.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorAssertion.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorAssertion.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorAssertion);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorAssertion);
  dart.setLibraryUri(multi_factor.PhoneMultiFactorAssertion, I[71]);
  multi_factor.MultiFactorResolver = class MultiFactorResolver extends js$0.JsObjectWrapper$(dart.packageJSType("MultiFactorResolverJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.MultiFactorResolver.fromJsObject(jsObject);
    }
    get hints() {
      return this.jsObject.hints[S$.$map](T$.MultiFactorInfoOfMultiFactorInfoJsImpl(), C[135] || CT.C135)[S$.$toList]();
    }
    get session() {
      return new multi_factor.MultiFactorSession.fromJsObject(this.jsObject.session);
    }
    resolveSignIn(assertion) {
      return utils$0.handleThenable(dart.packageJSType("UserCredentialJsImpl", false), this.jsObject.resolveSignIn(assertion.jsObject)).then(auth$.UserCredential, C[126] || CT.C126);
    }
  };
  (multi_factor.MultiFactorResolver.fromJsObject = function(jsObject) {
    multi_factor.MultiFactorResolver.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.MultiFactorResolver.prototype;
  dart.addTypeTests(multi_factor.MultiFactorResolver);
  dart.addTypeCaches(multi_factor.MultiFactorResolver);
  dart.setMethodSignature(multi_factor.MultiFactorResolver, () => ({
    __proto__: dart.getMethods(multi_factor.MultiFactorResolver.__proto__),
    resolveSignIn: dart.fnType(async.Future$(auth$.UserCredential), [multi_factor.MultiFactorAssertion$(dart.packageJSType("MultiFactorAssertionJsImpl", false))])
  }));
  dart.setGetterSignature(multi_factor.MultiFactorResolver, () => ({
    __proto__: dart.getGetters(multi_factor.MultiFactorResolver.__proto__),
    hints: core.List$(multi_factor.MultiFactorInfo$(dart.packageJSType("MultiFactorInfoJsImpl", false))),
    session: multi_factor.MultiFactorSession
  }));
  dart.setLibraryUri(multi_factor.MultiFactorResolver, I[71]);
  multi_factor.PhoneMultiFactorGenerator = class PhoneMultiFactorGenerator extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.PhoneMultiFactorGenerator", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.PhoneMultiFactorGenerator.fromJsObject(jsObject);
    }
    static assertion(credential) {
      return new multi_factor.PhoneMultiFactorAssertion.fromJsObject(dart.nullCheck(dart.global.firebase_auth.PhoneMultiFactorGenerator.assertion(credential)));
    }
  };
  (multi_factor.PhoneMultiFactorGenerator.fromJsObject = function(jsObject) {
    multi_factor.PhoneMultiFactorGenerator.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.PhoneMultiFactorGenerator.prototype;
  dart.addTypeTests(multi_factor.PhoneMultiFactorGenerator);
  dart.addTypeCaches(multi_factor.PhoneMultiFactorGenerator);
  dart.setStaticMethodSignature(multi_factor.PhoneMultiFactorGenerator, () => ['assertion']);
  dart.setLibraryUri(multi_factor.PhoneMultiFactorGenerator, I[71]);
  multi_factor.TotpMultiFactorAssertion = class TotpMultiFactorAssertion extends multi_factor.MultiFactorAssertion$(dart.packageJSType("TotpMultiFactorAssertionJsImpl", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.TotpMultiFactorAssertion.fromJsObject(jsObject);
    }
  };
  (multi_factor.TotpMultiFactorAssertion.fromJsObject = function(jsObject) {
    multi_factor.TotpMultiFactorAssertion.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.TotpMultiFactorAssertion.prototype;
  dart.addTypeTests(multi_factor.TotpMultiFactorAssertion);
  dart.addTypeCaches(multi_factor.TotpMultiFactorAssertion);
  dart.setLibraryUri(multi_factor.TotpMultiFactorAssertion, I[71]);
  multi_factor.TotpSecret = class TotpSecret extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.TotpSecret", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.TotpSecret.fromJsObject(jsObject);
    }
    get codeInterval() {
      return this.jsObject.codeIntervalSeconds[S$.$toInt]();
    }
    get codeLength() {
      return this.jsObject.codeLength[S$.$toInt]();
    }
    get enrollmentCompletionDeadline() {
      return http_date.parseHttpDate(this.jsObject.enrollmentCompletionDeadline);
    }
    get hashingAlgorithm() {
      return this.jsObject.hashingAlgorithm;
    }
    get secretKey() {
      return this.jsObject.secretKey;
    }
    generateQrCodeUrl(accountName, issuer) {
      return this.jsObject.generateQrCodeUrl(accountName, issuer);
    }
  };
  (multi_factor.TotpSecret.fromJsObject = function(jsObject) {
    multi_factor.TotpSecret.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.TotpSecret.prototype;
  dart.addTypeTests(multi_factor.TotpSecret);
  dart.addTypeCaches(multi_factor.TotpSecret);
  dart.setMethodSignature(multi_factor.TotpSecret, () => ({
    __proto__: dart.getMethods(multi_factor.TotpSecret.__proto__),
    generateQrCodeUrl: dart.fnType(core.String, [dart.nullable(core.String), dart.nullable(core.String)])
  }));
  dart.setGetterSignature(multi_factor.TotpSecret, () => ({
    __proto__: dart.getGetters(multi_factor.TotpSecret.__proto__),
    codeInterval: core.int,
    codeLength: core.int,
    enrollmentCompletionDeadline: core.DateTime,
    hashingAlgorithm: core.String,
    secretKey: core.String
  }));
  dart.setLibraryUri(multi_factor.TotpSecret, I[71]);
  multi_factor.TotpMultiFactorGenerator = class TotpMultiFactorGenerator extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_auth.TotpMultiFactorGenerator", false)) {
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new multi_factor.TotpMultiFactorGenerator.fromJsObject(jsObject);
    }
    static assertionForSignIn(enrollmentId, oneTimePassword) {
      return new multi_factor.TotpMultiFactorAssertion.fromJsObject(dart.nullCheck(dart.global.firebase_auth.TotpMultiFactorGenerator.assertionForSignIn(enrollmentId, oneTimePassword)));
    }
    static assertionForEnrollment(secret, oneTimePassword) {
      return new multi_factor.TotpMultiFactorAssertion.fromJsObject(dart.nullCheck(dart.global.firebase_auth.TotpMultiFactorGenerator.assertionForEnrollment(secret.jsObject, oneTimePassword)));
    }
    static generateSecret(session) {
      return utils$0.handleThenable(dart.packageJSType("firebase_auth.TotpSecret", false), dart.global.firebase_auth.TotpMultiFactorGenerator.generateSecret(session.jsObject)).then(multi_factor.TotpSecret, C[137] || CT.C137);
    }
  };
  (multi_factor.TotpMultiFactorGenerator.fromJsObject = function(jsObject) {
    multi_factor.TotpMultiFactorGenerator.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = multi_factor.TotpMultiFactorGenerator.prototype;
  dart.addTypeTests(multi_factor.TotpMultiFactorGenerator);
  dart.addTypeCaches(multi_factor.TotpMultiFactorGenerator);
  dart.setStaticMethodSignature(multi_factor.TotpMultiFactorGenerator, () => ['assertionForSignIn', 'assertionForEnrollment', 'generateSecret']);
  dart.setLibraryUri(multi_factor.TotpMultiFactorGenerator, I[71]);
  multi_factor.multiFactor = function multiFactor(user) {
    return multi_factor.MultiFactorUser.getInstance(dart.global.firebase_auth.multiFactor(user.jsObject));
  };
  multi_factor.getMultiFactorResolver = function getMultiFactorResolver(auth, error) {
    return new multi_factor.MultiFactorResolver.fromJsObject(dart.global.firebase_auth.getMultiFactorResolver(auth.jsObject, error));
  };
  multi_factor.fromJsMultiFactorInfo = function fromJsMultiFactorInfo(e) {
    if (e.factorId === "phone") {
      return new multi_factor.PhoneMultiFactorInfo.fromJsObject(dart.packageJSType("firebase_auth.PhoneMultiFactorInfo", false).as(e));
    } else if (e.factorId === "totp") {
      return new multi_factor.TotpMultiFactorInfo.fromJsObject(dart.packageJSType("firebase_auth.TotpMultiFactorInfo", false).as(e));
    } else {
      return new (T$.MultiFactorInfoOfMultiFactorInfoJsImpl()).fromJsObject(e);
    }
  };
  js$['DomConsoleExtension|get#debug'] = function DomConsoleExtension$124get$35debug($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "debug");
  };
  js$['DomConsoleExtension|get#info'] = function DomConsoleExtension$124get$35info($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "info");
  };
  js$['DomConsoleExtension|get#log'] = function DomConsoleExtension$124get$35log($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "log");
  };
  js$['DomConsoleExtension|get#warn'] = function DomConsoleExtension$124get$35warn($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "warn");
  };
  js$['DomConsoleExtension|get#error'] = function DomConsoleExtension$124get$35error($this) {
    return js_util.getProperty(T$.ObjectNAndObjectNAndObjectN__Tovoid(), $this, "error");
  };
  js$['DomErrorExtension|get#message'] = function DomErrorExtension$124get$35message($this) {
    return js_util.getProperty(T$.StringN(), $this, "message");
  };
  js$['DomErrorExtension|get#stack'] = function DomErrorExtension$124get$35stack($this) {
    return js_util.getProperty(T$.StringN(), $this, "stack");
  };
  js$['DomErrorExtension|get#name'] = function DomErrorExtension$124get$35name($this) {
    return js_util.getProperty(core.String, $this, "name");
  };
  js$['DomErrorExtension|get#cause'] = function DomErrorExtension$124get$35cause($this) {
    return js_util.getProperty(T$.ObjectN(), $this, "cause");
  };
  js$['DomTrustedTypePolicyFactoryExtension|createPolicy'] = function DomTrustedTypePolicyFactoryExtension$124createPolicy($this, policyName, policyOptions) {
    return js_util._callMethodUnchecked2(dart.packageJSType("DomTrustedTypePolicy", true), $this, "createPolicy", policyName, policyOptions);
  };
  js$['DomTrustedTypePolicyFactoryExtension|get#createPolicy'] = function DomTrustedTypePolicyFactoryExtension$124get$35createPolicy($this) {
    return dart.fn((policyName, policyOptions) => js$['DomTrustedTypePolicyFactoryExtension|createPolicy']($this, policyName, policyOptions), T$.StringAndDomTrustedTypePolicyOptionsNToDomTrustedTypePolicy());
  };
  js$['DomTrustedTypePolicyExtension|createScriptURL'] = function DomTrustedTypePolicyExtension$124createScriptURL($this, input) {
    return js_util._callMethodUnchecked1(dart.packageJSType("DomTrustedScriptUrl", true), $this, "createScriptURL", input);
  };
  js$['DomTrustedTypePolicyExtension|get#createScriptURL'] = function DomTrustedTypePolicyExtension$124get$35createScriptURL($this) {
    return dart.fn(input => js$['DomTrustedTypePolicyExtension|createScriptURL']($this, input), T$.StringToDomTrustedScriptUrl());
  };
  core$.initializeApp = function initializeApp(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    name == null ? name = "[DEFAULT]" : null;
    return app$.App.getInstance(dart.global.firebase_core.initializeApp({apiKey: apiKey, authDomain: authDomain, databaseURL: databaseURL, projectId: projectId, storageBucket: storageBucket, messagingSenderId: messagingSenderId, measurementId: measurementId, appId: appId}, name));
  };
  core$.app = function app$0(name = null) {
    return app$.App.getInstance(name != null ? dart.global.firebase_core.getApp(name) : dart.global.firebase_core.getApp());
  };
  dart.copyProperties(core$, {
    get apps() {
      return dart.global.firebase_core.getApps()[S$.$map](app$.App, dart.fn(e => app$.App.getInstance(dart.packageJSType("firebase_core.FirebaseApp", false).as(e)), T$.dynamicToApp()))[S$.$toList]();
    }
  });
  platform_interface_firebase_storage.FirebaseStoragePlatform = class FirebaseStoragePlatform extends plugin_platform_interface.PlatformInterface {
    get appInstance() {
      return this[S$.appInstance$2];
    }
    set appInstance(value) {
      super.appInstance = value;
    }
    get bucket() {
      return this[S$.bucket];
    }
    set bucket(value) {
      super.bucket = value;
    }
    get emulatorHost() {
      return this[S$.emulatorHost];
    }
    set emulatorHost(value) {
      this[S$.emulatorHost] = value;
    }
    get emulatorPort() {
      return this[S$.emulatorPort];
    }
    set emulatorPort(value) {
      this[S$.emulatorPort] = value;
    }
    static instanceFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return platform_interface_firebase_storage.FirebaseStoragePlatform.instance.delegateFor({app: app, bucket: bucket});
    }
    static ['_#instanceFor#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return platform_interface_firebase_storage.FirebaseStoragePlatform.instanceFor({app: app, bucket: bucket});
    }
    get app() {
      if (this.appInstance == null) {
        return firebase_core.Firebase.app();
      }
      return dart.nullCheck(this.appInstance);
    }
    static get instance() {
      let t132;
      t132 = platform_interface_firebase_storage.FirebaseStoragePlatform._instance;
      return t132 == null ? platform_interface_firebase_storage.FirebaseStoragePlatform._instance = method_channel_firebase_storage.MethodChannelFirebaseStorage.instance : t132;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_firebase_storage.FirebaseStoragePlatform._token);
      platform_interface_firebase_storage.FirebaseStoragePlatform._instance = instance;
    }
    get maxOperationRetryTime() {
      dart.throw(new core.UnimplementedError.new("get.maxOperationRetryTime is not implemented"));
    }
    get maxUploadRetryTime() {
      dart.throw(new core.UnimplementedError.new("get.maxUploadRetryTime is not implemented"));
    }
    get maxDownloadRetryTime() {
      dart.throw(new core.UnimplementedError.new("get.maxDownloadRetryTime is not implemented"));
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      dart.throw(new core.UnimplementedError.new("delegateFor() is not implemented"));
    }
    ref(path) {
      dart.throw(new core.UnimplementedError.new("ref() is not implemented"));
    }
    useStorageEmulator(host, port) {
      dart.throw(new core.UnimplementedError.new("useStorageEmulator() is not implemented"));
    }
    setMaxOperationRetryTime(time) {
      dart.throw(new core.UnimplementedError.new("setMaxOperationRetryTime() is not implemented"));
    }
    setMaxUploadRetryTime(time) {
      dart.throw(new core.UnimplementedError.new("setMaxUploadRetryTime() is not implemented"));
    }
    setMaxDownloadRetryTime(time) {
      dart.throw(new core.UnimplementedError.new("setMaxDownloadRetryTime() is not implemented"));
    }
  };
  (platform_interface_firebase_storage.FirebaseStoragePlatform.new = function(opts) {
    let appInstance = opts && 'appInstance' in opts ? opts.appInstance : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    this[S$.emulatorHost] = null;
    this[S$.emulatorPort] = null;
    this[S$.appInstance$2] = appInstance;
    this[S$.bucket] = bucket;
    platform_interface_firebase_storage.FirebaseStoragePlatform.__proto__.new.call(this, {token: platform_interface_firebase_storage.FirebaseStoragePlatform._token});
    ;
  }).prototype = platform_interface_firebase_storage.FirebaseStoragePlatform.prototype;
  dart.addTypeTests(platform_interface_firebase_storage.FirebaseStoragePlatform);
  dart.addTypeCaches(platform_interface_firebase_storage.FirebaseStoragePlatform);
  dart.setMethodSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_firebase_storage.FirebaseStoragePlatform.__proto__),
    delegateFor: dart.fnType(platform_interface_firebase_storage.FirebaseStoragePlatform, [], {}, {app: firebase_core.FirebaseApp, bucket: core.String}),
    ref: dart.fnType(platform_interface_reference.ReferencePlatform, [core.String]),
    useStorageEmulator: dart.fnType(async.Future$(dart.void), [core.String, core.int]),
    setMaxOperationRetryTime: dart.fnType(dart.void, [core.int]),
    setMaxUploadRetryTime: dart.fnType(dart.void, [core.int]),
    setMaxDownloadRetryTime: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ['instanceFor']);
  dart.setGetterSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_firebase_storage.FirebaseStoragePlatform.__proto__),
    app: firebase_core.FirebaseApp,
    maxOperationRetryTime: core.int,
    maxUploadRetryTime: core.int,
    maxDownloadRetryTime: core.int
  }));
  dart.setStaticGetterSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ['instance']);
  dart.setStaticSetterSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ['instance']);
  dart.setLibraryUri(platform_interface_firebase_storage.FirebaseStoragePlatform, I[72]);
  dart.setFieldSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ({
    __proto__: dart.getFields(platform_interface_firebase_storage.FirebaseStoragePlatform.__proto__),
    appInstance: dart.finalFieldType(dart.nullable(firebase_core.FirebaseApp)),
    bucket: dart.finalFieldType(core.String),
    emulatorHost: dart.fieldType(dart.nullable(core.String)),
    emulatorPort: dart.fieldType(dart.nullable(core.int))
  }));
  dart.setStaticFieldSignature(platform_interface_firebase_storage.FirebaseStoragePlatform, () => ['_token', '_instance']);
  dart.defineLazy(platform_interface_firebase_storage.FirebaseStoragePlatform, {
    /*platform_interface_firebase_storage.FirebaseStoragePlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*platform_interface_firebase_storage.FirebaseStoragePlatform._instance*/get _instance() {
      return null;
    },
    set _instance(value) {}
  }, false);
  firebase_storage_web$.FirebaseStorageWeb = class FirebaseStorageWeb extends platform_interface_firebase_storage.FirebaseStoragePlatform {
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return new firebase_storage_web$.FirebaseStorageWeb.new({app: app, bucket: bucket});
    }
    static ['_#_nullInstance#tearOff']() {
      return new firebase_storage_web$.FirebaseStorageWeb._nullInstance();
    }
    static ['_#forMock#tearOff'](_webStorage, opts) {
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      let app = opts && 'app' in opts ? opts.app : null;
      return new firebase_storage_web$.FirebaseStorageWeb.forMock(_webStorage, {bucket: bucket, app: app});
    }
    get delegate() {
      let t132;
      t132 = this[S$._webStorage];
      return t132 == null ? this[S$._webStorage] = storage.getStorageInstance(core$.app(this.app.name), this[S$._bucket]) : t132;
    }
    static registerWith(registrar) {
      firebase_core_web.FirebaseCoreWeb.registerService("storage");
      platform_interface_firebase_storage.FirebaseStoragePlatform.instance = new firebase_storage_web$.FirebaseStorageWeb._nullInstance();
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return new firebase_storage_web$.FirebaseStorageWeb.new({app: app, bucket: bucket});
    }
    get maxOperationRetryTime() {
      return this[S$._maxOperationRetryTime];
    }
    get maxUploadRetryTime() {
      return this.delegate.maxUploadRetryTime;
    }
    get maxDownloadRetryTime() {
      return this[S$._maxDownloadRetryTime];
    }
    ref(path, opts) {
      let refBuilder = opts && 'refBuilder' in opts ? opts.refBuilder : null;
      return errors.guard(platform_interface_reference.ReferencePlatform, dart.fn(() => {
        let t132;
        let refBuilderFunction = (t132 = refBuilder, t132 == null ? dart.bind(this, S$._createReference) : t132);
        let ref = refBuilderFunction(this, path);
        return ref;
      }, T$.VoidToReferencePlatform()));
    }
    [S$._createReference](storage, path) {
      return new reference_web.ReferenceWeb.new(storage, path);
    }
    setMaxOperationRetryTime(time) {
      this[S$._maxOperationRetryTime] = time;
      this.delegate.maxOperationRetryTime = time;
    }
    setMaxUploadRetryTime(time) {
      this.delegate.maxUploadRetryTime = time;
    }
    setMaxDownloadRetryTime(time) {
      this[S$._maxDownloadRetryTime] = time;
    }
    useStorageEmulator(host, port) {
      return async.async(dart.void, (function* useStorageEmulator() {
        errors.guard(dart.void, dart.fn(() => this.delegate.useStorageEmulator(host, port), T$.VoidTovoid()));
      }).bind(this));
    }
  };
  (firebase_storage_web$.FirebaseStorageWeb.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    this[S$._maxDownloadRetryTime] = (C[138] || CT.C138).inMilliseconds;
    this[S$._maxOperationRetryTime] = (C[139] || CT.C139).inMilliseconds;
    this[S$._webStorage] = null;
    this[S$._bucket] = bucket;
    firebase_storage_web$.FirebaseStorageWeb.__proto__.new.call(this, {appInstance: app, bucket: bucket});
    ;
  }).prototype = firebase_storage_web$.FirebaseStorageWeb.prototype;
  (firebase_storage_web$.FirebaseStorageWeb._nullInstance = function() {
    this[S$._maxDownloadRetryTime] = (C[138] || CT.C138).inMilliseconds;
    this[S$._maxOperationRetryTime] = (C[139] || CT.C139).inMilliseconds;
    this[S$._bucket] = null;
    this[S$._webStorage] = null;
    firebase_storage_web$.FirebaseStorageWeb.__proto__.new.call(this, {bucket: ""});
    ;
  }).prototype = firebase_storage_web$.FirebaseStorageWeb.prototype;
  (firebase_storage_web$.FirebaseStorageWeb.forMock = function(_webStorage, opts) {
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    let app = opts && 'app' in opts ? opts.app : null;
    this[S$._maxDownloadRetryTime] = (C[138] || CT.C138).inMilliseconds;
    this[S$._maxOperationRetryTime] = (C[139] || CT.C139).inMilliseconds;
    this[S$._bucket] = null;
    this[S$._webStorage] = _webStorage;
    firebase_storage_web$.FirebaseStorageWeb.__proto__.new.call(this, {appInstance: app, bucket: bucket});
    ;
  }).prototype = firebase_storage_web$.FirebaseStorageWeb.prototype;
  dart.addTypeTests(firebase_storage_web$.FirebaseStorageWeb);
  dart.addTypeCaches(firebase_storage_web$.FirebaseStorageWeb);
  dart.setMethodSignature(firebase_storage_web$.FirebaseStorageWeb, () => ({
    __proto__: dart.getMethods(firebase_storage_web$.FirebaseStorageWeb.__proto__),
    delegateFor: dart.fnType(platform_interface_firebase_storage.FirebaseStoragePlatform, [], {app: dart.nullable(firebase_core.FirebaseApp)}, {bucket: core.String}),
    ref: dart.fnType(platform_interface_reference.ReferencePlatform, [core.String], {refBuilder: dart.nullable(dart.fnType(platform_interface_reference.ReferencePlatform, [firebase_storage_web$.FirebaseStorageWeb, core.String]))}, {}),
    [S$._createReference]: dart.fnType(platform_interface_reference.ReferencePlatform, [firebase_storage_web$.FirebaseStorageWeb, core.String])
  }));
  dart.setStaticMethodSignature(firebase_storage_web$.FirebaseStorageWeb, () => ['registerWith']);
  dart.setGetterSignature(firebase_storage_web$.FirebaseStorageWeb, () => ({
    __proto__: dart.getGetters(firebase_storage_web$.FirebaseStorageWeb.__proto__),
    delegate: storage.Storage
  }));
  dart.setLibraryUri(firebase_storage_web$.FirebaseStorageWeb, I[73]);
  dart.setFieldSignature(firebase_storage_web$.FirebaseStorageWeb, () => ({
    __proto__: dart.getFields(firebase_storage_web$.FirebaseStorageWeb.__proto__),
    [S$._webStorage]: dart.fieldType(dart.nullable(storage.Storage)),
    [S$._bucket]: dart.fieldType(dart.nullable(core.String)),
    [S$._maxDownloadRetryTime]: dart.fieldType(core.int),
    [S$._maxOperationRetryTime]: dart.fieldType(core.int)
  }));
  image_resizer.ImageResizer = class ImageResizer extends core.Object {
    resizeImageIfNeeded(file, maxWidth, maxHeight, imageQuality) {
      return async.async(html$.XFile, (function* resizeImageIfNeeded() {
        if (!image_resizer_utils.imageResizeNeeded(maxWidth, maxHeight, imageQuality) || file.mimeType === "image/gif") {
          return file;
        }
        try {
          let imageElement = (yield this.loadImage(file.path));
          let canvas = this.resizeImageElement(imageElement, maxWidth, maxHeight);
          let resizedImage = (yield this.writeCanvasToFile(file, canvas, imageQuality));
          html.Url.revokeObjectUrl(file.path);
          return resizedImage;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            return file;
          } else
            throw e$;
        }
      }).bind(this));
    }
    loadImage(blobUrl) {
      let imageLoadCompleter = T$.CompleterOfImageElement().new();
      let imageElement = html.ImageElement.new();
      imageElement.src = blobUrl;
      imageElement[S$.$onLoad].listen(dart.fn(event => {
        imageLoadCompleter.complete(imageElement);
      }, T$.EventTovoid()));
      imageElement[S$.$onError].listen(dart.fn(event => {
        imageElement[S$.$remove]();
        imageLoadCompleter.completeError("Error while loading image.");
      }, T$.EventTovoid()));
      return imageLoadCompleter.future;
    }
    resizeImageElement(source, maxWidth, maxHeight) {
      let newImageSize = image_resizer_utils.calculateSizeOfDownScaledImage(new ui.Size.new(dart.nullCheck(source.width)[S$.$toDouble](), dart.nullCheck(source.height)[S$.$toDouble]()), maxWidth, maxHeight);
      let canvas = html.CanvasElement.new();
      canvas.width = newImageSize.width[S$.$toInt]();
      canvas.height = newImageSize.height[S$.$toInt]();
      let context = canvas[S$.$context2D];
      if (maxHeight == null && maxWidth == null) {
        context.drawImage(source, 0, 0);
      } else {
        context[S$.$drawImageScaled](source, 0, 0, dart.nullCheck(canvas.width), dart.nullCheck(canvas.height));
      }
      return canvas;
    }
    writeCanvasToFile(originalFile, canvas, imageQuality) {
      return async.async(html$.XFile, function* writeCanvasToFile() {
        let t133;
        let calculatedImageQuality = math.min(core.int, (t133 = imageQuality, t133 == null ? 100 : t133), 100) / 100;
        let blob = (yield canvas[S$.$toBlob](originalFile.mimeType, calculatedImageQuality));
        return new html$.XFile.new(html.Url.createObjectUrlFromBlob(blob), {mimeType: originalFile.mimeType, name: "scaled_" + originalFile.name, lastModified: new core.DateTime.now(), length: blob[S$.$size]});
      });
    }
    static ['_#new#tearOff']() {
      return new image_resizer.ImageResizer.new();
    }
  };
  (image_resizer.ImageResizer.new = function() {
    ;
  }).prototype = image_resizer.ImageResizer.prototype;
  dart.addTypeTests(image_resizer.ImageResizer);
  dart.addTypeCaches(image_resizer.ImageResizer);
  dart.setMethodSignature(image_resizer.ImageResizer, () => ({
    __proto__: dart.getMethods(image_resizer.ImageResizer.__proto__),
    resizeImageIfNeeded: dart.fnType(async.Future$(html$.XFile), [html$.XFile, dart.nullable(core.double), dart.nullable(core.double), dart.nullable(core.int)]),
    loadImage: dart.fnType(async.Future$(html.ImageElement), [core.String]),
    resizeImageElement: dart.fnType(html.CanvasElement, [html.ImageElement, dart.nullable(core.double), dart.nullable(core.double)]),
    writeCanvasToFile: dart.fnType(async.Future$(html$.XFile), [html$.XFile, html.CanvasElement, dart.nullable(core.int)])
  }));
  dart.setLibraryUri(image_resizer.ImageResizer, I[74]);
  action_code_info.ActionCodeInfo = class ActionCodeInfo extends core.Object {
    get operation() {
      return this[S$.operation];
    }
    set operation(value) {
      this[S$.operation] = value;
    }
    static ['_#new#tearOff'](opts) {
      let operation = opts && 'operation' in opts ? opts.operation : null;
      let data = opts && 'data' in opts ? opts.data : null;
      return new action_code_info.ActionCodeInfo.new({operation: operation, data: data});
    }
    get data() {
      return this[S$._data$1].toMap();
    }
  };
  (action_code_info.ActionCodeInfo.new = function(opts) {
    let operation = opts && 'operation' in opts ? opts.operation : null;
    let data = opts && 'data' in opts ? opts.data : null;
    this[S$.operation] = operation;
    this[S$._data$1] = data;
    ;
  }).prototype = action_code_info.ActionCodeInfo.prototype;
  dart.addTypeTests(action_code_info.ActionCodeInfo);
  dart.addTypeCaches(action_code_info.ActionCodeInfo);
  dart.setGetterSignature(action_code_info.ActionCodeInfo, () => ({
    __proto__: dart.getGetters(action_code_info.ActionCodeInfo.__proto__),
    data: core.Map$(core.String, dart.dynamic)
  }));
  dart.setLibraryUri(action_code_info.ActionCodeInfo, I[75]);
  dart.setFieldSignature(action_code_info.ActionCodeInfo, () => ({
    __proto__: dart.getFields(action_code_info.ActionCodeInfo.__proto__),
    operation: dart.fieldType(messages$46pigeon.ActionCodeInfoOperation),
    [S$._data$1]: dart.fieldType(action_code_info.ActionCodeInfoData)
  }));
  action_code_info.ActionCodeInfoData = class ActionCodeInfoData extends core.Object {
    get email() {
      return this[S$0.email$2];
    }
    set email(value) {
      super.email = value;
    }
    get previousEmail() {
      return this[S$0.previousEmail];
    }
    set previousEmail(value) {
      super.previousEmail = value;
    }
    static ['_#new#tearOff'](opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
      return new action_code_info.ActionCodeInfoData.new({email: email, previousEmail: previousEmail});
    }
    toMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["email", this.email, "previousEmail", this.previousEmail]);
    }
  };
  (action_code_info.ActionCodeInfoData.new = function(opts) {
    let email = opts && 'email' in opts ? opts.email : null;
    let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
    this[S$0.email$2] = email;
    this[S$0.previousEmail] = previousEmail;
    ;
  }).prototype = action_code_info.ActionCodeInfoData.prototype;
  dart.addTypeTests(action_code_info.ActionCodeInfoData);
  dart.addTypeCaches(action_code_info.ActionCodeInfoData);
  dart.setMethodSignature(action_code_info.ActionCodeInfoData, () => ({
    __proto__: dart.getMethods(action_code_info.ActionCodeInfoData.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(action_code_info.ActionCodeInfoData, I[75]);
  dart.setFieldSignature(action_code_info.ActionCodeInfoData, () => ({
    __proto__: dart.getFields(action_code_info.ActionCodeInfoData.__proto__),
    email: dart.finalFieldType(dart.nullable(core.String)),
    previousEmail: dart.finalFieldType(dart.nullable(core.String))
  }));
  action_code_settings.ActionCodeSettings = class ActionCodeSettings extends core.Object {
    get androidPackageName() {
      return this[S$0.androidPackageName];
    }
    set androidPackageName(value) {
      super.androidPackageName = value;
    }
    get androidMinimumVersion() {
      return this[S$0.androidMinimumVersion];
    }
    set androidMinimumVersion(value) {
      super.androidMinimumVersion = value;
    }
    get androidInstallApp() {
      return this[S$0.androidInstallApp];
    }
    set androidInstallApp(value) {
      super.androidInstallApp = value;
    }
    get iOSBundleId() {
      return this[S$0.iOSBundleId];
    }
    set iOSBundleId(value) {
      super.iOSBundleId = value;
    }
    get dynamicLinkDomain() {
      return this[S$0.dynamicLinkDomain];
    }
    set dynamicLinkDomain(value) {
      super.dynamicLinkDomain = value;
    }
    get handleCodeInApp() {
      return this[S$0.handleCodeInApp];
    }
    set handleCodeInApp(value) {
      super.handleCodeInApp = value;
    }
    get url() {
      return this[S$0.url];
    }
    set url(value) {
      super.url = value;
    }
    static ['_#new#tearOff'](opts) {
      let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
      let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
      let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : false;
      let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
      let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : false;
      let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
      let url = opts && 'url' in opts ? opts.url : null;
      return new action_code_settings.ActionCodeSettings.new({androidPackageName: androidPackageName, androidMinimumVersion: androidMinimumVersion, androidInstallApp: androidInstallApp, dynamicLinkDomain: dynamicLinkDomain, handleCodeInApp: handleCodeInApp, iOSBundleId: iOSBundleId, url: url});
    }
    asMap() {
      return (() => {
        let t133 = new (T$.IdentityMapOfString$dynamic()).new();
        t133[S$.$_set]("url", this.url);
        t133[S$.$_set]("dynamicLinkDomain", this.dynamicLinkDomain);
        t133[S$.$_set]("handleCodeInApp", this.handleCodeInApp);
        if (this.iOSBundleId != null) t133[S$.$_set]("iOS", new (T$.IdentityMapOfString$StringN()).from(["bundleId", this.iOSBundleId]));
        if (this.androidPackageName != null) t133[S$.$_set]("android", new (T$.IdentityMapOfString$ObjectN()).from(["packageName", this.androidPackageName, "minimumVersion", this.androidMinimumVersion, "installApp", this.androidInstallApp]));
        return t133;
      })();
    }
    toString() {
      return dart.str(dart.wrapType(action_code_settings.ActionCodeSettings)) + "(" + dart.str(dart.bind(this, 'asMap')) + ")";
    }
  };
  (action_code_settings.ActionCodeSettings.new = function(opts) {
    let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
    let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
    let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : false;
    let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
    let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : false;
    let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
    let url = opts && 'url' in opts ? opts.url : null;
    this[S$0.androidPackageName] = androidPackageName;
    this[S$0.androidMinimumVersion] = androidMinimumVersion;
    this[S$0.androidInstallApp] = androidInstallApp;
    this[S$0.dynamicLinkDomain] = dynamicLinkDomain;
    this[S$0.handleCodeInApp] = handleCodeInApp;
    this[S$0.iOSBundleId] = iOSBundleId;
    this[S$0.url] = url;
    ;
  }).prototype = action_code_settings.ActionCodeSettings.prototype;
  dart.addTypeTests(action_code_settings.ActionCodeSettings);
  dart.addTypeCaches(action_code_settings.ActionCodeSettings);
  dart.setMethodSignature(action_code_settings.ActionCodeSettings, () => ({
    __proto__: dart.getMethods(action_code_settings.ActionCodeSettings.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(action_code_settings.ActionCodeSettings, I[76]);
  dart.setFieldSignature(action_code_settings.ActionCodeSettings, () => ({
    __proto__: dart.getFields(action_code_settings.ActionCodeSettings.__proto__),
    androidPackageName: dart.finalFieldType(dart.nullable(core.String)),
    androidMinimumVersion: dart.finalFieldType(dart.nullable(core.String)),
    androidInstallApp: dart.finalFieldType(core.bool),
    iOSBundleId: dart.finalFieldType(dart.nullable(core.String)),
    dynamicLinkDomain: dart.finalFieldType(dart.nullable(core.String)),
    handleCodeInApp: dart.finalFieldType(core.bool),
    url: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(action_code_settings.ActionCodeSettings, ['toString']);
  additional_user_info.AdditionalUserInfo = class AdditionalUserInfo extends core.Object {
    get isNewUser() {
      return this[S$0.isNewUser];
    }
    set isNewUser(value) {
      super.isNewUser = value;
    }
    get profile() {
      return this[S$0.profile];
    }
    set profile(value) {
      super.profile = value;
    }
    get providerId() {
      return this[S$0.providerId];
    }
    set providerId(value) {
      super.providerId = value;
    }
    get username() {
      return this[S$0.username$1];
    }
    set username(value) {
      super.username = value;
    }
    get authorizationCode() {
      return this[S$0.authorizationCode];
    }
    set authorizationCode(value) {
      super.authorizationCode = value;
    }
    static ['_#new#tearOff'](opts) {
      let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
      let profile = opts && 'profile' in opts ? opts.profile : null;
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let username = opts && 'username' in opts ? opts.username : null;
      let authorizationCode = opts && 'authorizationCode' in opts ? opts.authorizationCode : null;
      return new additional_user_info.AdditionalUserInfo.new({isNewUser: isNewUser, profile: profile, providerId: providerId, username: username, authorizationCode: authorizationCode});
    }
    toString() {
      return dart.str(dart.wrapType(additional_user_info.AdditionalUserInfo)) + "(" + "isNewUser: " + dart.str(this.isNewUser) + ", " + "profile: " + dart.str(this.profile) + ", " + "providerId: " + dart.str(this.providerId) + ", " + "username: " + dart.str(this.username) + ", " + "authorizationCode: " + dart.str(this.authorizationCode) + ")";
    }
  };
  (additional_user_info.AdditionalUserInfo.new = function(opts) {
    let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
    let profile = opts && 'profile' in opts ? opts.profile : null;
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let username = opts && 'username' in opts ? opts.username : null;
    let authorizationCode = opts && 'authorizationCode' in opts ? opts.authorizationCode : null;
    this[S$0.isNewUser] = isNewUser;
    this[S$0.profile] = profile;
    this[S$0.providerId] = providerId;
    this[S$0.username$1] = username;
    this[S$0.authorizationCode] = authorizationCode;
    ;
  }).prototype = additional_user_info.AdditionalUserInfo.prototype;
  dart.addTypeTests(additional_user_info.AdditionalUserInfo);
  dart.addTypeCaches(additional_user_info.AdditionalUserInfo);
  dart.setLibraryUri(additional_user_info.AdditionalUserInfo, I[77]);
  dart.setFieldSignature(additional_user_info.AdditionalUserInfo, () => ({
    __proto__: dart.getFields(additional_user_info.AdditionalUserInfo.__proto__),
    isNewUser: dart.finalFieldType(core.bool),
    profile: dart.finalFieldType(dart.nullable(core.Map$(core.String, dart.dynamic))),
    providerId: dart.finalFieldType(dart.nullable(core.String)),
    username: dart.finalFieldType(dart.nullable(core.String)),
    authorizationCode: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(additional_user_info.AdditionalUserInfo, ['toString']);
  auth_credential.AuthCredential = class AuthCredential extends core.Object {
    get providerId() {
      return this[S$0.providerId$1];
    }
    set providerId(value) {
      super.providerId = value;
    }
    get signInMethod() {
      return this[S$0.signInMethod];
    }
    set signInMethod(value) {
      super.signInMethod = value;
    }
    get token() {
      return this[S$0.token];
    }
    set token(value) {
      super.token = value;
    }
    get accessToken() {
      return this[S$0.accessToken];
    }
    set accessToken(value) {
      super.accessToken = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      let token = opts && 'token' in opts ? opts.token : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new auth_credential.AuthCredential.new({providerId: providerId, signInMethod: signInMethod, token: token, accessToken: accessToken});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "token", this.token, "accessToken", this.accessToken]);
    }
    toString() {
      return "AuthCredential(providerId: " + this.providerId + ", signInMethod: " + this.signInMethod + ", token: " + dart.str(this.token) + ", accessToken: " + dart.str(this.accessToken) + ")";
    }
  };
  (auth_credential.AuthCredential.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
    let token = opts && 'token' in opts ? opts.token : null;
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    this[S$0.providerId$1] = providerId;
    this[S$0.signInMethod] = signInMethod;
    this[S$0.token] = token;
    this[S$0.accessToken] = accessToken;
    ;
  }).prototype = auth_credential.AuthCredential.prototype;
  dart.addTypeTests(auth_credential.AuthCredential);
  dart.addTypeCaches(auth_credential.AuthCredential);
  dart.setMethodSignature(auth_credential.AuthCredential, () => ({
    __proto__: dart.getMethods(auth_credential.AuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(auth_credential.AuthCredential, I[78]);
  dart.setFieldSignature(auth_credential.AuthCredential, () => ({
    __proto__: dart.getFields(auth_credential.AuthCredential.__proto__),
    providerId: dart.finalFieldType(core.String),
    signInMethod: dart.finalFieldType(core.String),
    token: dart.finalFieldType(dart.nullable(core.int)),
    accessToken: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(auth_credential.AuthCredential, ['toString']);
  auth_provider.AuthProvider = class AuthProvider extends core.Object {
    get providerId() {
      return this[S$0.providerId$2];
    }
    set providerId(value) {
      super.providerId = value;
    }
    toString() {
      return "AuthProvider(providerId: " + this.providerId + ")";
    }
  };
  (auth_provider.AuthProvider.new = function(providerId) {
    this[S$0.providerId$2] = providerId;
    ;
  }).prototype = auth_provider.AuthProvider.prototype;
  dart.addTypeTests(auth_provider.AuthProvider);
  dart.addTypeCaches(auth_provider.AuthProvider);
  dart.setLibraryUri(auth_provider.AuthProvider, I[79]);
  dart.setFieldSignature(auth_provider.AuthProvider, () => ({
    __proto__: dart.getFields(auth_provider.AuthProvider.__proto__),
    providerId: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(auth_provider.AuthProvider, ['toString']);
  firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform = class FirebaseAuthMultiFactorExceptionPlatform extends firebase_auth_exception.FirebaseAuthException {
    get resolver() {
      return this[S$0.resolver];
    }
    set resolver(value) {
      super.resolver = value;
    }
    static ['_#new#tearOff'](opts) {
      let message = opts && 'message' in opts ? opts.message : null;
      let code = opts && 'code' in opts ? opts.code : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let credential = opts && 'credential' in opts ? opts.credential : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      let resolver = opts && 'resolver' in opts ? opts.resolver : null;
      return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId, resolver: resolver});
    }
  };
  (firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new = function(opts) {
    let message = opts && 'message' in opts ? opts.message : null;
    let code = opts && 'code' in opts ? opts.code : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    let resolver = opts && 'resolver' in opts ? opts.resolver : null;
    this[S$0.resolver] = resolver;
    firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.__proto__.new.call(this, {message: message, code: code, email: email, credential: credential, phoneNumber: phoneNumber, tenantId: tenantId});
    ;
  }).prototype = firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.prototype;
  dart.addTypeTests(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform);
  dart.addTypeCaches(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform);
  firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform, I[80]);
  dart.setFieldSignature(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform, () => ({
    __proto__: dart.getFields(firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.__proto__),
    resolver: dart.finalFieldType(platform_interface_multi_factor.MultiFactorResolverPlatform)
  }));
  id_token_result.IdTokenResult = class IdTokenResult extends core.Object {
    static ['_#new#tearOff'](_data) {
      return new id_token_result.IdTokenResult.new(_data);
    }
    get authTime() {
      return this[S$0._data$2].authTimestamp == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S$0._data$2].authTimestamp));
    }
    get claims() {
      return this[S$0._data$2].claims == null ? null : T$.LinkedHashMapOfString$dynamic().from(dart.nullCheck(this[S$0._data$2].claims));
    }
    get expirationTime() {
      return this[S$0._data$2].expirationTimestamp == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S$0._data$2].expirationTimestamp));
    }
    get issuedAtTime() {
      return this[S$0._data$2].issuedAtTimestamp == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S$0._data$2].issuedAtTimestamp));
    }
    get signInProvider() {
      return this[S$0._data$2].signInProvider;
    }
    get token() {
      return this[S$0._data$2].token;
    }
    toString() {
      return dart.str(dart.wrapType(id_token_result.IdTokenResult)) + "(authTime: " + dart.str(this.authTime) + ", claims: " + dart.str(this.claims) + ", expirationTime: " + dart.str(this.expirationTime) + ", issuedAtTime: " + dart.str(this.issuedAtTime) + ", signInProvider: " + dart.str(this.signInProvider) + ", token: " + dart.str(this.token) + ")";
    }
  };
  (id_token_result.IdTokenResult.new = function(_data) {
    this[S$0._data$2] = _data;
    ;
  }).prototype = id_token_result.IdTokenResult.prototype;
  dart.addTypeTests(id_token_result.IdTokenResult);
  dart.addTypeCaches(id_token_result.IdTokenResult);
  dart.setGetterSignature(id_token_result.IdTokenResult, () => ({
    __proto__: dart.getGetters(id_token_result.IdTokenResult.__proto__),
    authTime: dart.nullable(core.DateTime),
    claims: dart.nullable(core.Map$(core.String, dart.dynamic)),
    expirationTime: dart.nullable(core.DateTime),
    issuedAtTime: dart.nullable(core.DateTime),
    signInProvider: dart.nullable(core.String),
    token: dart.nullable(core.String)
  }));
  dart.setLibraryUri(id_token_result.IdTokenResult, I[81]);
  dart.setFieldSignature(id_token_result.IdTokenResult, () => ({
    __proto__: dart.getFields(id_token_result.IdTokenResult.__proto__),
    [S$0._data$2]: dart.finalFieldType(messages$46pigeon.PigeonIdTokenResult)
  }));
  dart.defineExtensionMethods(id_token_result.IdTokenResult, ['toString']);
  messages$46pigeon.ActionCodeInfoOperation = class ActionCodeInfoOperation extends core._Enum {
    [S$0._enumToString]() {
      return "ActionCodeInfoOperation." + this[S$0._name];
    }
  };
  (messages$46pigeon.ActionCodeInfoOperation.new = function(index, name) {
    messages$46pigeon.ActionCodeInfoOperation.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon.ActionCodeInfoOperation.prototype;
  dart.addTypeTests(messages$46pigeon.ActionCodeInfoOperation);
  dart.addTypeCaches(messages$46pigeon.ActionCodeInfoOperation);
  dart.setMethodSignature(messages$46pigeon.ActionCodeInfoOperation, () => ({
    __proto__: dart.getMethods(messages$46pigeon.ActionCodeInfoOperation.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon.ActionCodeInfoOperation, I[82]);
  dart.setStaticFieldSignature(messages$46pigeon.ActionCodeInfoOperation, () => ['values', 'unknown', 'passwordReset', 'verifyEmail', 'recoverEmail', 'emailSignIn', 'verifyAndChangeEmail', 'revertSecondFactorAddition']);
  dart.defineLazy(messages$46pigeon.ActionCodeInfoOperation, {
    /*messages$46pigeon.ActionCodeInfoOperation.values*/get values() {
      return C[140] || CT.C140;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.unknown*/get unknown() {
      return C[141] || CT.C141;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.passwordReset*/get passwordReset() {
      return C[142] || CT.C142;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.verifyEmail*/get verifyEmail() {
      return C[143] || CT.C143;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.recoverEmail*/get recoverEmail() {
      return C[144] || CT.C144;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.emailSignIn*/get emailSignIn() {
      return C[145] || CT.C145;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.verifyAndChangeEmail*/get verifyAndChangeEmail() {
      return C[146] || CT.C146;
    },
    /*messages$46pigeon.ActionCodeInfoOperation.revertSecondFactorAddition*/get revertSecondFactorAddition() {
      return C[147] || CT.C147;
    }
  }, false);
  messages$46pigeon.PigeonMultiFactorSession = class PigeonMultiFactorSession extends core.Object {
    get id() {
      return this[S$0.id$2];
    }
    set id(value) {
      this[S$0.id$2] = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      return new messages$46pigeon.PigeonMultiFactorSession.new({id: id});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.id]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonMultiFactorSession.new({id: core.String.as(dart.nullCheck(result[S$.$_get](0)))});
    }
  };
  (messages$46pigeon.PigeonMultiFactorSession.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    this[S$0.id$2] = id;
    ;
  }).prototype = messages$46pigeon.PigeonMultiFactorSession.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonMultiFactorSession);
  dart.addTypeCaches(messages$46pigeon.PigeonMultiFactorSession);
  dart.setMethodSignature(messages$46pigeon.PigeonMultiFactorSession, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonMultiFactorSession.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonMultiFactorSession, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonMultiFactorSession, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonMultiFactorSession, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonMultiFactorSession.__proto__),
    id: dart.fieldType(core.String)
  }));
  messages$46pigeon.PigeonPhoneMultiFactorAssertion = class PigeonPhoneMultiFactorAssertion extends core.Object {
    get verificationId() {
      return this[S$0.verificationId$1];
    }
    set verificationId(value) {
      this[S$0.verificationId$1] = value;
    }
    get verificationCode() {
      return this[S$0.verificationCode];
    }
    set verificationCode(value) {
      this[S$0.verificationCode] = value;
    }
    static ['_#new#tearOff'](opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let verificationCode = opts && 'verificationCode' in opts ? opts.verificationCode : null;
      return new messages$46pigeon.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.verificationId, this.verificationCode]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonPhoneMultiFactorAssertion.new({verificationId: core.String.as(dart.nullCheck(result[S$.$_get](0))), verificationCode: core.String.as(dart.nullCheck(result[S$.$_get](1)))});
    }
  };
  (messages$46pigeon.PigeonPhoneMultiFactorAssertion.new = function(opts) {
    let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
    let verificationCode = opts && 'verificationCode' in opts ? opts.verificationCode : null;
    this[S$0.verificationId$1] = verificationId;
    this[S$0.verificationCode] = verificationCode;
    ;
  }).prototype = messages$46pigeon.PigeonPhoneMultiFactorAssertion.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonPhoneMultiFactorAssertion);
  dart.addTypeCaches(messages$46pigeon.PigeonPhoneMultiFactorAssertion);
  dart.setMethodSignature(messages$46pigeon.PigeonPhoneMultiFactorAssertion, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonPhoneMultiFactorAssertion.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonPhoneMultiFactorAssertion, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonPhoneMultiFactorAssertion, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonPhoneMultiFactorAssertion, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonPhoneMultiFactorAssertion.__proto__),
    verificationId: dart.fieldType(core.String),
    verificationCode: dart.fieldType(core.String)
  }));
  messages$46pigeon.PigeonMultiFactorInfo = class PigeonMultiFactorInfo extends core.Object {
    get displayName() {
      return this[S$0.displayName];
    }
    set displayName(value) {
      this[S$0.displayName] = value;
    }
    get enrollmentTimestamp() {
      return this[S$0.enrollmentTimestamp];
    }
    set enrollmentTimestamp(value) {
      this[S$0.enrollmentTimestamp] = value;
    }
    get factorId() {
      return this[S$0.factorId];
    }
    set factorId(value) {
      this[S$0.factorId] = value;
    }
    get uid() {
      return this[S$0.uid$1];
    }
    set uid(value) {
      this[S$0.uid$1] = value;
    }
    get phoneNumber() {
      return this[S$0.phoneNumber$1];
    }
    set phoneNumber(value) {
      this[S$0.phoneNumber$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      return new messages$46pigeon.PigeonMultiFactorInfo.new({displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid, phoneNumber: phoneNumber});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.displayName, this.enrollmentTimestamp, this.factorId, this.uid, this.phoneNumber]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonMultiFactorInfo.new({displayName: T$.StringN().as(result[S$.$_get](0)), enrollmentTimestamp: core.double.as(dart.nullCheck(result[S$.$_get](1))), factorId: T$.StringN().as(result[S$.$_get](2)), uid: core.String.as(dart.nullCheck(result[S$.$_get](3))), phoneNumber: T$.StringN().as(result[S$.$_get](4))});
    }
  };
  (messages$46pigeon.PigeonMultiFactorInfo.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    this[S$0.displayName] = displayName;
    this[S$0.enrollmentTimestamp] = enrollmentTimestamp;
    this[S$0.factorId] = factorId;
    this[S$0.uid$1] = uid;
    this[S$0.phoneNumber$1] = phoneNumber;
    ;
  }).prototype = messages$46pigeon.PigeonMultiFactorInfo.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonMultiFactorInfo);
  dart.addTypeCaches(messages$46pigeon.PigeonMultiFactorInfo);
  dart.setMethodSignature(messages$46pigeon.PigeonMultiFactorInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonMultiFactorInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonMultiFactorInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonMultiFactorInfo, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonMultiFactorInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonMultiFactorInfo.__proto__),
    displayName: dart.fieldType(dart.nullable(core.String)),
    enrollmentTimestamp: dart.fieldType(core.double),
    factorId: dart.fieldType(dart.nullable(core.String)),
    uid: dart.fieldType(core.String),
    phoneNumber: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon.AuthPigeonFirebaseApp = class AuthPigeonFirebaseApp extends core.Object {
    get appName() {
      return this[S$0.appName];
    }
    set appName(value) {
      this[S$0.appName] = value;
    }
    get tenantId() {
      return this[S$0.tenantId$2];
    }
    set tenantId(value) {
      this[S$0.tenantId$2] = value;
    }
    static ['_#new#tearOff'](opts) {
      let appName = opts && 'appName' in opts ? opts.appName : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      return new messages$46pigeon.AuthPigeonFirebaseApp.new({appName: appName, tenantId: tenantId});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.appName, this.tenantId]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.AuthPigeonFirebaseApp.new({appName: core.String.as(dart.nullCheck(result[S$.$_get](0))), tenantId: T$.StringN().as(result[S$.$_get](1))});
    }
  };
  (messages$46pigeon.AuthPigeonFirebaseApp.new = function(opts) {
    let appName = opts && 'appName' in opts ? opts.appName : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    this[S$0.appName] = appName;
    this[S$0.tenantId$2] = tenantId;
    ;
  }).prototype = messages$46pigeon.AuthPigeonFirebaseApp.prototype;
  dart.addTypeTests(messages$46pigeon.AuthPigeonFirebaseApp);
  dart.addTypeCaches(messages$46pigeon.AuthPigeonFirebaseApp);
  dart.setMethodSignature(messages$46pigeon.AuthPigeonFirebaseApp, () => ({
    __proto__: dart.getMethods(messages$46pigeon.AuthPigeonFirebaseApp.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.AuthPigeonFirebaseApp, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.AuthPigeonFirebaseApp, I[82]);
  dart.setFieldSignature(messages$46pigeon.AuthPigeonFirebaseApp, () => ({
    __proto__: dart.getFields(messages$46pigeon.AuthPigeonFirebaseApp.__proto__),
    appName: dart.fieldType(core.String),
    tenantId: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon.PigeonActionCodeInfoData = class PigeonActionCodeInfoData extends core.Object {
    get email() {
      return this[S$0.email$3];
    }
    set email(value) {
      this[S$0.email$3] = value;
    }
    get previousEmail() {
      return this[S$0.previousEmail$1];
    }
    set previousEmail(value) {
      this[S$0.previousEmail$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
      return new messages$46pigeon.PigeonActionCodeInfoData.new({email: email, previousEmail: previousEmail});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.email, this.previousEmail]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonActionCodeInfoData.new({email: T$.StringN().as(result[S$.$_get](0)), previousEmail: T$.StringN().as(result[S$.$_get](1))});
    }
  };
  (messages$46pigeon.PigeonActionCodeInfoData.new = function(opts) {
    let email = opts && 'email' in opts ? opts.email : null;
    let previousEmail = opts && 'previousEmail' in opts ? opts.previousEmail : null;
    this[S$0.email$3] = email;
    this[S$0.previousEmail$1] = previousEmail;
    ;
  }).prototype = messages$46pigeon.PigeonActionCodeInfoData.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonActionCodeInfoData);
  dart.addTypeCaches(messages$46pigeon.PigeonActionCodeInfoData);
  dart.setMethodSignature(messages$46pigeon.PigeonActionCodeInfoData, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonActionCodeInfoData.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonActionCodeInfoData, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonActionCodeInfoData, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonActionCodeInfoData, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonActionCodeInfoData.__proto__),
    email: dart.fieldType(dart.nullable(core.String)),
    previousEmail: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon.PigeonActionCodeInfo = class PigeonActionCodeInfo extends core.Object {
    get operation() {
      return this[S$0.operation$1];
    }
    set operation(value) {
      this[S$0.operation$1] = value;
    }
    get data() {
      return this[S$0.data];
    }
    set data(value) {
      this[S$0.data] = value;
    }
    static ['_#new#tearOff'](opts) {
      let operation = opts && 'operation' in opts ? opts.operation : null;
      let data = opts && 'data' in opts ? opts.data : null;
      return new messages$46pigeon.PigeonActionCodeInfo.new({operation: operation, data: data});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.operation.index, this.data.encode()]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonActionCodeInfo.new({operation: messages$46pigeon.ActionCodeInfoOperation.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), data: messages$46pigeon.PigeonActionCodeInfoData.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](1))))});
    }
  };
  (messages$46pigeon.PigeonActionCodeInfo.new = function(opts) {
    let operation = opts && 'operation' in opts ? opts.operation : null;
    let data = opts && 'data' in opts ? opts.data : null;
    this[S$0.operation$1] = operation;
    this[S$0.data] = data;
    ;
  }).prototype = messages$46pigeon.PigeonActionCodeInfo.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonActionCodeInfo);
  dart.addTypeCaches(messages$46pigeon.PigeonActionCodeInfo);
  dart.setMethodSignature(messages$46pigeon.PigeonActionCodeInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonActionCodeInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonActionCodeInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonActionCodeInfo, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonActionCodeInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonActionCodeInfo.__proto__),
    operation: dart.fieldType(messages$46pigeon.ActionCodeInfoOperation),
    data: dart.fieldType(messages$46pigeon.PigeonActionCodeInfoData)
  }));
  messages$46pigeon.PigeonAdditionalUserInfo = class PigeonAdditionalUserInfo extends core.Object {
    get isNewUser() {
      return this[S$0.isNewUser$1];
    }
    set isNewUser(value) {
      this[S$0.isNewUser$1] = value;
    }
    get providerId() {
      return this[S$0.providerId$3];
    }
    set providerId(value) {
      this[S$0.providerId$3] = value;
    }
    get username() {
      return this[S$0.username$2];
    }
    set username(value) {
      this[S$0.username$2] = value;
    }
    get authorizationCode() {
      return this[S$0.authorizationCode$1];
    }
    set authorizationCode(value) {
      this[S$0.authorizationCode$1] = value;
    }
    get profile() {
      return this[S$0.profile$1];
    }
    set profile(value) {
      this[S$0.profile$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let username = opts && 'username' in opts ? opts.username : null;
      let authorizationCode = opts && 'authorizationCode' in opts ? opts.authorizationCode : null;
      let profile = opts && 'profile' in opts ? opts.profile : null;
      return new messages$46pigeon.PigeonAdditionalUserInfo.new({isNewUser: isNewUser, providerId: providerId, username: username, authorizationCode: authorizationCode, profile: profile});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.isNewUser, this.providerId, this.username, this.authorizationCode, this.profile]);
    }
    static decode(result) {
      let t136;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonAdditionalUserInfo.new({isNewUser: core.bool.as(dart.nullCheck(result[S$.$_get](0))), providerId: T$.StringN().as(result[S$.$_get](1)), username: T$.StringN().as(result[S$.$_get](2)), authorizationCode: T$.StringN().as(result[S$.$_get](3)), profile: (t136 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](4)), t136 == null ? null : t136[S$.$cast](T$.StringN(), T$.ObjectN()))});
    }
  };
  (messages$46pigeon.PigeonAdditionalUserInfo.new = function(opts) {
    let isNewUser = opts && 'isNewUser' in opts ? opts.isNewUser : null;
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let username = opts && 'username' in opts ? opts.username : null;
    let authorizationCode = opts && 'authorizationCode' in opts ? opts.authorizationCode : null;
    let profile = opts && 'profile' in opts ? opts.profile : null;
    this[S$0.isNewUser$1] = isNewUser;
    this[S$0.providerId$3] = providerId;
    this[S$0.username$2] = username;
    this[S$0.authorizationCode$1] = authorizationCode;
    this[S$0.profile$1] = profile;
    ;
  }).prototype = messages$46pigeon.PigeonAdditionalUserInfo.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonAdditionalUserInfo);
  dart.addTypeCaches(messages$46pigeon.PigeonAdditionalUserInfo);
  dart.setMethodSignature(messages$46pigeon.PigeonAdditionalUserInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonAdditionalUserInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonAdditionalUserInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonAdditionalUserInfo, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonAdditionalUserInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonAdditionalUserInfo.__proto__),
    isNewUser: dart.fieldType(core.bool),
    providerId: dart.fieldType(dart.nullable(core.String)),
    username: dart.fieldType(dart.nullable(core.String)),
    authorizationCode: dart.fieldType(dart.nullable(core.String)),
    profile: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object))))
  }));
  messages$46pigeon.PigeonAuthCredential = class PigeonAuthCredential extends core.Object {
    get providerId() {
      return this[S$0.providerId$4];
    }
    set providerId(value) {
      this[S$0.providerId$4] = value;
    }
    get signInMethod() {
      return this[S$0.signInMethod$1];
    }
    set signInMethod(value) {
      this[S$0.signInMethod$1] = value;
    }
    get nativeId() {
      return this[S$0.nativeId];
    }
    set nativeId(value) {
      this[S$0.nativeId] = value;
    }
    get accessToken() {
      return this[S$0.accessToken$1];
    }
    set accessToken(value) {
      this[S$0.accessToken$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      let nativeId = opts && 'nativeId' in opts ? opts.nativeId : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new messages$46pigeon.PigeonAuthCredential.new({providerId: providerId, signInMethod: signInMethod, nativeId: nativeId, accessToken: accessToken});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.providerId, this.signInMethod, this.nativeId, this.accessToken]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonAuthCredential.new({providerId: core.String.as(dart.nullCheck(result[S$.$_get](0))), signInMethod: core.String.as(dart.nullCheck(result[S$.$_get](1))), nativeId: core.int.as(dart.nullCheck(result[S$.$_get](2))), accessToken: T$.StringN().as(result[S$.$_get](3))});
    }
  };
  (messages$46pigeon.PigeonAuthCredential.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
    let nativeId = opts && 'nativeId' in opts ? opts.nativeId : null;
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    this[S$0.providerId$4] = providerId;
    this[S$0.signInMethod$1] = signInMethod;
    this[S$0.nativeId] = nativeId;
    this[S$0.accessToken$1] = accessToken;
    ;
  }).prototype = messages$46pigeon.PigeonAuthCredential.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonAuthCredential);
  dart.addTypeCaches(messages$46pigeon.PigeonAuthCredential);
  dart.setMethodSignature(messages$46pigeon.PigeonAuthCredential, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonAuthCredential.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonAuthCredential, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonAuthCredential, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonAuthCredential, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonAuthCredential.__proto__),
    providerId: dart.fieldType(core.String),
    signInMethod: dart.fieldType(core.String),
    nativeId: dart.fieldType(core.int),
    accessToken: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon.PigeonUserInfo = class PigeonUserInfo extends core.Object {
    get uid() {
      return this[S$0.uid$2];
    }
    set uid(value) {
      this[S$0.uid$2] = value;
    }
    get email() {
      return this[S$0.email$4];
    }
    set email(value) {
      this[S$0.email$4] = value;
    }
    get displayName() {
      return this[S$0.displayName$1];
    }
    set displayName(value) {
      this[S$0.displayName$1] = value;
    }
    get photoUrl() {
      return this[S$0.photoUrl$1];
    }
    set photoUrl(value) {
      this[S$0.photoUrl$1] = value;
    }
    get phoneNumber() {
      return this[S$0.phoneNumber$2];
    }
    set phoneNumber(value) {
      this[S$0.phoneNumber$2] = value;
    }
    get isAnonymous() {
      return this[S$0.isAnonymous];
    }
    set isAnonymous(value) {
      this[S$0.isAnonymous] = value;
    }
    get isEmailVerified() {
      return this[S$0.isEmailVerified];
    }
    set isEmailVerified(value) {
      this[S$0.isEmailVerified] = value;
    }
    get providerId() {
      return this[S$0.providerId$5];
    }
    set providerId(value) {
      this[S$0.providerId$5] = value;
    }
    get tenantId() {
      return this[S$0.tenantId$3];
    }
    set tenantId(value) {
      this[S$0.tenantId$3] = value;
    }
    get refreshToken() {
      return this[S$0.refreshToken];
    }
    set refreshToken(value) {
      this[S$0.refreshToken] = value;
    }
    get creationTimestamp() {
      return this[S$0.creationTimestamp];
    }
    set creationTimestamp(value) {
      this[S$0.creationTimestamp] = value;
    }
    get lastSignInTimestamp() {
      return this[S$0.lastSignInTimestamp];
    }
    set lastSignInTimestamp(value) {
      this[S$0.lastSignInTimestamp] = value;
    }
    static ['_#new#tearOff'](opts) {
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let email = opts && 'email' in opts ? opts.email : null;
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let isAnonymous = opts && 'isAnonymous' in opts ? opts.isAnonymous : null;
      let isEmailVerified = opts && 'isEmailVerified' in opts ? opts.isEmailVerified : null;
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      let refreshToken = opts && 'refreshToken' in opts ? opts.refreshToken : null;
      let creationTimestamp = opts && 'creationTimestamp' in opts ? opts.creationTimestamp : null;
      let lastSignInTimestamp = opts && 'lastSignInTimestamp' in opts ? opts.lastSignInTimestamp : null;
      return new messages$46pigeon.PigeonUserInfo.new({uid: uid, email: email, displayName: displayName, photoUrl: photoUrl, phoneNumber: phoneNumber, isAnonymous: isAnonymous, isEmailVerified: isEmailVerified, providerId: providerId, tenantId: tenantId, refreshToken: refreshToken, creationTimestamp: creationTimestamp, lastSignInTimestamp: lastSignInTimestamp});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.uid, this.email, this.displayName, this.photoUrl, this.phoneNumber, this.isAnonymous, this.isEmailVerified, this.providerId, this.tenantId, this.refreshToken, this.creationTimestamp, this.lastSignInTimestamp]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonUserInfo.new({uid: core.String.as(dart.nullCheck(result[S$.$_get](0))), email: T$.StringN().as(result[S$.$_get](1)), displayName: T$.StringN().as(result[S$.$_get](2)), photoUrl: T$.StringN().as(result[S$.$_get](3)), phoneNumber: T$.StringN().as(result[S$.$_get](4)), isAnonymous: core.bool.as(dart.nullCheck(result[S$.$_get](5))), isEmailVerified: core.bool.as(dart.nullCheck(result[S$.$_get](6))), providerId: T$.StringN().as(result[S$.$_get](7)), tenantId: T$.StringN().as(result[S$.$_get](8)), refreshToken: T$.StringN().as(result[S$.$_get](9)), creationTimestamp: T$.intN().as(result[S$.$_get](10)), lastSignInTimestamp: T$.intN().as(result[S$.$_get](11))});
    }
  };
  (messages$46pigeon.PigeonUserInfo.new = function(opts) {
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let email = opts && 'email' in opts ? opts.email : null;
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let isAnonymous = opts && 'isAnonymous' in opts ? opts.isAnonymous : null;
    let isEmailVerified = opts && 'isEmailVerified' in opts ? opts.isEmailVerified : null;
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    let refreshToken = opts && 'refreshToken' in opts ? opts.refreshToken : null;
    let creationTimestamp = opts && 'creationTimestamp' in opts ? opts.creationTimestamp : null;
    let lastSignInTimestamp = opts && 'lastSignInTimestamp' in opts ? opts.lastSignInTimestamp : null;
    this[S$0.uid$2] = uid;
    this[S$0.email$4] = email;
    this[S$0.displayName$1] = displayName;
    this[S$0.photoUrl$1] = photoUrl;
    this[S$0.phoneNumber$2] = phoneNumber;
    this[S$0.isAnonymous] = isAnonymous;
    this[S$0.isEmailVerified] = isEmailVerified;
    this[S$0.providerId$5] = providerId;
    this[S$0.tenantId$3] = tenantId;
    this[S$0.refreshToken] = refreshToken;
    this[S$0.creationTimestamp] = creationTimestamp;
    this[S$0.lastSignInTimestamp] = lastSignInTimestamp;
    ;
  }).prototype = messages$46pigeon.PigeonUserInfo.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonUserInfo);
  dart.addTypeCaches(messages$46pigeon.PigeonUserInfo);
  dart.setMethodSignature(messages$46pigeon.PigeonUserInfo, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonUserInfo.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonUserInfo, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonUserInfo, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonUserInfo, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonUserInfo.__proto__),
    uid: dart.fieldType(core.String),
    email: dart.fieldType(dart.nullable(core.String)),
    displayName: dart.fieldType(dart.nullable(core.String)),
    photoUrl: dart.fieldType(dart.nullable(core.String)),
    phoneNumber: dart.fieldType(dart.nullable(core.String)),
    isAnonymous: dart.fieldType(core.bool),
    isEmailVerified: dart.fieldType(core.bool),
    providerId: dart.fieldType(dart.nullable(core.String)),
    tenantId: dart.fieldType(dart.nullable(core.String)),
    refreshToken: dart.fieldType(dart.nullable(core.String)),
    creationTimestamp: dart.fieldType(dart.nullable(core.int)),
    lastSignInTimestamp: dart.fieldType(dart.nullable(core.int))
  }));
  messages$46pigeon.PigeonUserDetails = class PigeonUserDetails extends core.Object {
    get userInfo() {
      return this[S$0.userInfo];
    }
    set userInfo(value) {
      this[S$0.userInfo] = value;
    }
    get providerData() {
      return this[S$0.providerData];
    }
    set providerData(value) {
      this[S$0.providerData] = value;
    }
    static ['_#new#tearOff'](opts) {
      let userInfo = opts && 'userInfo' in opts ? opts.userInfo : null;
      let providerData = opts && 'providerData' in opts ? opts.providerData : null;
      return new messages$46pigeon.PigeonUserDetails.new({userInfo: userInfo, providerData: providerData});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.userInfo.encode(), this.providerData]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonUserDetails.new({userInfo: messages$46pigeon.PigeonUserInfo.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](0)))), providerData: dart.nullCheck(T$.ListNOfObjectN().as(result[S$.$_get](1)))[S$.$cast](T$.MapNOfObjectN$ObjectN())});
    }
  };
  (messages$46pigeon.PigeonUserDetails.new = function(opts) {
    let userInfo = opts && 'userInfo' in opts ? opts.userInfo : null;
    let providerData = opts && 'providerData' in opts ? opts.providerData : null;
    this[S$0.userInfo] = userInfo;
    this[S$0.providerData] = providerData;
    ;
  }).prototype = messages$46pigeon.PigeonUserDetails.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonUserDetails);
  dart.addTypeCaches(messages$46pigeon.PigeonUserDetails);
  dart.setMethodSignature(messages$46pigeon.PigeonUserDetails, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonUserDetails.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonUserDetails, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonUserDetails, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonUserDetails, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonUserDetails.__proto__),
    userInfo: dart.fieldType(messages$46pigeon.PigeonUserInfo),
    providerData: dart.fieldType(core.List$(dart.nullable(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))))
  }));
  messages$46pigeon.PigeonUserCredential = class PigeonUserCredential extends core.Object {
    get user() {
      return this[S$0.user$1];
    }
    set user(value) {
      this[S$0.user$1] = value;
    }
    get additionalUserInfo() {
      return this[S$0.additionalUserInfo$1];
    }
    set additionalUserInfo(value) {
      this[S$0.additionalUserInfo$1] = value;
    }
    get credential() {
      return this[S$0.credential$2];
    }
    set credential(value) {
      this[S$0.credential$2] = value;
    }
    static ['_#new#tearOff'](opts) {
      let user = opts && 'user' in opts ? opts.user : null;
      let additionalUserInfo = opts && 'additionalUserInfo' in opts ? opts.additionalUserInfo : null;
      let credential = opts && 'credential' in opts ? opts.credential : null;
      return new messages$46pigeon.PigeonUserCredential.new({user: user, additionalUserInfo: additionalUserInfo, credential: credential});
    }
    encode() {
      let t136, t136$, t136$0;
      return T$.JSArrayOfObjectN().of([(t136 = this.user, t136 == null ? null : t136.encode()), (t136$ = this.additionalUserInfo, t136$ == null ? null : t136$.encode()), (t136$0 = this.credential, t136$0 == null ? null : t136$0.encode())]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonUserCredential.new({user: result[S$.$_get](0) != null ? messages$46pigeon.PigeonUserDetails.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](0)))) : null, additionalUserInfo: result[S$.$_get](1) != null ? messages$46pigeon.PigeonAdditionalUserInfo.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](1)))) : null, credential: result[S$.$_get](2) != null ? messages$46pigeon.PigeonAuthCredential.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](2)))) : null});
    }
  };
  (messages$46pigeon.PigeonUserCredential.new = function(opts) {
    let user = opts && 'user' in opts ? opts.user : null;
    let additionalUserInfo = opts && 'additionalUserInfo' in opts ? opts.additionalUserInfo : null;
    let credential = opts && 'credential' in opts ? opts.credential : null;
    this[S$0.user$1] = user;
    this[S$0.additionalUserInfo$1] = additionalUserInfo;
    this[S$0.credential$2] = credential;
    ;
  }).prototype = messages$46pigeon.PigeonUserCredential.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonUserCredential);
  dart.addTypeCaches(messages$46pigeon.PigeonUserCredential);
  dart.setMethodSignature(messages$46pigeon.PigeonUserCredential, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonUserCredential.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonUserCredential, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonUserCredential, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonUserCredential, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonUserCredential.__proto__),
    user: dart.fieldType(dart.nullable(messages$46pigeon.PigeonUserDetails)),
    additionalUserInfo: dart.fieldType(dart.nullable(messages$46pigeon.PigeonAdditionalUserInfo)),
    credential: dart.fieldType(dart.nullable(messages$46pigeon.PigeonAuthCredential))
  }));
  messages$46pigeon.PigeonActionCodeSettings = class PigeonActionCodeSettings extends core.Object {
    get url() {
      return this[S$0.url$1];
    }
    set url(value) {
      this[S$0.url$1] = value;
    }
    get dynamicLinkDomain() {
      return this[S$0.dynamicLinkDomain$1];
    }
    set dynamicLinkDomain(value) {
      this[S$0.dynamicLinkDomain$1] = value;
    }
    get handleCodeInApp() {
      return this[S$0.handleCodeInApp$1];
    }
    set handleCodeInApp(value) {
      this[S$0.handleCodeInApp$1] = value;
    }
    get iOSBundleId() {
      return this[S$0.iOSBundleId$1];
    }
    set iOSBundleId(value) {
      this[S$0.iOSBundleId$1] = value;
    }
    get androidPackageName() {
      return this[S$0.androidPackageName$1];
    }
    set androidPackageName(value) {
      this[S$0.androidPackageName$1] = value;
    }
    get androidInstallApp() {
      return this[S$0.androidInstallApp$1];
    }
    set androidInstallApp(value) {
      this[S$0.androidInstallApp$1] = value;
    }
    get androidMinimumVersion() {
      return this[S$0.androidMinimumVersion$1];
    }
    set androidMinimumVersion(value) {
      this[S$0.androidMinimumVersion$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let url = opts && 'url' in opts ? opts.url : null;
      let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
      let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : null;
      let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
      let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
      let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : null;
      let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
      return new messages$46pigeon.PigeonActionCodeSettings.new({url: url, dynamicLinkDomain: dynamicLinkDomain, handleCodeInApp: handleCodeInApp, iOSBundleId: iOSBundleId, androidPackageName: androidPackageName, androidInstallApp: androidInstallApp, androidMinimumVersion: androidMinimumVersion});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.url, this.dynamicLinkDomain, this.handleCodeInApp, this.iOSBundleId, this.androidPackageName, this.androidInstallApp, this.androidMinimumVersion]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonActionCodeSettings.new({url: core.String.as(dart.nullCheck(result[S$.$_get](0))), dynamicLinkDomain: T$.StringN().as(result[S$.$_get](1)), handleCodeInApp: core.bool.as(dart.nullCheck(result[S$.$_get](2))), iOSBundleId: T$.StringN().as(result[S$.$_get](3)), androidPackageName: T$.StringN().as(result[S$.$_get](4)), androidInstallApp: core.bool.as(dart.nullCheck(result[S$.$_get](5))), androidMinimumVersion: T$.StringN().as(result[S$.$_get](6))});
    }
  };
  (messages$46pigeon.PigeonActionCodeSettings.new = function(opts) {
    let url = opts && 'url' in opts ? opts.url : null;
    let dynamicLinkDomain = opts && 'dynamicLinkDomain' in opts ? opts.dynamicLinkDomain : null;
    let handleCodeInApp = opts && 'handleCodeInApp' in opts ? opts.handleCodeInApp : null;
    let iOSBundleId = opts && 'iOSBundleId' in opts ? opts.iOSBundleId : null;
    let androidPackageName = opts && 'androidPackageName' in opts ? opts.androidPackageName : null;
    let androidInstallApp = opts && 'androidInstallApp' in opts ? opts.androidInstallApp : null;
    let androidMinimumVersion = opts && 'androidMinimumVersion' in opts ? opts.androidMinimumVersion : null;
    this[S$0.url$1] = url;
    this[S$0.dynamicLinkDomain$1] = dynamicLinkDomain;
    this[S$0.handleCodeInApp$1] = handleCodeInApp;
    this[S$0.iOSBundleId$1] = iOSBundleId;
    this[S$0.androidPackageName$1] = androidPackageName;
    this[S$0.androidInstallApp$1] = androidInstallApp;
    this[S$0.androidMinimumVersion$1] = androidMinimumVersion;
    ;
  }).prototype = messages$46pigeon.PigeonActionCodeSettings.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonActionCodeSettings);
  dart.addTypeCaches(messages$46pigeon.PigeonActionCodeSettings);
  dart.setMethodSignature(messages$46pigeon.PigeonActionCodeSettings, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonActionCodeSettings.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonActionCodeSettings, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonActionCodeSettings, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonActionCodeSettings, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonActionCodeSettings.__proto__),
    url: dart.fieldType(core.String),
    dynamicLinkDomain: dart.fieldType(dart.nullable(core.String)),
    handleCodeInApp: dart.fieldType(core.bool),
    iOSBundleId: dart.fieldType(dart.nullable(core.String)),
    androidPackageName: dart.fieldType(dart.nullable(core.String)),
    androidInstallApp: dart.fieldType(core.bool),
    androidMinimumVersion: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon.PigeonFirebaseAuthSettings = class PigeonFirebaseAuthSettings extends core.Object {
    get appVerificationDisabledForTesting() {
      return this[S$0.appVerificationDisabledForTesting];
    }
    set appVerificationDisabledForTesting(value) {
      this[S$0.appVerificationDisabledForTesting] = value;
    }
    get userAccessGroup() {
      return this[S$0.userAccessGroup];
    }
    set userAccessGroup(value) {
      this[S$0.userAccessGroup] = value;
    }
    get phoneNumber() {
      return this[S$0.phoneNumber$3];
    }
    set phoneNumber(value) {
      this[S$0.phoneNumber$3] = value;
    }
    get smsCode() {
      return this[S$0.smsCode];
    }
    set smsCode(value) {
      this[S$0.smsCode] = value;
    }
    get forceRecaptchaFlow() {
      return this[S$0.forceRecaptchaFlow];
    }
    set forceRecaptchaFlow(value) {
      this[S$0.forceRecaptchaFlow] = value;
    }
    static ['_#new#tearOff'](opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return new messages$46pigeon.PigeonFirebaseAuthSettings.new({appVerificationDisabledForTesting: appVerificationDisabledForTesting, userAccessGroup: userAccessGroup, phoneNumber: phoneNumber, smsCode: smsCode, forceRecaptchaFlow: forceRecaptchaFlow});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.appVerificationDisabledForTesting, this.userAccessGroup, this.phoneNumber, this.smsCode, this.forceRecaptchaFlow]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonFirebaseAuthSettings.new({appVerificationDisabledForTesting: core.bool.as(dart.nullCheck(result[S$.$_get](0))), userAccessGroup: T$.StringN().as(result[S$.$_get](1)), phoneNumber: T$.StringN().as(result[S$.$_get](2)), smsCode: T$.StringN().as(result[S$.$_get](3)), forceRecaptchaFlow: T$.boolN().as(result[S$.$_get](4))});
    }
  };
  (messages$46pigeon.PigeonFirebaseAuthSettings.new = function(opts) {
    let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : null;
    let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
    let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
    this[S$0.appVerificationDisabledForTesting] = appVerificationDisabledForTesting;
    this[S$0.userAccessGroup] = userAccessGroup;
    this[S$0.phoneNumber$3] = phoneNumber;
    this[S$0.smsCode] = smsCode;
    this[S$0.forceRecaptchaFlow] = forceRecaptchaFlow;
    ;
  }).prototype = messages$46pigeon.PigeonFirebaseAuthSettings.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonFirebaseAuthSettings);
  dart.addTypeCaches(messages$46pigeon.PigeonFirebaseAuthSettings);
  dart.setMethodSignature(messages$46pigeon.PigeonFirebaseAuthSettings, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonFirebaseAuthSettings.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonFirebaseAuthSettings, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonFirebaseAuthSettings, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonFirebaseAuthSettings, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonFirebaseAuthSettings.__proto__),
    appVerificationDisabledForTesting: dart.fieldType(core.bool),
    userAccessGroup: dart.fieldType(dart.nullable(core.String)),
    phoneNumber: dart.fieldType(dart.nullable(core.String)),
    smsCode: dart.fieldType(dart.nullable(core.String)),
    forceRecaptchaFlow: dart.fieldType(dart.nullable(core.bool))
  }));
  messages$46pigeon.PigeonSignInProvider = class PigeonSignInProvider extends core.Object {
    get providerId() {
      return this[S$0.providerId$6];
    }
    set providerId(value) {
      this[S$0.providerId$6] = value;
    }
    get scopes() {
      return this[S$0.scopes];
    }
    set scopes(value) {
      this[S$0.scopes] = value;
    }
    get customParameters() {
      return this[S$0.customParameters];
    }
    set customParameters(value) {
      this[S$0.customParameters] = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let scopes = opts && 'scopes' in opts ? opts.scopes : null;
      let customParameters = opts && 'customParameters' in opts ? opts.customParameters : null;
      return new messages$46pigeon.PigeonSignInProvider.new({providerId: providerId, scopes: scopes, customParameters: customParameters});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.providerId, this.scopes, this.customParameters]);
    }
    static decode(result) {
      let t136, t136$;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonSignInProvider.new({providerId: core.String.as(dart.nullCheck(result[S$.$_get](0))), scopes: (t136 = T$.ListNOfObjectN().as(result[S$.$_get](1)), t136 == null ? null : t136[S$.$cast](T$.StringN())), customParameters: (t136$ = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](2)), t136$ == null ? null : t136$[S$.$cast](T$.StringN(), T$.StringN()))});
    }
  };
  (messages$46pigeon.PigeonSignInProvider.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let scopes = opts && 'scopes' in opts ? opts.scopes : null;
    let customParameters = opts && 'customParameters' in opts ? opts.customParameters : null;
    this[S$0.providerId$6] = providerId;
    this[S$0.scopes] = scopes;
    this[S$0.customParameters] = customParameters;
    ;
  }).prototype = messages$46pigeon.PigeonSignInProvider.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonSignInProvider);
  dart.addTypeCaches(messages$46pigeon.PigeonSignInProvider);
  dart.setMethodSignature(messages$46pigeon.PigeonSignInProvider, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonSignInProvider.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonSignInProvider, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonSignInProvider, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonSignInProvider, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonSignInProvider.__proto__),
    providerId: dart.fieldType(core.String),
    scopes: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.String)))),
    customParameters: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.String))))
  }));
  messages$46pigeon.PigeonVerifyPhoneNumberRequest = class PigeonVerifyPhoneNumberRequest extends core.Object {
    get phoneNumber() {
      return this[S$0.phoneNumber$4];
    }
    set phoneNumber(value) {
      this[S$0.phoneNumber$4] = value;
    }
    get timeout() {
      return this[S$0.timeout];
    }
    set timeout(value) {
      this[S$0.timeout] = value;
    }
    get forceResendingToken() {
      return this[S$0.forceResendingToken];
    }
    set forceResendingToken(value) {
      this[S$0.forceResendingToken] = value;
    }
    get autoRetrievedSmsCodeForTesting() {
      return this[S$0.autoRetrievedSmsCodeForTesting];
    }
    set autoRetrievedSmsCodeForTesting(value) {
      this[S$0.autoRetrievedSmsCodeForTesting] = value;
    }
    get multiFactorInfoId() {
      return this[S$0.multiFactorInfoId];
    }
    set multiFactorInfoId(value) {
      this[S$0.multiFactorInfoId] = value;
    }
    get multiFactorSessionId() {
      return this[S$0.multiFactorSessionId];
    }
    set multiFactorSessionId(value) {
      this[S$0.multiFactorSessionId] = value;
    }
    static ['_#new#tearOff'](opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : null;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let multiFactorInfoId = opts && 'multiFactorInfoId' in opts ? opts.multiFactorInfoId : null;
      let multiFactorSessionId = opts && 'multiFactorSessionId' in opts ? opts.multiFactorSessionId : null;
      return new messages$46pigeon.PigeonVerifyPhoneNumberRequest.new({phoneNumber: phoneNumber, timeout: timeout, forceResendingToken: forceResendingToken, autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting, multiFactorInfoId: multiFactorInfoId, multiFactorSessionId: multiFactorSessionId});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.phoneNumber, this.timeout, this.forceResendingToken, this.autoRetrievedSmsCodeForTesting, this.multiFactorInfoId, this.multiFactorSessionId]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonVerifyPhoneNumberRequest.new({phoneNumber: T$.StringN().as(result[S$.$_get](0)), timeout: core.int.as(dart.nullCheck(result[S$.$_get](1))), forceResendingToken: T$.intN().as(result[S$.$_get](2)), autoRetrievedSmsCodeForTesting: T$.StringN().as(result[S$.$_get](3)), multiFactorInfoId: T$.StringN().as(result[S$.$_get](4)), multiFactorSessionId: T$.StringN().as(result[S$.$_get](5))});
    }
  };
  (messages$46pigeon.PigeonVerifyPhoneNumberRequest.new = function(opts) {
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    let timeout = opts && 'timeout' in opts ? opts.timeout : null;
    let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
    let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
    let multiFactorInfoId = opts && 'multiFactorInfoId' in opts ? opts.multiFactorInfoId : null;
    let multiFactorSessionId = opts && 'multiFactorSessionId' in opts ? opts.multiFactorSessionId : null;
    this[S$0.phoneNumber$4] = phoneNumber;
    this[S$0.timeout] = timeout;
    this[S$0.forceResendingToken] = forceResendingToken;
    this[S$0.autoRetrievedSmsCodeForTesting] = autoRetrievedSmsCodeForTesting;
    this[S$0.multiFactorInfoId] = multiFactorInfoId;
    this[S$0.multiFactorSessionId] = multiFactorSessionId;
    ;
  }).prototype = messages$46pigeon.PigeonVerifyPhoneNumberRequest.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonVerifyPhoneNumberRequest);
  dart.addTypeCaches(messages$46pigeon.PigeonVerifyPhoneNumberRequest);
  dart.setMethodSignature(messages$46pigeon.PigeonVerifyPhoneNumberRequest, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonVerifyPhoneNumberRequest.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonVerifyPhoneNumberRequest, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonVerifyPhoneNumberRequest, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonVerifyPhoneNumberRequest, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonVerifyPhoneNumberRequest.__proto__),
    phoneNumber: dart.fieldType(dart.nullable(core.String)),
    timeout: dart.fieldType(core.int),
    forceResendingToken: dart.fieldType(dart.nullable(core.int)),
    autoRetrievedSmsCodeForTesting: dart.fieldType(dart.nullable(core.String)),
    multiFactorInfoId: dart.fieldType(dart.nullable(core.String)),
    multiFactorSessionId: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon.PigeonIdTokenResult = class PigeonIdTokenResult extends core.Object {
    get token() {
      return this[S$0.token$1];
    }
    set token(value) {
      this[S$0.token$1] = value;
    }
    get expirationTimestamp() {
      return this[S$0.expirationTimestamp];
    }
    set expirationTimestamp(value) {
      this[S$0.expirationTimestamp] = value;
    }
    get authTimestamp() {
      return this[S$0.authTimestamp];
    }
    set authTimestamp(value) {
      this[S$0.authTimestamp] = value;
    }
    get issuedAtTimestamp() {
      return this[S$0.issuedAtTimestamp];
    }
    set issuedAtTimestamp(value) {
      this[S$0.issuedAtTimestamp] = value;
    }
    get signInProvider() {
      return this[S$0.signInProvider];
    }
    set signInProvider(value) {
      this[S$0.signInProvider] = value;
    }
    get claims() {
      return this[S$0.claims];
    }
    set claims(value) {
      this[S$0.claims] = value;
    }
    get signInSecondFactor() {
      return this[S$0.signInSecondFactor];
    }
    set signInSecondFactor(value) {
      this[S$0.signInSecondFactor] = value;
    }
    static ['_#new#tearOff'](opts) {
      let token = opts && 'token' in opts ? opts.token : null;
      let expirationTimestamp = opts && 'expirationTimestamp' in opts ? opts.expirationTimestamp : null;
      let authTimestamp = opts && 'authTimestamp' in opts ? opts.authTimestamp : null;
      let issuedAtTimestamp = opts && 'issuedAtTimestamp' in opts ? opts.issuedAtTimestamp : null;
      let signInProvider = opts && 'signInProvider' in opts ? opts.signInProvider : null;
      let claims = opts && 'claims' in opts ? opts.claims : null;
      let signInSecondFactor = opts && 'signInSecondFactor' in opts ? opts.signInSecondFactor : null;
      return new messages$46pigeon.PigeonIdTokenResult.new({token: token, expirationTimestamp: expirationTimestamp, authTimestamp: authTimestamp, issuedAtTimestamp: issuedAtTimestamp, signInProvider: signInProvider, claims: claims, signInSecondFactor: signInSecondFactor});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.token, this.expirationTimestamp, this.authTimestamp, this.issuedAtTimestamp, this.signInProvider, this.claims, this.signInSecondFactor]);
    }
    static decode(result) {
      let t136;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonIdTokenResult.new({token: T$.StringN().as(result[S$.$_get](0)), expirationTimestamp: T$.intN().as(result[S$.$_get](1)), authTimestamp: T$.intN().as(result[S$.$_get](2)), issuedAtTimestamp: T$.intN().as(result[S$.$_get](3)), signInProvider: T$.StringN().as(result[S$.$_get](4)), claims: (t136 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](5)), t136 == null ? null : t136[S$.$cast](T$.StringN(), T$.ObjectN())), signInSecondFactor: T$.StringN().as(result[S$.$_get](6))});
    }
  };
  (messages$46pigeon.PigeonIdTokenResult.new = function(opts) {
    let token = opts && 'token' in opts ? opts.token : null;
    let expirationTimestamp = opts && 'expirationTimestamp' in opts ? opts.expirationTimestamp : null;
    let authTimestamp = opts && 'authTimestamp' in opts ? opts.authTimestamp : null;
    let issuedAtTimestamp = opts && 'issuedAtTimestamp' in opts ? opts.issuedAtTimestamp : null;
    let signInProvider = opts && 'signInProvider' in opts ? opts.signInProvider : null;
    let claims = opts && 'claims' in opts ? opts.claims : null;
    let signInSecondFactor = opts && 'signInSecondFactor' in opts ? opts.signInSecondFactor : null;
    this[S$0.token$1] = token;
    this[S$0.expirationTimestamp] = expirationTimestamp;
    this[S$0.authTimestamp] = authTimestamp;
    this[S$0.issuedAtTimestamp] = issuedAtTimestamp;
    this[S$0.signInProvider] = signInProvider;
    this[S$0.claims] = claims;
    this[S$0.signInSecondFactor] = signInSecondFactor;
    ;
  }).prototype = messages$46pigeon.PigeonIdTokenResult.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonIdTokenResult);
  dart.addTypeCaches(messages$46pigeon.PigeonIdTokenResult);
  dart.setMethodSignature(messages$46pigeon.PigeonIdTokenResult, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonIdTokenResult.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonIdTokenResult, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonIdTokenResult, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonIdTokenResult, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonIdTokenResult.__proto__),
    token: dart.fieldType(dart.nullable(core.String)),
    expirationTimestamp: dart.fieldType(dart.nullable(core.int)),
    authTimestamp: dart.fieldType(dart.nullable(core.int)),
    issuedAtTimestamp: dart.fieldType(dart.nullable(core.int)),
    signInProvider: dart.fieldType(dart.nullable(core.String)),
    claims: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))),
    signInSecondFactor: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon.PigeonUserProfile = class PigeonUserProfile extends core.Object {
    get displayName() {
      return this[S$0.displayName$2];
    }
    set displayName(value) {
      this[S$0.displayName$2] = value;
    }
    get photoUrl() {
      return this[S$0.photoUrl$2];
    }
    set photoUrl(value) {
      this[S$0.photoUrl$2] = value;
    }
    get displayNameChanged() {
      return this[S$0.displayNameChanged];
    }
    set displayNameChanged(value) {
      this[S$0.displayNameChanged] = value;
    }
    get photoUrlChanged() {
      return this[S$0.photoUrlChanged];
    }
    set photoUrlChanged(value) {
      this[S$0.photoUrlChanged] = value;
    }
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
      let displayNameChanged = opts && 'displayNameChanged' in opts ? opts.displayNameChanged : null;
      let photoUrlChanged = opts && 'photoUrlChanged' in opts ? opts.photoUrlChanged : null;
      return new messages$46pigeon.PigeonUserProfile.new({displayName: displayName, photoUrl: photoUrl, displayNameChanged: displayNameChanged, photoUrlChanged: photoUrlChanged});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.displayName, this.photoUrl, this.displayNameChanged, this.photoUrlChanged]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonUserProfile.new({displayName: T$.StringN().as(result[S$.$_get](0)), photoUrl: T$.StringN().as(result[S$.$_get](1)), displayNameChanged: core.bool.as(dart.nullCheck(result[S$.$_get](2))), photoUrlChanged: core.bool.as(dart.nullCheck(result[S$.$_get](3)))});
    }
  };
  (messages$46pigeon.PigeonUserProfile.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let photoUrl = opts && 'photoUrl' in opts ? opts.photoUrl : null;
    let displayNameChanged = opts && 'displayNameChanged' in opts ? opts.displayNameChanged : null;
    let photoUrlChanged = opts && 'photoUrlChanged' in opts ? opts.photoUrlChanged : null;
    this[S$0.displayName$2] = displayName;
    this[S$0.photoUrl$2] = photoUrl;
    this[S$0.displayNameChanged] = displayNameChanged;
    this[S$0.photoUrlChanged] = photoUrlChanged;
    ;
  }).prototype = messages$46pigeon.PigeonUserProfile.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonUserProfile);
  dart.addTypeCaches(messages$46pigeon.PigeonUserProfile);
  dart.setMethodSignature(messages$46pigeon.PigeonUserProfile, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonUserProfile.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonUserProfile, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonUserProfile, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonUserProfile, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonUserProfile.__proto__),
    displayName: dart.fieldType(dart.nullable(core.String)),
    photoUrl: dart.fieldType(dart.nullable(core.String)),
    displayNameChanged: dart.fieldType(core.bool),
    photoUrlChanged: dart.fieldType(core.bool)
  }));
  messages$46pigeon.PigeonTotpSecret = class PigeonTotpSecret extends core.Object {
    get codeIntervalSeconds() {
      return this[S$0.codeIntervalSeconds$2];
    }
    set codeIntervalSeconds(value) {
      this[S$0.codeIntervalSeconds$2] = value;
    }
    get codeLength() {
      return this[S$0.codeLength$2];
    }
    set codeLength(value) {
      this[S$0.codeLength$2] = value;
    }
    get enrollmentCompletionDeadline() {
      return this[S$0.enrollmentCompletionDeadline$2];
    }
    set enrollmentCompletionDeadline(value) {
      this[S$0.enrollmentCompletionDeadline$2] = value;
    }
    get hashingAlgorithm() {
      return this[S$0.hashingAlgorithm$2];
    }
    set hashingAlgorithm(value) {
      this[S$0.hashingAlgorithm$2] = value;
    }
    get secretKey() {
      return this[S$0.secretKey$2];
    }
    set secretKey(value) {
      this[S$0.secretKey$2] = value;
    }
    static ['_#new#tearOff'](opts) {
      let codeIntervalSeconds = opts && 'codeIntervalSeconds' in opts ? opts.codeIntervalSeconds : null;
      let codeLength = opts && 'codeLength' in opts ? opts.codeLength : null;
      let enrollmentCompletionDeadline = opts && 'enrollmentCompletionDeadline' in opts ? opts.enrollmentCompletionDeadline : null;
      let hashingAlgorithm = opts && 'hashingAlgorithm' in opts ? opts.hashingAlgorithm : null;
      let secretKey = opts && 'secretKey' in opts ? opts.secretKey : null;
      return new messages$46pigeon.PigeonTotpSecret.new({codeIntervalSeconds: codeIntervalSeconds, codeLength: codeLength, enrollmentCompletionDeadline: enrollmentCompletionDeadline, hashingAlgorithm: hashingAlgorithm, secretKey: secretKey});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.codeIntervalSeconds, this.codeLength, this.enrollmentCompletionDeadline, this.hashingAlgorithm, this.secretKey]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon.PigeonTotpSecret.new({codeIntervalSeconds: T$.intN().as(result[S$.$_get](0)), codeLength: T$.intN().as(result[S$.$_get](1)), enrollmentCompletionDeadline: T$.intN().as(result[S$.$_get](2)), hashingAlgorithm: T$.StringN().as(result[S$.$_get](3)), secretKey: core.String.as(dart.nullCheck(result[S$.$_get](4)))});
    }
  };
  (messages$46pigeon.PigeonTotpSecret.new = function(opts) {
    let codeIntervalSeconds = opts && 'codeIntervalSeconds' in opts ? opts.codeIntervalSeconds : null;
    let codeLength = opts && 'codeLength' in opts ? opts.codeLength : null;
    let enrollmentCompletionDeadline = opts && 'enrollmentCompletionDeadline' in opts ? opts.enrollmentCompletionDeadline : null;
    let hashingAlgorithm = opts && 'hashingAlgorithm' in opts ? opts.hashingAlgorithm : null;
    let secretKey = opts && 'secretKey' in opts ? opts.secretKey : null;
    this[S$0.codeIntervalSeconds$2] = codeIntervalSeconds;
    this[S$0.codeLength$2] = codeLength;
    this[S$0.enrollmentCompletionDeadline$2] = enrollmentCompletionDeadline;
    this[S$0.hashingAlgorithm$2] = hashingAlgorithm;
    this[S$0.secretKey$2] = secretKey;
    ;
  }).prototype = messages$46pigeon.PigeonTotpSecret.prototype;
  dart.addTypeTests(messages$46pigeon.PigeonTotpSecret);
  dart.addTypeCaches(messages$46pigeon.PigeonTotpSecret);
  dart.setMethodSignature(messages$46pigeon.PigeonTotpSecret, () => ({
    __proto__: dart.getMethods(messages$46pigeon.PigeonTotpSecret.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon.PigeonTotpSecret, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon.PigeonTotpSecret, I[82]);
  dart.setFieldSignature(messages$46pigeon.PigeonTotpSecret, () => ({
    __proto__: dart.getFields(messages$46pigeon.PigeonTotpSecret.__proto__),
    codeIntervalSeconds: dart.fieldType(dart.nullable(core.int)),
    codeLength: dart.fieldType(dart.nullable(core.int)),
    enrollmentCompletionDeadline: dart.fieldType(dart.nullable(core.int)),
    hashingAlgorithm: dart.fieldType(dart.nullable(core.String)),
    secretKey: dart.fieldType(core.String)
  }));
  messages$46pigeon._FirebaseAuthHostApiCodec = class _FirebaseAuthHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._FirebaseAuthHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.AuthPigeonFirebaseApp.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonActionCodeInfo.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonActionCodeInfoData.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonActionCodeSettings.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonAdditionalUserInfo.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonAuthCredential.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonFirebaseAuthSettings.is(value)) {
        buffer.putUint8(134);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonIdTokenResult.is(value)) {
        buffer.putUint8(135);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(136);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorSession.is(value)) {
        buffer.putUint8(137);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(138);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonSignInProvider.is(value)) {
        buffer.putUint8(139);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonTotpSecret.is(value)) {
        buffer.putUint8(140);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserCredential.is(value)) {
        buffer.putUint8(141);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserDetails.is(value)) {
        buffer.putUint8(142);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserInfo.is(value)) {
        buffer.putUint8(143);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserProfile.is(value)) {
        buffer.putUint8(144);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonVerifyPhoneNumberRequest.is(value)) {
        buffer.putUint8(145);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.AuthPigeonFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonActionCodeInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon.PigeonActionCodeInfoData.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon.PigeonActionCodeSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon.PigeonAdditionalUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon.PigeonAuthCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 134:
          {
            return messages$46pigeon.PigeonFirebaseAuthSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 135:
          {
            return messages$46pigeon.PigeonIdTokenResult.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 136:
          {
            return messages$46pigeon.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 137:
          {
            return messages$46pigeon.PigeonMultiFactorSession.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 138:
          {
            return messages$46pigeon.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 139:
          {
            return messages$46pigeon.PigeonSignInProvider.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 140:
          {
            return messages$46pigeon.PigeonTotpSecret.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 141:
          {
            return messages$46pigeon.PigeonUserCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 142:
          {
            return messages$46pigeon.PigeonUserDetails.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 143:
          {
            return messages$46pigeon.PigeonUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 144:
          {
            return messages$46pigeon.PigeonUserProfile.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 145:
          {
            return messages$46pigeon.PigeonVerifyPhoneNumberRequest.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._FirebaseAuthHostApiCodec.new = function() {
    messages$46pigeon._FirebaseAuthHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._FirebaseAuthHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._FirebaseAuthHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._FirebaseAuthHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._FirebaseAuthHostApiCodec, I[82]);
  messages$46pigeon.FirebaseAuthHostApi = class FirebaseAuthHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.FirebaseAuthHostApi.new({binaryMessenger: binaryMessenger});
    }
    registerIdTokenListener(arg_app) {
      return async.async(core.String, (function* registerIdTokenListener() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.registerIdTokenListener", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    registerAuthStateListener(arg_app) {
      return async.async(core.String, (function* registerAuthStateListener() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.registerAuthStateListener", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    useEmulator(arg_app, arg_host, arg_port) {
      return async.async(dart.void, (function* useEmulator() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.useEmulator", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_host, arg_port])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    applyActionCode(arg_app, arg_code) {
      return async.async(dart.void, (function* applyActionCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.applyActionCode", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    checkActionCode(arg_app, arg_code) {
      return async.async(messages$46pigeon.PigeonActionCodeInfo, (function* checkActionCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.checkActionCode", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonActionCodeInfoN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    confirmPasswordReset(arg_app, arg_code, arg_newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.confirmPasswordReset", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code, arg_newPassword])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(arg_app, arg_email, arg_password) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* createUserWithEmailAndPassword() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.createUserWithEmailAndPassword", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_password])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInAnonymously(arg_app) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInAnonymously() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInAnonymously", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInWithCredential(arg_app, arg_input) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInWithCredential() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInWithCredential", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInWithCustomToken(arg_app, arg_token) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInWithCustomToken() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInWithCustomToken", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_token])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(arg_app, arg_email, arg_password) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInWithEmailAndPassword() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInWithEmailAndPassword", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_password])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInWithEmailLink(arg_app, arg_email, arg_emailLink) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInWithEmailLink() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInWithEmailLink", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_emailLink])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signInWithProvider(arg_app, arg_signInProvider) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* signInWithProvider() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signInWithProvider", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_signInProvider])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    signOut(arg_app) {
      return async.async(dart.void, (function* signOut() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.signOut", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(arg_app, arg_email) {
      return async.async(T$.ListOfStringN(), (function* fetchSignInMethodsForEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.fetchSignInMethodsForEmail", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[S$.$_get](0)))[S$.$cast](T$.StringN());
        }
      }).bind(this));
    }
    sendPasswordResetEmail(arg_app, arg_email, arg_actionCodeSettings) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.sendPasswordResetEmail", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(arg_app, arg_email, arg_actionCodeSettings) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.sendSignInLinkToEmail", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_email, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setLanguageCode(arg_app, arg_languageCode) {
      return async.async(core.String, (function* setLanguageCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.setLanguageCode", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_languageCode])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    setSettings(arg_app, arg_settings) {
      return async.async(dart.void, (function* setSettings() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.setSettings", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_settings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    verifyPasswordResetCode(arg_app, arg_code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.verifyPasswordResetCode", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_code])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    verifyPhoneNumber(arg_app, arg_request) {
      return async.async(core.String, (function* verifyPhoneNumber() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.verifyPhoneNumber", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_request])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    revokeTokenWithAuthorizationCode(arg_app, arg_authorizationCode) {
      return async.async(dart.void, (function* revokeTokenWithAuthorizationCode() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthHostApi.revokeTokenWithAuthorizationCode", messages$46pigeon.FirebaseAuthHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_authorizationCode])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.FirebaseAuthHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$0._binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.FirebaseAuthHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.FirebaseAuthHostApi);
  dart.addTypeCaches(messages$46pigeon.FirebaseAuthHostApi);
  dart.setMethodSignature(messages$46pigeon.FirebaseAuthHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.FirebaseAuthHostApi.__proto__),
    registerIdTokenListener: dart.fnType(async.Future$(core.String), [messages$46pigeon.AuthPigeonFirebaseApp]),
    registerAuthStateListener: dart.fnType(async.Future$(core.String), [messages$46pigeon.AuthPigeonFirebaseApp]),
    useEmulator: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, core.String, core.int]),
    applyActionCode: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, core.String]),
    checkActionCode: dart.fnType(async.Future$(messages$46pigeon.PigeonActionCodeInfo), [messages$46pigeon.AuthPigeonFirebaseApp, core.String]),
    confirmPasswordReset: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, core.String, core.String]),
    createUserWithEmailAndPassword: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp, core.String, core.String]),
    signInAnonymously: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp]),
    signInWithCredential: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    signInWithCustomToken: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp, core.String]),
    signInWithEmailAndPassword: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp, core.String, core.String]),
    signInWithEmailLink: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp, core.String, core.String]),
    signInWithProvider: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp, messages$46pigeon.PigeonSignInProvider]),
    signOut: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp]),
    fetchSignInMethodsForEmail: dart.fnType(async.Future$(core.List$(dart.nullable(core.String))), [messages$46pigeon.AuthPigeonFirebaseApp, core.String]),
    sendPasswordResetEmail: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, core.String, dart.nullable(messages$46pigeon.PigeonActionCodeSettings)]),
    sendSignInLinkToEmail: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, core.String, messages$46pigeon.PigeonActionCodeSettings]),
    setLanguageCode: dart.fnType(async.Future$(core.String), [messages$46pigeon.AuthPigeonFirebaseApp, dart.nullable(core.String)]),
    setSettings: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, messages$46pigeon.PigeonFirebaseAuthSettings]),
    verifyPasswordResetCode: dart.fnType(async.Future$(core.String), [messages$46pigeon.AuthPigeonFirebaseApp, core.String]),
    verifyPhoneNumber: dart.fnType(async.Future$(core.String), [messages$46pigeon.AuthPigeonFirebaseApp, messages$46pigeon.PigeonVerifyPhoneNumberRequest]),
    revokeTokenWithAuthorizationCode: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, core.String])
  }));
  dart.setLibraryUri(messages$46pigeon.FirebaseAuthHostApi, I[82]);
  dart.setFieldSignature(messages$46pigeon.FirebaseAuthHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.FirebaseAuthHostApi.__proto__),
    [S$0._binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.FirebaseAuthHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.FirebaseAuthHostApi, {
    /*messages$46pigeon.FirebaseAuthHostApi.codec*/get codec() {
      return C[148] || CT.C148;
    }
  }, false);
  messages$46pigeon._FirebaseAuthUserHostApiCodec = class _FirebaseAuthUserHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._FirebaseAuthUserHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.AuthPigeonFirebaseApp.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonActionCodeInfo.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonActionCodeInfoData.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonActionCodeSettings.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonAdditionalUserInfo.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonAuthCredential.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonFirebaseAuthSettings.is(value)) {
        buffer.putUint8(134);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonIdTokenResult.is(value)) {
        buffer.putUint8(135);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(136);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorSession.is(value)) {
        buffer.putUint8(137);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(138);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonSignInProvider.is(value)) {
        buffer.putUint8(139);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonTotpSecret.is(value)) {
        buffer.putUint8(140);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserCredential.is(value)) {
        buffer.putUint8(141);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserDetails.is(value)) {
        buffer.putUint8(142);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserInfo.is(value)) {
        buffer.putUint8(143);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserProfile.is(value)) {
        buffer.putUint8(144);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonVerifyPhoneNumberRequest.is(value)) {
        buffer.putUint8(145);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.AuthPigeonFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonActionCodeInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon.PigeonActionCodeInfoData.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon.PigeonActionCodeSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon.PigeonAdditionalUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon.PigeonAuthCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 134:
          {
            return messages$46pigeon.PigeonFirebaseAuthSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 135:
          {
            return messages$46pigeon.PigeonIdTokenResult.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 136:
          {
            return messages$46pigeon.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 137:
          {
            return messages$46pigeon.PigeonMultiFactorSession.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 138:
          {
            return messages$46pigeon.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 139:
          {
            return messages$46pigeon.PigeonSignInProvider.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 140:
          {
            return messages$46pigeon.PigeonTotpSecret.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 141:
          {
            return messages$46pigeon.PigeonUserCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 142:
          {
            return messages$46pigeon.PigeonUserDetails.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 143:
          {
            return messages$46pigeon.PigeonUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 144:
          {
            return messages$46pigeon.PigeonUserProfile.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 145:
          {
            return messages$46pigeon.PigeonVerifyPhoneNumberRequest.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._FirebaseAuthUserHostApiCodec.new = function() {
    messages$46pigeon._FirebaseAuthUserHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._FirebaseAuthUserHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._FirebaseAuthUserHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._FirebaseAuthUserHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._FirebaseAuthUserHostApiCodec, I[82]);
  messages$46pigeon.FirebaseAuthUserHostApi = class FirebaseAuthUserHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.FirebaseAuthUserHostApi.new({binaryMessenger: binaryMessenger});
    }
    delete(arg_app) {
      return async.async(dart.void, (function* $delete() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.delete", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    getIdToken(arg_app, arg_forceRefresh) {
      return async.async(messages$46pigeon.PigeonIdTokenResult, (function* getIdToken() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.getIdToken", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_forceRefresh])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonIdTokenResultN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    linkWithCredential(arg_app, arg_input) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* linkWithCredential() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.linkWithCredential", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    linkWithProvider(arg_app, arg_signInProvider) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* linkWithProvider() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.linkWithProvider", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_signInProvider])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    reauthenticateWithCredential(arg_app, arg_input) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* reauthenticateWithCredential() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.reauthenticateWithCredential", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    reauthenticateWithProvider(arg_app, arg_signInProvider) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* reauthenticateWithProvider() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.reauthenticateWithProvider", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_signInProvider])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    reload(arg_app) {
      return async.async(messages$46pigeon.PigeonUserDetails, (function* reload() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.reload", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    sendEmailVerification(arg_app, arg_actionCodeSettings) {
      return async.async(dart.void, (function* sendEmailVerification() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.sendEmailVerification", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    unlink(arg_app, arg_providerId) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* unlink() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.unlink", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_providerId])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    updateEmail(arg_app, arg_newEmail) {
      return async.async(messages$46pigeon.PigeonUserDetails, (function* updateEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.updateEmail", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_newEmail])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    updatePassword(arg_app, arg_newPassword) {
      return async.async(messages$46pigeon.PigeonUserDetails, (function* updatePassword() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.updatePassword", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_newPassword])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    updatePhoneNumber(arg_app, arg_input) {
      return async.async(messages$46pigeon.PigeonUserDetails, (function* updatePhoneNumber() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.updatePhoneNumber", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_input])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    updateProfile(arg_app, arg_profile) {
      return async.async(messages$46pigeon.PigeonUserDetails, (function* updateProfile() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.updateProfile", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_profile])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserDetailsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    verifyBeforeUpdateEmail(arg_app, arg_newEmail, arg_actionCodeSettings) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.FirebaseAuthUserHostApi.verifyBeforeUpdateEmail", messages$46pigeon.FirebaseAuthUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_newEmail, arg_actionCodeSettings])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.FirebaseAuthUserHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$0._binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.FirebaseAuthUserHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.FirebaseAuthUserHostApi);
  dart.addTypeCaches(messages$46pigeon.FirebaseAuthUserHostApi);
  dart.setMethodSignature(messages$46pigeon.FirebaseAuthUserHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.FirebaseAuthUserHostApi.__proto__),
    delete: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp]),
    getIdToken: dart.fnType(async.Future$(messages$46pigeon.PigeonIdTokenResult), [messages$46pigeon.AuthPigeonFirebaseApp, core.bool]),
    linkWithCredential: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    linkWithProvider: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp, messages$46pigeon.PigeonSignInProvider]),
    reauthenticateWithCredential: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    reauthenticateWithProvider: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp, messages$46pigeon.PigeonSignInProvider]),
    reload: dart.fnType(async.Future$(messages$46pigeon.PigeonUserDetails), [messages$46pigeon.AuthPigeonFirebaseApp]),
    sendEmailVerification: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, dart.nullable(messages$46pigeon.PigeonActionCodeSettings)]),
    unlink: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [messages$46pigeon.AuthPigeonFirebaseApp, core.String]),
    updateEmail: dart.fnType(async.Future$(messages$46pigeon.PigeonUserDetails), [messages$46pigeon.AuthPigeonFirebaseApp, core.String]),
    updatePassword: dart.fnType(async.Future$(messages$46pigeon.PigeonUserDetails), [messages$46pigeon.AuthPigeonFirebaseApp, core.String]),
    updatePhoneNumber: dart.fnType(async.Future$(messages$46pigeon.PigeonUserDetails), [messages$46pigeon.AuthPigeonFirebaseApp, core.Map$(dart.nullable(core.String), dart.nullable(core.Object))]),
    updateProfile: dart.fnType(async.Future$(messages$46pigeon.PigeonUserDetails), [messages$46pigeon.AuthPigeonFirebaseApp, messages$46pigeon.PigeonUserProfile]),
    verifyBeforeUpdateEmail: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, core.String, dart.nullable(messages$46pigeon.PigeonActionCodeSettings)])
  }));
  dart.setLibraryUri(messages$46pigeon.FirebaseAuthUserHostApi, I[82]);
  dart.setFieldSignature(messages$46pigeon.FirebaseAuthUserHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.FirebaseAuthUserHostApi.__proto__),
    [S$0._binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.FirebaseAuthUserHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.FirebaseAuthUserHostApi, {
    /*messages$46pigeon.FirebaseAuthUserHostApi.codec*/get codec() {
      return C[149] || CT.C149;
    }
  }, false);
  messages$46pigeon._MultiFactorUserHostApiCodec = class _MultiFactorUserHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._MultiFactorUserHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.AuthPigeonFirebaseApp.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonMultiFactorSession.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.AuthPigeonFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon.PigeonMultiFactorSession.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._MultiFactorUserHostApiCodec.new = function() {
    messages$46pigeon._MultiFactorUserHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._MultiFactorUserHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._MultiFactorUserHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._MultiFactorUserHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._MultiFactorUserHostApiCodec, I[82]);
  messages$46pigeon.MultiFactorUserHostApi = class MultiFactorUserHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.MultiFactorUserHostApi.new({binaryMessenger: binaryMessenger});
    }
    enrollPhone(arg_app, arg_assertion, arg_displayName) {
      return async.async(dart.void, (function* enrollPhone() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorUserHostApi.enrollPhone", messages$46pigeon.MultiFactorUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_assertion, arg_displayName])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    enrollTotp(arg_app, arg_assertionId, arg_displayName) {
      return async.async(dart.void, (function* enrollTotp() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorUserHostApi.enrollTotp", messages$46pigeon.MultiFactorUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_assertionId, arg_displayName])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    getSession(arg_app) {
      return async.async(messages$46pigeon.PigeonMultiFactorSession, (function* getSession() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorUserHostApi.getSession", messages$46pigeon.MultiFactorUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonMultiFactorSessionN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    unenroll(arg_app, arg_factorUid) {
      return async.async(dart.void, (function* unenroll() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorUserHostApi.unenroll", messages$46pigeon.MultiFactorUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_factorUid])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    getEnrolledFactors(arg_app) {
      return async.async(T$.ListOfPigeonMultiFactorInfoN(), (function* getEnrolledFactors() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorUserHostApi.getEnrolledFactors", messages$46pigeon.MultiFactorUserHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[S$.$_get](0)))[S$.$cast](T$.PigeonMultiFactorInfoN());
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.MultiFactorUserHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$0._binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.MultiFactorUserHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.MultiFactorUserHostApi);
  dart.addTypeCaches(messages$46pigeon.MultiFactorUserHostApi);
  dart.setMethodSignature(messages$46pigeon.MultiFactorUserHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.MultiFactorUserHostApi.__proto__),
    enrollPhone: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, messages$46pigeon.PigeonPhoneMultiFactorAssertion, dart.nullable(core.String)]),
    enrollTotp: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, core.String, dart.nullable(core.String)]),
    getSession: dart.fnType(async.Future$(messages$46pigeon.PigeonMultiFactorSession), [messages$46pigeon.AuthPigeonFirebaseApp]),
    unenroll: dart.fnType(async.Future$(dart.void), [messages$46pigeon.AuthPigeonFirebaseApp, core.String]),
    getEnrolledFactors: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon.PigeonMultiFactorInfo))), [messages$46pigeon.AuthPigeonFirebaseApp])
  }));
  dart.setLibraryUri(messages$46pigeon.MultiFactorUserHostApi, I[82]);
  dart.setFieldSignature(messages$46pigeon.MultiFactorUserHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.MultiFactorUserHostApi.__proto__),
    [S$0._binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.MultiFactorUserHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.MultiFactorUserHostApi, {
    /*messages$46pigeon.MultiFactorUserHostApi.codec*/get codec() {
      return C[150] || CT.C150;
    }
  }, false);
  messages$46pigeon._MultiFactoResolverHostApiCodec = class _MultiFactoResolverHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._MultiFactoResolverHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonAdditionalUserInfo.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonAuthCredential.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonPhoneMultiFactorAssertion.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserCredential.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserDetails.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon.PigeonUserInfo.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonAdditionalUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon.PigeonAuthCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon.PigeonPhoneMultiFactorAssertion.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon.PigeonUserCredential.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon.PigeonUserDetails.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon.PigeonUserInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._MultiFactoResolverHostApiCodec.new = function() {
    messages$46pigeon._MultiFactoResolverHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._MultiFactoResolverHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._MultiFactoResolverHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._MultiFactoResolverHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._MultiFactoResolverHostApiCodec, I[82]);
  messages$46pigeon.MultiFactoResolverHostApi = class MultiFactoResolverHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.MultiFactoResolverHostApi.new({binaryMessenger: binaryMessenger});
    }
    resolveSignIn(arg_resolverId, arg_assertion, arg_totpAssertionId) {
      return async.async(messages$46pigeon.PigeonUserCredential, (function* resolveSignIn() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactoResolverHostApi.resolveSignIn", messages$46pigeon.MultiFactoResolverHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_resolverId, arg_assertion, arg_totpAssertionId])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonUserCredentialN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.MultiFactoResolverHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$0._binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.MultiFactoResolverHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.MultiFactoResolverHostApi);
  dart.addTypeCaches(messages$46pigeon.MultiFactoResolverHostApi);
  dart.setMethodSignature(messages$46pigeon.MultiFactoResolverHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.MultiFactoResolverHostApi.__proto__),
    resolveSignIn: dart.fnType(async.Future$(messages$46pigeon.PigeonUserCredential), [core.String, dart.nullable(messages$46pigeon.PigeonPhoneMultiFactorAssertion), dart.nullable(core.String)])
  }));
  dart.setLibraryUri(messages$46pigeon.MultiFactoResolverHostApi, I[82]);
  dart.setFieldSignature(messages$46pigeon.MultiFactoResolverHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.MultiFactoResolverHostApi.__proto__),
    [S$0._binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.MultiFactoResolverHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.MultiFactoResolverHostApi, {
    /*messages$46pigeon.MultiFactoResolverHostApi.codec*/get codec() {
      return C[151] || CT.C151;
    }
  }, false);
  messages$46pigeon._MultiFactorTotpHostApiCodec = class _MultiFactorTotpHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._MultiFactorTotpHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonTotpSecret.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonTotpSecret.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._MultiFactorTotpHostApiCodec.new = function() {
    messages$46pigeon._MultiFactorTotpHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._MultiFactorTotpHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon._MultiFactorTotpHostApiCodec);
  dart.addTypeCaches(messages$46pigeon._MultiFactorTotpHostApiCodec);
  dart.setLibraryUri(messages$46pigeon._MultiFactorTotpHostApiCodec, I[82]);
  messages$46pigeon.MultiFactorTotpHostApi = class MultiFactorTotpHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.MultiFactorTotpHostApi.new({binaryMessenger: binaryMessenger});
    }
    generateSecret(arg_sessionId) {
      return async.async(messages$46pigeon.PigeonTotpSecret, (function* generateSecret() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorTotpHostApi.generateSecret", messages$46pigeon.MultiFactorTotpHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_sessionId])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonTotpSecretN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    getAssertionForEnrollment(arg_secretKey, arg_oneTimePassword) {
      return async.async(core.String, (function* getAssertionForEnrollment() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorTotpHostApi.getAssertionForEnrollment", messages$46pigeon.MultiFactorTotpHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_secretKey, arg_oneTimePassword])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    getAssertionForSignIn(arg_enrollmentId, arg_oneTimePassword) {
      return async.async(core.String, (function* getAssertionForSignIn() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorTotpHostApi.getAssertionForSignIn", messages$46pigeon.MultiFactorTotpHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_enrollmentId, arg_oneTimePassword])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.MultiFactorTotpHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$0._binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.MultiFactorTotpHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.MultiFactorTotpHostApi);
  dart.addTypeCaches(messages$46pigeon.MultiFactorTotpHostApi);
  dart.setMethodSignature(messages$46pigeon.MultiFactorTotpHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.MultiFactorTotpHostApi.__proto__),
    generateSecret: dart.fnType(async.Future$(messages$46pigeon.PigeonTotpSecret), [core.String]),
    getAssertionForEnrollment: dart.fnType(async.Future$(core.String), [core.String, core.String]),
    getAssertionForSignIn: dart.fnType(async.Future$(core.String), [core.String, core.String])
  }));
  dart.setLibraryUri(messages$46pigeon.MultiFactorTotpHostApi, I[82]);
  dart.setFieldSignature(messages$46pigeon.MultiFactorTotpHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.MultiFactorTotpHostApi.__proto__),
    [S$0._binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.MultiFactorTotpHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.MultiFactorTotpHostApi, {
    /*messages$46pigeon.MultiFactorTotpHostApi.codec*/get codec() {
      return C[152] || CT.C152;
    }
  }, false);
  messages$46pigeon.MultiFactorTotpSecretHostApi = class MultiFactorTotpSecretHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.MultiFactorTotpSecretHostApi.new({binaryMessenger: binaryMessenger});
    }
    generateQrCodeUrl(arg_secretKey, arg_accountName, arg_issuer) {
      return async.async(core.String, (function* generateQrCodeUrl() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorTotpSecretHostApi.generateQrCodeUrl", messages$46pigeon.MultiFactorTotpSecretHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_secretKey, arg_accountName, arg_issuer])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    openInOtpApp(arg_secretKey, arg_qrCodeUrl) {
      return async.async(dart.void, (function* openInOtpApp() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.MultiFactorTotpSecretHostApi.openInOtpApp", messages$46pigeon.MultiFactorTotpSecretHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_secretKey, arg_qrCodeUrl])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.MultiFactorTotpSecretHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$0._binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.MultiFactorTotpSecretHostApi.prototype;
  dart.addTypeTests(messages$46pigeon.MultiFactorTotpSecretHostApi);
  dart.addTypeCaches(messages$46pigeon.MultiFactorTotpSecretHostApi);
  dart.setMethodSignature(messages$46pigeon.MultiFactorTotpSecretHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon.MultiFactorTotpSecretHostApi.__proto__),
    generateQrCodeUrl: dart.fnType(async.Future$(core.String), [core.String, dart.nullable(core.String), dart.nullable(core.String)]),
    openInOtpApp: dart.fnType(async.Future$(dart.void), [core.String, core.String])
  }));
  dart.setLibraryUri(messages$46pigeon.MultiFactorTotpSecretHostApi, I[82]);
  dart.setFieldSignature(messages$46pigeon.MultiFactorTotpSecretHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon.MultiFactorTotpSecretHostApi.__proto__),
    [S$0._binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.MultiFactorTotpSecretHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon.MultiFactorTotpSecretHostApi, {
    /*messages$46pigeon.MultiFactorTotpSecretHostApi.codec*/get codec() {
      return C[153] || CT.C153;
    }
  }, false);
  messages$46pigeon._GenerateInterfacesCodec = class _GenerateInterfacesCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon._GenerateInterfacesCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon.PigeonMultiFactorInfo.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon.PigeonMultiFactorInfo.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon._GenerateInterfacesCodec.new = function() {
    messages$46pigeon._GenerateInterfacesCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon._GenerateInterfacesCodec.prototype;
  dart.addTypeTests(messages$46pigeon._GenerateInterfacesCodec);
  dart.addTypeCaches(messages$46pigeon._GenerateInterfacesCodec);
  dart.setLibraryUri(messages$46pigeon._GenerateInterfacesCodec, I[82]);
  messages$46pigeon.GenerateInterfaces = class GenerateInterfaces extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon.GenerateInterfaces.new({binaryMessenger: binaryMessenger});
    }
    pigeonInterface(arg_info) {
      return async.async(dart.void, (function* pigeonInterface() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_auth_platform_interface.GenerateInterfaces.pigeonInterface", messages$46pigeon.GenerateInterfaces.codec, {binaryMessenger: this[S$0._binaryMessenger]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_info])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon.GenerateInterfaces.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$0._binaryMessenger] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon.GenerateInterfaces.prototype;
  dart.addTypeTests(messages$46pigeon.GenerateInterfaces);
  dart.addTypeCaches(messages$46pigeon.GenerateInterfaces);
  dart.setMethodSignature(messages$46pigeon.GenerateInterfaces, () => ({
    __proto__: dart.getMethods(messages$46pigeon.GenerateInterfaces.__proto__),
    pigeonInterface: dart.fnType(async.Future$(dart.void), [messages$46pigeon.PigeonMultiFactorInfo])
  }));
  dart.setLibraryUri(messages$46pigeon.GenerateInterfaces, I[82]);
  dart.setFieldSignature(messages$46pigeon.GenerateInterfaces, () => ({
    __proto__: dart.getFields(messages$46pigeon.GenerateInterfaces.__proto__),
    [S$0._binaryMessenger]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon.GenerateInterfaces, () => ['codec']);
  dart.defineLazy(messages$46pigeon.GenerateInterfaces, {
    /*messages$46pigeon.GenerateInterfaces.codec*/get codec() {
      return C[154] || CT.C154;
    }
  }, false);
  platform_interface_multi_factor.MultiFactorInfo = class MultiFactorInfo extends core.Object {
    get displayName() {
      return this[S$0.displayName$3];
    }
    set displayName(value) {
      super.displayName = value;
    }
    get enrollmentTimestamp() {
      return this[S$0.enrollmentTimestamp$1];
    }
    set enrollmentTimestamp(value) {
      super.enrollmentTimestamp = value;
    }
    get factorId() {
      return this[S$0.factorId$1];
    }
    set factorId(value) {
      super.factorId = value;
    }
    get uid() {
      return this[S$0.uid$3];
    }
    set uid(value) {
      super.uid = value;
    }
    static ['_#new#tearOff'](opts) {
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      return new platform_interface_multi_factor.MultiFactorInfo.new({factorId: factorId, enrollmentTimestamp: enrollmentTimestamp, displayName: displayName, uid: uid});
    }
    toString() {
      return "MultiFactorInfo{enrollmentTimestamp: " + dart.str(this.enrollmentTimestamp) + ", displayName: " + dart.str(this.displayName) + ", uid: " + this.uid + "}";
    }
  };
  (platform_interface_multi_factor.MultiFactorInfo.new = function(opts) {
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    this[S$0.factorId$1] = factorId;
    this[S$0.enrollmentTimestamp$1] = enrollmentTimestamp;
    this[S$0.displayName$3] = displayName;
    this[S$0.uid$3] = uid;
    ;
  }).prototype = platform_interface_multi_factor.MultiFactorInfo.prototype;
  dart.addTypeTests(platform_interface_multi_factor.MultiFactorInfo);
  dart.addTypeCaches(platform_interface_multi_factor.MultiFactorInfo);
  dart.setLibraryUri(platform_interface_multi_factor.MultiFactorInfo, I[58]);
  dart.setFieldSignature(platform_interface_multi_factor.MultiFactorInfo, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.MultiFactorInfo.__proto__),
    displayName: dart.finalFieldType(dart.nullable(core.String)),
    enrollmentTimestamp: dart.finalFieldType(core.double),
    factorId: dart.finalFieldType(core.String),
    uid: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(platform_interface_multi_factor.MultiFactorInfo, ['toString']);
  platform_interface_multi_factor.PhoneMultiFactorInfo = class PhoneMultiFactorInfo extends platform_interface_multi_factor.MultiFactorInfo {
    get phoneNumber() {
      return this[S$0.phoneNumber$5];
    }
    set phoneNumber(value) {
      super.phoneNumber = value;
    }
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid, phoneNumber: phoneNumber});
    }
  };
  (platform_interface_multi_factor.PhoneMultiFactorInfo.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
    this[S$0.phoneNumber$5] = phoneNumber;
    platform_interface_multi_factor.PhoneMultiFactorInfo.__proto__.new.call(this, {displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid});
    ;
  }).prototype = platform_interface_multi_factor.PhoneMultiFactorInfo.prototype;
  dart.addTypeTests(platform_interface_multi_factor.PhoneMultiFactorInfo);
  dart.addTypeCaches(platform_interface_multi_factor.PhoneMultiFactorInfo);
  dart.setLibraryUri(platform_interface_multi_factor.PhoneMultiFactorInfo, I[58]);
  dart.setFieldSignature(platform_interface_multi_factor.PhoneMultiFactorInfo, () => ({
    __proto__: dart.getFields(platform_interface_multi_factor.PhoneMultiFactorInfo.__proto__),
    phoneNumber: dart.finalFieldType(core.String)
  }));
  platform_interface_multi_factor.TotpMultiFactorInfo = class TotpMultiFactorInfo extends platform_interface_multi_factor.MultiFactorInfo {
    static ['_#new#tearOff'](opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
      let factorId = opts && 'factorId' in opts ? opts.factorId : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      return new platform_interface_multi_factor.TotpMultiFactorInfo.new({displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid});
    }
  };
  (platform_interface_multi_factor.TotpMultiFactorInfo.new = function(opts) {
    let displayName = opts && 'displayName' in opts ? opts.displayName : null;
    let enrollmentTimestamp = opts && 'enrollmentTimestamp' in opts ? opts.enrollmentTimestamp : null;
    let factorId = opts && 'factorId' in opts ? opts.factorId : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    platform_interface_multi_factor.TotpMultiFactorInfo.__proto__.new.call(this, {displayName: displayName, enrollmentTimestamp: enrollmentTimestamp, factorId: factorId, uid: uid});
    ;
  }).prototype = platform_interface_multi_factor.TotpMultiFactorInfo.prototype;
  dart.addTypeTests(platform_interface_multi_factor.TotpMultiFactorInfo);
  dart.addTypeCaches(platform_interface_multi_factor.TotpMultiFactorInfo);
  dart.setLibraryUri(platform_interface_multi_factor.TotpMultiFactorInfo, I[58]);
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize = class RecaptchaVerifierSize extends core._Enum {
    [S$0._enumToString]() {
      return "RecaptchaVerifierSize." + this[S$0._name];
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.new = function(index, name) {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, I[63]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, () => ['values', 'normal', 'compact']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.values*/get values() {
      return C[155] || CT.C155;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.normal*/get normal() {
      return C[11] || CT.C11;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierSize.compact*/get compact() {
      return C[124] || CT.C124;
    }
  }, false);
  platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme = class RecaptchaVerifierTheme extends core._Enum {
    [S$0._enumToString]() {
      return "RecaptchaVerifierTheme." + this[S$0._name];
    }
  };
  (platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.new = function(index, name) {
    platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.prototype;
  dart.addTypeTests(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
  dart.addTypeCaches(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme);
  dart.setMethodSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, () => ({
    __proto__: dart.getMethods(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, I[63]);
  dart.setStaticFieldSignature(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, () => ['values', 'light', 'dark']);
  dart.defineLazy(platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme, {
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.values*/get values() {
      return C[156] || CT.C156;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.light*/get light() {
      return C[12] || CT.C12;
    },
    /*platform_interface_recaptcha_verifier_factory.RecaptchaVerifierTheme.dark*/get dark() {
      return C[125] || CT.C125;
    }
  }, false);
  apple_auth.AppleAuthProvider = class AppleAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new apple_auth.AppleAuthProvider.new();
    }
    static credential(accessToken) {
      return apple_auth.AppleAuthCredential._credential(accessToken);
    }
    static get APPLE_SIGN_IN_METHOD() {
      return "apple.com";
    }
    static get PROVIDER_ID() {
      return "apple.com";
    }
    get scopes() {
      return this[S$0._scopes];
    }
    get parameters() {
      return this[S$0._parameters];
    }
    addScope(scope) {
      this[S$0._scopes][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$0._parameters] = customOAuthParameters;
      return this;
    }
  };
  (apple_auth.AppleAuthProvider.new = function() {
    this[S$0._scopes] = T$.JSArrayOfString().of([]);
    this[S$0._parameters] = new (T$.IdentityMapOfString$String()).new();
    apple_auth.AppleAuthProvider.__proto__.new.call(this, "apple.com");
    ;
  }).prototype = apple_auth.AppleAuthProvider.prototype;
  dart.addTypeTests(apple_auth.AppleAuthProvider);
  dart.addTypeCaches(apple_auth.AppleAuthProvider);
  dart.setMethodSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getMethods(apple_auth.AppleAuthProvider.__proto__),
    addScope: dart.fnType(apple_auth.AppleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(apple_auth.AppleAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(apple_auth.AppleAuthProvider, () => ['credential']);
  dart.setGetterSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getGetters(apple_auth.AppleAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(apple_auth.AppleAuthProvider, () => ['APPLE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(apple_auth.AppleAuthProvider, I[83]);
  dart.setFieldSignature(apple_auth.AppleAuthProvider, () => ({
    __proto__: dart.getFields(apple_auth.AppleAuthProvider.__proto__),
    [S$0._scopes]: dart.fieldType(core.List$(core.String)),
    [S$0._parameters]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  oauth.OAuthCredential = class OAuthCredential extends auth_credential.AuthCredential {
    get idToken() {
      return this[S$0.idToken];
    }
    set idToken(value) {
      super.idToken = value;
    }
    get secret() {
      return this[S$0.secret];
    }
    set secret(value) {
      super.secret = value;
    }
    get rawNonce() {
      return this[S$0.rawNonce];
    }
    set rawNonce(value) {
      super.rawNonce = value;
    }
    static ['_#new#tearOff'](opts) {
      let providerId = opts && 'providerId' in opts ? opts.providerId : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
      return new oauth.OAuthCredential.new({providerId: providerId, signInMethod: signInMethod, accessToken: accessToken, idToken: idToken, secret: secret, rawNonce: rawNonce});
    }
    asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "idToken", this.idToken, "accessToken", this.accessToken, "secret", this.secret, "rawNonce", this.rawNonce]);
    }
  };
  (oauth.OAuthCredential.new = function(opts) {
    let providerId = opts && 'providerId' in opts ? opts.providerId : null;
    let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let idToken = opts && 'idToken' in opts ? opts.idToken : null;
    let secret = opts && 'secret' in opts ? opts.secret : null;
    let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
    this[S$0.idToken] = idToken;
    this[S$0.secret] = secret;
    this[S$0.rawNonce] = rawNonce;
    oauth.OAuthCredential.__proto__.new.call(this, {providerId: providerId, signInMethod: signInMethod, accessToken: accessToken});
    ;
  }).prototype = oauth.OAuthCredential.prototype;
  dart.addTypeTests(oauth.OAuthCredential);
  dart.addTypeCaches(oauth.OAuthCredential);
  dart.setMethodSignature(oauth.OAuthCredential, () => ({
    __proto__: dart.getMethods(oauth.OAuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.nullable(core.String)), [])
  }));
  dart.setLibraryUri(oauth.OAuthCredential, I[84]);
  dart.setFieldSignature(oauth.OAuthCredential, () => ({
    __proto__: dart.getFields(oauth.OAuthCredential.__proto__),
    idToken: dart.finalFieldType(dart.nullable(core.String)),
    secret: dart.finalFieldType(dart.nullable(core.String)),
    rawNonce: dart.finalFieldType(dart.nullable(core.String))
  }));
  apple_auth.AppleAuthCredential = class AppleAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new apple_auth.AppleAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new apple_auth.AppleAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return apple_auth.AppleAuthCredential._credential(accessToken);
    }
  };
  (apple_auth.AppleAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    apple_auth.AppleAuthCredential.__proto__.new.call(this, {providerId: "apple.com", signInMethod: "apple.com", accessToken: accessToken});
    ;
  }).prototype = apple_auth.AppleAuthCredential.prototype;
  dart.addTypeTests(apple_auth.AppleAuthCredential);
  dart.addTypeCaches(apple_auth.AppleAuthCredential);
  dart.setStaticMethodSignature(apple_auth.AppleAuthCredential, () => ['_credential']);
  dart.setLibraryUri(apple_auth.AppleAuthCredential, I[83]);
  dart.defineLazy(apple_auth, {
    /*apple_auth._kProviderId*/get _kProviderId() {
      return "apple.com";
    }
  }, false);
  email_auth.EmailAuthProvider = class EmailAuthProvider extends auth_provider.AuthProvider {
    static get EMAIL_LINK_SIGN_IN_METHOD() {
      return "emailLink";
    }
    static get EMAIL_PASSWORD_SIGN_IN_METHOD() {
      return "password";
    }
    static get PROVIDER_ID() {
      return "password";
    }
    static credential(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      return email_auth.EmailAuthCredential._credential(email, password);
    }
    static credentialWithLink(opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
      return email_auth.EmailAuthCredential._credentialWithLink(email, emailLink);
    }
  };
  (email_auth.EmailAuthProvider.new = function() {
    email_auth.EmailAuthProvider.__proto__.new.call(this, "password");
    ;
  }).prototype = email_auth.EmailAuthProvider.prototype;
  dart.addTypeTests(email_auth.EmailAuthProvider);
  dart.addTypeCaches(email_auth.EmailAuthProvider);
  dart.setStaticMethodSignature(email_auth.EmailAuthProvider, () => ['credential', 'credentialWithLink']);
  dart.setStaticGetterSignature(email_auth.EmailAuthProvider, () => ['EMAIL_LINK_SIGN_IN_METHOD', 'EMAIL_PASSWORD_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(email_auth.EmailAuthProvider, I[85]);
  email_auth.EmailAuthCredential = class EmailAuthCredential extends auth_credential.AuthCredential {
    get email() {
      return this[S$0.email$5];
    }
    set email(value) {
      super.email = value;
    }
    get password() {
      return this[S$0.password];
    }
    set password(value) {
      super.password = value;
    }
    get emailLink() {
      return this[S$0.emailLink];
    }
    set emailLink(value) {
      super.emailLink = value;
    }
    static ['_#_#tearOff'](_signInMethod, opts) {
      let email = opts && 'email' in opts ? opts.email : null;
      let password = opts && 'password' in opts ? opts.password : null;
      let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
      return new email_auth.EmailAuthCredential.__(_signInMethod, {email: email, password: password, emailLink: emailLink});
    }
    static _credential(email, password) {
      return new email_auth.EmailAuthCredential.__("password", {email: email, password: password});
    }
    static ['_#_credential#tearOff'](email, password) {
      return email_auth.EmailAuthCredential._credential(email, password);
    }
    static _credentialWithLink(email, emailLink) {
      return new email_auth.EmailAuthCredential.__("emailLink", {email: email, emailLink: emailLink});
    }
    static ['_#_credentialWithLink#tearOff'](email, emailLink) {
      return email_auth.EmailAuthCredential._credentialWithLink(email, emailLink);
    }
    asMap() {
      return new (T$.IdentityMapOfString$StringN()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "email", this.email, "emailLink", this.emailLink, "secret", this.password]);
    }
  };
  (email_auth.EmailAuthCredential.__ = function(_signInMethod, opts) {
    let email = opts && 'email' in opts ? opts.email : null;
    let password = opts && 'password' in opts ? opts.password : null;
    let emailLink = opts && 'emailLink' in opts ? opts.emailLink : null;
    this[S$0.email$5] = email;
    this[S$0.password] = password;
    this[S$0.emailLink] = emailLink;
    email_auth.EmailAuthCredential.__proto__.new.call(this, {providerId: "password", signInMethod: _signInMethod});
    ;
  }).prototype = email_auth.EmailAuthCredential.prototype;
  dart.addTypeTests(email_auth.EmailAuthCredential);
  dart.addTypeCaches(email_auth.EmailAuthCredential);
  dart.setMethodSignature(email_auth.EmailAuthCredential, () => ({
    __proto__: dart.getMethods(email_auth.EmailAuthCredential.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.nullable(core.String)), [])
  }));
  dart.setStaticMethodSignature(email_auth.EmailAuthCredential, () => ['_credential', '_credentialWithLink']);
  dart.setLibraryUri(email_auth.EmailAuthCredential, I[85]);
  dart.setFieldSignature(email_auth.EmailAuthCredential, () => ({
    __proto__: dart.getFields(email_auth.EmailAuthCredential.__proto__),
    email: dart.finalFieldType(core.String),
    password: dart.finalFieldType(dart.nullable(core.String)),
    emailLink: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineLazy(email_auth, {
    /*email_auth._kLinkProviderId*/get _kLinkProviderId() {
      return "emailLink";
    },
    /*email_auth._kProviderId*/get _kProviderId() {
      return "password";
    }
  }, false);
  facebook_auth.FacebookAuthProvider = class FacebookAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new facebook_auth.FacebookAuthProvider.new();
    }
    static credential(accessToken) {
      return facebook_auth.FacebookAuthCredential._credential(accessToken);
    }
    static get FACEBOOK_SIGN_IN_METHOD() {
      return "facebook.com";
    }
    static get PROVIDER_ID() {
      return "facebook.com";
    }
    get scopes() {
      return this[S$0._scopes$1];
    }
    get parameters() {
      return this[S$0._parameters$1];
    }
    addScope(scope) {
      this[S$0._scopes$1][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$0._parameters$1] = customOAuthParameters;
      return this;
    }
  };
  (facebook_auth.FacebookAuthProvider.new = function() {
    this[S$0._scopes$1] = T$.JSArrayOfString().of([]);
    this[S$0._parameters$1] = new _js_helper.LinkedMap.new();
    facebook_auth.FacebookAuthProvider.__proto__.new.call(this, "facebook.com");
    ;
  }).prototype = facebook_auth.FacebookAuthProvider.prototype;
  dart.addTypeTests(facebook_auth.FacebookAuthProvider);
  dart.addTypeCaches(facebook_auth.FacebookAuthProvider);
  dart.setMethodSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getMethods(facebook_auth.FacebookAuthProvider.__proto__),
    addScope: dart.fnType(facebook_auth.FacebookAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(facebook_auth.FacebookAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(facebook_auth.FacebookAuthProvider, () => ['credential']);
  dart.setGetterSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getGetters(facebook_auth.FacebookAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(facebook_auth.FacebookAuthProvider, () => ['FACEBOOK_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(facebook_auth.FacebookAuthProvider, I[86]);
  dart.setFieldSignature(facebook_auth.FacebookAuthProvider, () => ({
    __proto__: dart.getFields(facebook_auth.FacebookAuthProvider.__proto__),
    [S$0._scopes$1]: dart.fieldType(core.List$(core.String)),
    [S$0._parameters$1]: dart.fieldType(core.Map)
  }));
  facebook_auth.FacebookAuthCredential = class FacebookAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new facebook_auth.FacebookAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new facebook_auth.FacebookAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return facebook_auth.FacebookAuthCredential._credential(accessToken);
    }
  };
  (facebook_auth.FacebookAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    facebook_auth.FacebookAuthCredential.__proto__.new.call(this, {providerId: "facebook.com", signInMethod: "facebook.com", accessToken: accessToken});
    ;
  }).prototype = facebook_auth.FacebookAuthCredential.prototype;
  dart.addTypeTests(facebook_auth.FacebookAuthCredential);
  dart.addTypeCaches(facebook_auth.FacebookAuthCredential);
  dart.setStaticMethodSignature(facebook_auth.FacebookAuthCredential, () => ['_credential']);
  dart.setLibraryUri(facebook_auth.FacebookAuthCredential, I[86]);
  dart.defineLazy(facebook_auth, {
    /*facebook_auth._kProviderId*/get _kProviderId() {
      return "facebook.com";
    }
  }, false);
  github_auth.GithubAuthProvider = class GithubAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new github_auth.GithubAuthProvider.new();
    }
    static credential(accessToken) {
      return github_auth.GithubAuthCredential._credential(accessToken);
    }
    static get GITHUB_SIGN_IN_METHOD() {
      return "github.com";
    }
    static get PROVIDER_ID() {
      return "github.com";
    }
    get scopes() {
      return this[S$0._scopes$2];
    }
    get parameters() {
      return this[S$0._parameters$2];
    }
    addScope(scope) {
      this[S$0._scopes$2][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$0._parameters$2] = customOAuthParameters;
      return this;
    }
  };
  (github_auth.GithubAuthProvider.new = function() {
    this[S$0._scopes$2] = T$.JSArrayOfString().of([]);
    this[S$0._parameters$2] = new (T$.IdentityMapOfString$String()).new();
    github_auth.GithubAuthProvider.__proto__.new.call(this, "github.com");
    ;
  }).prototype = github_auth.GithubAuthProvider.prototype;
  dart.addTypeTests(github_auth.GithubAuthProvider);
  dart.addTypeCaches(github_auth.GithubAuthProvider);
  dart.setMethodSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getMethods(github_auth.GithubAuthProvider.__proto__),
    addScope: dart.fnType(github_auth.GithubAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(github_auth.GithubAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(github_auth.GithubAuthProvider, () => ['credential']);
  dart.setGetterSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getGetters(github_auth.GithubAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(github_auth.GithubAuthProvider, () => ['GITHUB_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(github_auth.GithubAuthProvider, I[87]);
  dart.setFieldSignature(github_auth.GithubAuthProvider, () => ({
    __proto__: dart.getFields(github_auth.GithubAuthProvider.__proto__),
    [S$0._scopes$2]: dart.fieldType(core.List$(core.String)),
    [S$0._parameters$2]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  github_auth.GithubAuthCredential = class GithubAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new github_auth.GithubAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new github_auth.GithubAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return github_auth.GithubAuthCredential._credential(accessToken);
    }
  };
  (github_auth.GithubAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    github_auth.GithubAuthCredential.__proto__.new.call(this, {providerId: "github.com", signInMethod: "github.com", accessToken: accessToken});
    ;
  }).prototype = github_auth.GithubAuthCredential.prototype;
  dart.addTypeTests(github_auth.GithubAuthCredential);
  dart.addTypeCaches(github_auth.GithubAuthCredential);
  dart.setStaticMethodSignature(github_auth.GithubAuthCredential, () => ['_credential']);
  dart.setLibraryUri(github_auth.GithubAuthCredential, I[87]);
  dart.defineLazy(github_auth, {
    /*github_auth._kProviderId*/get _kProviderId() {
      return "github.com";
    }
  }, false);
  google_auth.GoogleAuthProvider = class GoogleAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new google_auth.GoogleAuthProvider.new();
    }
    static credential(opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      if (!(accessToken != null || idToken != null)) dart.assertFailed("At least one of ID token and access token is required", I[88], 43, 12, "accessToken != null || idToken != null");
      return google_auth.GoogleAuthCredential._credential({idToken: idToken, accessToken: accessToken});
    }
    static get GOOGLE_SIGN_IN_METHOD() {
      return "google.com";
    }
    static get PROVIDER_ID() {
      return "google.com";
    }
    get scopes() {
      return this[S$0._scopes$3];
    }
    get parameters() {
      return this[S$0._parameters$3];
    }
    addScope(scope) {
      this[S$0._scopes$3][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$0._parameters$3] = customOAuthParameters;
      return this;
    }
  };
  (google_auth.GoogleAuthProvider.new = function() {
    this[S$0._scopes$3] = T$.JSArrayOfString().of([]);
    this[S$0._parameters$3] = new _js_helper.LinkedMap.new();
    google_auth.GoogleAuthProvider.__proto__.new.call(this, "google.com");
    ;
  }).prototype = google_auth.GoogleAuthProvider.prototype;
  dart.addTypeTests(google_auth.GoogleAuthProvider);
  dart.addTypeCaches(google_auth.GoogleAuthProvider);
  dart.setMethodSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getMethods(google_auth.GoogleAuthProvider.__proto__),
    addScope: dart.fnType(google_auth.GoogleAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(google_auth.GoogleAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(google_auth.GoogleAuthProvider, () => ['credential']);
  dart.setGetterSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getGetters(google_auth.GoogleAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(google_auth.GoogleAuthProvider, () => ['GOOGLE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(google_auth.GoogleAuthProvider, I[89]);
  dart.setFieldSignature(google_auth.GoogleAuthProvider, () => ({
    __proto__: dart.getFields(google_auth.GoogleAuthProvider.__proto__),
    [S$0._scopes$3]: dart.fieldType(core.List$(core.String)),
    [S$0._parameters$3]: dart.fieldType(core.Map)
  }));
  google_auth.GoogleAuthCredential = class GoogleAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      return new google_auth.GoogleAuthCredential.__({accessToken: accessToken, idToken: idToken});
    }
    static _credential(opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new google_auth.GoogleAuthCredential.__({accessToken: accessToken, idToken: idToken});
    }
    static ['_#_credential#tearOff'](opts) {
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return google_auth.GoogleAuthCredential._credential({idToken: idToken, accessToken: accessToken});
    }
  };
  (google_auth.GoogleAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let idToken = opts && 'idToken' in opts ? opts.idToken : null;
    google_auth.GoogleAuthCredential.__proto__.new.call(this, {providerId: "google.com", signInMethod: "google.com", accessToken: accessToken, idToken: idToken});
    ;
  }).prototype = google_auth.GoogleAuthCredential.prototype;
  dart.addTypeTests(google_auth.GoogleAuthCredential);
  dart.addTypeCaches(google_auth.GoogleAuthCredential);
  dart.setStaticMethodSignature(google_auth.GoogleAuthCredential, () => ['_credential']);
  dart.setLibraryUri(google_auth.GoogleAuthCredential, I[89]);
  dart.defineLazy(google_auth, {
    /*google_auth._kProviderId*/get _kProviderId() {
      return "google.com";
    }
  }, false);
  microsoft_auth.MicrosoftAuthProvider = class MicrosoftAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new microsoft_auth.MicrosoftAuthProvider.new();
    }
    static credential(accessToken) {
      return microsoft_auth.MicrosoftAuthCredential._credential(accessToken);
    }
    static get MICROSOFT_SIGN_IN_METHOD() {
      return "microsoft.com";
    }
    static get PROVIDER_ID() {
      return "microsoft.com";
    }
    get scopes() {
      return this[S$0._scopes$4];
    }
    get parameters() {
      return this[S$0._parameters$4];
    }
    addScope(scope) {
      this[S$0._scopes$4][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$0._parameters$4] = customOAuthParameters;
      return this;
    }
  };
  (microsoft_auth.MicrosoftAuthProvider.new = function() {
    this[S$0._scopes$4] = T$.JSArrayOfString().of([]);
    this[S$0._parameters$4] = new (T$.IdentityMapOfString$String()).new();
    microsoft_auth.MicrosoftAuthProvider.__proto__.new.call(this, "microsoft.com");
    ;
  }).prototype = microsoft_auth.MicrosoftAuthProvider.prototype;
  dart.addTypeTests(microsoft_auth.MicrosoftAuthProvider);
  dart.addTypeCaches(microsoft_auth.MicrosoftAuthProvider);
  dart.setMethodSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getMethods(microsoft_auth.MicrosoftAuthProvider.__proto__),
    addScope: dart.fnType(microsoft_auth.MicrosoftAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(microsoft_auth.MicrosoftAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(microsoft_auth.MicrosoftAuthProvider, () => ['credential']);
  dart.setGetterSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getGetters(microsoft_auth.MicrosoftAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(microsoft_auth.MicrosoftAuthProvider, () => ['MICROSOFT_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(microsoft_auth.MicrosoftAuthProvider, I[90]);
  dart.setFieldSignature(microsoft_auth.MicrosoftAuthProvider, () => ({
    __proto__: dart.getFields(microsoft_auth.MicrosoftAuthProvider.__proto__),
    [S$0._scopes$4]: dart.fieldType(core.List$(core.String)),
    [S$0._parameters$4]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  microsoft_auth.MicrosoftAuthCredential = class MicrosoftAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new microsoft_auth.MicrosoftAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new microsoft_auth.MicrosoftAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return microsoft_auth.MicrosoftAuthCredential._credential(accessToken);
    }
  };
  (microsoft_auth.MicrosoftAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    microsoft_auth.MicrosoftAuthCredential.__proto__.new.call(this, {providerId: "microsoft.com", signInMethod: "microsoft.com", accessToken: accessToken});
    ;
  }).prototype = microsoft_auth.MicrosoftAuthCredential.prototype;
  dart.addTypeTests(microsoft_auth.MicrosoftAuthCredential);
  dart.addTypeCaches(microsoft_auth.MicrosoftAuthCredential);
  dart.setStaticMethodSignature(microsoft_auth.MicrosoftAuthCredential, () => ['_credential']);
  dart.setLibraryUri(microsoft_auth.MicrosoftAuthCredential, I[90]);
  dart.defineLazy(microsoft_auth, {
    /*microsoft_auth._kProviderId*/get _kProviderId() {
      return "microsoft.com";
    }
  }, false);
  oauth.OAuthProvider = class OAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff'](providerId) {
      return new oauth.OAuthProvider.new(providerId);
    }
    get scopes() {
      return this[S$0._scopes$5];
    }
    get parameters() {
      return this[S$0._parameters$5];
    }
    setScopes(scopes) {
      this[S$0._scopes$5] = scopes;
      return this;
    }
    addScope(scope) {
      this[S$0._scopes$5][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$0._parameters$5] = customOAuthParameters;
      return this;
    }
    credential(opts) {
      let t140;
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      let idToken = opts && 'idToken' in opts ? opts.idToken : null;
      let rawNonce = opts && 'rawNonce' in opts ? opts.rawNonce : null;
      let signInMethod = opts && 'signInMethod' in opts ? opts.signInMethod : null;
      return new oauth.OAuthCredential.new({providerId: this.providerId, signInMethod: (t140 = signInMethod, t140 == null ? "oauth" : t140), accessToken: accessToken, secret: secret, idToken: idToken, rawNonce: rawNonce});
    }
  };
  (oauth.OAuthProvider.new = function(providerId) {
    this[S$0._scopes$5] = T$.JSArrayOfString().of([]);
    this[S$0._parameters$5] = new (T$.IdentityMapOfString$String()).new();
    oauth.OAuthProvider.__proto__.new.call(this, providerId);
    ;
  }).prototype = oauth.OAuthProvider.prototype;
  dart.addTypeTests(oauth.OAuthProvider);
  dart.addTypeCaches(oauth.OAuthProvider);
  dart.setMethodSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getMethods(oauth.OAuthProvider.__proto__),
    setScopes: dart.fnType(oauth.OAuthProvider, [core.List$(core.String)]),
    addScope: dart.fnType(oauth.OAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(oauth.OAuthProvider, [core.Map$(core.String, core.String)]),
    credential: dart.fnType(oauth.OAuthCredential, [], {accessToken: dart.nullable(core.String), idToken: dart.nullable(core.String), rawNonce: dart.nullable(core.String), secret: dart.nullable(core.String), signInMethod: dart.nullable(core.String)}, {})
  }));
  dart.setGetterSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getGetters(oauth.OAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setLibraryUri(oauth.OAuthProvider, I[84]);
  dart.setFieldSignature(oauth.OAuthProvider, () => ({
    __proto__: dart.getFields(oauth.OAuthProvider.__proto__),
    [S$0._scopes$5]: dart.fieldType(core.List$(core.String)),
    [S$0._parameters$5]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  phone_auth.PhoneAuthProvider = class PhoneAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new phone_auth.PhoneAuthProvider.new();
    }
    static get PHONE_SIGN_IN_METHOD() {
      return "phone";
    }
    static get PROVIDER_ID() {
      return "phone";
    }
    static credential(opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credential(verificationId, smsCode);
    }
    static credentialFromToken(token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credentialFromToken(token, {smsCode: smsCode});
    }
  };
  (phone_auth.PhoneAuthProvider.new = function() {
    phone_auth.PhoneAuthProvider.__proto__.new.call(this, "phone");
    ;
  }).prototype = phone_auth.PhoneAuthProvider.prototype;
  dart.addTypeTests(phone_auth.PhoneAuthProvider);
  dart.addTypeCaches(phone_auth.PhoneAuthProvider);
  dart.setStaticMethodSignature(phone_auth.PhoneAuthProvider, () => ['credential', 'credentialFromToken']);
  dart.setStaticGetterSignature(phone_auth.PhoneAuthProvider, () => ['PHONE_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(phone_auth.PhoneAuthProvider, I[91]);
  phone_auth.PhoneAuthCredential = class PhoneAuthCredential extends auth_credential.AuthCredential {
    get verificationId() {
      return this[S$0.verificationId$2];
    }
    set verificationId(value) {
      super.verificationId = value;
    }
    get smsCode() {
      return this[S$0.smsCode$1];
    }
    set smsCode(value) {
      super.smsCode = value;
    }
    static ['_#_#tearOff'](opts) {
      let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let token = opts && 'token' in opts ? opts.token : null;
      return new phone_auth.PhoneAuthCredential.__({verificationId: verificationId, smsCode: smsCode, token: token});
    }
    static _credential(verificationId, smsCode) {
      return new phone_auth.PhoneAuthCredential.__({verificationId: verificationId, smsCode: smsCode});
    }
    static ['_#_credential#tearOff'](verificationId, smsCode) {
      return phone_auth.PhoneAuthCredential._credential(verificationId, smsCode);
    }
    static _credentialFromToken(token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return new phone_auth.PhoneAuthCredential.__({token: token, smsCode: smsCode});
    }
    static ['_#_credentialFromToken#tearOff'](token, opts) {
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      return phone_auth.PhoneAuthCredential._credentialFromToken(token, {smsCode: smsCode});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["providerId", this.providerId, "signInMethod", this.signInMethod, "verificationId", this.verificationId, "smsCode", this.smsCode, "token", this.token]);
    }
  };
  (phone_auth.PhoneAuthCredential.__ = function(opts) {
    let verificationId = opts && 'verificationId' in opts ? opts.verificationId : null;
    let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
    let token = opts && 'token' in opts ? opts.token : null;
    this[S$0.verificationId$2] = verificationId;
    this[S$0.smsCode$1] = smsCode;
    phone_auth.PhoneAuthCredential.__proto__.new.call(this, {providerId: "phone", signInMethod: "phone", token: token});
    ;
  }).prototype = phone_auth.PhoneAuthCredential.prototype;
  dart.addTypeTests(phone_auth.PhoneAuthCredential);
  dart.addTypeCaches(phone_auth.PhoneAuthCredential);
  dart.setStaticMethodSignature(phone_auth.PhoneAuthCredential, () => ['_credential', '_credentialFromToken']);
  dart.setLibraryUri(phone_auth.PhoneAuthCredential, I[91]);
  dart.setFieldSignature(phone_auth.PhoneAuthCredential, () => ({
    __proto__: dart.getFields(phone_auth.PhoneAuthCredential.__proto__),
    verificationId: dart.finalFieldType(dart.nullable(core.String)),
    smsCode: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineLazy(phone_auth, {
    /*phone_auth._kProviderId*/get _kProviderId() {
      return "phone";
    }
  }, false);
  saml_auth.SAMLAuthProvider = class SAMLAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff'](providerId) {
      return new saml_auth.SAMLAuthProvider.new(providerId);
    }
  };
  (saml_auth.SAMLAuthProvider.new = function(providerId) {
    saml_auth.SAMLAuthProvider.__proto__.new.call(this, providerId);
    ;
  }).prototype = saml_auth.SAMLAuthProvider.prototype;
  dart.addTypeTests(saml_auth.SAMLAuthProvider);
  dart.addTypeCaches(saml_auth.SAMLAuthProvider);
  dart.setLibraryUri(saml_auth.SAMLAuthProvider, I[92]);
  twitter_auth.TwitterAuthProvider = class TwitterAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new twitter_auth.TwitterAuthProvider.new();
    }
    static credential(opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return twitter_auth.TwitterAuthCredential._credential({accessToken: accessToken, secret: secret});
    }
    static get TWITTER_SIGN_IN_METHOD() {
      return "twitter.com";
    }
    static get PROVIDER_ID() {
      return "twitter.com";
    }
    get parameters() {
      return this[S$0._parameters$6];
    }
    setCustomParameters(customOAuthParameters) {
      this[S$0._parameters$6] = customOAuthParameters;
      return this;
    }
  };
  (twitter_auth.TwitterAuthProvider.new = function() {
    this[S$0._parameters$6] = new (T$.IdentityMapOfString$String()).new();
    twitter_auth.TwitterAuthProvider.__proto__.new.call(this, "twitter.com");
    ;
  }).prototype = twitter_auth.TwitterAuthProvider.prototype;
  dart.addTypeTests(twitter_auth.TwitterAuthProvider);
  dart.addTypeCaches(twitter_auth.TwitterAuthProvider);
  dart.setMethodSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getMethods(twitter_auth.TwitterAuthProvider.__proto__),
    setCustomParameters: dart.fnType(twitter_auth.TwitterAuthProvider, [core.Map$(core.String, core.String)])
  }));
  dart.setStaticMethodSignature(twitter_auth.TwitterAuthProvider, () => ['credential']);
  dart.setGetterSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getGetters(twitter_auth.TwitterAuthProvider.__proto__),
    parameters: core.Map$(core.String, core.String)
  }));
  dart.setStaticGetterSignature(twitter_auth.TwitterAuthProvider, () => ['TWITTER_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(twitter_auth.TwitterAuthProvider, I[93]);
  dart.setFieldSignature(twitter_auth.TwitterAuthProvider, () => ({
    __proto__: dart.getFields(twitter_auth.TwitterAuthProvider.__proto__),
    [S$0._parameters$6]: dart.fieldType(core.Map$(core.String, core.String))
  }));
  twitter_auth.TwitterAuthCredential = class TwitterAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return new twitter_auth.TwitterAuthCredential.__({accessToken: accessToken, secret: secret});
    }
    static _credential(opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return new twitter_auth.TwitterAuthCredential.__({accessToken: accessToken, secret: secret});
    }
    static ['_#_credential#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      let secret = opts && 'secret' in opts ? opts.secret : null;
      return twitter_auth.TwitterAuthCredential._credential({accessToken: accessToken, secret: secret});
    }
  };
  (twitter_auth.TwitterAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    let secret = opts && 'secret' in opts ? opts.secret : null;
    twitter_auth.TwitterAuthCredential.__proto__.new.call(this, {providerId: "twitter.com", signInMethod: "twitter.com", accessToken: accessToken, secret: secret});
    ;
  }).prototype = twitter_auth.TwitterAuthCredential.prototype;
  dart.addTypeTests(twitter_auth.TwitterAuthCredential);
  dart.addTypeCaches(twitter_auth.TwitterAuthCredential);
  dart.setStaticMethodSignature(twitter_auth.TwitterAuthCredential, () => ['_credential']);
  dart.setLibraryUri(twitter_auth.TwitterAuthCredential, I[93]);
  dart.defineLazy(twitter_auth, {
    /*twitter_auth._kProviderId*/get _kProviderId() {
      return "twitter.com";
    }
  }, false);
  yahoo_auth.YahooAuthProvider = class YahooAuthProvider extends auth_provider.AuthProvider {
    static ['_#new#tearOff']() {
      return new yahoo_auth.YahooAuthProvider.new();
    }
    static credential(accessToken) {
      return yahoo_auth.YahooAuthCredential._credential(accessToken);
    }
    static get YAHOO_SIGN_IN_METHOD() {
      return "yahoo.com";
    }
    static get PROVIDER_ID() {
      return "yahoo.com";
    }
    get scopes() {
      return this[S$0._scopes$6];
    }
    get parameters() {
      return this[S$0._parameters$7];
    }
    addScope(scope) {
      this[S$0._scopes$6][S$.$add](scope);
      return this;
    }
    setCustomParameters(customOAuthParameters) {
      this[S$0._parameters$7] = customOAuthParameters;
      return this;
    }
  };
  (yahoo_auth.YahooAuthProvider.new = function() {
    this[S$0._scopes$6] = T$.JSArrayOfString().of([]);
    this[S$0._parameters$7] = new _js_helper.LinkedMap.new();
    yahoo_auth.YahooAuthProvider.__proto__.new.call(this, "yahoo.com");
    ;
  }).prototype = yahoo_auth.YahooAuthProvider.prototype;
  dart.addTypeTests(yahoo_auth.YahooAuthProvider);
  dart.addTypeCaches(yahoo_auth.YahooAuthProvider);
  dart.setMethodSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getMethods(yahoo_auth.YahooAuthProvider.__proto__),
    addScope: dart.fnType(yahoo_auth.YahooAuthProvider, [core.String]),
    setCustomParameters: dart.fnType(yahoo_auth.YahooAuthProvider, [core.Map])
  }));
  dart.setStaticMethodSignature(yahoo_auth.YahooAuthProvider, () => ['credential']);
  dart.setGetterSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getGetters(yahoo_auth.YahooAuthProvider.__proto__),
    scopes: core.List$(core.String),
    parameters: core.Map
  }));
  dart.setStaticGetterSignature(yahoo_auth.YahooAuthProvider, () => ['YAHOO_SIGN_IN_METHOD', 'PROVIDER_ID']);
  dart.setLibraryUri(yahoo_auth.YahooAuthProvider, I[94]);
  dart.setFieldSignature(yahoo_auth.YahooAuthProvider, () => ({
    __proto__: dart.getFields(yahoo_auth.YahooAuthProvider.__proto__),
    [S$0._scopes$6]: dart.fieldType(core.List$(core.String)),
    [S$0._parameters$7]: dart.fieldType(core.Map)
  }));
  yahoo_auth.YahooAuthCredential = class YahooAuthCredential extends oauth.OAuthCredential {
    static ['_#_#tearOff'](opts) {
      let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
      return new yahoo_auth.YahooAuthCredential.__({accessToken: accessToken});
    }
    static _credential(accessToken) {
      return new yahoo_auth.YahooAuthCredential.__({accessToken: accessToken});
    }
    static ['_#_credential#tearOff'](accessToken) {
      return yahoo_auth.YahooAuthCredential._credential(accessToken);
    }
  };
  (yahoo_auth.YahooAuthCredential.__ = function(opts) {
    let accessToken = opts && 'accessToken' in opts ? opts.accessToken : null;
    yahoo_auth.YahooAuthCredential.__proto__.new.call(this, {providerId: "yahoo.com", signInMethod: "yahoo.com", accessToken: accessToken});
    ;
  }).prototype = yahoo_auth.YahooAuthCredential.prototype;
  dart.addTypeTests(yahoo_auth.YahooAuthCredential);
  dart.addTypeCaches(yahoo_auth.YahooAuthCredential);
  dart.setStaticMethodSignature(yahoo_auth.YahooAuthCredential, () => ['_credential']);
  dart.setLibraryUri(yahoo_auth.YahooAuthCredential, I[94]);
  dart.defineLazy(yahoo_auth, {
    /*yahoo_auth._kProviderId*/get _kProviderId() {
      return "yahoo.com";
    }
  }, false);
  types.Persistence = class Persistence extends core._Enum {
    [S$0._enumToString]() {
      return "Persistence." + this[S$0._name];
    }
  };
  (types.Persistence.new = function(index, name) {
    types.Persistence.__proto__.new.call(this, index, name);
    ;
  }).prototype = types.Persistence.prototype;
  dart.addTypeTests(types.Persistence);
  dart.addTypeCaches(types.Persistence);
  dart.setMethodSignature(types.Persistence, () => ({
    __proto__: dart.getMethods(types.Persistence.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(types.Persistence, I[95]);
  dart.setStaticFieldSignature(types.Persistence, () => ['values', 'LOCAL', 'INDEXED_DB', 'NONE', 'SESSION']);
  dart.defineLazy(types.Persistence, {
    /*types.Persistence.values*/get values() {
      return C[157] || CT.C157;
    },
    /*types.Persistence.LOCAL*/get LOCAL() {
      return C[131] || CT.C131;
    },
    /*types.Persistence.INDEXED_DB*/get INDEXED_DB() {
      return C[132] || CT.C132;
    },
    /*types.Persistence.NONE*/get NONE() {
      return C[134] || CT.C134;
    },
    /*types.Persistence.SESSION*/get SESSION() {
      return C[133] || CT.C133;
    }
  }, false);
  user_info.UserInfo = class UserInfo extends core.Object {
    static ['_#fromPigeon#tearOff'](_data) {
      return new user_info.UserInfo.fromPigeon(_data);
    }
    static ['_#fromJson#tearOff'](data) {
      return new user_info.UserInfo.fromJson(data);
    }
    get displayName() {
      return this[S$0._data$3].displayName;
    }
    get email() {
      return this[S$0._data$3].email;
    }
    get phoneNumber() {
      return this[S$0._data$3].phoneNumber;
    }
    get photoURL() {
      return this[S$0._data$3].photoUrl;
    }
    get providerId() {
      return dart.nullCheck(this[S$0._data$3].providerId);
    }
    get uid() {
      return this[S$0._data$3].uid;
    }
    toString() {
      return dart.str(dart.wrapType(user_info.UserInfo)) + "(displayName: " + dart.str(this.displayName) + ", email: " + dart.str(this.email) + ", phoneNumber: " + dart.str(this.phoneNumber) + ", photoURL: " + dart.str(this.photoURL) + ", providerId: " + this.providerId + ", uid: " + dart.str(this.uid) + ")";
    }
  };
  (user_info.UserInfo.fromPigeon = function(_data) {
    this[S$0._data$3] = _data;
    ;
  }).prototype = user_info.UserInfo.prototype;
  (user_info.UserInfo.fromJson = function(data) {
    this[S$0._data$3] = new messages$46pigeon.PigeonUserInfo.new({uid: core.String.as(data[S$.$_get]("uid")), email: T$.StringN().as(data[S$.$_get]("email")), displayName: T$.StringN().as(data[S$.$_get]("displayName")), photoUrl: T$.StringN().as(data[S$.$_get]("photoUrl")), phoneNumber: T$.StringN().as(data[S$.$_get]("phoneNumber")), isAnonymous: core.bool.as(data[S$.$_get]("isAnonymous")), isEmailVerified: core.bool.as(data[S$.$_get]("isEmailVerified")), providerId: T$.StringN().as(data[S$.$_get]("providerId")), tenantId: T$.StringN().as(data[S$.$_get]("tenantId")), refreshToken: T$.StringN().as(data[S$.$_get]("refreshToken")), creationTimestamp: T$.intN().as(data[S$.$_get]("creationTimestamp")), lastSignInTimestamp: T$.intN().as(data[S$.$_get]("lastSignInTimestamp"))});
    ;
  }).prototype = user_info.UserInfo.prototype;
  dart.addTypeTests(user_info.UserInfo);
  dart.addTypeCaches(user_info.UserInfo);
  dart.setGetterSignature(user_info.UserInfo, () => ({
    __proto__: dart.getGetters(user_info.UserInfo.__proto__),
    displayName: dart.nullable(core.String),
    email: dart.nullable(core.String),
    phoneNumber: dart.nullable(core.String),
    photoURL: dart.nullable(core.String),
    providerId: core.String,
    uid: dart.nullable(core.String)
  }));
  dart.setLibraryUri(user_info.UserInfo, I[96]);
  dart.setFieldSignature(user_info.UserInfo, () => ({
    __proto__: dart.getFields(user_info.UserInfo.__proto__),
    [S$0._data$3]: dart.finalFieldType(messages$46pigeon.PigeonUserInfo)
  }));
  dart.defineExtensionMethods(user_info.UserInfo, ['toString']);
  user_metadata.UserMetadata = class UserMetadata extends core.Object {
    static ['_#new#tearOff'](_creationTimestamp, _lastSignInTime) {
      return new user_metadata.UserMetadata.new(_creationTimestamp, _lastSignInTime);
    }
    get creationTime() {
      return this[S$0._creationTimestamp] == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S$0._creationTimestamp]), {isUtc: true});
    }
    get lastSignInTime() {
      return this[S$0._lastSignInTime] == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(this[S$0._lastSignInTime]), {isUtc: true});
    }
    toString() {
      return "UserMetadata(creationTime: " + dart.str(this.creationTime) + ", lastSignInTime: " + dart.str(this.lastSignInTime) + ")";
    }
  };
  (user_metadata.UserMetadata.new = function(_creationTimestamp, _lastSignInTime) {
    this[S$0._creationTimestamp] = _creationTimestamp;
    this[S$0._lastSignInTime] = _lastSignInTime;
    ;
  }).prototype = user_metadata.UserMetadata.prototype;
  dart.addTypeTests(user_metadata.UserMetadata);
  dart.addTypeCaches(user_metadata.UserMetadata);
  dart.setGetterSignature(user_metadata.UserMetadata, () => ({
    __proto__: dart.getGetters(user_metadata.UserMetadata.__proto__),
    creationTime: dart.nullable(core.DateTime),
    lastSignInTime: dart.nullable(core.DateTime)
  }));
  dart.setLibraryUri(user_metadata.UserMetadata, I[97]);
  dart.setFieldSignature(user_metadata.UserMetadata, () => ({
    __proto__: dart.getFields(user_metadata.UserMetadata.__proto__),
    [S$0._creationTimestamp]: dart.finalFieldType(dart.nullable(core.int)),
    [S$0._lastSignInTime]: dart.finalFieldType(dart.nullable(core.int))
  }));
  dart.defineExtensionMethods(user_metadata.UserMetadata, ['toString']);
  messages$46pigeon$.PigeonFirebaseOptions = class PigeonFirebaseOptions extends core.Object {
    get apiKey() {
      return this[S$0.apiKey$1];
    }
    set apiKey(value) {
      this[S$0.apiKey$1] = value;
    }
    get appId() {
      return this[S$0.appId$1];
    }
    set appId(value) {
      this[S$0.appId$1] = value;
    }
    get messagingSenderId() {
      return this[S$0.messagingSenderId$1];
    }
    set messagingSenderId(value) {
      this[S$0.messagingSenderId$1] = value;
    }
    get projectId() {
      return this[S$0.projectId$1];
    }
    set projectId(value) {
      this[S$0.projectId$1] = value;
    }
    get authDomain() {
      return this[S$0.authDomain$1];
    }
    set authDomain(value) {
      this[S$0.authDomain$1] = value;
    }
    get databaseURL() {
      return this[S$0.databaseURL$1];
    }
    set databaseURL(value) {
      this[S$0.databaseURL$1] = value;
    }
    get storageBucket() {
      return this[S$0.storageBucket$1];
    }
    set storageBucket(value) {
      this[S$0.storageBucket$1] = value;
    }
    get measurementId() {
      return this[S$0.measurementId$1];
    }
    set measurementId(value) {
      this[S$0.measurementId$1] = value;
    }
    get trackingId() {
      return this[S$0.trackingId$1];
    }
    set trackingId(value) {
      this[S$0.trackingId$1] = value;
    }
    get deepLinkURLScheme() {
      return this[S$0.deepLinkURLScheme$1];
    }
    set deepLinkURLScheme(value) {
      this[S$0.deepLinkURLScheme$1] = value;
    }
    get androidClientId() {
      return this[S$0.androidClientId$1];
    }
    set androidClientId(value) {
      this[S$0.androidClientId$1] = value;
    }
    get iosClientId() {
      return this[S$0.iosClientId$1];
    }
    set iosClientId(value) {
      this[S$0.iosClientId$1] = value;
    }
    get iosBundleId() {
      return this[S$0.iosBundleId$1];
    }
    set iosBundleId(value) {
      this[S$0.iosBundleId$1] = value;
    }
    get appGroupId() {
      return this[S$0.appGroupId$1];
    }
    set appGroupId(value) {
      this[S$0.appGroupId$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
      let appId = opts && 'appId' in opts ? opts.appId : null;
      let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
      let projectId = opts && 'projectId' in opts ? opts.projectId : null;
      let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
      let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
      let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
      let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
      let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
      let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
      let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
      let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
      return new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: apiKey, appId: appId, messagingSenderId: messagingSenderId, projectId: projectId, authDomain: authDomain, databaseURL: databaseURL, storageBucket: storageBucket, measurementId: measurementId, trackingId: trackingId, deepLinkURLScheme: deepLinkURLScheme, androidClientId: androidClientId, iosClientId: iosClientId, iosBundleId: iosBundleId, appGroupId: appGroupId});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.apiKey, this.appId, this.messagingSenderId, this.projectId, this.authDomain, this.databaseURL, this.storageBucket, this.measurementId, this.trackingId, this.deepLinkURLScheme, this.androidClientId, this.iosClientId, this.iosBundleId, this.appGroupId]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: core.String.as(dart.nullCheck(result[S$.$_get](0))), appId: core.String.as(dart.nullCheck(result[S$.$_get](1))), messagingSenderId: core.String.as(dart.nullCheck(result[S$.$_get](2))), projectId: core.String.as(dart.nullCheck(result[S$.$_get](3))), authDomain: T$.StringN().as(result[S$.$_get](4)), databaseURL: T$.StringN().as(result[S$.$_get](5)), storageBucket: T$.StringN().as(result[S$.$_get](6)), measurementId: T$.StringN().as(result[S$.$_get](7)), trackingId: T$.StringN().as(result[S$.$_get](8)), deepLinkURLScheme: T$.StringN().as(result[S$.$_get](9)), androidClientId: T$.StringN().as(result[S$.$_get](10)), iosClientId: T$.StringN().as(result[S$.$_get](11)), iosBundleId: T$.StringN().as(result[S$.$_get](12)), appGroupId: T$.StringN().as(result[S$.$_get](13))});
    }
  };
  (messages$46pigeon$.PigeonFirebaseOptions.new = function(opts) {
    let apiKey = opts && 'apiKey' in opts ? opts.apiKey : null;
    let appId = opts && 'appId' in opts ? opts.appId : null;
    let messagingSenderId = opts && 'messagingSenderId' in opts ? opts.messagingSenderId : null;
    let projectId = opts && 'projectId' in opts ? opts.projectId : null;
    let authDomain = opts && 'authDomain' in opts ? opts.authDomain : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    let storageBucket = opts && 'storageBucket' in opts ? opts.storageBucket : null;
    let measurementId = opts && 'measurementId' in opts ? opts.measurementId : null;
    let trackingId = opts && 'trackingId' in opts ? opts.trackingId : null;
    let deepLinkURLScheme = opts && 'deepLinkURLScheme' in opts ? opts.deepLinkURLScheme : null;
    let androidClientId = opts && 'androidClientId' in opts ? opts.androidClientId : null;
    let iosClientId = opts && 'iosClientId' in opts ? opts.iosClientId : null;
    let iosBundleId = opts && 'iosBundleId' in opts ? opts.iosBundleId : null;
    let appGroupId = opts && 'appGroupId' in opts ? opts.appGroupId : null;
    this[S$0.apiKey$1] = apiKey;
    this[S$0.appId$1] = appId;
    this[S$0.messagingSenderId$1] = messagingSenderId;
    this[S$0.projectId$1] = projectId;
    this[S$0.authDomain$1] = authDomain;
    this[S$0.databaseURL$1] = databaseURL;
    this[S$0.storageBucket$1] = storageBucket;
    this[S$0.measurementId$1] = measurementId;
    this[S$0.trackingId$1] = trackingId;
    this[S$0.deepLinkURLScheme$1] = deepLinkURLScheme;
    this[S$0.androidClientId$1] = androidClientId;
    this[S$0.iosClientId$1] = iosClientId;
    this[S$0.iosBundleId$1] = iosBundleId;
    this[S$0.appGroupId$1] = appGroupId;
    ;
  }).prototype = messages$46pigeon$.PigeonFirebaseOptions.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonFirebaseOptions);
  dart.addTypeCaches(messages$46pigeon$.PigeonFirebaseOptions);
  dart.setMethodSignature(messages$46pigeon$.PigeonFirebaseOptions, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonFirebaseOptions.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonFirebaseOptions, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonFirebaseOptions, I[98]);
  dart.setFieldSignature(messages$46pigeon$.PigeonFirebaseOptions, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonFirebaseOptions.__proto__),
    apiKey: dart.fieldType(core.String),
    appId: dart.fieldType(core.String),
    messagingSenderId: dart.fieldType(core.String),
    projectId: dart.fieldType(core.String),
    authDomain: dart.fieldType(dart.nullable(core.String)),
    databaseURL: dart.fieldType(dart.nullable(core.String)),
    storageBucket: dart.fieldType(dart.nullable(core.String)),
    measurementId: dart.fieldType(dart.nullable(core.String)),
    trackingId: dart.fieldType(dart.nullable(core.String)),
    deepLinkURLScheme: dart.fieldType(dart.nullable(core.String)),
    androidClientId: dart.fieldType(dart.nullable(core.String)),
    iosClientId: dart.fieldType(dart.nullable(core.String)),
    iosBundleId: dart.fieldType(dart.nullable(core.String)),
    appGroupId: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$.PigeonInitializeResponse = class PigeonInitializeResponse extends core.Object {
    get name() {
      return this[S$0.name$2];
    }
    set name(value) {
      this[S$0.name$2] = value;
    }
    get options() {
      return this[S$0.options$1];
    }
    set options(value) {
      this[S$0.options$1] = value;
    }
    get isAutomaticDataCollectionEnabled() {
      return this[S$0.isAutomaticDataCollectionEnabled];
    }
    set isAutomaticDataCollectionEnabled(value) {
      this[S$0.isAutomaticDataCollectionEnabled] = value;
    }
    get pluginConstants() {
      return this[S$0.pluginConstants];
    }
    set pluginConstants(value) {
      this[S$0.pluginConstants] = value;
    }
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let options = opts && 'options' in opts ? opts.options : null;
      let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
      let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
      return new messages$46pigeon$.PigeonInitializeResponse.new({name: name, options: options, isAutomaticDataCollectionEnabled: isAutomaticDataCollectionEnabled, pluginConstants: pluginConstants});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.name, this.options.encode(), this.isAutomaticDataCollectionEnabled, this.pluginConstants]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$.PigeonInitializeResponse.new({name: core.String.as(dart.nullCheck(result[S$.$_get](0))), options: messages$46pigeon$.PigeonFirebaseOptions.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](1)))), isAutomaticDataCollectionEnabled: T$.boolN().as(result[S$.$_get](2)), pluginConstants: dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](3)))[S$.$cast](T$.StringN(), T$.ObjectN())});
    }
  };
  (messages$46pigeon$.PigeonInitializeResponse.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let options = opts && 'options' in opts ? opts.options : null;
    let isAutomaticDataCollectionEnabled = opts && 'isAutomaticDataCollectionEnabled' in opts ? opts.isAutomaticDataCollectionEnabled : null;
    let pluginConstants = opts && 'pluginConstants' in opts ? opts.pluginConstants : null;
    this[S$0.name$2] = name;
    this[S$0.options$1] = options;
    this[S$0.isAutomaticDataCollectionEnabled] = isAutomaticDataCollectionEnabled;
    this[S$0.pluginConstants] = pluginConstants;
    ;
  }).prototype = messages$46pigeon$.PigeonInitializeResponse.prototype;
  dart.addTypeTests(messages$46pigeon$.PigeonInitializeResponse);
  dart.addTypeCaches(messages$46pigeon$.PigeonInitializeResponse);
  dart.setMethodSignature(messages$46pigeon$.PigeonInitializeResponse, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.PigeonInitializeResponse.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$.PigeonInitializeResponse, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$.PigeonInitializeResponse, I[98]);
  dart.setFieldSignature(messages$46pigeon$.PigeonInitializeResponse, () => ({
    __proto__: dart.getFields(messages$46pigeon$.PigeonInitializeResponse.__proto__),
    name: dart.fieldType(core.String),
    options: dart.fieldType(messages$46pigeon$.PigeonFirebaseOptions),
    isAutomaticDataCollectionEnabled: dart.fieldType(dart.nullable(core.bool)),
    pluginConstants: dart.fieldType(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))
  }));
  messages$46pigeon$._FirebaseCoreHostApiCodec = class _FirebaseCoreHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$._FirebaseCoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$.PigeonFirebaseOptions.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonInitializeResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$.PigeonFirebaseOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$.PigeonInitializeResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$._FirebaseCoreHostApiCodec.new = function() {
    messages$46pigeon$._FirebaseCoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$._FirebaseCoreHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$._FirebaseCoreHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$._FirebaseCoreHostApiCodec);
  dart.setLibraryUri(messages$46pigeon$._FirebaseCoreHostApiCodec, I[98]);
  messages$46pigeon$.FirebaseCoreHostApi = class FirebaseCoreHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$.FirebaseCoreHostApi.new({binaryMessenger: binaryMessenger});
    }
    initializeApp(arg_appName, arg_initializeAppRequest) {
      return async.async(messages$46pigeon$.PigeonInitializeResponse, (function* initializeApp() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp", messages$46pigeon$.FirebaseCoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_initializeAppRequest])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonInitializeResponseN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    initializeCore() {
      return async.async(T$.ListOfPigeonInitializeResponseN(), (function* initializeCore() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeCore", messages$46pigeon$.FirebaseCoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(null));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[S$.$_get](0)))[S$.$cast](T$.PigeonInitializeResponseN());
        }
      }).bind(this));
    }
    optionsFromResource() {
      return async.async(messages$46pigeon$.PigeonFirebaseOptions, (function* optionsFromResource() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.optionsFromResource", messages$46pigeon$.FirebaseCoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(null));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonFirebaseOptionsN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$.FirebaseCoreHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$0._binaryMessenger$1] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$.FirebaseCoreHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$.FirebaseCoreHostApi);
  dart.addTypeCaches(messages$46pigeon$.FirebaseCoreHostApi);
  dart.setMethodSignature(messages$46pigeon$.FirebaseCoreHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.FirebaseCoreHostApi.__proto__),
    initializeApp: dart.fnType(async.Future$(messages$46pigeon$.PigeonInitializeResponse), [core.String, messages$46pigeon$.PigeonFirebaseOptions]),
    initializeCore: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon$.PigeonInitializeResponse))), []),
    optionsFromResource: dart.fnType(async.Future$(messages$46pigeon$.PigeonFirebaseOptions), [])
  }));
  dart.setLibraryUri(messages$46pigeon$.FirebaseCoreHostApi, I[98]);
  dart.setFieldSignature(messages$46pigeon$.FirebaseCoreHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$.FirebaseCoreHostApi.__proto__),
    [S$0._binaryMessenger$1]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$.FirebaseCoreHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$.FirebaseCoreHostApi, {
    /*messages$46pigeon$.FirebaseCoreHostApi.codec*/get codec() {
      return C[158] || CT.C158;
    }
  }, false);
  messages$46pigeon$.FirebaseAppHostApi = class FirebaseAppHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$.FirebaseAppHostApi.new({binaryMessenger: binaryMessenger});
    }
    setAutomaticDataCollectionEnabled(arg_appName, arg_enabled) {
      return async.async(dart.void, (function* setAutomaticDataCollectionEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled", messages$46pigeon$.FirebaseAppHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_enabled])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setAutomaticResourceManagementEnabled(arg_appName, arg_enabled) {
      return async.async(dart.void, (function* setAutomaticResourceManagementEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled", messages$46pigeon$.FirebaseAppHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName, arg_enabled])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    delete(arg_appName) {
      return async.async(dart.void, (function* $delete() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.delete", messages$46pigeon$.FirebaseAppHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$1]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_appName])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$.FirebaseAppHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$0._binaryMessenger$1] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$.FirebaseAppHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$.FirebaseAppHostApi);
  dart.addTypeCaches(messages$46pigeon$.FirebaseAppHostApi);
  dart.setMethodSignature(messages$46pigeon$.FirebaseAppHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$.FirebaseAppHostApi.__proto__),
    setAutomaticDataCollectionEnabled: dart.fnType(async.Future$(dart.void), [core.String, core.bool]),
    setAutomaticResourceManagementEnabled: dart.fnType(async.Future$(dart.void), [core.String, core.bool]),
    delete: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setLibraryUri(messages$46pigeon$.FirebaseAppHostApi, I[98]);
  dart.setFieldSignature(messages$46pigeon$.FirebaseAppHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$.FirebaseAppHostApi.__proto__),
    [S$0._binaryMessenger$1]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$.FirebaseAppHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$.FirebaseAppHostApi, {
    /*messages$46pigeon$.FirebaseAppHostApi.codec*/get codec() {
      return C[153] || CT.C153;
    }
  }, false);
  plugin_platform_interface.MockPlatformInterfaceMixin = class MockPlatformInterfaceMixin extends core.Object {};
  (plugin_platform_interface.MockPlatformInterfaceMixin.new = function() {
    ;
  }).prototype = plugin_platform_interface.MockPlatformInterfaceMixin.prototype;
  dart.addTypeTests(plugin_platform_interface.MockPlatformInterfaceMixin);
  dart.addTypeCaches(plugin_platform_interface.MockPlatformInterfaceMixin);
  plugin_platform_interface.MockPlatformInterfaceMixin[dart.implements] = () => [plugin_platform_interface.PlatformInterface];
  dart.setLibraryUri(plugin_platform_interface.MockPlatformInterfaceMixin, I[4]);
  mocks.MockFirebaseApp = class MockFirebaseApp extends core.Object {
    initializeApp(appName, initializeAppRequest) {
      return async.async(messages$46pigeon$.PigeonInitializeResponse, function* initializeApp() {
        return new messages$46pigeon$.PigeonInitializeResponse.new({name: appName, options: new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"}), pluginConstants: new (T$.IdentityMapOfStringN$ObjectN()).new()});
      });
    }
    initializeCore() {
      return async.async(T$.ListOfPigeonInitializeResponseN(), function* initializeCore() {
        return T$.JSArrayOfPigeonInitializeResponseN().of([new messages$46pigeon$.PigeonInitializeResponse.new({name: "[DEFAULT]", options: new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"}), pluginConstants: new (T$.IdentityMapOfStringN$ObjectN()).new()})]);
      });
    }
    optionsFromResource() {
      return async.async(messages$46pigeon$.PigeonFirebaseOptions, function* optionsFromResource() {
        return new messages$46pigeon$.PigeonFirebaseOptions.new({apiKey: "123", projectId: "123", appId: "123", messagingSenderId: "123"});
      });
    }
    static ['_#new#tearOff']() {
      return new mocks.MockFirebaseApp.new();
    }
  };
  (mocks.MockFirebaseApp.new = function() {
    ;
  }).prototype = mocks.MockFirebaseApp.prototype;
  dart.addTypeTests(mocks.MockFirebaseApp);
  dart.addTypeCaches(mocks.MockFirebaseApp);
  mocks.MockFirebaseApp[dart.implements] = () => [test_api.TestFirebaseCoreHostApi];
  dart.setMethodSignature(mocks.MockFirebaseApp, () => ({
    __proto__: dart.getMethods(mocks.MockFirebaseApp.__proto__),
    initializeApp: dart.fnType(async.Future$(messages$46pigeon$.PigeonInitializeResponse), [core.String, messages$46pigeon$.PigeonFirebaseOptions]),
    initializeCore: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon$.PigeonInitializeResponse))), []),
    optionsFromResource: dart.fnType(async.Future$(messages$46pigeon$.PigeonFirebaseOptions), [])
  }));
  dart.setLibraryUri(mocks.MockFirebaseApp, I[99]);
  mocks.setupFirebaseCoreMocks = function setupFirebaseCoreMocks() {
    test_api.TestFirebaseCoreHostApi.setup(new mocks.MockFirebaseApp.new());
  };
  test_api._TestFirebaseCoreHostApiCodec = class _TestFirebaseCoreHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new test_api._TestFirebaseCoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$.PigeonFirebaseOptions.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$.PigeonInitializeResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$.PigeonFirebaseOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$.PigeonInitializeResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (test_api._TestFirebaseCoreHostApiCodec.new = function() {
    test_api._TestFirebaseCoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = test_api._TestFirebaseCoreHostApiCodec.prototype;
  dart.addTypeTests(test_api._TestFirebaseCoreHostApiCodec);
  dart.addTypeCaches(test_api._TestFirebaseCoreHostApiCodec);
  dart.setLibraryUri(test_api._TestFirebaseCoreHostApiCodec, I[100]);
  test_api.TestFirebaseCoreHostApi = class TestFirebaseCoreHostApi extends core.Object {
    static get _testBinaryMessengerBinding() {
      return binding$.TestDefaultBinaryMessengerBinding.instance;
    }
    static setup(api, opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null.", I[101], 69, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null, expected non-null String.", I[101], 73, 18, "arg_appName != null");
            let arg_initializeAppRequest = T$.PigeonFirebaseOptionsN().as(args[S$.$_get](1));
            if (!(arg_initializeAppRequest != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseCoreHostApi.initializeApp was null, expected non-null PigeonFirebaseOptions.", I[101], 77, 18, "arg_initializeAppRequest != null");
            let output = (yield api.initializeApp(dart.nullCheck(arg_appName), dart.nullCheck(arg_initializeAppRequest)));
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.initializeCore", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            let output = (yield api.initializeCore());
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseCoreHostApi.optionsFromResource", test_api.TestFirebaseCoreHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseCoreHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            let output = (yield api.optionsFromResource());
            return T$.JSArrayOfObjectN().of([output]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
    }
  };
  (test_api.TestFirebaseCoreHostApi.new = function() {
    ;
  }).prototype = test_api.TestFirebaseCoreHostApi.prototype;
  dart.addTypeTests(test_api.TestFirebaseCoreHostApi);
  dart.addTypeCaches(test_api.TestFirebaseCoreHostApi);
  dart.setStaticMethodSignature(test_api.TestFirebaseCoreHostApi, () => ['setup']);
  dart.setStaticGetterSignature(test_api.TestFirebaseCoreHostApi, () => ['_testBinaryMessengerBinding']);
  dart.setLibraryUri(test_api.TestFirebaseCoreHostApi, I[100]);
  dart.setStaticFieldSignature(test_api.TestFirebaseCoreHostApi, () => ['codec']);
  dart.defineLazy(test_api.TestFirebaseCoreHostApi, {
    /*test_api.TestFirebaseCoreHostApi.codec*/get codec() {
      return C[159] || CT.C159;
    }
  }, false);
  test_api.TestFirebaseAppHostApi = class TestFirebaseAppHostApi extends core.Object {
    static get _testBinaryMessengerBinding() {
      return binding$.TestDefaultBinaryMessengerBinding.instance;
    }
    static setup(api, opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null.", I[101], 149, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null, expected non-null String.", I[101], 153, 18, "arg_appName != null");
            let arg_enabled = T$.boolN().as(args[S$.$_get](1));
            if (!(arg_enabled != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticDataCollectionEnabled was null, expected non-null bool.", I[101], 156, 18, "arg_enabled != null");
            yield api.setAutomaticDataCollectionEnabled(dart.nullCheck(arg_appName), dart.nullCheck(arg_enabled));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null.", I[101], 176, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null, expected non-null String.", I[101], 180, 18, "arg_appName != null");
            let arg_enabled = T$.boolN().as(args[S$.$_get](1));
            if (!(arg_enabled != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.setAutomaticResourceManagementEnabled was null, expected non-null bool.", I[101], 183, 18, "arg_enabled != null");
            yield api.setAutomaticResourceManagementEnabled(dart.nullCheck(arg_appName), dart.nullCheck(arg_enabled));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
      {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.FirebaseAppHostApi.delete", test_api.TestFirebaseAppHostApi.codec, {binaryMessenger: binaryMessenger});
        if (api == null) {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, null);
        } else {
          dart.nullCheck(test_api.TestFirebaseAppHostApi._testBinaryMessengerBinding).defaultBinaryMessenger.setMockDecodedMessageHandler(T$.ObjectN(), channel, dart.fn(message => async.async(T$.ListOfObjectN(), function*() {
            if (!(message != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.delete was null.", I[101], 202, 18, "message != null");
            let args = dart.nullCheck(T$.ListNOfObjectN().as(message));
            let arg_appName = T$.StringN().as(args[S$.$_get](0));
            if (!(arg_appName != null)) dart.assertFailed("Argument for dev.flutter.pigeon.FirebaseAppHostApi.delete was null, expected non-null String.", I[101], 206, 18, "arg_appName != null");
            yield api.delete(dart.nullCheck(arg_appName));
            return T$.JSArrayOfObjectN().of([]);
          }), T$.ObjectNToFutureOfListOfObjectN()));
        }
      }
    }
  };
  (test_api.TestFirebaseAppHostApi.new = function() {
    ;
  }).prototype = test_api.TestFirebaseAppHostApi.prototype;
  dart.addTypeTests(test_api.TestFirebaseAppHostApi);
  dart.addTypeCaches(test_api.TestFirebaseAppHostApi);
  dart.setStaticMethodSignature(test_api.TestFirebaseAppHostApi, () => ['setup']);
  dart.setStaticGetterSignature(test_api.TestFirebaseAppHostApi, () => ['_testBinaryMessengerBinding']);
  dart.setLibraryUri(test_api.TestFirebaseAppHostApi, I[100]);
  dart.setStaticFieldSignature(test_api.TestFirebaseAppHostApi, () => ['codec']);
  dart.defineLazy(test_api.TestFirebaseAppHostApi, {
    /*test_api.TestFirebaseAppHostApi.codec*/get codec() {
      return C[153] || CT.C153;
    }
  }, false);
  const StatelessElement_SingleChildWidgetElementMixin$36$ = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._NestedElement = class _NestedElement extends StatelessElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedElement.new(widget);
    }
    get widget() {
      return nested.Nested.as(super.widget);
    }
    build() {
      let t142, t142$, t142$0;
      let nestedHook = null;
      let nextNode = (t142$ = (t142 = this[S$._parent], t142 == null ? null : t142.injectedChild), t142$ == null ? this.widget[S$._child$1] : t142$);
      for (let child of this.widget[S$._children][S$0.$reversed]) {
        nextNode = nestedHook = new nested._NestedHook.new({owner: this, wrappedWidget: child, injectedChild: nextNode});
      }
      if (nestedHook != null) {
        for (let node of this.nodes) {
          t142$0 = node;
          (() => {
            t142$0.wrappedChild = dart.nullCheck(nestedHook).wrappedWidget;
            t142$0.injectedChild = nestedHook.injectedChild;
            return t142$0;
          })();
          let next = nestedHook.injectedChild;
          if (nested._NestedHook.is(next)) {
            nestedHook = next;
          } else {
            break;
          }
        }
      }
      return dart.nullCheck(nextNode);
    }
  };
  (nested._NestedElement.new = function(widget) {
    this.nodes = T$.LinkedHashSetOf_NestedHookElement().new();
    nested._NestedElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedElement.prototype;
  dart.addTypeTests(nested._NestedElement);
  dart.addTypeCaches(nested._NestedElement);
  dart.setGetterSignature(nested._NestedElement, () => ({
    __proto__: dart.getGetters(nested._NestedElement.__proto__),
    widget: nested.Nested
  }));
  dart.setLibraryUri(nested._NestedElement, I[26]);
  dart.setFieldSignature(nested._NestedElement, () => ({
    __proto__: dart.getFields(nested._NestedElement.__proto__),
    nodes: dart.finalFieldType(core.Set$(nested._NestedHookElement))
  }));
  nested._NestedHook = class _NestedHook extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
      let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
      let owner = opts && 'owner' in opts ? opts.owner : null;
      return new nested._NestedHook.new({injectedChild: injectedChild, wrappedWidget: wrappedWidget, owner: owner});
    }
    createElement() {
      return new nested._NestedHookElement.new(this);
    }
    build(context) {
      return dart.throw(new core.StateError.new("handled internally"));
    }
  };
  (nested._NestedHook.new = function(opts) {
    let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
    let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
    let owner = opts && 'owner' in opts ? opts.owner : null;
    this.injectedChild = injectedChild;
    this.wrappedWidget = wrappedWidget;
    this.owner = owner;
    nested._NestedHook.__proto__.new.call(this);
    ;
  }).prototype = nested._NestedHook.prototype;
  dart.addTypeTests(nested._NestedHook);
  dart.addTypeCaches(nested._NestedHook);
  dart.setMethodSignature(nested._NestedHook, () => ({
    __proto__: dart.getMethods(nested._NestedHook.__proto__),
    createElement: dart.fnType(nested._NestedHookElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(nested._NestedHook, I[26]);
  dart.setFieldSignature(nested._NestedHook, () => ({
    __proto__: dart.getFields(nested._NestedHook.__proto__),
    wrappedWidget: dart.finalFieldType(nested.SingleChildWidget),
    injectedChild: dart.finalFieldType(dart.nullable(framework.Widget)),
    owner: dart.finalFieldType(nested._NestedElement)
  }));
  nested._NestedHookElement = class _NestedHookElement extends framework.StatelessElement {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedHookElement.new(widget);
    }
    get widget() {
      return nested._NestedHook.as(super.widget);
    }
    get injectedChild() {
      return this[S$0._injectedChild];
    }
    set injectedChild(value) {
      let previous = this[S$0._injectedChild];
      if (nested._NestedHook.is(value) && nested._NestedHook.is(previous) && framework.Widget.canUpdate(value.wrappedWidget, previous.wrappedWidget)) {
        return;
      }
      if (!dart.equals(previous, value)) {
        this[S$0._injectedChild] = value;
        this.visitChildren(dart.fn(e => e.markNeedsBuild(), T$.ElementTovoid()));
      }
    }
    get wrappedChild() {
      return this[S$0._wrappedChild];
    }
    set wrappedChild(value) {
      if (!dart.equals(this[S$0._wrappedChild], value)) {
        this[S$0._wrappedChild] = value;
        this.markNeedsBuild();
      }
    }
    mount(parent, newSlot) {
      this.widget.owner.nodes.add(this);
      this[S$0._wrappedChild] = this.widget.wrappedWidget;
      this[S$0._injectedChild] = this.widget.injectedChild;
      super.mount(parent, newSlot);
    }
    unmount() {
      this.widget.owner.nodes.remove(this);
      super.unmount();
    }
    build() {
      return dart.nullCheck(this.wrappedChild);
    }
  };
  (nested._NestedHookElement.new = function(widget) {
    this[S$0._injectedChild] = null;
    this[S$0._wrappedChild] = null;
    nested._NestedHookElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedHookElement.prototype;
  dart.addTypeTests(nested._NestedHookElement);
  dart.addTypeCaches(nested._NestedHookElement);
  dart.setMethodSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getMethods(nested._NestedHookElement.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setGetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getGetters(nested._NestedHookElement.__proto__),
    widget: nested._NestedHook,
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setSetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getSetters(nested._NestedHookElement.__proto__),
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setLibraryUri(nested._NestedHookElement, I[26]);
  dart.setFieldSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getFields(nested._NestedHookElement.__proto__),
    [S$0._injectedChild]: dart.fieldType(dart.nullable(framework.Widget)),
    [S$0._wrappedChild]: dart.fieldType(dart.nullable(nested.SingleChildWidget))
  }));
  nested.SingleChildWidget = class SingleChildWidget extends core.Object {};
  (nested.SingleChildWidget.new = function() {
    ;
  }).prototype = nested.SingleChildWidget.prototype;
  dart.addTypeTests(nested.SingleChildWidget);
  dart.addTypeCaches(nested.SingleChildWidget);
  nested.SingleChildWidget[dart.implements] = () => [framework.Widget];
  dart.setLibraryUri(nested.SingleChildWidget, I[26]);
  const StatefulElement_SingleChildWidgetElementMixin$36 = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatefulElement = class SingleChildStatefulElement extends StatefulElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatefulElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidget.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateOfSingleChildStatefulWidget().as(super.state);
    }
    build() {
      if (this[S$._parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[S$._parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested.SingleChildStatefulElement.new = function(widget) {
    nested.SingleChildStatefulElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatefulElement.prototype;
  dart.addTypeTests(nested.SingleChildStatefulElement);
  dart.addTypeCaches(nested.SingleChildStatefulElement);
  dart.setGetterSignature(nested.SingleChildStatefulElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatefulElement.__proto__),
    widget: nested.SingleChildStatefulWidget,
    state: nested.SingleChildState$(nested.SingleChildStatefulWidget)
  }));
  dart.setLibraryUri(nested.SingleChildStatefulElement, I[26]);
  nested.SingleChildBuilder = class SingleChildBuilder extends nested.SingleChildStatelessWidget {
    get builder() {
      return this[S$0.builder$8];
    }
    set builder(value) {
      super.builder = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.SingleChildBuilder.new({key: key, builder: builder, child: child});
    }
    buildWithChild(context, child) {
      let t143, t142;
      t142 = context;
      t143 = child;
      return this.builder(t142, t143);
    }
  };
  (nested.SingleChildBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[S$0.builder$8] = builder;
    nested.SingleChildBuilder.__proto__.new.call(this, {key: key, child: child});
    ;
  }).prototype = nested.SingleChildBuilder.prototype;
  dart.addTypeTests(nested.SingleChildBuilder);
  dart.addTypeCaches(nested.SingleChildBuilder);
  dart.setMethodSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getMethods(nested.SingleChildBuilder.__proto__),
    buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
  }));
  dart.setLibraryUri(nested.SingleChildBuilder, I[26]);
  dart.setFieldSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getFields(nested.SingleChildBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))
  }));
  nested.SingleChildStatelessWidgetMixin = class SingleChildStatelessWidgetMixin extends core.Object {};
  nested.SingleChildStatelessWidgetMixin[dart.mixinOn] = Object => class SingleChildStatelessWidgetMixin extends Object {
    get [S$._child$1]() {
      return this.child;
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
    build(context) {
      return this.buildWithChild(context, this.child);
    }
  };
  (nested.SingleChildStatelessWidgetMixin[dart.mixinNew] = function() {
  }).prototype = nested.SingleChildStatelessWidgetMixin.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatelessWidgetMixin);
  nested.SingleChildStatelessWidgetMixin[dart.implements] = () => [framework.StatelessWidget, nested.SingleChildStatelessWidget, core.Object];
  dart.setMethodSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidgetMixin.__proto__),
    createElement: dart.fnType(nested.SingleChildStatelessElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessWidgetMixin.__proto__),
    [S$._child$1]: dart.nullable(framework.Widget)
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidgetMixin, I[26]);
  nested.SingleChildStatefulWidgetMixin = class SingleChildStatefulWidgetMixin extends framework.StatefulWidget {};
  nested.SingleChildStatefulWidgetMixin[dart.mixinOn] = StatefulWidget => class SingleChildStatefulWidgetMixin extends StatefulWidget {
    createElement() {
      return new nested._SingleChildStatefulMixinElement.new(this);
    }
  };
  dart.addTypeTests(nested.SingleChildStatefulWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatefulWidgetMixin);
  nested.SingleChildStatefulWidgetMixin[dart.implements] = () => [nested.SingleChildWidget, framework.StatefulWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidgetMixin.__proto__),
    createElement: dart.fnType(nested._SingleChildStatefulMixinElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidgetMixin, I[26]);
  const _is_SingleChildStateMixin_default = Symbol('_is_SingleChildStateMixin_default');
  nested.SingleChildStateMixin$ = dart.generic(T => {
    class SingleChildStateMixin extends framework.State$(T) {}
    SingleChildStateMixin[dart.mixinOn] = State => class SingleChildStateMixin extends State {
      build(context) {
        return this.buildWithChild(context, dart.nullCheck(nested.SingleChildStatefulWidgetMixin.as(this.widget).child));
      }
    };
    dart.addTypeTests(SingleChildStateMixin);
    SingleChildStateMixin.prototype[_is_SingleChildStateMixin_default] = true;
    dart.addTypeCaches(SingleChildStateMixin);
    SingleChildStateMixin[dart.implements] = () => [framework.State$(T)];
    dart.setMethodSignature(SingleChildStateMixin, () => ({
      __proto__: dart.getMethods(SingleChildStateMixin.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildStateMixin, I[26]);
    return SingleChildStateMixin;
  });
  nested.SingleChildStateMixin = nested.SingleChildStateMixin$();
  dart.addTypeTests(nested.SingleChildStateMixin, _is_SingleChildStateMixin_default);
  const StatefulElement_SingleChildWidgetElementMixin$36$ = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._SingleChildStatefulMixinElement = class _SingleChildStatefulMixinElement extends StatefulElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._SingleChildStatefulMixinElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidgetMixin.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateMixinOfStatefulWidget().as(super.state);
    }
    build() {
      if (this[S$._parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[S$._parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested._SingleChildStatefulMixinElement.new = function(widget) {
    nested._SingleChildStatefulMixinElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._SingleChildStatefulMixinElement.prototype;
  dart.addTypeTests(nested._SingleChildStatefulMixinElement);
  dart.addTypeCaches(nested._SingleChildStatefulMixinElement);
  dart.setGetterSignature(nested._SingleChildStatefulMixinElement, () => ({
    __proto__: dart.getGetters(nested._SingleChildStatefulMixinElement.__proto__),
    widget: nested.SingleChildStatefulWidgetMixin,
    state: nested.SingleChildStateMixin$(framework.StatefulWidget)
  }));
  dart.setLibraryUri(nested._SingleChildStatefulMixinElement, I[26]);
  nested.SingleChildInheritedElementMixin = class SingleChildInheritedElementMixin extends core.Object {};
  nested.SingleChildInheritedElementMixin[dart.mixinOn] = _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin => class SingleChildInheritedElementMixin extends _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin {
    build() {
      if (this[S$._parent] != null) {
        return dart.nullCheck(dart.nullCheck(this[S$._parent]).injectedChild);
      }
      return super.build();
    }
  };
  dart.addTypeTests(nested.SingleChildInheritedElementMixin);
  dart.addTypeCaches(nested.SingleChildInheritedElementMixin);
  nested.SingleChildInheritedElementMixin[dart.implements] = () => [nested.SingleChildWidgetElementMixin, framework.InheritedElement];
  dart.setMethodSignature(nested.SingleChildInheritedElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildInheritedElementMixin.__proto__),
    build: dart.fnType(framework.Widget, [])
  }));
  dart.setLibraryUri(nested.SingleChildInheritedElementMixin, I[26]);
  cloud_firestore.AggregateQuery = class AggregateQuery extends core.Object {
    get query() {
      return this[S$0.query];
    }
    set query(value) {
      super.query = value;
    }
    static ['_#_#tearOff'](_delegate, query) {
      return new cloud_firestore.AggregateQuery.__(_delegate, query);
    }
    get(opts) {
      let source = opts && 'source' in opts ? opts.source : C[160] || CT.C160;
      return async.async(cloud_firestore.AggregateQuerySnapshot, (function* get() {
        return new cloud_firestore.AggregateQuerySnapshot.__(yield this[S$0._delegate$7].get({source: source}), this.query);
      }).bind(this));
    }
    count() {
      return new cloud_firestore.AggregateQuery.__(this[S$0._delegate$7].count(), this.query);
    }
  };
  (cloud_firestore.AggregateQuery.__ = function(_delegate, query) {
    this[S$0._delegate$7] = _delegate;
    this[S$0.query] = query;
    platform_interface_aggregate_query.AggregateQueryPlatform.verify(this[S$0._delegate$7]);
  }).prototype = cloud_firestore.AggregateQuery.prototype;
  dart.addTypeTests(cloud_firestore.AggregateQuery);
  dart.addTypeCaches(cloud_firestore.AggregateQuery);
  dart.setMethodSignature(cloud_firestore.AggregateQuery, () => ({
    __proto__: dart.getMethods(cloud_firestore.AggregateQuery.__proto__),
    get: dart.fnType(async.Future$(cloud_firestore.AggregateQuerySnapshot), [], {source: messages$46pigeon$0.AggregateSource}, {}),
    count: dart.fnType(cloud_firestore.AggregateQuery, [])
  }));
  dart.setLibraryUri(cloud_firestore.AggregateQuery, I[102]);
  dart.setFieldSignature(cloud_firestore.AggregateQuery, () => ({
    __proto__: dart.getFields(cloud_firestore.AggregateQuery.__proto__),
    query: dart.finalFieldType(cloud_firestore.Query$(dart.nullable(core.Object))),
    [S$0._delegate$7]: dart.finalFieldType(platform_interface_aggregate_query.AggregateQueryPlatform)
  }));
  cloud_firestore.AggregateQuerySnapshot = class AggregateQuerySnapshot extends core.Object {
    get query() {
      return this[S$0.query$1];
    }
    set query(value) {
      super.query = value;
    }
    static ['_#_#tearOff'](_delegate, query) {
      return new cloud_firestore.AggregateQuerySnapshot.__(_delegate, query);
    }
    get count() {
      return this[S$0._delegate$7].count;
    }
    getSum(field) {
      return this[S$0._delegate$7].getSum(field);
    }
    getAverage(field) {
      return this[S$0._delegate$7].getAverage(field);
    }
  };
  (cloud_firestore.AggregateQuerySnapshot.__ = function(_delegate, query) {
    this[S$0._delegate$7] = _delegate;
    this[S$0.query$1] = query;
    platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.verifyExtends(this[S$0._delegate$7]);
  }).prototype = cloud_firestore.AggregateQuerySnapshot.prototype;
  dart.addTypeTests(cloud_firestore.AggregateQuerySnapshot);
  dart.addTypeCaches(cloud_firestore.AggregateQuerySnapshot);
  dart.setMethodSignature(cloud_firestore.AggregateQuerySnapshot, () => ({
    __proto__: dart.getMethods(cloud_firestore.AggregateQuerySnapshot.__proto__),
    getSum: dart.fnType(dart.nullable(core.double), [core.String]),
    getAverage: dart.fnType(dart.nullable(core.double), [core.String])
  }));
  dart.setGetterSignature(cloud_firestore.AggregateQuerySnapshot, () => ({
    __proto__: dart.getGetters(cloud_firestore.AggregateQuerySnapshot.__proto__),
    count: dart.nullable(core.int)
  }));
  dart.setLibraryUri(cloud_firestore.AggregateQuerySnapshot, I[102]);
  dart.setFieldSignature(cloud_firestore.AggregateQuerySnapshot, () => ({
    __proto__: dart.getFields(cloud_firestore.AggregateQuerySnapshot.__proto__),
    [S$0._delegate$7]: dart.finalFieldType(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform),
    query: dart.finalFieldType(cloud_firestore.Query$(dart.nullable(core.Object)))
  }));
  const _is_CollectionReference_default$ = Symbol('_is_CollectionReference_default');
  cloud_firestore.CollectionReference$ = dart.generic(T => {
    class CollectionReference extends core.Object {}
    (CollectionReference.new = function() {
      ;
    }).prototype = CollectionReference.prototype;
    dart.addTypeTests(CollectionReference);
    CollectionReference.prototype[_is_CollectionReference_default$] = true;
    dart.addTypeCaches(CollectionReference);
    CollectionReference[dart.implements] = () => [cloud_firestore.Query$(T)];
    dart.setLibraryUri(CollectionReference, I[102]);
    return CollectionReference;
  });
  cloud_firestore.CollectionReference = cloud_firestore.CollectionReference$();
  dart.addTypeTests(cloud_firestore.CollectionReference, _is_CollectionReference_default$);
  cloud_firestore._JsonQuery = class _JsonQuery extends core.Object {
    get [S$0._delegate$7]() {
      return this[S$0._delegate$8];
    }
    set [S$0._delegate$7](value) {
      super[S$0._delegate$7] = value;
    }
    static ['_#new#tearOff'](firestore, _delegate) {
      return new cloud_firestore._JsonQuery.new(firestore, _delegate);
    }
    get parameters() {
      return this[S$0._delegate$7].parameters;
    }
    [S$0._hasStartCursor]() {
      return this.parameters[S$.$_get]("startAt") != null || this.parameters[S$.$_get]("startAfter") != null;
    }
    [S$0._hasEndCursor]() {
      return this.parameters[S$.$_get]("endAt") != null || this.parameters[S$.$_get]("endBefore") != null;
    }
    [S$0._isInequality](operator) {
      return operator === "<" || operator === "<=" || operator === ">" || operator === ">=" || operator === "!=";
    }
    isNotIn(operator) {
      return operator === "not-in";
    }
    [S$0._assertQueryCursorSnapshot](documentSnapshot) {
      if (!documentSnapshot.exists) dart.assertFailed("a document snapshot must exist to be used within a query", I[104], 291, 7, "documentSnapshot.exists");
      let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      let values = [];
      for (let order of orders) {
        let field = order[S$.$_get](0);
        if (!dart.equals(field, field_path.FieldPath.documentId)) {
          try {
            let codecValue = cloud_firestore._CodecUtility.valueEncode(documentSnapshot.get(core.Object.as(field)));
            values[S$.$add](codecValue);
          } catch (e) {
            let ex = dart.getThrown(e);
            if (core.StateError.is(ex)) {
              dart.throw("You are trying to start or end a query using a document for which the field '" + dart.str(field) + "' (used as the orderBy) does not exist.");
            } else
              throw e;
          }
        }
      }
      if (orders[S$.$isNotEmpty]) {
        let lastOrder = orders[S$0.$last];
        if (!dart.equals(lastOrder[S$.$_get](0), field_path.FieldPath.documentId)) {
          orders[S$.$add]([field_path.FieldPath.documentId, lastOrder[S$.$_get](1)]);
        }
      } else {
        orders[S$.$add]([field_path.FieldPath.documentId, false]);
      }
      if (this[S$0._delegate$7].isCollectionGroupQuery) {
        values[S$.$add](documentSnapshot.reference.path);
      } else {
        values[S$.$add](documentSnapshot.id);
      }
      return new (T$.IdentityMapOfString$dynamic()).from(["orders", orders, "values", values]);
    }
    [S$0._assertQueryCursorValues](fields) {
      let orders = T$.ListOfListOfObjectN().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      if (!(fields[S$.$length] <= orders[S$.$length])) dart.assertFailed("Too many arguments provided. " + "The number of arguments must be less than or equal to the number of orderBy() clauses.", I[104], 343, 7, "fields.length <= orders.length");
      return fields;
    }
    [S$0._assertValidFieldType](field) {
      if (!(typeof field == 'string' || field_path.FieldPath.is(field) || field[S$0.$_equals](field_path.FieldPath.documentId) || cloud_firestore.Filter.is(field))) dart.assertFailed("Supported [field] types are [String], [FieldPath], and [Filter].", I[104], 354, 7, "field is String ||\n          field is FieldPath ||\n          field == FieldPath.documentId ||\n          field is Filter");
    }
    endAtDocument(documentSnapshot) {
      let results = this[S$0._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].endAtDocument(core.List.as(results[S$.$_get]("orders")), core.List.as(results[S$.$_get]("values"))));
    }
    endAt(values) {
      this[S$0._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].endAt(values[S$.$toList]()));
    }
    endBeforeDocument(documentSnapshot) {
      let results = this[S$0._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].endBeforeDocument(core.Iterable.as(results[S$.$_get]("orders")), core.Iterable.as(results[S$.$_get]("values"))));
    }
    endBefore(values) {
      this[S$0._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].endBefore(values[S$.$toList]()));
    }
    get(options = null) {
      return async.async(T$.QuerySnapshotOfMapOfString$dynamic(), (function* get() {
        let t144;
        let snapshotDelegate = (yield this[S$0._delegate$7].get((t144 = options, t144 == null ? C[52] || CT.C52 : t144)));
        return new cloud_firestore._JsonQuerySnapshot.new(this.firestore, snapshotDelegate);
      }).bind(this));
    }
    limit(limit) {
      if (!(limit > 0)) dart.assertFailed("limit must be a positive number greater than 0", I[104], 444, 12, "limit > 0");
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].limit(limit));
    }
    limitToLast(limit) {
      if (!(limit > 0)) dart.assertFailed("limit must be a positive number greater than 0", I[104], 454, 12, "limit > 0");
      let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      if (!orders[S$.$isNotEmpty]) dart.assertFailed("limitToLast() queries require specifying at least one orderBy() clause", I[104], 457, 7, "orders.isNotEmpty");
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].limitToLast(limit));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      return this[S$0._delegate$7].snapshots({includeMetadataChanges: includeMetadataChanges}).map(T$.QuerySnapshotOfMapOfString$dynamic(), dart.fn(item => new cloud_firestore._JsonQuerySnapshot.new(this.firestore, item), T$.QuerySnapshotPlatformTo_JsonQuerySnapshot()));
    }
    orderBy(field, opts) {
      let descending = opts && 'descending' in opts ? opts.descending : false;
      this[S$0._assertValidFieldType](field);
      if (!!this[S$0._hasStartCursor]()) dart.assertFailed("Invalid query. " + "You must not call startAt(), startAtDocument(), " + "startAfter() or startAfterDocument() before calling orderBy()", I[104], 491, 7, "!_hasStartCursor()");
      if (!!this[S$0._hasEndCursor]()) dart.assertFailed("Invalid query. " + "You must not call endAt(), endAtDocument(), " + "endBefore() or endBeforeDocument() before calling orderBy()", I[104], 497, 7, "!_hasEndCursor()");
      let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
      if (!orders[S$.$where](dart.fn(item => field[S$0.$_equals](item[S$.$_get](0)), T$.ListTobool()))[S$.$isEmpty]) dart.assertFailed("OrderBy field \"" + dart.str(field) + "\" already exists in this query", I[104], 507, 7, "orders.where((List<dynamic> item) => field == item[0]).isEmpty");
      if (field[S$0.$_equals](field_path.FieldPath.documentId)) {
        orders[S$.$add]([field, descending]);
      } else {
        let fieldPath = typeof field == 'string' ? new field_path.FieldPath.fromString(field) : field_path.FieldPath.as(field);
        orders[S$.$add]([fieldPath, descending]);
      }
      let conditions = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("where")));
      if (conditions[S$.$isNotEmpty]) {
        for (let condition of conditions) {
          let conditionField = dart.dsend(condition, '_get', [0]);
          let operator = core.String.as(dart.dsend(condition, '_get', [1]));
          if (this[S$0._isInequality](operator) || this.isNotIn(operator)) {
            if (!dart.equals(conditionField, orders[S$.$_get](0)[S$.$_get](0))) dart.assertFailed("The initial orderBy() field \"" + dart.str(orders) + "[0][0]\" has to be the same as " + "the where() field parameter \"" + dart.str(conditionField) + "\" when an inequality operator is invoked.", I[104], 531, 13, "conditionField == orders[0][0]");
          }
          for (let order of orders) {
            let orderField = dart.dsend(order, '_get', [0]);
            if (operator === "==") {
              if (!!dart.equals(conditionField, orderField)) dart.assertFailed("The '" + dart.str(orderField) + "' cannot be the same as your where() field parameter '" + dart.str(conditionField) + "'.", I[104], 544, 15, "conditionField != orderField");
            }
            if (dart.equals(conditionField, field_path.FieldPath.documentId)) {
              if (!dart.equals(orderField, field_path.FieldPath.documentId)) dart.assertFailed("'[FieldPath.documentId]' cannot be used in conjunction with a different orderBy() parameter.", I[104], 551, 15, "orderField == FieldPath.documentId");
            }
          }
        }
      }
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].orderBy(orders));
    }
    startAfterDocument(documentSnapshot) {
      let results = this[S$0._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].startAfterDocument(core.List.as(results[S$.$_get]("orders")), core.List.as(results[S$.$_get]("values"))));
    }
    startAfter(values) {
      this[S$0._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].startAfter(values[S$.$toList]()));
    }
    startAtDocument(documentSnapshot) {
      let results = this[S$0._assertQueryCursorSnapshot](documentSnapshot);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].startAtDocument(core.Iterable.as(results[S$.$_get]("orders")), core.Iterable.as(results[S$.$_get]("values"))));
    }
    startAt(values) {
      this[S$0._assertQueryCursorValues](values);
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].startAt(values[S$.$toList]()));
    }
    where(fieldOrFilter, opts) {
      let isEqualTo = opts && 'isEqualTo' in opts ? opts.isEqualTo : C[10] || CT.C10;
      let isNotEqualTo = opts && 'isNotEqualTo' in opts ? opts.isNotEqualTo : C[10] || CT.C10;
      let isLessThan = opts && 'isLessThan' in opts ? opts.isLessThan : null;
      let isLessThanOrEqualTo = opts && 'isLessThanOrEqualTo' in opts ? opts.isLessThanOrEqualTo : null;
      let isGreaterThan = opts && 'isGreaterThan' in opts ? opts.isGreaterThan : null;
      let isGreaterThanOrEqualTo = opts && 'isGreaterThanOrEqualTo' in opts ? opts.isGreaterThanOrEqualTo : null;
      let arrayContains = opts && 'arrayContains' in opts ? opts.arrayContains : null;
      let arrayContainsAny = opts && 'arrayContainsAny' in opts ? opts.arrayContainsAny : null;
      let whereIn = opts && 'whereIn' in opts ? opts.whereIn : null;
      let whereNotIn = opts && 'whereNotIn' in opts ? opts.whereNotIn : null;
      let isNull = opts && 'isNull' in opts ? opts.isNull : null;
      this[S$0._assertValidFieldType](fieldOrFilter);
      if (cloud_firestore.Filter.is(fieldOrFilter)) {
        if (!(isEqualTo === cloud_firestore.notSetQueryParam && isNotEqualTo === cloud_firestore.notSetQueryParam && isLessThan == null && isLessThanOrEqualTo == null && isGreaterThan == null && isGreaterThanOrEqualTo == null && arrayContains == null && arrayContainsAny == null && whereIn == null && whereNotIn == null && isNull == null)) dart.assertFailed("Conditions cannot be used with a Filter. Use a single Filter instead, or use a String or a FieldPath as the first parameter.", I[104], 653, 9, "identical(isEqualTo, notSetQueryParam) &&\n            identical(isNotEqualTo, notSetQueryParam) &&\n            isLessThan == null &&\n            isLessThanOrEqualTo == null &&\n            isGreaterThan == null &&\n            isGreaterThanOrEqualTo == null &&\n            arrayContains == null &&\n            arrayContainsAny == null &&\n            whereIn == null &&\n            whereNotIn == null &&\n            isNull == null");
        return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].whereFilter(fieldOrFilter));
      }
      let field = fieldOrFilter;
      let equality = C[161] || CT.C161;
      let conditions = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("where")));
      function addCondition(field, operator, value) {
        let condition = null;
        let codecValue = cloud_firestore._CodecUtility.valueEncode(value);
        if (dart.equals(field, field_path.FieldPath.documentId)) {
          condition = [field, operator, codecValue];
        } else {
          let fieldPath = typeof field == 'string' ? new field_path.FieldPath.fromString(field) : field_path.FieldPath.as(field);
          condition = [fieldPath, operator, codecValue];
        }
        if (!conditions[S$.$where](dart.fn(item => equality.equals(condition, item), T$.ListTobool()))[S$.$isEmpty]) dart.assertFailed("Condition " + dart.str(condition) + " already exists in this query.", I[104], 689, 9, "conditions\n            .where((List<dynamic> item) => equality.equals(condition, item))\n            .isEmpty");
        conditions[S$.$add](condition);
      }
      dart.fn(addCondition, T$.dynamicAndStringAnddynamicTovoid());
      if (isEqualTo !== cloud_firestore.notSetQueryParam) {
        addCondition(field, "==", isEqualTo);
      }
      if (isNotEqualTo !== cloud_firestore.notSetQueryParam) {
        addCondition(field, "!=", isNotEqualTo);
      }
      if (isLessThan != null) addCondition(field, "<", isLessThan);
      if (isLessThanOrEqualTo != null) {
        addCondition(field, "<=", isLessThanOrEqualTo);
      }
      if (isGreaterThan != null) addCondition(field, ">", isGreaterThan);
      if (isGreaterThanOrEqualTo != null) {
        addCondition(field, ">=", isGreaterThanOrEqualTo);
      }
      if (arrayContains != null) {
        addCondition(field, "array-contains", arrayContains);
      }
      if (arrayContainsAny != null) {
        addCondition(field, "array-contains-any", arrayContainsAny);
      }
      if (whereIn != null) addCondition(field, "in", whereIn);
      if (whereNotIn != null) addCondition(field, "not-in", whereNotIn);
      if (isNull != null) {
        if (isNull === true) {
          addCondition(field, "==", null);
        } else {
          addCondition(field, "!=", null);
        }
      }
      let hasInequality = null;
      let hasIn = false;
      let hasNotIn = false;
      let hasNotEqualTo = false;
      let hasNotEqualToOperatorAndNotDocumentIdField = false;
      let hasArrayContains = false;
      let hasArrayContainsAny = false;
      let hasDocumentIdField = false;
      for (let condition of conditions) {
        let field = dart.dsend(condition, '_get', [0]);
        let operator = core.String.as(dart.dsend(condition, '_get', [1]));
        let value = dart.dsend(condition, '_get', [2]);
        let orders = T$.ListOfList().from(core.Iterable.as(this.parameters[S$.$_get]("orderBy")));
        if (this[S$0._isInequality](operator) && orders[S$.$isNotEmpty]) {
          if (!dart.equals(field, orders[S$.$_get](0)[S$.$_get](0))) dart.assertFailed("The initial orderBy() field '" + dart.str(orders) + "[0][0]' has to be the same as " + "the where() field parameter '" + dart.str(field) + "' when an inequality operator is invoked.", I[104], 748, 11, "field == orders[0][0]");
        }
        if (!dart.equals(field, field_path.FieldPath.documentId) && hasDocumentIdField) {
          if (!(operator !== "!=")) dart.assertFailed("You cannot use '!=' filters whilst using a FieldPath.documentId field in another filter.", I[104], 756, 11, "operator != '!='");
        }
        if (dart.equals(field, field_path.FieldPath.documentId)) {
          if (!!hasNotEqualToOperatorAndNotDocumentIdField) dart.assertFailed("You cannot use FieldPath.documentId field whilst using a '!=' filter on a different field.", I[104], 763, 11, "!hasNotEqualToOperatorAndNotDocumentIdField");
          hasDocumentIdField = true;
        }
        if (operator === "in" || operator === "array-contains-any" || this.isNotIn(operator)) {
          if (!core.Iterable.is(value)) dart.assertFailed("A non-empty [Iterable] is required for '" + operator + "' filters.", I[104], 773, 11, "value is Iterable");
          if (!(operator === "in" || operator === "array-contains-any" || core.Iterable.as(value)[S$.$length] <= 10)) dart.assertFailed("'" + operator + "' filters support a maximum of 10 elements in the value [Iterable].", I[104], 778, 11, "(operator == 'in' || operator == 'array-contains-any') ||\n              (value as Iterable).length <= 10");
          if (!(operator !== "in" && operator !== "array-contains-any" || core.Iterable.as(value)[S$.$length] <= 30)) dart.assertFailed("'" + operator + "' filters support a maximum of 30 elements in the value [Iterable].", I[104], 784, 11, "(operator != 'in' && operator != 'array-contains-any') ||\n              (value as Iterable).length <= 30");
          if (!core.Iterable.as(value)[S$.$isNotEmpty]) dart.assertFailed("'" + operator + "' filters require a non-empty [Iterable].", I[104], 789, 11, "(value as Iterable).isNotEmpty");
          if (!core.Iterable.as(value)[S$.$where](dart.fn(value => value == null, T$.dynamicTobool()))[S$.$isEmpty]) dart.assertFailed("'" + operator + "' filters cannot contain 'null' in the [Iterable].", I[104], 793, 11, "(value as Iterable).where((value) => value == null).isEmpty");
        }
        if (operator === "!=") {
          if (!!hasNotEqualTo) dart.assertFailed("You cannot use '!=' filters more than once.", I[104], 799, 16, "!hasNotEqualTo");
          if (!!hasNotIn) dart.assertFailed("You cannot use '!=' filters with 'not-in' filters.", I[104], 800, 16, "!hasNotIn");
          hasNotEqualTo = true;
          if (!dart.equals(field, field_path.FieldPath.documentId)) {
            hasNotEqualToOperatorAndNotDocumentIdField = true;
          }
        }
        if (this.isNotIn(operator)) {
          if (!!hasNotIn) dart.assertFailed("You cannot use 'not-in' filters more than once.", I[104], 810, 16, "!hasNotIn");
          if (!!hasNotEqualTo) dart.assertFailed("You cannot use 'not-in' filters with '!=' filters.", I[104], 812, 11, "!hasNotEqualTo");
        }
        if (operator === "in") {
          if (!!hasIn) dart.assertFailed("You cannot use 'whereIn' filters more than once.", I[104], 818, 16, "!hasIn");
          hasIn = true;
        }
        if (operator === "array-contains") {
          if (!!hasArrayContains) dart.assertFailed("You cannot use 'array-contains' filters more than once.", I[104], 824, 11, "!hasArrayContains");
          hasArrayContains = true;
        }
        if (operator === "array-contains-any") {
          if (!!hasArrayContainsAny) dart.assertFailed("You cannot use 'array-contains-any' filters more than once.", I[104], 832, 11, "!hasArrayContainsAny");
          hasArrayContainsAny = true;
        }
        if (operator === "array-contains" || operator === "array-contains-any") {
          if (!!(hasArrayContains && hasArrayContainsAny)) dart.assertFailed("You cannot use both 'array-contains-any' or 'array-contains' filters together.", I[104], 840, 11, "!(hasArrayContains && hasArrayContainsAny)");
        }
        if (this[S$0._isInequality](operator)) {
          if (hasInequality == null) {
            hasInequality = field;
          } else {
            if (!dart.equals(hasInequality, field)) dart.assertFailed("All where filters with an inequality (<, <=, >, or >=) must be " + "on the same field. But you have inequality filters on '" + dart.str(hasInequality) + "' and '" + dart.str(field) + "'.", I[104], 850, 13, "hasInequality == field");
          }
        }
      }
      return new cloud_firestore._JsonQuery.new(this.firestore, this[S$0._delegate$7].where(conditions));
    }
    withConverter(R, opts) {
      let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
      let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
      return new (cloud_firestore._WithConverterQuery$(R)).new(this, fromFirestore, toFirestore);
    }
    _equals(other) {
      if (other == null) return false;
      return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && cloud_firestore._JsonQuery.is(other) && other.firestore._equals(this.firestore) && other[S$0._delegate$7][S$0.$_equals](this[S$0._delegate$7]);
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.firestore, this[S$0._delegate$7]);
    }
    count() {
      return new cloud_firestore.AggregateQuery.__(this[S$0._delegate$7].count(), this);
    }
    aggregate(aggregateField1, aggregateField2 = null, aggregateField3 = null, aggregateField4 = null, aggregateField5 = null, aggregateField6 = null, aggregateField7 = null, aggregateField8 = null, aggregateField9 = null, aggregateField10 = null, aggregateField11 = null, aggregateField12 = null, aggregateField13 = null, aggregateField14 = null, aggregateField15 = null, aggregateField16 = null, aggregateField17 = null, aggregateField18 = null, aggregateField19 = null, aggregateField20 = null, aggregateField21 = null, aggregateField22 = null, aggregateField23 = null, aggregateField24 = null, aggregateField25 = null, aggregateField26 = null, aggregateField27 = null, aggregateField28 = null, aggregateField29 = null, aggregateField30 = null) {
      return new cloud_firestore.AggregateQuery.__(this[S$0._delegate$7].aggregate(aggregateField1, aggregateField2, aggregateField3, aggregateField4, aggregateField5, aggregateField6, aggregateField7, aggregateField8, aggregateField9, aggregateField10, aggregateField11, aggregateField12, aggregateField13, aggregateField14, aggregateField15, aggregateField16, aggregateField17, aggregateField18, aggregateField19, aggregateField20, aggregateField21, aggregateField22, aggregateField23, aggregateField24, aggregateField25, aggregateField26, aggregateField27, aggregateField28, aggregateField29, aggregateField30), this);
    }
  };
  (cloud_firestore._JsonQuery.new = function(firestore, _delegate) {
    this.firestore = firestore;
    this[S$0._delegate$8] = _delegate;
    platform_interface_query.QueryPlatform.verify(this[S$0._delegate$7]);
  }).prototype = cloud_firestore._JsonQuery.prototype;
  dart.addTypeTests(cloud_firestore._JsonQuery);
  dart.addTypeCaches(cloud_firestore._JsonQuery);
  cloud_firestore._JsonQuery[dart.implements] = () => [cloud_firestore.Query$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonQuery, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonQuery.__proto__),
    [S$0._hasStartCursor]: dart.fnType(core.bool, []),
    [S$0._hasEndCursor]: dart.fnType(core.bool, []),
    [S$0._isInequality]: dart.fnType(core.bool, [core.String]),
    isNotIn: dart.fnType(core.bool, [core.String]),
    [S$0._assertQueryCursorSnapshot]: dart.fnType(core.Map$(core.String, dart.dynamic), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    [S$0._assertQueryCursorValues]: dart.fnType(core.Iterable, [core.Iterable$(dart.nullable(core.Object))]),
    [S$0._assertValidFieldType]: dart.fnType(dart.void, [core.Object]),
    endAtDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    endAt: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Iterable$(dart.nullable(core.Object))]),
    endBeforeDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    endBefore: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Iterable$(dart.nullable(core.Object))]),
    get: dart.fnType(async.Future$(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))), [], [dart.nullable(get_options.GetOptions)]),
    limit: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.int]),
    limitToLast: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.int]),
    snapshots: dart.fnType(async.Stream$(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))), [], {includeMetadataChanges: core.bool}, {}),
    orderBy: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Object], {descending: core.bool}, {}),
    startAfterDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    startAfter: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Iterable$(dart.nullable(core.Object))]),
    startAtDocument: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
    startAt: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Iterable$(dart.nullable(core.Object))]),
    where: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.Object], {arrayContains: dart.nullable(core.Object), arrayContainsAny: dart.nullable(core.Iterable$(dart.nullable(core.Object))), isEqualTo: dart.nullable(core.Object), isGreaterThan: dart.nullable(core.Object), isGreaterThanOrEqualTo: dart.nullable(core.Object), isLessThan: dart.nullable(core.Object), isLessThanOrEqualTo: dart.nullable(core.Object), isNotEqualTo: dart.nullable(core.Object), isNull: dart.nullable(core.bool), whereIn: dart.nullable(core.Iterable$(dart.nullable(core.Object))), whereNotIn: dart.nullable(core.Iterable$(dart.nullable(core.Object)))}, {}),
    withConverter: dart.gFnType(R => [cloud_firestore.Query$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)]),
    count: dart.fnType(cloud_firestore.AggregateQuery, []),
    aggregate: dart.fnType(cloud_firestore.AggregateQuery, [platform_interface_query.AggregateField], [dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField)])
  }));
  dart.setGetterSignature(cloud_firestore._JsonQuery, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonQuery.__proto__),
    parameters: core.Map$(core.String, dart.dynamic)
  }));
  dart.setLibraryUri(cloud_firestore._JsonQuery, I[102]);
  dart.setFieldSignature(cloud_firestore._JsonQuery, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonQuery.__proto__),
    firestore: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$0._delegate$7]: dart.finalFieldType(platform_interface_query.QueryPlatform)
  }));
  dart.defineExtensionMethods(cloud_firestore._JsonQuery, ['_equals']);
  dart.defineExtensionAccessors(cloud_firestore._JsonQuery, ['hashCode']);
  cloud_firestore._JsonCollectionReference = class _JsonCollectionReference extends cloud_firestore._JsonQuery {
    static ['_#new#tearOff'](firestore, _delegate) {
      return new cloud_firestore._JsonCollectionReference.new(firestore, _delegate);
    }
    get [S$0._delegate$7]() {
      return platform_interface_collection_reference.CollectionReferencePlatform.as(super[S$0._delegate$7]);
    }
    get id() {
      return this[S$0._delegate$7].id;
    }
    get parent() {
      let _documentReferencePlatform = this[S$0._delegate$7].parent;
      if (_documentReferencePlatform == null) {
        return null;
      }
      return new cloud_firestore._JsonDocumentReference.new(this.firestore, _documentReferencePlatform);
    }
    get path() {
      return this[S$0._delegate$7].path;
    }
    add(data) {
      T$.MapOfString$dynamic().as(data);
      return async.async(T$.DocumentReferenceOfMapOfString$dynamic(), (function* add() {
        let newDocument = this.doc();
        yield newDocument.set(data);
        return newDocument;
      }).bind(this));
    }
    doc(path = null) {
      if (path != null) {
        if (!path[S$.$isNotEmpty]) dart.assertFailed("a document path must be a non-empty string", I[103], 116, 14, "path.isNotEmpty");
        if (!!path[S$.$contains]("//")) dart.assertFailed("a document path must not contain \"//\"", I[103], 117, 14, "!path.contains('//')");
        if (!(path !== "/")) dart.assertFailed("a document path must point to a valid document", I[103], 118, 14, "path != '/'");
      }
      return new cloud_firestore._JsonDocumentReference.new(this.firestore, this[S$0._delegate$7].doc(path));
    }
    withConverter(R, opts) {
      let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
      let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
      return new (cloud_firestore._WithConverterCollectionReference$(R)).new(this, fromFirestore, toFirestore);
    }
    _equals(other) {
      if (other == null) return false;
      return cloud_firestore._JsonCollectionReference.is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return core.Object.hash(this.firestore, this.path);
    }
    toString() {
      return "CollectionReference<Map<String, dynamic>>(" + this.path + ")";
    }
  };
  (cloud_firestore._JsonCollectionReference.new = function(firestore, _delegate) {
    cloud_firestore._JsonCollectionReference.__proto__.new.call(this, firestore, _delegate);
    ;
  }).prototype = cloud_firestore._JsonCollectionReference.prototype;
  dart.addTypeTests(cloud_firestore._JsonCollectionReference);
  dart.addTypeCaches(cloud_firestore._JsonCollectionReference);
  cloud_firestore._JsonCollectionReference[dart.implements] = () => [cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonCollectionReference, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonCollectionReference.__proto__),
    add: dart.fnType(async.Future$(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))), [dart.nullable(core.Object)]),
    doc: dart.fnType(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)), [], [dart.nullable(core.String)]),
    withConverter: dart.gFnType(R => [cloud_firestore.CollectionReference$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(cloud_firestore._JsonCollectionReference, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonCollectionReference.__proto__),
    [S$0._delegate$7]: platform_interface_collection_reference.CollectionReferencePlatform,
    id: core.String,
    parent: dart.nullable(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))),
    path: core.String
  }));
  dart.setLibraryUri(cloud_firestore._JsonCollectionReference, I[102]);
  dart.defineExtensionMethods(cloud_firestore._JsonCollectionReference, ['_equals', 'toString']);
  dart.defineExtensionAccessors(cloud_firestore._JsonCollectionReference, ['hashCode']);
  const _is__WithConverterQuery_default = Symbol('_is__WithConverterQuery_default');
  cloud_firestore._WithConverterQuery$ = dart.generic(T => {
    var __t$_WithConverterQueryOfT = () => (__t$_WithConverterQueryOfT = dart.constFn(cloud_firestore._WithConverterQuery$(T)))();
    var __t$_WithConverterQuerySnapshotOfT = () => (__t$_WithConverterQuerySnapshotOfT = dart.constFn(cloud_firestore._WithConverterQuerySnapshot$(T)))();
    var __t$QuerySnapshotOfT = () => (__t$QuerySnapshotOfT = dart.constFn(cloud_firestore.QuerySnapshot$(T)))();
    var __t$QuerySnapshotOfMapOfString$dynamicTo_WithConverterQuerySnapshotOfT = () => (__t$QuerySnapshotOfMapOfString$dynamicTo_WithConverterQuerySnapshotOfT = dart.constFn(dart.fnType(__t$_WithConverterQuerySnapshotOfT(), [T$.QuerySnapshotOfMapOfString$dynamic()])))();
    var __t$TAndSetOptionsNToMapOfString$ObjectN = () => (__t$TAndSetOptionsNToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()])))();
    class _WithConverterQuery extends core.Object {
      static ['_#new#tearOff'](T, _originalQuery, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterQuery$(T)).new(_originalQuery, _fromFirestore, _toFirestore);
      }
      get firestore() {
        return this[S$0._originalQuery].firestore;
      }
      get parameters() {
        return this[S$0._originalQuery].parameters;
      }
      [S$0._mapQuery](newOriginalQuery) {
        return new (__t$_WithConverterQueryOfT()).new(newOriginalQuery, this[S$0._fromFirestore], this[S$0._toFirestore]);
      }
      get(options = null) {
        return async.async(__t$QuerySnapshotOfT(), (function* get() {
          let snapshot = (yield this[S$0._originalQuery].get(options));
          return new (__t$_WithConverterQuerySnapshotOfT()).new(snapshot, this[S$0._fromFirestore], this[S$0._toFirestore]);
        }).bind(this));
      }
      snapshots(opts) {
        let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
        return this[S$0._originalQuery].snapshots({includeMetadataChanges: includeMetadataChanges}).map(__t$QuerySnapshotOfT(), dart.fn(snapshot => new (__t$_WithConverterQuerySnapshotOfT()).new(snapshot, this[S$0._fromFirestore], this[S$0._toFirestore]), __t$QuerySnapshotOfMapOfString$dynamicTo_WithConverterQuerySnapshotOfT()));
      }
      endAt(values) {
        return this[S$0._mapQuery](this[S$0._originalQuery].endAt(values));
      }
      endAtDocument(documentSnapshot) {
        return this[S$0._mapQuery](this[S$0._originalQuery].endAtDocument(documentSnapshot));
      }
      endBefore(values) {
        return this[S$0._mapQuery](this[S$0._originalQuery].endBefore(values));
      }
      endBeforeDocument(documentSnapshot) {
        return this[S$0._mapQuery](this[S$0._originalQuery].endBeforeDocument(documentSnapshot));
      }
      limit(limit) {
        return this[S$0._mapQuery](this[S$0._originalQuery].limit(limit));
      }
      limitToLast(limit) {
        return this[S$0._mapQuery](this[S$0._originalQuery].limitToLast(limit));
      }
      orderBy(field, opts) {
        let descending = opts && 'descending' in opts ? opts.descending : false;
        return this[S$0._mapQuery](this[S$0._originalQuery].orderBy(field, {descending: descending}));
      }
      startAfter(values) {
        return this[S$0._mapQuery](this[S$0._originalQuery].startAfter(values));
      }
      startAfterDocument(documentSnapshot) {
        return this[S$0._mapQuery](this[S$0._originalQuery].startAfterDocument(documentSnapshot));
      }
      startAt(values) {
        return this[S$0._mapQuery](this[S$0._originalQuery].startAt(values));
      }
      startAtDocument(documentSnapshot) {
        return this[S$0._mapQuery](this[S$0._originalQuery].startAtDocument(documentSnapshot));
      }
      where(field, opts) {
        let isEqualTo = opts && 'isEqualTo' in opts ? opts.isEqualTo : C[10] || CT.C10;
        let isNotEqualTo = opts && 'isNotEqualTo' in opts ? opts.isNotEqualTo : C[10] || CT.C10;
        let isLessThan = opts && 'isLessThan' in opts ? opts.isLessThan : null;
        let isLessThanOrEqualTo = opts && 'isLessThanOrEqualTo' in opts ? opts.isLessThanOrEqualTo : null;
        let isGreaterThan = opts && 'isGreaterThan' in opts ? opts.isGreaterThan : null;
        let isGreaterThanOrEqualTo = opts && 'isGreaterThanOrEqualTo' in opts ? opts.isGreaterThanOrEqualTo : null;
        let arrayContains = opts && 'arrayContains' in opts ? opts.arrayContains : null;
        let arrayContainsAny = opts && 'arrayContainsAny' in opts ? opts.arrayContainsAny : null;
        let whereIn = opts && 'whereIn' in opts ? opts.whereIn : null;
        let whereNotIn = opts && 'whereNotIn' in opts ? opts.whereNotIn : null;
        let isNull = opts && 'isNull' in opts ? opts.isNull : null;
        return this[S$0._mapQuery](this[S$0._originalQuery].where(field, {isEqualTo: isEqualTo, isNotEqualTo: isNotEqualTo, isLessThan: isLessThan, isLessThanOrEqualTo: isLessThanOrEqualTo, isGreaterThan: isGreaterThan, isGreaterThanOrEqualTo: isGreaterThanOrEqualTo, arrayContains: arrayContains, arrayContainsAny: arrayContainsAny, whereIn: whereIn, whereNotIn: whereNotIn, isNull: isNull}));
      }
      withConverter(R, opts) {
        let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
        let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
        return new (cloud_firestore._WithConverterQuery$(R)).new(this[S$0._originalQuery], fromFirestore, toFirestore);
      }
      _equals(other) {
        if (other == null) return false;
        return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && __t$_WithConverterQueryOfT().is(other) && other[S$0._fromFirestore][S$0.$_equals](this[S$0._fromFirestore]) && __t$TAndSetOptionsNToMapOfString$ObjectN().as(other[S$0._toFirestore])[S$0.$_equals](this[S$0._toFirestore]) && other[S$0._originalQuery][S$0.$_equals](this[S$0._originalQuery]);
      }
      get hashCode() {
        return core.Object.hash(this[S$.$runtimeType], this[S$0._fromFirestore], this[S$0._toFirestore], this[S$0._originalQuery]);
      }
      count() {
        return this[S$0._originalQuery].count();
      }
      aggregate(aggregateField1, aggregateField2 = null, aggregateField3 = null, aggregateField4 = null, aggregateField5 = null, aggregateField6 = null, aggregateField7 = null, aggregateField8 = null, aggregateField9 = null, aggregateField10 = null, aggregateField11 = null, aggregateField12 = null, aggregateField13 = null, aggregateField14 = null, aggregateField15 = null, aggregateField16 = null, aggregateField17 = null, aggregateField18 = null, aggregateField19 = null, aggregateField20 = null, aggregateField21 = null, aggregateField22 = null, aggregateField23 = null, aggregateField24 = null, aggregateField25 = null, aggregateField26 = null, aggregateField27 = null, aggregateField28 = null, aggregateField29 = null, aggregateField30 = null) {
        return this[S$0._originalQuery].aggregate(aggregateField1, aggregateField2, aggregateField3, aggregateField4, aggregateField5, aggregateField6, aggregateField7, aggregateField8, aggregateField9, aggregateField10, aggregateField11, aggregateField12, aggregateField13, aggregateField14, aggregateField15, aggregateField16, aggregateField17, aggregateField18, aggregateField19, aggregateField20, aggregateField21, aggregateField22, aggregateField23, aggregateField24, aggregateField25, aggregateField26, aggregateField27, aggregateField28, aggregateField29, aggregateField30);
      }
    }
    (_WithConverterQuery.new = function(_originalQuery, _fromFirestore, _toFirestore) {
      this[S$0._originalQuery] = _originalQuery;
      this[S$0._fromFirestore] = _fromFirestore;
      this[S$0._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterQuery.prototype;
    dart.addTypeTests(_WithConverterQuery);
    _WithConverterQuery.prototype[_is__WithConverterQuery_default] = true;
    dart.addTypeCaches(_WithConverterQuery);
    _WithConverterQuery[dart.implements] = () => [cloud_firestore.Query$(T)];
    dart.setMethodSignature(_WithConverterQuery, () => ({
      __proto__: dart.getMethods(_WithConverterQuery.__proto__),
      [S$0._mapQuery]: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.Query$(core.Map$(core.String, dart.dynamic))]),
      get: dart.fnType(async.Future$(cloud_firestore.QuerySnapshot$(T)), [], [dart.nullable(get_options.GetOptions)]),
      snapshots: dart.fnType(async.Stream$(cloud_firestore.QuerySnapshot$(T)), [], {includeMetadataChanges: core.bool}, {}),
      endAt: dart.fnType(cloud_firestore.Query$(T), [core.Iterable$(dart.nullable(core.Object))]),
      endAtDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      endBefore: dart.fnType(cloud_firestore.Query$(T), [core.Iterable$(dart.nullable(core.Object))]),
      endBeforeDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      limit: dart.fnType(cloud_firestore.Query$(T), [core.int]),
      limitToLast: dart.fnType(cloud_firestore.Query$(T), [core.int]),
      orderBy: dart.fnType(cloud_firestore.Query$(T), [core.Object], {descending: core.bool}, {}),
      startAfter: dart.fnType(cloud_firestore.Query$(T), [core.Iterable$(dart.nullable(core.Object))]),
      startAfterDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      startAt: dart.fnType(cloud_firestore.Query$(T), [core.Iterable$(dart.nullable(core.Object))]),
      startAtDocument: dart.fnType(cloud_firestore.Query$(T), [cloud_firestore.DocumentSnapshot$(dart.nullable(core.Object))]),
      where: dart.fnType(cloud_firestore.Query$(T), [core.Object], {arrayContains: dart.nullable(core.Object), arrayContainsAny: dart.nullable(core.Iterable$(dart.nullable(core.Object))), isEqualTo: dart.nullable(core.Object), isGreaterThan: dart.nullable(core.Object), isGreaterThanOrEqualTo: dart.nullable(core.Object), isLessThan: dart.nullable(core.Object), isLessThanOrEqualTo: dart.nullable(core.Object), isNotEqualTo: dart.nullable(core.Object), isNull: dart.nullable(core.bool), whereIn: dart.nullable(core.Iterable$(dart.nullable(core.Object))), whereNotIn: dart.nullable(core.Iterable$(dart.nullable(core.Object)))}, {}),
      withConverter: dart.gFnType(R => [cloud_firestore.Query$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)]),
      count: dart.fnType(cloud_firestore.AggregateQuery, []),
      aggregate: dart.fnType(cloud_firestore.AggregateQuery, [platform_interface_query.AggregateField], [dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField), dart.nullable(platform_interface_query.AggregateField)])
    }));
    dart.setGetterSignature(_WithConverterQuery, () => ({
      __proto__: dart.getGetters(_WithConverterQuery.__proto__),
      firestore: cloud_firestore.FirebaseFirestore,
      parameters: core.Map$(core.String, dart.dynamic)
    }));
    dart.setLibraryUri(_WithConverterQuery, I[102]);
    dart.setFieldSignature(_WithConverterQuery, () => ({
      __proto__: dart.getFields(_WithConverterQuery.__proto__),
      [S$0._originalQuery]: dart.finalFieldType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic))),
      [S$0._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$0._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    dart.defineExtensionMethods(_WithConverterQuery, ['_equals']);
    dart.defineExtensionAccessors(_WithConverterQuery, ['hashCode']);
    return _WithConverterQuery;
  });
  cloud_firestore._WithConverterQuery = cloud_firestore._WithConverterQuery$();
  dart.addTypeTests(cloud_firestore._WithConverterQuery, _is__WithConverterQuery_default);
  const _is__WithConverterCollectionReference_default = Symbol('_is__WithConverterCollectionReference_default');
  cloud_firestore._WithConverterCollectionReference$ = dart.generic(T => {
    var __t$_WithConverterDocumentReferenceOfT = () => (__t$_WithConverterDocumentReferenceOfT = dart.constFn(cloud_firestore._WithConverterDocumentReference$(T)))();
    var __t$DocumentReferenceOfT = () => (__t$DocumentReferenceOfT = dart.constFn(cloud_firestore.DocumentReference$(T)))();
    var __t$_WithConverterCollectionReferenceOfT = () => (__t$_WithConverterCollectionReferenceOfT = dart.constFn(cloud_firestore._WithConverterCollectionReference$(T)))();
    var __t$TAndSetOptionsNToMapOfString$ObjectN = () => (__t$TAndSetOptionsNToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()])))();
    class _WithConverterCollectionReference extends cloud_firestore._WithConverterQuery$(T) {
      static ['_#new#tearOff'](T, collectionReference, fromFirestore, toFirestore) {
        return new (cloud_firestore._WithConverterCollectionReference$(T)).new(collectionReference, fromFirestore, toFirestore);
      }
      get [S$0._originalCollectionReferenceQuery]() {
        return T$.CollectionReferenceOfMapOfString$dynamic().as(this[S$0._originalQuery]);
      }
      get id() {
        return this[S$0._originalCollectionReferenceQuery].id;
      }
      get parent() {
        return this[S$0._originalCollectionReferenceQuery].parent;
      }
      get path() {
        return this[S$0._originalCollectionReferenceQuery].path;
      }
      add(data) {
        T.as(data);
        return async.async(__t$DocumentReferenceOfT(), (function* add() {
          let t145, t144;
          let snapshot = (yield this[S$0._originalCollectionReferenceQuery].add((t144 = data, t145 = null, this[S$0._toFirestore](t144, t145))));
          return new (__t$_WithConverterDocumentReferenceOfT()).new(snapshot, this[S$0._fromFirestore], this[S$0._toFirestore]);
        }).bind(this));
      }
      doc(path = null) {
        return new (__t$_WithConverterDocumentReferenceOfT()).new(this[S$0._originalCollectionReferenceQuery].doc(path), this[S$0._fromFirestore], this[S$0._toFirestore]);
      }
      withConverter(R, opts) {
        let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
        let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
        return new (cloud_firestore._WithConverterCollectionReference$(R)).new(this[S$0._originalCollectionReferenceQuery], fromFirestore, toFirestore);
      }
      _equals(other) {
        if (other == null) return false;
        return __t$_WithConverterCollectionReferenceOfT().is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other[S$0._originalCollectionReferenceQuery][S$0.$_equals](this[S$0._originalCollectionReferenceQuery]) && other[S$0._fromFirestore][S$0.$_equals](this[S$0._fromFirestore]) && __t$TAndSetOptionsNToMapOfString$ObjectN().as(other[S$0._toFirestore])[S$0.$_equals](this[S$0._toFirestore]);
      }
      get hashCode() {
        return core.Object.hash(this[S$.$runtimeType], this[S$0._originalCollectionReferenceQuery], this[S$0._fromFirestore], this[S$0._toFirestore]);
      }
      toString() {
        return "CollectionReference<" + dart.str(dart.wrapType(T)) + ">(" + this.path + ")";
      }
    }
    (_WithConverterCollectionReference.new = function(collectionReference, fromFirestore, toFirestore) {
      _WithConverterCollectionReference.__proto__.new.call(this, collectionReference, fromFirestore, toFirestore);
      ;
    }).prototype = _WithConverterCollectionReference.prototype;
    dart.addTypeTests(_WithConverterCollectionReference);
    _WithConverterCollectionReference.prototype[_is__WithConverterCollectionReference_default] = true;
    dart.addTypeCaches(_WithConverterCollectionReference);
    _WithConverterCollectionReference[dart.implements] = () => [cloud_firestore.CollectionReference$(T)];
    dart.setMethodSignature(_WithConverterCollectionReference, () => ({
      __proto__: dart.getMethods(_WithConverterCollectionReference.__proto__),
      add: dart.fnType(async.Future$(cloud_firestore.DocumentReference$(T)), [dart.nullable(core.Object)]),
      doc: dart.fnType(cloud_firestore.DocumentReference$(T), [], [dart.nullable(core.String)]),
      withConverter: dart.gFnType(R => [cloud_firestore.CollectionReference$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_WithConverterCollectionReference, () => ({
      __proto__: dart.getGetters(_WithConverterCollectionReference.__proto__),
      [S$0._originalCollectionReferenceQuery]: cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)),
      id: core.String,
      parent: dart.nullable(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))),
      path: core.String
    }));
    dart.setLibraryUri(_WithConverterCollectionReference, I[102]);
    dart.defineExtensionMethods(_WithConverterCollectionReference, ['_equals', 'toString']);
    dart.defineExtensionAccessors(_WithConverterCollectionReference, ['hashCode']);
    return _WithConverterCollectionReference;
  });
  cloud_firestore._WithConverterCollectionReference = cloud_firestore._WithConverterCollectionReference$();
  dart.addTypeTests(cloud_firestore._WithConverterCollectionReference, _is__WithConverterCollectionReference_default);
  const _is_DocumentChange_default = Symbol('_is_DocumentChange_default');
  cloud_firestore.DocumentChange$ = dart.generic(T => {
    class DocumentChange extends core.Object {}
    (DocumentChange.new = function() {
      ;
    }).prototype = DocumentChange.prototype;
    dart.addTypeTests(DocumentChange);
    DocumentChange.prototype[_is_DocumentChange_default] = true;
    dart.addTypeCaches(DocumentChange);
    dart.setLibraryUri(DocumentChange, I[102]);
    return DocumentChange;
  });
  cloud_firestore.DocumentChange = cloud_firestore.DocumentChange$();
  dart.addTypeTests(cloud_firestore.DocumentChange, _is_DocumentChange_default);
  cloud_firestore._JsonDocumentChange = class _JsonDocumentChange extends core.Object {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonDocumentChange.new(_firestore, _delegate);
    }
    get type() {
      return this[S$0._delegate$7].type;
    }
    get oldIndex() {
      return this[S$0._delegate$7].oldIndex;
    }
    get newIndex() {
      return this[S$0._delegate$7].newIndex;
    }
    get doc() {
      return new cloud_firestore._JsonDocumentSnapshot.new(this[S$0._firestore$2], this[S$0._delegate$7].document);
    }
  };
  (cloud_firestore._JsonDocumentChange.new = function(_firestore, _delegate) {
    this[S$0._firestore$2] = _firestore;
    this[S$0._delegate$7] = _delegate;
    platform_interface_document_change.DocumentChangePlatform.verify(this[S$0._delegate$7]);
  }).prototype = cloud_firestore._JsonDocumentChange.prototype;
  dart.addTypeTests(cloud_firestore._JsonDocumentChange);
  dart.addTypeCaches(cloud_firestore._JsonDocumentChange);
  cloud_firestore._JsonDocumentChange[dart.implements] = () => [cloud_firestore.DocumentChange$(core.Map$(core.String, dart.dynamic))];
  dart.setGetterSignature(cloud_firestore._JsonDocumentChange, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonDocumentChange.__proto__),
    type: messages$46pigeon$0.DocumentChangeType,
    oldIndex: core.int,
    newIndex: core.int,
    doc: cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))
  }));
  dart.setLibraryUri(cloud_firestore._JsonDocumentChange, I[102]);
  dart.setFieldSignature(cloud_firestore._JsonDocumentChange, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonDocumentChange.__proto__),
    [S$0._delegate$7]: dart.finalFieldType(platform_interface_document_change.DocumentChangePlatform),
    [S$0._firestore$2]: dart.finalFieldType(cloud_firestore.FirebaseFirestore)
  }));
  const _is__WithConverterDocumentChange_default = Symbol('_is__WithConverterDocumentChange_default');
  cloud_firestore._WithConverterDocumentChange$ = dart.generic(T => {
    var __t$_WithConverterDocumentSnapshotOfT = () => (__t$_WithConverterDocumentSnapshotOfT = dart.constFn(cloud_firestore._WithConverterDocumentSnapshot$(T)))();
    class _WithConverterDocumentChange extends core.Object {
      static ['_#new#tearOff'](T, _originalDocumentChange, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterDocumentChange$(T)).new(_originalDocumentChange, _fromFirestore, _toFirestore);
      }
      get type() {
        return this[S$0._originalDocumentChange].type;
      }
      get oldIndex() {
        return this[S$0._originalDocumentChange].oldIndex;
      }
      get newIndex() {
        return this[S$0._originalDocumentChange].newIndex;
      }
      get doc() {
        return new (__t$_WithConverterDocumentSnapshotOfT()).new(this[S$0._originalDocumentChange].doc, this[S$0._fromFirestore], this[S$0._toFirestore]);
      }
    }
    (_WithConverterDocumentChange.new = function(_originalDocumentChange, _fromFirestore, _toFirestore) {
      this[S$0._originalDocumentChange] = _originalDocumentChange;
      this[S$0._fromFirestore] = _fromFirestore;
      this[S$0._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterDocumentChange.prototype;
    dart.addTypeTests(_WithConverterDocumentChange);
    _WithConverterDocumentChange.prototype[_is__WithConverterDocumentChange_default] = true;
    dart.addTypeCaches(_WithConverterDocumentChange);
    _WithConverterDocumentChange[dart.implements] = () => [cloud_firestore.DocumentChange$(T)];
    dart.setGetterSignature(_WithConverterDocumentChange, () => ({
      __proto__: dart.getGetters(_WithConverterDocumentChange.__proto__),
      type: messages$46pigeon$0.DocumentChangeType,
      oldIndex: core.int,
      newIndex: core.int,
      doc: cloud_firestore.DocumentSnapshot$(T)
    }));
    dart.setLibraryUri(_WithConverterDocumentChange, I[102]);
    dart.setFieldSignature(_WithConverterDocumentChange, () => ({
      __proto__: dart.getFields(_WithConverterDocumentChange.__proto__),
      [S$0._originalDocumentChange]: dart.finalFieldType(cloud_firestore.DocumentChange$(core.Map$(core.String, dart.dynamic))),
      [S$0._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$0._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    return _WithConverterDocumentChange;
  });
  cloud_firestore._WithConverterDocumentChange = cloud_firestore._WithConverterDocumentChange$();
  dart.addTypeTests(cloud_firestore._WithConverterDocumentChange, _is__WithConverterDocumentChange_default);
  const _is_DocumentReference_default = Symbol('_is_DocumentReference_default');
  cloud_firestore.DocumentReference$ = dart.generic(T => {
    class DocumentReference extends core.Object {}
    (DocumentReference.new = function() {
      ;
    }).prototype = DocumentReference.prototype;
    dart.addTypeTests(DocumentReference);
    DocumentReference.prototype[_is_DocumentReference_default] = true;
    dart.addTypeCaches(DocumentReference);
    dart.setLibraryUri(DocumentReference, I[102]);
    return DocumentReference;
  });
  cloud_firestore.DocumentReference = cloud_firestore.DocumentReference$();
  dart.addTypeTests(cloud_firestore.DocumentReference, _is_DocumentReference_default);
  cloud_firestore._JsonDocumentReference = class _JsonDocumentReference extends core.Object {
    static ['_#new#tearOff'](firestore, _delegate) {
      return new cloud_firestore._JsonDocumentReference.new(firestore, _delegate);
    }
    get id() {
      return this[S$0._delegate$7].id;
    }
    get parent() {
      return new cloud_firestore._JsonCollectionReference.new(this.firestore, this[S$0._delegate$7].parent);
    }
    get path() {
      return this[S$0._delegate$7].path;
    }
    collection(collectionPath) {
      if (!collectionPath[S$.$isNotEmpty]) dart.assertFailed("a collectionPath path must be a non-empty string", I[105], 121, 7, "collectionPath.isNotEmpty");
      if (!!collectionPath[S$.$contains]("//")) dart.assertFailed("a collection path must not contain \"//\"", I[105], 125, 7, "!collectionPath.contains('//')");
      if (!cloud_firestore_platform_interface.isValidCollectionPath(collectionPath)) dart.assertFailed("a collection path must point to a valid collection.", I[105], 129, 7, "isValidCollectionPath(collectionPath)");
      return new cloud_firestore._JsonCollectionReference.new(this.firestore, this[S$0._delegate$7].collection(collectionPath));
    }
    delete() {
      return this[S$0._delegate$7].delete();
    }
    get(options = null) {
      return async.async(T$.DocumentSnapshotOfMapOfString$dynamic(), (function* get() {
        let t144;
        return new cloud_firestore._JsonDocumentSnapshot.new(this.firestore, yield this[S$0._delegate$7].get((t144 = options, t144 == null ? C[52] || CT.C52 : t144)));
      }).bind(this));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      return this[S$0._delegate$7].snapshots({includeMetadataChanges: includeMetadataChanges}).map(T$.DocumentSnapshotOfMapOfString$dynamic(), dart.fn(delegateSnapshot => new cloud_firestore._JsonDocumentSnapshot.new(this.firestore, delegateSnapshot), T$.DocumentSnapshotPlatformTo_JsonDocumentSnapshot()));
    }
    set(data, options = null) {
      T$.MapOfString$dynamic().as(data);
      return this[S$0._delegate$7].set(dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(data)), options);
    }
    update(data) {
      return this[S$0._delegate$7].update(dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMapFieldPath(data)));
    }
    withConverter(T, opts) {
      let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
      let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
      return new (cloud_firestore._WithConverterDocumentReference$(T)).new(this, fromFirestore, toFirestore);
    }
    _equals(other) {
      if (other == null) return false;
      return T$.DocumentReferenceOfObjectN().is(other) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return core.Object.hash(this.firestore, this.path);
    }
    toString() {
      return "DocumentReference<Map<String, dynamic>>(" + this.path + ")";
    }
  };
  (cloud_firestore._JsonDocumentReference.new = function(firestore, _delegate) {
    this.firestore = firestore;
    this[S$0._delegate$7] = _delegate;
    platform_interface_document_reference.DocumentReferencePlatform.verify(this[S$0._delegate$7]);
  }).prototype = cloud_firestore._JsonDocumentReference.prototype;
  dart.addTypeTests(cloud_firestore._JsonDocumentReference);
  dart.addTypeCaches(cloud_firestore._JsonDocumentReference);
  cloud_firestore._JsonDocumentReference[dart.implements] = () => [cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonDocumentReference, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonDocumentReference.__proto__),
    collection: dart.fnType(cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    get: dart.fnType(async.Future$(cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))), [], [dart.nullable(get_options.GetOptions)]),
    snapshots: dart.fnType(async.Stream$(cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))), [], {includeMetadataChanges: core.bool}, {}),
    set: dart.fnType(async.Future$(dart.void), [dart.nullable(core.Object)], [dart.nullable(set_options.SetOptions)]),
    update: dart.fnType(async.Future$(dart.void), [core.Map$(core.Object, dart.nullable(core.Object))]),
    withConverter: dart.gFnType(T => [cloud_firestore.DocumentReference$(T), [], {}, {fromFirestore: dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)])}], T => [dart.nullable(core.Object)])
  }));
  dart.setGetterSignature(cloud_firestore._JsonDocumentReference, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonDocumentReference.__proto__),
    id: core.String,
    parent: cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)),
    path: core.String
  }));
  dart.setLibraryUri(cloud_firestore._JsonDocumentReference, I[102]);
  dart.setFieldSignature(cloud_firestore._JsonDocumentReference, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonDocumentReference.__proto__),
    [S$0._delegate$7]: dart.finalFieldType(platform_interface_document_reference.DocumentReferencePlatform),
    firestore: dart.finalFieldType(cloud_firestore.FirebaseFirestore)
  }));
  dart.defineExtensionMethods(cloud_firestore._JsonDocumentReference, ['_equals', 'toString']);
  dart.defineExtensionAccessors(cloud_firestore._JsonDocumentReference, ['hashCode']);
  const _is__WithConverterDocumentReference_default = Symbol('_is__WithConverterDocumentReference_default');
  cloud_firestore._WithConverterDocumentReference$ = dart.generic(T => {
    var __t$_WithConverterDocumentSnapshotOfT = () => (__t$_WithConverterDocumentSnapshotOfT = dart.constFn(cloud_firestore._WithConverterDocumentSnapshot$(T)))();
    var __t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT = () => (__t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT = dart.constFn(dart.fnType(__t$_WithConverterDocumentSnapshotOfT(), [T$.DocumentSnapshotOfMapOfString$dynamic()])))();
    var __t$_WithConverterCollectionReferenceOfT = () => (__t$_WithConverterCollectionReferenceOfT = dart.constFn(cloud_firestore._WithConverterCollectionReference$(T)))();
    var __t$_WithConverterDocumentReferenceOfT = () => (__t$_WithConverterDocumentReferenceOfT = dart.constFn(cloud_firestore._WithConverterDocumentReference$(T)))();
    var __t$TAndSetOptionsNToMapOfString$ObjectN = () => (__t$TAndSetOptionsNToMapOfString$ObjectN = dart.constFn(dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()])))();
    class _WithConverterDocumentReference extends core.Object {
      static ['_#new#tearOff'](T, _originalDocumentReference, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterDocumentReference$(T)).new(_originalDocumentReference, _fromFirestore, _toFirestore);
      }
      collection(collectionPath) {
        return this[S$0._originalDocumentReference].collection(collectionPath);
      }
      delete() {
        return this[S$0._originalDocumentReference].delete();
      }
      get(options = null) {
        return this[S$0._originalDocumentReference].get(options).then(__t$_WithConverterDocumentSnapshotOfT(), dart.fn(snapshot => new (__t$_WithConverterDocumentSnapshotOfT()).new(snapshot, this[S$0._fromFirestore], this[S$0._toFirestore]), __t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT()));
      }
      get [S$0._delegate$7]() {
        return this[S$0._originalDocumentReference][S$0._delegate$7];
      }
      get firestore() {
        return this[S$0._originalDocumentReference].firestore;
      }
      get id() {
        return this[S$0._originalDocumentReference].id;
      }
      get parent() {
        return new (__t$_WithConverterCollectionReferenceOfT()).new(this[S$0._originalDocumentReference].parent, this[S$0._fromFirestore], this[S$0._toFirestore]);
      }
      get path() {
        return this[S$0._originalDocumentReference].path;
      }
      set(data, options = null) {
        let t145, t144;
        T.as(data);
        return this[S$0._originalDocumentReference].set((t144 = data, t145 = options, this[S$0._toFirestore](t144, t145)), options);
      }
      snapshots(opts) {
        let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
        return this[S$0._originalDocumentReference].snapshots({includeMetadataChanges: includeMetadataChanges}).map(__t$_WithConverterDocumentSnapshotOfT(), dart.fn(snapshot => new (__t$_WithConverterDocumentSnapshotOfT()).new(snapshot, this[S$0._fromFirestore], this[S$0._toFirestore]), __t$DocumentSnapshotOfMapOfString$dynamicTo_WithConverterDocumentSnapshotOfT()));
      }
      update(data) {
        return this[S$0._originalDocumentReference].update(data);
      }
      withConverter(R, opts) {
        let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
        let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
        return new (cloud_firestore._WithConverterDocumentReference$(R)).new(this[S$0._originalDocumentReference], fromFirestore, toFirestore);
      }
      _equals(other) {
        if (other == null) return false;
        return __t$_WithConverterDocumentReferenceOfT().is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other[S$0._originalDocumentReference][S$0.$_equals](this[S$0._originalDocumentReference]) && other[S$0._fromFirestore][S$0.$_equals](this[S$0._fromFirestore]) && __t$TAndSetOptionsNToMapOfString$ObjectN().as(other[S$0._toFirestore])[S$0.$_equals](this[S$0._toFirestore]);
      }
      get hashCode() {
        return core.Object.hash(this[S$.$runtimeType], this[S$0._originalDocumentReference], this[S$0._fromFirestore], this[S$0._toFirestore]);
      }
      toString() {
        return "DocumentReference<" + dart.str(dart.wrapType(T)) + ">(" + this.path + ")";
      }
    }
    (_WithConverterDocumentReference.new = function(_originalDocumentReference, _fromFirestore, _toFirestore) {
      this[S$0._originalDocumentReference] = _originalDocumentReference;
      this[S$0._fromFirestore] = _fromFirestore;
      this[S$0._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterDocumentReference.prototype;
    dart.addTypeTests(_WithConverterDocumentReference);
    _WithConverterDocumentReference.prototype[_is__WithConverterDocumentReference_default] = true;
    dart.addTypeCaches(_WithConverterDocumentReference);
    _WithConverterDocumentReference[dart.implements] = () => [cloud_firestore.DocumentReference$(T)];
    dart.setMethodSignature(_WithConverterDocumentReference, () => ({
      __proto__: dart.getMethods(_WithConverterDocumentReference.__proto__),
      collection: dart.fnType(cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
      delete: dart.fnType(async.Future$(dart.void), []),
      get: dart.fnType(async.Future$(cloud_firestore._WithConverterDocumentSnapshot$(T)), [], [dart.nullable(get_options.GetOptions)]),
      set: dart.fnType(async.Future$(dart.void), [dart.nullable(core.Object)], [dart.nullable(set_options.SetOptions)]),
      snapshots: dart.fnType(async.Stream$(cloud_firestore._WithConverterDocumentSnapshot$(T)), [], {includeMetadataChanges: core.bool}, {}),
      update: dart.fnType(async.Future$(dart.void), [core.Map$(core.Object, dart.nullable(core.Object))]),
      withConverter: dart.gFnType(R => [cloud_firestore.DocumentReference$(R), [], {}, {fromFirestore: dart.fnType(R, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [R, dart.nullable(set_options.SetOptions)])}], R => [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_WithConverterDocumentReference, () => ({
      __proto__: dart.getGetters(_WithConverterDocumentReference.__proto__),
      [S$0._delegate$7]: platform_interface_document_reference.DocumentReferencePlatform,
      firestore: cloud_firestore.FirebaseFirestore,
      id: core.String,
      parent: cloud_firestore.CollectionReference$(T),
      path: core.String
    }));
    dart.setLibraryUri(_WithConverterDocumentReference, I[102]);
    dart.setFieldSignature(_WithConverterDocumentReference, () => ({
      __proto__: dart.getFields(_WithConverterDocumentReference.__proto__),
      [S$0._originalDocumentReference]: dart.finalFieldType(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic))),
      [S$0._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$0._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    dart.defineExtensionMethods(_WithConverterDocumentReference, ['_equals', 'toString']);
    dart.defineExtensionAccessors(_WithConverterDocumentReference, ['hashCode']);
    return _WithConverterDocumentReference;
  });
  cloud_firestore._WithConverterDocumentReference = cloud_firestore._WithConverterDocumentReference$();
  dart.addTypeTests(cloud_firestore._WithConverterDocumentReference, _is__WithConverterDocumentReference_default);
  cloud_firestore.SnapshotOptions = class SnapshotOptions extends core.Object {
    static ['_#new#tearOff']() {
      return new cloud_firestore.SnapshotOptions.new();
    }
  };
  (cloud_firestore.SnapshotOptions.new = function() {
    ;
  }).prototype = cloud_firestore.SnapshotOptions.prototype;
  dart.addTypeTests(cloud_firestore.SnapshotOptions);
  dart.addTypeCaches(cloud_firestore.SnapshotOptions);
  dart.setLibraryUri(cloud_firestore.SnapshotOptions, I[102]);
  const _is_DocumentSnapshot_default = Symbol('_is_DocumentSnapshot_default');
  cloud_firestore.DocumentSnapshot$ = dart.generic(T => {
    class DocumentSnapshot extends core.Object {}
    (DocumentSnapshot.new = function() {
      ;
    }).prototype = DocumentSnapshot.prototype;
    dart.addTypeTests(DocumentSnapshot);
    DocumentSnapshot.prototype[_is_DocumentSnapshot_default] = true;
    dart.addTypeCaches(DocumentSnapshot);
    dart.setLibraryUri(DocumentSnapshot, I[102]);
    return DocumentSnapshot;
  });
  cloud_firestore.DocumentSnapshot = cloud_firestore.DocumentSnapshot$();
  dart.addTypeTests(cloud_firestore.DocumentSnapshot, _is_DocumentSnapshot_default);
  cloud_firestore._JsonDocumentSnapshot = class _JsonDocumentSnapshot extends core.Object {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonDocumentSnapshot.new(_firestore, _delegate);
    }
    get id() {
      return this[S$0._delegate$7].id;
    }
    get reference() {
      let t145, t144;
      t144 = this[S$0.___JsonDocumentSnapshot_reference];
      return t144 == null ? (t145 = this[S$0._firestore$2].doc(this[S$0._delegate$7].reference.path), this[S$0.___JsonDocumentSnapshot_reference] == null ? this[S$0.___JsonDocumentSnapshot_reference] = t145 : dart.throw(new _internal.LateError.fieldADI("reference"))) : t144;
    }
    get metadata() {
      let t145, t144;
      t144 = this[S$0.___JsonDocumentSnapshot_metadata];
      return t144 == null ? (t145 = new cloud_firestore.SnapshotMetadata.__(this[S$0._delegate$7].metadata), this[S$0.___JsonDocumentSnapshot_metadata] == null ? this[S$0.___JsonDocumentSnapshot_metadata] = t145 : dart.throw(new _internal.LateError.fieldADI("metadata"))) : t144;
    }
    get exists() {
      return this[S$0._delegate$7].exists;
    }
    data() {
      return cloud_firestore._CodecUtility.replaceDelegatesWithValueInMap(this[S$0._delegate$7].data(), this[S$0._firestore$2]);
    }
    get(field) {
      return cloud_firestore._CodecUtility.valueDecode(this[S$0._delegate$7].get(field), this[S$0._firestore$2]);
    }
    _get(field) {
      return this.get(field);
    }
  };
  (cloud_firestore._JsonDocumentSnapshot.new = function(_firestore, _delegate) {
    this[S$0.___JsonDocumentSnapshot_reference] = null;
    this[S$0.___JsonDocumentSnapshot_metadata] = null;
    this[S$0._firestore$2] = _firestore;
    this[S$0._delegate$7] = _delegate;
    platform_interface_document_snapshot.DocumentSnapshotPlatform.verify(this[S$0._delegate$7]);
  }).prototype = cloud_firestore._JsonDocumentSnapshot.prototype;
  dart.addTypeTests(cloud_firestore._JsonDocumentSnapshot);
  dart.addTypeCaches(cloud_firestore._JsonDocumentSnapshot);
  cloud_firestore._JsonDocumentSnapshot[dart.implements] = () => [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonDocumentSnapshot, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonDocumentSnapshot.__proto__),
    data: dart.fnType(dart.nullable(core.Map$(core.String, dart.dynamic)), []),
    get: dart.fnType(dart.dynamic, [core.Object]),
    _get: dart.fnType(dart.dynamic, [core.Object])
  }));
  dart.setGetterSignature(cloud_firestore._JsonDocumentSnapshot, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonDocumentSnapshot.__proto__),
    id: core.String,
    reference: cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)),
    metadata: cloud_firestore.SnapshotMetadata,
    exists: core.bool
  }));
  dart.setLibraryUri(cloud_firestore._JsonDocumentSnapshot, I[102]);
  dart.setFieldSignature(cloud_firestore._JsonDocumentSnapshot, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonDocumentSnapshot.__proto__),
    [S$0._firestore$2]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$0._delegate$7]: dart.finalFieldType(platform_interface_document_snapshot.DocumentSnapshotPlatform),
    [S$0.___JsonDocumentSnapshot_reference]: dart.fieldType(dart.nullable(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)))),
    [S$0.___JsonDocumentSnapshot_metadata]: dart.fieldType(dart.nullable(cloud_firestore.SnapshotMetadata))
  }));
  const _is__WithConverterDocumentSnapshot_default = Symbol('_is__WithConverterDocumentSnapshot_default');
  cloud_firestore._WithConverterDocumentSnapshot$ = dart.generic(T => {
    var __t$_WithConverterDocumentReferenceOfT = () => (__t$_WithConverterDocumentReferenceOfT = dart.constFn(cloud_firestore._WithConverterDocumentReference$(T)))();
    class _WithConverterDocumentSnapshot extends core.Object {
      static ['_#new#tearOff'](T, _originalDocumentSnapshot, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterDocumentSnapshot$(T)).new(_originalDocumentSnapshot, _fromFirestore, _toFirestore);
      }
      data() {
        let t145, t144;
        if (!this[S$0._originalDocumentSnapshot].exists) return null;
        t144 = this[S$0._originalDocumentSnapshot];
        t145 = null;
        return this[S$0._fromFirestore](t144, t145);
      }
      get exists() {
        return this[S$0._originalDocumentSnapshot].exists;
      }
      get id() {
        return this[S$0._originalDocumentSnapshot].id;
      }
      get metadata() {
        return this[S$0._originalDocumentSnapshot].metadata;
      }
      get reference() {
        return new (__t$_WithConverterDocumentReferenceOfT()).new(this[S$0._originalDocumentSnapshot].reference, this[S$0._fromFirestore], this[S$0._toFirestore]);
      }
      get(field) {
        return this[S$0._originalDocumentSnapshot].get(field);
      }
      _get(field) {
        return this[S$0._originalDocumentSnapshot]._get(field);
      }
    }
    (_WithConverterDocumentSnapshot.new = function(_originalDocumentSnapshot, _fromFirestore, _toFirestore) {
      this[S$0._originalDocumentSnapshot] = _originalDocumentSnapshot;
      this[S$0._fromFirestore] = _fromFirestore;
      this[S$0._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterDocumentSnapshot.prototype;
    dart.addTypeTests(_WithConverterDocumentSnapshot);
    _WithConverterDocumentSnapshot.prototype[_is__WithConverterDocumentSnapshot_default] = true;
    dart.addTypeCaches(_WithConverterDocumentSnapshot);
    _WithConverterDocumentSnapshot[dart.implements] = () => [cloud_firestore.DocumentSnapshot$(T)];
    dart.setMethodSignature(_WithConverterDocumentSnapshot, () => ({
      __proto__: dart.getMethods(_WithConverterDocumentSnapshot.__proto__),
      data: dart.fnType(dart.nullable(T), []),
      get: dart.fnType(dart.dynamic, [core.Object]),
      _get: dart.fnType(dart.dynamic, [core.Object])
    }));
    dart.setGetterSignature(_WithConverterDocumentSnapshot, () => ({
      __proto__: dart.getGetters(_WithConverterDocumentSnapshot.__proto__),
      exists: core.bool,
      id: core.String,
      metadata: cloud_firestore.SnapshotMetadata,
      reference: cloud_firestore.DocumentReference$(T)
    }));
    dart.setLibraryUri(_WithConverterDocumentSnapshot, I[102]);
    dart.setFieldSignature(_WithConverterDocumentSnapshot, () => ({
      __proto__: dart.getFields(_WithConverterDocumentSnapshot.__proto__),
      [S$0._originalDocumentSnapshot]: dart.finalFieldType(cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic))),
      [S$0._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$0._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    return _WithConverterDocumentSnapshot;
  });
  cloud_firestore._WithConverterDocumentSnapshot = cloud_firestore._WithConverterDocumentSnapshot$();
  dart.addTypeTests(cloud_firestore._WithConverterDocumentSnapshot, _is__WithConverterDocumentSnapshot_default);
  platform_interface_field_value.FieldValuePlatform = class FieldValuePlatform extends core.Object {
    static ['_#new#tearOff'](_delegate) {
      return new platform_interface_field_value.FieldValuePlatform.new(_delegate);
    }
    static getDelegate(fieldValue) {
      return fieldValue[S$0._delegate$9];
    }
  };
  (platform_interface_field_value.FieldValuePlatform.new = function(_delegate) {
    this[S$0._delegate$9] = _delegate;
    ;
  }).prototype = platform_interface_field_value.FieldValuePlatform.prototype;
  dart.addTypeTests(platform_interface_field_value.FieldValuePlatform);
  dart.addTypeCaches(platform_interface_field_value.FieldValuePlatform);
  dart.setStaticMethodSignature(platform_interface_field_value.FieldValuePlatform, () => ['getDelegate']);
  dart.setLibraryUri(platform_interface_field_value.FieldValuePlatform, I[106]);
  dart.setFieldSignature(platform_interface_field_value.FieldValuePlatform, () => ({
    __proto__: dart.getFields(platform_interface_field_value.FieldValuePlatform.__proto__),
    [S$0._delegate$9]: dart.finalFieldType(dart.dynamic)
  }));
  cloud_firestore.FieldValue = class FieldValue extends platform_interface_field_value.FieldValuePlatform {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.FieldValue.__(_delegate);
    }
    static arrayUnion(elements) {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.arrayUnion(core.List.as(cloud_firestore._CodecUtility.valueEncode(elements))));
    }
    static arrayRemove(elements) {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.arrayRemove(core.List.as(cloud_firestore._CodecUtility.valueEncode(elements))));
    }
    static delete() {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.delete());
    }
    static serverTimestamp() {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.serverTimestamp());
    }
    static increment(value) {
      return new cloud_firestore.FieldValue.__(cloud_firestore.FieldValue._factory.increment(value));
    }
    toString() {
      return dart.str(dart.wrapType(cloud_firestore.FieldValue)) + "(" + dart.str(this[S$0._delegate$7]) + ")";
    }
    _equals(other) {
      if (other == null) return false;
      return cloud_firestore.FieldValue.is(other) && dart.equals(other[S$0._delegate$7], this[S$0._delegate$7]);
    }
    get hashCode() {
      return dart.hashCode(this[S$0._delegate$7]);
    }
  };
  (cloud_firestore.FieldValue.__ = function(_delegate) {
    this[S$0._delegate$7] = _delegate;
    cloud_firestore.FieldValue.__proto__.new.call(this, _delegate);
    ;
  }).prototype = cloud_firestore.FieldValue.prototype;
  dart.addTypeTests(cloud_firestore.FieldValue);
  dart.addTypeCaches(cloud_firestore.FieldValue);
  dart.setStaticMethodSignature(cloud_firestore.FieldValue, () => ['arrayUnion', 'arrayRemove', 'delete', 'serverTimestamp', 'increment']);
  dart.setLibraryUri(cloud_firestore.FieldValue, I[102]);
  dart.setFieldSignature(cloud_firestore.FieldValue, () => ({
    __proto__: dart.getFields(cloud_firestore.FieldValue.__proto__),
    [S$0._delegate$7]: dart.fieldType(dart.dynamic)
  }));
  dart.setStaticFieldSignature(cloud_firestore.FieldValue, () => ['_factory']);
  dart.defineExtensionMethods(cloud_firestore.FieldValue, ['toString', '_equals']);
  dart.defineExtensionAccessors(cloud_firestore.FieldValue, ['hashCode']);
  dart.defineLazy(cloud_firestore.FieldValue, {
    /*cloud_firestore.FieldValue._factory*/get _factory() {
      return platform_interface_field_value_factory.FieldValueFactoryPlatform.instance;
    }
  }, false);
  cloud_firestore._FilterObject = class _FilterObject extends core.Object {
    build() {
      dart.throw(new core.UnimplementedError.new());
    }
    static ['_#new#tearOff']() {
      return new cloud_firestore._FilterObject.new();
    }
  };
  (cloud_firestore._FilterObject.new = function() {
    ;
  }).prototype = cloud_firestore._FilterObject.prototype;
  dart.addTypeTests(cloud_firestore._FilterObject);
  dart.addTypeCaches(cloud_firestore._FilterObject);
  dart.setMethodSignature(cloud_firestore._FilterObject, () => ({
    __proto__: dart.getMethods(cloud_firestore._FilterObject.__proto__),
    build: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [])
  }));
  dart.setLibraryUri(cloud_firestore._FilterObject, I[102]);
  cloud_firestore._FilterQuery = class _FilterQuery extends cloud_firestore._FilterObject {
    static ['_#new#tearOff'](_field, _operator, _value) {
      return new cloud_firestore._FilterQuery.new(_field, _operator, _value);
    }
    build() {
      return new (T$.IdentityMapOfString$ObjectN()).from(["fieldPath", this[S$0._field], "op", this[S$0._operator], "value", this[S$0._value$1]]);
    }
  };
  (cloud_firestore._FilterQuery.new = function(_field, _operator, _value) {
    this[S$0._field] = _field;
    this[S$0._operator] = _operator;
    this[S$0._value$1] = _value;
    if (!(field_path_type.FieldPathType.is(_field) || field_path.FieldPath.is(_field))) dart.assertFailed(null, I[107], 15, 16, "_field is FieldPathType || _field is FieldPath");
    ;
  }).prototype = cloud_firestore._FilterQuery.prototype;
  dart.addTypeTests(cloud_firestore._FilterQuery);
  dart.addTypeCaches(cloud_firestore._FilterQuery);
  dart.setLibraryUri(cloud_firestore._FilterQuery, I[102]);
  dart.setFieldSignature(cloud_firestore._FilterQuery, () => ({
    __proto__: dart.getFields(cloud_firestore._FilterQuery.__proto__),
    [S$0._field]: dart.finalFieldType(core.Object),
    [S$0._operator]: dart.finalFieldType(core.String),
    [S$0._value$1]: dart.finalFieldType(dart.nullable(core.Object))
  }));
  cloud_firestore._FilterOperator = class _FilterOperator extends cloud_firestore._FilterObject {
    static ['_#new#tearOff'](_operator, _queries) {
      return new cloud_firestore._FilterOperator.new(_operator, _queries);
    }
    build() {
      return new (T$.IdentityMapOfString$Object()).from(["op", this[S$0._operator], "queries", this[S$0._queries][S$.$map](T$.MapOfString$ObjectN(), dart.fn(e => e.build(), T$._FilterObjectToMapOfString$ObjectN()))[S$.$toList]()]);
    }
  };
  (cloud_firestore._FilterOperator.new = function(_operator, _queries) {
    this[S$0._operator] = _operator;
    this[S$0._queries] = _queries;
    ;
  }).prototype = cloud_firestore._FilterOperator.prototype;
  dart.addTypeTests(cloud_firestore._FilterOperator);
  dart.addTypeCaches(cloud_firestore._FilterOperator);
  dart.setMethodSignature(cloud_firestore._FilterOperator, () => ({
    __proto__: dart.getMethods(cloud_firestore._FilterOperator.__proto__),
    build: dart.fnType(core.Map$(core.String, core.Object), [])
  }));
  dart.setLibraryUri(cloud_firestore._FilterOperator, I[102]);
  dart.setFieldSignature(cloud_firestore._FilterOperator, () => ({
    __proto__: dart.getFields(cloud_firestore._FilterOperator.__proto__),
    [S$0._operator]: dart.finalFieldType(core.String),
    [S$0._queries]: dart.finalFieldType(core.List$(cloud_firestore._FilterObject))
  }));
  filters.FilterPlatformInterface = class FilterPlatformInterface extends core.Object {
    toJson() {
      dart.throw(new core.UnimplementedError.new("toJson() is not implemented"));
    }
  };
  (filters.FilterPlatformInterface.new = function() {
    ;
  }).prototype = filters.FilterPlatformInterface.prototype;
  dart.addTypeTests(filters.FilterPlatformInterface);
  dart.addTypeCaches(filters.FilterPlatformInterface);
  dart.setMethodSignature(filters.FilterPlatformInterface, () => ({
    __proto__: dart.getMethods(filters.FilterPlatformInterface.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [])
  }));
  dart.setLibraryUri(filters.FilterPlatformInterface, I[108]);
  cloud_firestore.Filter = class Filter extends filters.FilterPlatformInterface {
    get [S$0._filterQuery]() {
      return this[S$0.__Filter__filterQuery_isSet] ? this[S$0.__Filter__filterQuery] : dart.throw(new _internal.LateError.fieldNI("_filterQuery"));
    }
    set [S$0._filterQuery](_filterQuery$35param) {
      if (this[S$0.__Filter__filterQuery_isSet])
        dart.throw(new _internal.LateError.fieldAI("_filterQuery"));
      else {
        this[S$0.__Filter__filterQuery_isSet] = true;
        this[S$0.__Filter__filterQuery] = _filterQuery$35param;
      }
    }
    get [S$0._filterOperator]() {
      return this[S$0.__Filter__filterOperator_isSet] ? this[S$0.__Filter__filterOperator] : dart.throw(new _internal.LateError.fieldNI("_filterOperator"));
    }
    set [S$0._filterOperator](_filterOperator$35param) {
      if (this[S$0.__Filter__filterOperator_isSet])
        dart.throw(new _internal.LateError.fieldAI("_filterOperator"));
      else {
        this[S$0.__Filter__filterOperator_isSet] = true;
        this[S$0.__Filter__filterOperator] = _filterOperator$35param;
      }
    }
    static ['_#_#tearOff'](_filterQuery, _filterOperator) {
      return new cloud_firestore.Filter.__(_filterQuery, _filterOperator);
    }
    static ['_#new#tearOff'](field, opts) {
      let isEqualTo = opts && 'isEqualTo' in opts ? opts.isEqualTo : null;
      let isNotEqualTo = opts && 'isNotEqualTo' in opts ? opts.isNotEqualTo : null;
      let isLessThan = opts && 'isLessThan' in opts ? opts.isLessThan : null;
      let isLessThanOrEqualTo = opts && 'isLessThanOrEqualTo' in opts ? opts.isLessThanOrEqualTo : null;
      let isGreaterThan = opts && 'isGreaterThan' in opts ? opts.isGreaterThan : null;
      let isGreaterThanOrEqualTo = opts && 'isGreaterThanOrEqualTo' in opts ? opts.isGreaterThanOrEqualTo : null;
      let arrayContains = opts && 'arrayContains' in opts ? opts.arrayContains : null;
      let arrayContainsAny = opts && 'arrayContainsAny' in opts ? opts.arrayContainsAny : null;
      let whereIn = opts && 'whereIn' in opts ? opts.whereIn : null;
      let whereNotIn = opts && 'whereNotIn' in opts ? opts.whereNotIn : null;
      let isNull = opts && 'isNull' in opts ? opts.isNull : null;
      return new cloud_firestore.Filter.new(field, {isEqualTo: isEqualTo, isNotEqualTo: isNotEqualTo, isLessThan: isLessThan, isLessThanOrEqualTo: isLessThanOrEqualTo, isGreaterThan: isGreaterThan, isGreaterThanOrEqualTo: isGreaterThanOrEqualTo, arrayContains: arrayContains, arrayContainsAny: arrayContainsAny, whereIn: whereIn, whereNotIn: whereNotIn, isNull: isNull});
    }
    [S$0._getOperator](isEqualTo, isNotEqualTo, isLessThan, isLessThanOrEqualTo, isGreaterThan, isGreaterThanOrEqualTo, arrayContains, arrayContainsAny, whereIn, whereNotIn, isNull) {
      if (isEqualTo != null) return "==";
      if (isNotEqualTo != null) return "!=";
      if (isLessThan != null) return "<";
      if (isLessThanOrEqualTo != null) return "<=";
      if (isGreaterThan != null) return ">";
      if (isGreaterThanOrEqualTo != null) return ">=";
      if (arrayContains != null) return "array-contains";
      if (arrayContainsAny != null) return "array-contains-any";
      if (whereIn != null) return "in";
      if (whereNotIn != null) return "not-in";
      if (isNull != null) {
        if (dart.test(isNull)) {
          return "==";
        } else {
          return "!=";
        }
      }
      dart.throw(core.Exception.new("Exactly one operator must be specified"));
    }
    [S$0._getValue](isEqualTo, isNotEqualTo, isLessThan, isLessThanOrEqualTo, isGreaterThan, isGreaterThanOrEqualTo, arrayContains, arrayContainsAny, whereIn, whereNotIn, isNull) {
      if (isEqualTo != null) return isEqualTo;
      if (isNotEqualTo != null) return isNotEqualTo;
      if (isLessThan != null) return isLessThan;
      if (isLessThanOrEqualTo != null) return isLessThanOrEqualTo;
      if (isGreaterThan != null) return isGreaterThan;
      if (isGreaterThanOrEqualTo != null) return isGreaterThanOrEqualTo;
      if (arrayContains != null) return arrayContains;
      if (arrayContainsAny != null) return arrayContainsAny;
      if (whereIn != null) return whereIn;
      if (whereNotIn != null) return whereNotIn;
      if (isNull != null) {
        if (isNull === true) {
          return null;
        } else {
          return null;
        }
      }
      dart.throw(core.Exception.new("Exactly one operator must be specified"));
    }
    static or(filter1, filter2, filter3 = null, filter4 = null, filter5 = null, filter6 = null, filter7 = null, filter8 = null, filter9 = null, filter10 = null, filter11 = null, filter12 = null, filter13 = null, filter14 = null, filter15 = null, filter16 = null, filter17 = null, filter18 = null, filter19 = null, filter20 = null, filter21 = null, filter22 = null, filter23 = null, filter24 = null, filter25 = null, filter26 = null, filter27 = null, filter28 = null, filter29 = null, filter30 = null) {
      return cloud_firestore.Filter._generateFilter("OR", T$.JSArrayOfFilterN().of([filter1, filter2, filter3, filter4, filter5, filter6, filter7, filter8, filter9, filter10, filter11, filter12, filter13, filter14, filter15, filter16, filter17, filter18, filter19, filter20, filter21, filter22, filter23, filter24, filter25, filter26, filter27, filter28, filter29, filter30]));
    }
    static and(filter1, filter2, filter3 = null, filter4 = null, filter5 = null, filter6 = null, filter7 = null, filter8 = null, filter9 = null, filter10 = null, filter11 = null, filter12 = null, filter13 = null, filter14 = null, filter15 = null, filter16 = null, filter17 = null, filter18 = null, filter19 = null, filter20 = null, filter21 = null, filter22 = null, filter23 = null, filter24 = null, filter25 = null, filter26 = null, filter27 = null, filter28 = null, filter29 = null, filter30 = null) {
      return cloud_firestore.Filter._generateFilter("AND", T$.JSArrayOfFilterN().of([filter1, filter2, filter3, filter4, filter5, filter6, filter7, filter8, filter9, filter10, filter11, filter12, filter13, filter14, filter15, filter16, filter17, filter18, filter19, filter20, filter21, filter22, filter23, filter24, filter25, filter26, filter27, filter28, filter29, filter30]));
    }
    static _generateFilter(operator, filters) {
      if (!dart.fn(() => {
        let filtersUsed = filters[S$.$where](dart.fn(e => e != null, T$.FilterNTobool()))[S$.$length];
        return filtersUsed >= 2;
      }, T$.VoidTobool())()) dart.assertFailed("At least two filters must be specified", I[107], 375, 7, "() {\n        final filtersUsed = filters.where((e) => e != null).length;\n        return filtersUsed >= 2;\n      }()");
      return new cloud_firestore.Filter.__(null, new cloud_firestore._FilterOperator.new(operator, (() => {
        let t144 = T$.JSArrayOf_FilterObject().of([]);
        for (let filter of filters)
          if (filter != null && filter[S$0._filterQuery] != null)
            t144.push(dart.nullCheck(filter[S$0._filterQuery]));
          else if (filter != null && filter[S$0._filterOperator] != null) t144.push(dart.nullCheck(filter[S$0._filterOperator]));
        return t144;
      })()));
    }
    toJson() {
      if (this[S$0._filterOperator] != null) {
        return dart.nullCheck(this[S$0._filterOperator]).build();
      } else if (this[S$0._filterQuery] != null) {
        return dart.nullCheck(this[S$0._filterQuery]).build();
      }
      dart.throw(core.Exception.new("Exactly one operator must be specified"));
    }
  };
  (cloud_firestore.Filter.__ = function(_filterQuery, _filterOperator) {
    this[S$0.__Filter__filterQuery] = null;
    this[S$0.__Filter__filterQuery_isSet] = false;
    this[S$0.__Filter__filterOperator] = null;
    this[S$0.__Filter__filterOperator_isSet] = false;
    this[S$0.__Filter__filterQuery_isSet] = true;
    this[S$0.__Filter__filterQuery] = _filterQuery;
    this[S$0.__Filter__filterOperator_isSet] = true;
    this[S$0.__Filter__filterOperator] = _filterOperator;
    if (!(_filterQuery != null && _filterOperator == null || _filterQuery == null && _filterOperator != null)) dart.assertFailed("Exactly one operator must be specified", I[107], 54, 11, "(_filterQuery != null && _filterOperator == null) ||\n              (_filterQuery == null && _filterOperator != null)");
    ;
  }).prototype = cloud_firestore.Filter.prototype;
  (cloud_firestore.Filter.new = function(field, opts) {
    let isEqualTo = opts && 'isEqualTo' in opts ? opts.isEqualTo : null;
    let isNotEqualTo = opts && 'isNotEqualTo' in opts ? opts.isNotEqualTo : null;
    let isLessThan = opts && 'isLessThan' in opts ? opts.isLessThan : null;
    let isLessThanOrEqualTo = opts && 'isLessThanOrEqualTo' in opts ? opts.isLessThanOrEqualTo : null;
    let isGreaterThan = opts && 'isGreaterThan' in opts ? opts.isGreaterThan : null;
    let isGreaterThanOrEqualTo = opts && 'isGreaterThanOrEqualTo' in opts ? opts.isGreaterThanOrEqualTo : null;
    let arrayContains = opts && 'arrayContains' in opts ? opts.arrayContains : null;
    let arrayContainsAny = opts && 'arrayContainsAny' in opts ? opts.arrayContainsAny : null;
    let whereIn = opts && 'whereIn' in opts ? opts.whereIn : null;
    let whereNotIn = opts && 'whereNotIn' in opts ? opts.whereNotIn : null;
    let isNull = opts && 'isNull' in opts ? opts.isNull : null;
    this[S$0.__Filter__filterQuery] = null;
    this[S$0.__Filter__filterQuery_isSet] = false;
    this[S$0.__Filter__filterOperator] = null;
    this[S$0.__Filter__filterOperator_isSet] = false;
    if (!dart.fn(() => {
      let operators = T$.JSArrayOfObjectN().of([isEqualTo, isNotEqualTo, isLessThan, isLessThanOrEqualTo, isGreaterThan, isGreaterThanOrEqualTo, arrayContains, arrayContainsAny, whereIn, whereNotIn, isNull]);
      let operatorsUsed = operators[S$.$where](dart.fn(e => e != null, T$.ObjectNTobool()))[S$.$length];
      return operatorsUsed === 1;
    }, T$.VoidTobool())()) dart.assertFailed("Exactly one operator must be specified", I[107], 99, 11, "() {\n            final operators = [\n              isEqualTo,\n              isNotEqualTo,\n              isLessThan,\n              isLessThanOrEqualTo,\n              isGreaterThan,\n              isGreaterThanOrEqualTo,\n              arrayContains,\n              arrayContainsAny,\n              whereIn,\n              whereNotIn,\n              isNull,\n            ];\n            final operatorsUsed = operators.where((e) => e != null).length;\n            return operatorsUsed == 1;\n          }()");
    if (!(typeof field == 'string' || field_path.FieldPath.is(field) || field_path_type.FieldPathType.is(field))) dart.assertFailed(null, I[107], 119, 11, "field is String || field is FieldPath || field is FieldPathType");
    let _field = typeof field == 'string' ? new field_path.FieldPath.fromString(field) : field;
    this[S$0._filterQuery] = new cloud_firestore._FilterQuery.new(_field, this[S$0._getOperator](isEqualTo, isNotEqualTo, isLessThan, isLessThanOrEqualTo, isGreaterThan, isGreaterThanOrEqualTo, arrayContains, arrayContainsAny, whereIn, whereNotIn, isNull), cloud_firestore._CodecUtility.valueEncode(this[S$0._getValue](isEqualTo, isNotEqualTo, isLessThan, isLessThanOrEqualTo, isGreaterThan, isGreaterThanOrEqualTo, arrayContains, arrayContainsAny, whereIn, whereNotIn, isNull)));
    this[S$0._filterOperator] = null;
  }).prototype = cloud_firestore.Filter.prototype;
  dart.addTypeTests(cloud_firestore.Filter);
  dart.addTypeCaches(cloud_firestore.Filter);
  dart.setMethodSignature(cloud_firestore.Filter, () => ({
    __proto__: dart.getMethods(cloud_firestore.Filter.__proto__),
    [S$0._getOperator]: dart.fnType(core.String, [dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.bool)]),
    [S$0._getValue]: dart.fnType(dart.nullable(core.Object), [dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Object), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.Iterable$(dart.nullable(core.Object))), dart.nullable(core.bool)])
  }));
  dart.setStaticMethodSignature(cloud_firestore.Filter, () => ['or', 'and', '_generateFilter']);
  dart.setGetterSignature(cloud_firestore.Filter, () => ({
    __proto__: dart.getGetters(cloud_firestore.Filter.__proto__),
    [S$0._filterQuery]: dart.nullable(cloud_firestore._FilterQuery),
    [S$0._filterOperator]: dart.nullable(cloud_firestore._FilterOperator)
  }));
  dart.setSetterSignature(cloud_firestore.Filter, () => ({
    __proto__: dart.getSetters(cloud_firestore.Filter.__proto__),
    [S$0._filterQuery]: dart.nullable(cloud_firestore._FilterQuery),
    [S$0._filterOperator]: dart.nullable(cloud_firestore._FilterOperator)
  }));
  dart.setLibraryUri(cloud_firestore.Filter, I[102]);
  dart.setFieldSignature(cloud_firestore.Filter, () => ({
    __proto__: dart.getFields(cloud_firestore.Filter.__proto__),
    [S$0.__Filter__filterQuery]: dart.fieldType(dart.nullable(cloud_firestore._FilterQuery)),
    [S$0.__Filter__filterQuery_isSet]: dart.fieldType(core.bool),
    [S$0.__Filter__filterOperator]: dart.fieldType(dart.nullable(cloud_firestore._FilterOperator)),
    [S$0.__Filter__filterOperator_isSet]: dart.fieldType(core.bool)
  }));
  cloud_firestore.FirebaseFirestore = class FirebaseFirestore extends firebase_core_platform_interface.FirebasePluginPlatform {
    get app() {
      return this[S$0.app$1];
    }
    set app(value) {
      this[S$0.app$1] = value;
    }
    get databaseURL() {
      return this[S$0.databaseURL$2];
    }
    set databaseURL(value) {
      this[S$0.databaseURL$2] = value;
    }
    static ['_#_#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new cloud_firestore.FirebaseFirestore.__({app: app, databaseURL: databaseURL});
    }
    static get instance() {
      return cloud_firestore.FirebaseFirestore.instanceFor({app: firebase_core.Firebase.app()});
    }
    static instanceFor(opts) {
      let t145;
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      let url = (t145 = databaseURL, t145 == null ? "(default)" : t145);
      let cacheKey = app.name + "|" + url;
      if (cloud_firestore.FirebaseFirestore._cachedInstances[S$.$containsKey](cacheKey)) {
        return dart.nullCheck(cloud_firestore.FirebaseFirestore._cachedInstances[S$.$_get](cacheKey));
      }
      let newInstance = new cloud_firestore.FirebaseFirestore.__({app: app, databaseURL: url});
      cloud_firestore.FirebaseFirestore._cachedInstances[S$.$_set](cacheKey, newInstance);
      return newInstance;
    }
    get [S$0._delegate$7]() {
      let t145;
      t145 = this[S$0._delegatePackingProperty$1];
      return t145 == null ? this[S$0._delegatePackingProperty$1] = platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: this.app, databaseURL: this.databaseURL}) : t145;
    }
    collection(collectionPath) {
      if (!collectionPath[S$.$isNotEmpty]) dart.assertFailed("a collectionPath path must be a non-empty string", I[109], 74, 7, "collectionPath.isNotEmpty");
      if (!!collectionPath[S$.$contains]("//")) dart.assertFailed("a collection path must not contain \"//\"", I[109], 78, 7, "!collectionPath.contains('//')");
      if (!cloud_firestore_platform_interface.isValidCollectionPath(collectionPath)) dart.assertFailed("a collection path must point to a valid collection.", I[109], 82, 7, "isValidCollectionPath(collectionPath)");
      return new cloud_firestore._JsonCollectionReference.new(this, this[S$0._delegate$7].collection(collectionPath));
    }
    batch() {
      return new cloud_firestore.WriteBatch.__(this, this[S$0._delegate$7].batch());
    }
    clearPersistence() {
      return this[S$0._delegate$7].clearPersistence();
    }
    enablePersistence(persistenceSettings = null) {
      return async.async(dart.void, (function* enablePersistence() {
        return this[S$0._delegate$7].enablePersistence(persistenceSettings);
      }).bind(this));
    }
    loadBundle(bundle) {
      return new cloud_firestore.LoadBundleTask.__(this[S$0._delegate$7].loadBundle(bundle));
    }
    useFirestoreEmulator(host, port, opts) {
      let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : false;
      let automaticHostMapping = opts && 'automaticHostMapping' in opts ? opts.automaticHostMapping : true;
      {
        try {
          this[S$0._delegate$7].useEmulator(host, port);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            let strError = e[S$.$toString]();
            if (!strError[S$.$contains]("failed-precondition")) {
              dart.rethrow(e$);
            }
          } else
            throw e$;
        }
      }
    }
    namedQueryWithConverterGet(T, name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[52] || CT.C52;
      let fromFirestore = opts && 'fromFirestore' in opts ? opts.fromFirestore : null;
      let toFirestore = opts && 'toFirestore' in opts ? opts.toFirestore : null;
      return async.async(cloud_firestore.QuerySnapshot$(T), (function* namedQueryWithConverterGet() {
        let snapshot = (yield this.namedQueryGet(name, {options: options}));
        return new (cloud_firestore._WithConverterQuerySnapshot$(T)).new(snapshot, fromFirestore, toFirestore);
      }).bind(this));
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[52] || CT.C52;
      return async.async(T$.QuerySnapshotOfMapOfString$dynamic(), (function* namedQueryGet() {
        let snapshotDelegate = (yield this[S$0._delegate$7].namedQueryGet(name, {options: options}));
        return new cloud_firestore._JsonQuerySnapshot.new(cloud_firestore.FirebaseFirestore.instance, snapshotDelegate);
      }).bind(this));
    }
    collectionGroup(collectionPath) {
      if (!collectionPath[S$.$isNotEmpty]) dart.assertFailed("a collection path must be a non-empty string", I[109], 190, 7, "collectionPath.isNotEmpty");
      if (!!collectionPath[S$.$contains]("/")) dart.assertFailed("a collection path passed to collectionGroup() cannot contain \"/\"", I[109], 194, 7, "!collectionPath.contains('/')");
      return new cloud_firestore._JsonQuery.new(this, this[S$0._delegate$7].collectionGroup(collectionPath));
    }
    disableNetwork() {
      return this[S$0._delegate$7].disableNetwork();
    }
    doc(documentPath) {
      if (!documentPath[S$.$isNotEmpty]) dart.assertFailed("a document path must be a non-empty string", I[109], 213, 7, "documentPath.isNotEmpty");
      if (!!documentPath[S$.$contains]("//")) dart.assertFailed("a collection path must not contain \"//\"", I[109], 217, 7, "!documentPath.contains('//')");
      if (!cloud_firestore_platform_interface.isValidDocumentPath(documentPath)) dart.assertFailed("a document path must point to a valid document.", I[109], 221, 7, "isValidDocumentPath(documentPath)");
      return new cloud_firestore._JsonDocumentReference.new(this, this[S$0._delegate$7].doc(documentPath));
    }
    enableNetwork() {
      return this[S$0._delegate$7].enableNetwork();
    }
    snapshotsInSync() {
      return this[S$0._delegate$7].snapshotsInSync();
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[9] || CT.C9;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      return async.async(T, (function* runTransaction() {
        let output = null;
        let output$35isSet = false;
        function output$35get() {
          return output$35isSet ? output : dart.throw(new _internal.LateError.localNI("output"));
        }
        function output$35set(output$35param) {
          output$35isSet = true;
          return output = output$35param;
        }
        yield this[S$0._delegate$7].runTransaction(core.Null, dart.fn(transaction => async.async(core.Null, (function*() {
          output$35set(yield transactionHandler(new cloud_firestore.Transaction.__(this, transaction)));
        }).bind(this)), T$.TransactionPlatformToFutureOfNull()), {timeout: timeout, maxAttempts: maxAttempts});
        return output$35get();
      }).bind(this));
    }
    set settings(settings) {
      this[S$0._delegate$7].settings = this[S$0._delegate$7].settings.copyWith({sslEnabled: settings.sslEnabled, persistenceEnabled: settings.persistenceEnabled, host: settings.host, cacheSizeBytes: settings.cacheSizeBytes});
    }
    get settings() {
      return this[S$0._delegate$7].settings;
    }
    terminate() {
      return this[S$0._delegate$7].terminate();
    }
    waitForPendingWrites() {
      return this[S$0._delegate$7].waitForPendingWrites();
    }
    setIndexConfiguration(opts) {
      let indexes = opts && 'indexes' in opts ? opts.indexes : null;
      let fieldOverrides = opts && 'fieldOverrides' in opts ? opts.fieldOverrides : null;
      return async.async(dart.void, (function* setIndexConfiguration() {
        let t150, t150$;
        let json = convert.jsonEncode(new (T$.IdentityMapOfString$ListOfMapOfString$dynamic()).from(["indexes", indexes[S$.$map](T$.MapOfString$dynamic(), dart.fn(index => index.toMap(), T$.IndexToMapOfString$dynamic()))[S$.$toList](), "fieldOverrides", (t150$ = (t150 = fieldOverrides, t150 == null ? null : t150[S$.$map](T$.MapOfString$dynamic(), dart.fn(index => index.toMap(), T$.FieldOverridesToMapOfString$dynamic()))[S$.$toList]()), t150$ == null ? T$.JSArrayOfMapOfString$dynamic().of([]) : t150$)]));
        return this[S$0._delegate$7].setIndexConfiguration(json);
      }).bind(this));
    }
    setIndexConfigurationFromJSON(json) {
      return async.async(dart.void, (function* setIndexConfigurationFromJSON() {
        return this[S$0._delegate$7].setIndexConfiguration(json);
      }).bind(this));
    }
    static setLoggingEnabled(enabled) {
      return platform_interface_firestore.FirebaseFirestorePlatform.instance.setLoggingEnabled(enabled);
    }
    _equals(other) {
      if (other == null) return false;
      return cloud_firestore.FirebaseFirestore.is(other) && other.app.name === this.app.name;
    }
    get hashCode() {
      return core.Object.hash(this.app.name, this.app.options);
    }
    toString() {
      return dart.str(dart.wrapType(cloud_firestore.FirebaseFirestore)) + "(app: " + this.app.name + ")";
    }
  };
  (cloud_firestore.FirebaseFirestore.__ = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    this[S$0._delegatePackingProperty$1] = null;
    this[S$0.app$1] = app;
    this[S$0.databaseURL$2] = databaseURL;
    cloud_firestore.FirebaseFirestore.__proto__.new.call(this, app.name, "plugins.flutter.io/firebase_firestore");
    if (this.databaseURL[S$0.$endsWith]("/")) {
      this.databaseURL = this.databaseURL[S$0.$substring](0, this.databaseURL.length - 1);
    }
  }).prototype = cloud_firestore.FirebaseFirestore.prototype;
  dart.addTypeTests(cloud_firestore.FirebaseFirestore);
  dart.addTypeCaches(cloud_firestore.FirebaseFirestore);
  dart.setMethodSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getMethods(cloud_firestore.FirebaseFirestore.__proto__),
    collection: dart.fnType(cloud_firestore.CollectionReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
    batch: dart.fnType(cloud_firestore.WriteBatch, []),
    clearPersistence: dart.fnType(async.Future$(dart.void), []),
    enablePersistence: dart.fnType(async.Future$(dart.void), [], [dart.nullable(persistence_settings.PersistenceSettings)]),
    loadBundle: dart.fnType(cloud_firestore.LoadBundleTask, [typed_data.Uint8List]),
    useFirestoreEmulator: dart.fnType(dart.void, [core.String, core.int], {automaticHostMapping: core.bool, sslEnabled: core.bool}, {}),
    namedQueryWithConverterGet: dart.gFnType(T => [async.Future$(cloud_firestore.QuerySnapshot$(T)), [core.String], {options: get_options.GetOptions}, {fromFirestore: dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)]), toFirestore: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)])}], T => [dart.nullable(core.Object)]),
    namedQueryGet: dart.fnType(async.Future$(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))), [core.String], {options: get_options.GetOptions}, {}),
    collectionGroup: dart.fnType(cloud_firestore.Query$(core.Map$(core.String, dart.dynamic)), [core.String]),
    disableNetwork: dart.fnType(async.Future$(dart.void), []),
    doc: dart.fnType(cloud_firestore.DocumentReference$(core.Map$(core.String, dart.dynamic)), [core.String]),
    enableNetwork: dart.fnType(async.Future$(dart.void), []),
    snapshotsInSync: dart.fnType(async.Stream$(dart.void), []),
    runTransaction: dart.gFnType(T => [async.Future$(T), [dart.fnType(async.Future$(T), [cloud_firestore.Transaction])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)]),
    terminate: dart.fnType(async.Future$(dart.void), []),
    waitForPendingWrites: dart.fnType(async.Future$(dart.void), []),
    setIndexConfiguration: dart.fnType(async.Future$(dart.void), [], {fieldOverrides: dart.nullable(core.List$(platform_interface_index_definitions.FieldOverrides))}, {indexes: core.List$(platform_interface_index_definitions.Index)}),
    setIndexConfigurationFromJSON: dart.fnType(async.Future$(dart.void), [core.String])
  }));
  dart.setStaticMethodSignature(cloud_firestore.FirebaseFirestore, () => ['instanceFor', 'setLoggingEnabled']);
  dart.setGetterSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getGetters(cloud_firestore.FirebaseFirestore.__proto__),
    [S$0._delegate$7]: platform_interface_firestore.FirebaseFirestorePlatform,
    settings: settings.Settings
  }));
  dart.setSetterSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getSetters(cloud_firestore.FirebaseFirestore.__proto__),
    settings: settings.Settings
  }));
  dart.setStaticGetterSignature(cloud_firestore.FirebaseFirestore, () => ['instance']);
  dart.setLibraryUri(cloud_firestore.FirebaseFirestore, I[102]);
  dart.setFieldSignature(cloud_firestore.FirebaseFirestore, () => ({
    __proto__: dart.getFields(cloud_firestore.FirebaseFirestore.__proto__),
    [S$0._delegatePackingProperty$1]: dart.fieldType(dart.nullable(platform_interface_firestore.FirebaseFirestorePlatform)),
    app: dart.fieldType(firebase_core.FirebaseApp),
    databaseURL: dart.fieldType(core.String)
  }));
  dart.setStaticFieldSignature(cloud_firestore.FirebaseFirestore, () => ['_cachedInstances']);
  dart.defineExtensionMethods(cloud_firestore.FirebaseFirestore, ['_equals', 'toString']);
  dart.defineExtensionAccessors(cloud_firestore.FirebaseFirestore, ['hashCode']);
  dart.defineLazy(cloud_firestore.FirebaseFirestore, {
    /*cloud_firestore.FirebaseFirestore._cachedInstances*/get _cachedInstances() {
      return new (T$.IdentityMapOfString$FirebaseFirestore()).new();
    }
  }, false);
  cloud_firestore.LoadBundleTask = class LoadBundleTask extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.LoadBundleTask.__(_delegate);
    }
    get stream() {
      let t151, t150;
      t150 = this[S$0.__LoadBundleTask_stream];
      return t150 == null ? (t151 = this[S$0._delegate$7].stream.map(cloud_firestore.LoadBundleTaskSnapshot, dart.fn(event => new cloud_firestore.LoadBundleTaskSnapshot.__(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.as(event)), T$.dynamicToLoadBundleTaskSnapshot())), this[S$0.__LoadBundleTask_stream] == null ? this[S$0.__LoadBundleTask_stream] = t151 : dart.throw(new _internal.LateError.fieldADI("stream"))) : t150;
    }
  };
  (cloud_firestore.LoadBundleTask.__ = function(_delegate) {
    this[S$0.__LoadBundleTask_stream] = null;
    this[S$0._delegate$7] = _delegate;
    platform_interface_load_bundle_task.LoadBundleTaskPlatform.verify(this[S$0._delegate$7]);
  }).prototype = cloud_firestore.LoadBundleTask.prototype;
  dart.addTypeTests(cloud_firestore.LoadBundleTask);
  dart.addTypeCaches(cloud_firestore.LoadBundleTask);
  dart.setGetterSignature(cloud_firestore.LoadBundleTask, () => ({
    __proto__: dart.getGetters(cloud_firestore.LoadBundleTask.__proto__),
    stream: async.Stream$(cloud_firestore.LoadBundleTaskSnapshot)
  }));
  dart.setLibraryUri(cloud_firestore.LoadBundleTask, I[102]);
  dart.setFieldSignature(cloud_firestore.LoadBundleTask, () => ({
    __proto__: dart.getFields(cloud_firestore.LoadBundleTask.__proto__),
    [S$0._delegate$7]: dart.finalFieldType(platform_interface_load_bundle_task.LoadBundleTaskPlatform),
    [S$0.__LoadBundleTask_stream]: dart.fieldType(dart.nullable(async.Stream$(cloud_firestore.LoadBundleTaskSnapshot)))
  }));
  cloud_firestore.LoadBundleTaskSnapshot = class LoadBundleTaskSnapshot extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.LoadBundleTaskSnapshot.__(_delegate);
    }
    get bytesLoaded() {
      return this[S$0._delegate$7].bytesLoaded;
    }
    get documentsLoaded() {
      return this[S$0._delegate$7].documentsLoaded;
    }
    get taskState() {
      return this[S$0._delegate$7].taskState;
    }
    get totalBytes() {
      return this[S$0._delegate$7].totalBytes;
    }
    get totalDocuments() {
      return this[S$0._delegate$7].totalDocuments;
    }
  };
  (cloud_firestore.LoadBundleTaskSnapshot.__ = function(_delegate) {
    this[S$0._delegate$7] = _delegate;
    platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.verify(this[S$0._delegate$7]);
  }).prototype = cloud_firestore.LoadBundleTaskSnapshot.prototype;
  dart.addTypeTests(cloud_firestore.LoadBundleTaskSnapshot);
  dart.addTypeCaches(cloud_firestore.LoadBundleTaskSnapshot);
  dart.setGetterSignature(cloud_firestore.LoadBundleTaskSnapshot, () => ({
    __proto__: dart.getGetters(cloud_firestore.LoadBundleTaskSnapshot.__proto__),
    bytesLoaded: core.int,
    documentsLoaded: core.int,
    taskState: load_bundle_task_state.LoadBundleTaskState,
    totalBytes: core.int,
    totalDocuments: core.int
  }));
  dart.setLibraryUri(cloud_firestore.LoadBundleTaskSnapshot, I[102]);
  dart.setFieldSignature(cloud_firestore.LoadBundleTaskSnapshot, () => ({
    __proto__: dart.getFields(cloud_firestore.LoadBundleTaskSnapshot.__proto__),
    [S$0._delegate$7]: dart.fieldType(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  const _is_Query_default$ = Symbol('_is_Query_default');
  cloud_firestore.Query$ = dart.generic(T => {
    class Query extends core.Object {}
    (Query.new = function() {
      ;
    }).prototype = Query.prototype;
    dart.addTypeTests(Query);
    Query.prototype[_is_Query_default$] = true;
    dart.addTypeCaches(Query);
    dart.setLibraryUri(Query, I[102]);
    return Query;
  });
  cloud_firestore.Query = cloud_firestore.Query$();
  dart.addTypeTests(cloud_firestore.Query, _is_Query_default$);
  const _is_QueryDocumentSnapshot_default = Symbol('_is_QueryDocumentSnapshot_default');
  cloud_firestore.QueryDocumentSnapshot$ = dart.generic(T => {
    class QueryDocumentSnapshot extends core.Object {}
    (QueryDocumentSnapshot.new = function() {
      ;
    }).prototype = QueryDocumentSnapshot.prototype;
    dart.addTypeTests(QueryDocumentSnapshot);
    QueryDocumentSnapshot.prototype[_is_QueryDocumentSnapshot_default] = true;
    dart.addTypeCaches(QueryDocumentSnapshot);
    QueryDocumentSnapshot[dart.implements] = () => [cloud_firestore.DocumentSnapshot$(T)];
    dart.setLibraryUri(QueryDocumentSnapshot, I[102]);
    return QueryDocumentSnapshot;
  });
  cloud_firestore.QueryDocumentSnapshot = cloud_firestore.QueryDocumentSnapshot$();
  dart.addTypeTests(cloud_firestore.QueryDocumentSnapshot, _is_QueryDocumentSnapshot_default);
  cloud_firestore._JsonQueryDocumentSnapshot = class _JsonQueryDocumentSnapshot extends cloud_firestore._JsonDocumentSnapshot {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonQueryDocumentSnapshot.new(_firestore, _delegate);
    }
    get exists() {
      return true;
    }
    data() {
      return dart.nullCheck(super.data());
    }
  };
  (cloud_firestore._JsonQueryDocumentSnapshot.new = function(_firestore, _delegate) {
    cloud_firestore._JsonQueryDocumentSnapshot.__proto__.new.call(this, cloud_firestore.FirebaseFirestore.as(_firestore), platform_interface_document_snapshot.DocumentSnapshotPlatform.as(_delegate));
    ;
  }).prototype = cloud_firestore._JsonQueryDocumentSnapshot.prototype;
  dart.addTypeTests(cloud_firestore._JsonQueryDocumentSnapshot);
  dart.addTypeCaches(cloud_firestore._JsonQueryDocumentSnapshot);
  cloud_firestore._JsonQueryDocumentSnapshot[dart.implements] = () => [cloud_firestore.QueryDocumentSnapshot$(core.Map$(core.String, dart.dynamic))];
  dart.setMethodSignature(cloud_firestore._JsonQueryDocumentSnapshot, () => ({
    __proto__: dart.getMethods(cloud_firestore._JsonQueryDocumentSnapshot.__proto__),
    data: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(cloud_firestore._JsonQueryDocumentSnapshot, I[102]);
  const _is__WithConverterQueryDocumentSnapshot_default = Symbol('_is__WithConverterQueryDocumentSnapshot_default');
  cloud_firestore._WithConverterQueryDocumentSnapshot$ = dart.generic(T => {
    class _WithConverterQueryDocumentSnapshot extends cloud_firestore._WithConverterDocumentSnapshot$(T) {
      static ['_#new#tearOff'](T, originalQueryDocumentSnapshot, fromFirestore, toFirestore) {
        return new (cloud_firestore._WithConverterQueryDocumentSnapshot$(T)).new(originalQueryDocumentSnapshot, fromFirestore, toFirestore);
      }
      get exists() {
        return true;
      }
      data() {
        return T.as(super.data());
      }
    }
    (_WithConverterQueryDocumentSnapshot.new = function(originalQueryDocumentSnapshot, fromFirestore, toFirestore) {
      _WithConverterQueryDocumentSnapshot.__proto__.new.call(this, originalQueryDocumentSnapshot, fromFirestore, toFirestore);
      ;
    }).prototype = _WithConverterQueryDocumentSnapshot.prototype;
    dart.addTypeTests(_WithConverterQueryDocumentSnapshot);
    _WithConverterQueryDocumentSnapshot.prototype[_is__WithConverterQueryDocumentSnapshot_default] = true;
    dart.addTypeCaches(_WithConverterQueryDocumentSnapshot);
    _WithConverterQueryDocumentSnapshot[dart.implements] = () => [cloud_firestore.QueryDocumentSnapshot$(T)];
    dart.setMethodSignature(_WithConverterQueryDocumentSnapshot, () => ({
      __proto__: dart.getMethods(_WithConverterQueryDocumentSnapshot.__proto__),
      data: dart.fnType(T, [])
    }));
    dart.setLibraryUri(_WithConverterQueryDocumentSnapshot, I[102]);
    return _WithConverterQueryDocumentSnapshot;
  });
  cloud_firestore._WithConverterQueryDocumentSnapshot = cloud_firestore._WithConverterQueryDocumentSnapshot$();
  dart.addTypeTests(cloud_firestore._WithConverterQueryDocumentSnapshot, _is__WithConverterQueryDocumentSnapshot_default);
  const _is_QuerySnapshot_default = Symbol('_is_QuerySnapshot_default');
  cloud_firestore.QuerySnapshot$ = dart.generic(T => {
    class QuerySnapshot extends core.Object {}
    (QuerySnapshot.new = function() {
      ;
    }).prototype = QuerySnapshot.prototype;
    dart.addTypeTests(QuerySnapshot);
    QuerySnapshot.prototype[_is_QuerySnapshot_default] = true;
    dart.addTypeCaches(QuerySnapshot);
    dart.setLibraryUri(QuerySnapshot, I[102]);
    return QuerySnapshot;
  });
  cloud_firestore.QuerySnapshot = cloud_firestore.QuerySnapshot$();
  dart.addTypeTests(cloud_firestore.QuerySnapshot, _is_QuerySnapshot_default);
  cloud_firestore._JsonQuerySnapshot = class _JsonQuerySnapshot extends core.Object {
    static ['_#new#tearOff'](_firestore, _delegate) {
      return new cloud_firestore._JsonQuerySnapshot.new(_firestore, _delegate);
    }
    get docs() {
      return this[S$0._delegate$7].docs[S$.$map](cloud_firestore._JsonQueryDocumentSnapshot, dart.fn(documentDelegate => new cloud_firestore._JsonQueryDocumentSnapshot.new(this[S$0._firestore$2], documentDelegate), T$.DocumentSnapshotPlatformTo_JsonQueryDocumentSnapshot()))[S$.$toList]();
    }
    get docChanges() {
      return this[S$0._delegate$7].docChanges[S$.$map](cloud_firestore._JsonDocumentChange, dart.fn(documentDelegate => new cloud_firestore._JsonDocumentChange.new(this[S$0._firestore$2], documentDelegate), T$.DocumentChangePlatformTo_JsonDocumentChange()))[S$.$toList]();
    }
    get metadata() {
      return new cloud_firestore.SnapshotMetadata.__(this[S$0._delegate$7].metadata);
    }
    get size() {
      return this[S$0._delegate$7].size;
    }
  };
  (cloud_firestore._JsonQuerySnapshot.new = function(_firestore, _delegate) {
    this[S$0._firestore$2] = _firestore;
    this[S$0._delegate$7] = _delegate;
    platform_interface_query_snapshot.QuerySnapshotPlatform.verify(this[S$0._delegate$7]);
  }).prototype = cloud_firestore._JsonQuerySnapshot.prototype;
  dart.addTypeTests(cloud_firestore._JsonQuerySnapshot);
  dart.addTypeCaches(cloud_firestore._JsonQuerySnapshot);
  cloud_firestore._JsonQuerySnapshot[dart.implements] = () => [cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))];
  dart.setGetterSignature(cloud_firestore._JsonQuerySnapshot, () => ({
    __proto__: dart.getGetters(cloud_firestore._JsonQuerySnapshot.__proto__),
    docs: core.List$(cloud_firestore.QueryDocumentSnapshot$(core.Map$(core.String, dart.dynamic))),
    docChanges: core.List$(cloud_firestore.DocumentChange$(core.Map$(core.String, dart.dynamic))),
    metadata: cloud_firestore.SnapshotMetadata,
    size: core.int
  }));
  dart.setLibraryUri(cloud_firestore._JsonQuerySnapshot, I[102]);
  dart.setFieldSignature(cloud_firestore._JsonQuerySnapshot, () => ({
    __proto__: dart.getFields(cloud_firestore._JsonQuerySnapshot.__proto__),
    [S$0._firestore$2]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$0._delegate$7]: dart.finalFieldType(platform_interface_query_snapshot.QuerySnapshotPlatform)
  }));
  const _is__WithConverterQuerySnapshot_default = Symbol('_is__WithConverterQuerySnapshot_default');
  cloud_firestore._WithConverterQuerySnapshot$ = dart.generic(T => {
    var __t$QueryDocumentSnapshotOfT = () => (__t$QueryDocumentSnapshotOfT = dart.constFn(cloud_firestore.QueryDocumentSnapshot$(T)))();
    var __t$JSArrayOfQueryDocumentSnapshotOfT = () => (__t$JSArrayOfQueryDocumentSnapshotOfT = dart.constFn(_interceptors.JSArray$(__t$QueryDocumentSnapshotOfT())))();
    var __t$_WithConverterQueryDocumentSnapshotOfT = () => (__t$_WithConverterQueryDocumentSnapshotOfT = dart.constFn(cloud_firestore._WithConverterQueryDocumentSnapshot$(T)))();
    var __t$DocumentChangeOfT = () => (__t$DocumentChangeOfT = dart.constFn(cloud_firestore.DocumentChange$(T)))();
    var __t$JSArrayOfDocumentChangeOfT = () => (__t$JSArrayOfDocumentChangeOfT = dart.constFn(_interceptors.JSArray$(__t$DocumentChangeOfT())))();
    var __t$_WithConverterDocumentChangeOfT = () => (__t$_WithConverterDocumentChangeOfT = dart.constFn(cloud_firestore._WithConverterDocumentChange$(T)))();
    class _WithConverterQuerySnapshot extends core.Object {
      static ['_#new#tearOff'](T, _originalQuerySnapshot, _fromFirestore, _toFirestore) {
        return new (cloud_firestore._WithConverterQuerySnapshot$(T)).new(_originalQuerySnapshot, _fromFirestore, _toFirestore);
      }
      get docs() {
        return (() => {
          let t150 = __t$JSArrayOfQueryDocumentSnapshotOfT().of([]);
          for (let snapshot of this[S$0._originalQuerySnapshot].docs)
            t150.push(new (__t$_WithConverterQueryDocumentSnapshotOfT()).new(snapshot, this[S$0._fromFirestore], this[S$0._toFirestore]));
          return t150;
        })();
      }
      get docChanges() {
        return (() => {
          let t151 = __t$JSArrayOfDocumentChangeOfT().of([]);
          for (let change of this[S$0._originalQuerySnapshot].docChanges)
            t151.push(new (__t$_WithConverterDocumentChangeOfT()).new(change, this[S$0._fromFirestore], this[S$0._toFirestore]));
          return t151;
        })();
      }
      get metadata() {
        return this[S$0._originalQuerySnapshot].metadata;
      }
      get size() {
        return this[S$0._originalQuerySnapshot].size;
      }
    }
    (_WithConverterQuerySnapshot.new = function(_originalQuerySnapshot, _fromFirestore, _toFirestore) {
      this[S$0._originalQuerySnapshot] = _originalQuerySnapshot;
      this[S$0._fromFirestore] = _fromFirestore;
      this[S$0._toFirestore] = _toFirestore;
      ;
    }).prototype = _WithConverterQuerySnapshot.prototype;
    dart.addTypeTests(_WithConverterQuerySnapshot);
    _WithConverterQuerySnapshot.prototype[_is__WithConverterQuerySnapshot_default] = true;
    dart.addTypeCaches(_WithConverterQuerySnapshot);
    _WithConverterQuerySnapshot[dart.implements] = () => [cloud_firestore.QuerySnapshot$(T)];
    dart.setGetterSignature(_WithConverterQuerySnapshot, () => ({
      __proto__: dart.getGetters(_WithConverterQuerySnapshot.__proto__),
      docs: core.List$(cloud_firestore.QueryDocumentSnapshot$(T)),
      docChanges: core.List$(cloud_firestore.DocumentChange$(T)),
      metadata: cloud_firestore.SnapshotMetadata,
      size: core.int
    }));
    dart.setLibraryUri(_WithConverterQuerySnapshot, I[102]);
    dart.setFieldSignature(_WithConverterQuerySnapshot, () => ({
      __proto__: dart.getFields(_WithConverterQuerySnapshot.__proto__),
      [S$0._originalQuerySnapshot]: dart.finalFieldType(cloud_firestore.QuerySnapshot$(core.Map$(core.String, dart.dynamic))),
      [S$0._fromFirestore]: dart.finalFieldType(dart.fnType(T, [cloud_firestore.DocumentSnapshot$(core.Map$(core.String, dart.dynamic)), dart.nullable(cloud_firestore.SnapshotOptions)])),
      [S$0._toFirestore]: dart.finalFieldType(dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [T, dart.nullable(set_options.SetOptions)]))
    }));
    return _WithConverterQuerySnapshot;
  });
  cloud_firestore._WithConverterQuerySnapshot = cloud_firestore._WithConverterQuerySnapshot$();
  dart.addTypeTests(cloud_firestore._WithConverterQuerySnapshot, _is__WithConverterQuerySnapshot_default);
  cloud_firestore.SnapshotMetadata = class SnapshotMetadata extends core.Object {
    static ['_#_#tearOff'](_delegate) {
      return new cloud_firestore.SnapshotMetadata.__(_delegate);
    }
    get hasPendingWrites() {
      return this[S$0._delegate$7].hasPendingWrites;
    }
    get isFromCache() {
      return this[S$0._delegate$7].isFromCache;
    }
  };
  (cloud_firestore.SnapshotMetadata.__ = function(_delegate) {
    this[S$0._delegate$7] = _delegate;
    ;
  }).prototype = cloud_firestore.SnapshotMetadata.prototype;
  dart.addTypeTests(cloud_firestore.SnapshotMetadata);
  dart.addTypeCaches(cloud_firestore.SnapshotMetadata);
  dart.setGetterSignature(cloud_firestore.SnapshotMetadata, () => ({
    __proto__: dart.getGetters(cloud_firestore.SnapshotMetadata.__proto__),
    hasPendingWrites: core.bool,
    isFromCache: core.bool
  }));
  dart.setLibraryUri(cloud_firestore.SnapshotMetadata, I[102]);
  dart.setFieldSignature(cloud_firestore.SnapshotMetadata, () => ({
    __proto__: dart.getFields(cloud_firestore.SnapshotMetadata.__proto__),
    [S$0._delegate$7]: dart.fieldType(snapshot_metadata.SnapshotMetadataPlatform)
  }));
  cloud_firestore.Transaction = class Transaction extends core.Object {
    static ['_#_#tearOff'](_firestore, _delegate) {
      return new cloud_firestore.Transaction.__(_firestore, _delegate);
    }
    get(T, documentReference) {
      return async.async(cloud_firestore.DocumentSnapshot$(T), (function* get() {
        let documentSnapshotPlatform = (yield this[S$0._delegate$7].get(documentReference.path));
        let snapshot = new cloud_firestore._JsonDocumentSnapshot.new(this[S$0._firestore$2], documentSnapshotPlatform);
        if (cloud_firestore.DocumentSnapshot$(T).is(snapshot)) {
          return cloud_firestore.DocumentSnapshot$(T).as(snapshot);
        }
        let withConverterDocRef = cloud_firestore._WithConverterDocumentReference$(T).as(documentReference);
        return new (cloud_firestore._WithConverterDocumentSnapshot$(T)).new(snapshot, withConverterDocRef[S$0._fromFirestore], dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()]).as(withConverterDocRef[S$0._toFirestore]));
      }).bind(this));
    }
    delete(documentReference) {
      if (!documentReference.firestore._equals(this[S$0._firestore$2])) dart.assertFailed("the document provided is from a different Firestore instance", I[110], 50, 7, "documentReference.firestore == _firestore");
      return new cloud_firestore.Transaction.__(this[S$0._firestore$2], this[S$0._delegate$7].delete(documentReference.path));
    }
    update(documentReference, data) {
      if (!documentReference.firestore._equals(this[S$0._firestore$2])) dart.assertFailed("the document provided is from a different Firestore instance", I[110], 67, 7, "documentReference.firestore == _firestore");
      return new cloud_firestore.Transaction.__(this[S$0._firestore$2], this[S$0._delegate$7].update(documentReference.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(data))));
    }
    set(T, documentReference, data, options = null) {
      let t154, t153, t152;
      if (!documentReference.firestore._equals(this[S$0._firestore$2])) dart.assertFailed("the document provided is from a different Firestore instance", I[110], 89, 7, "documentReference.firestore == _firestore");
      let firestoreData = null;
      if (cloud_firestore._JsonDocumentReference.is(documentReference)) {
        firestoreData = T$.MapOfString$dynamic().as(data);
      } else {
        let withConverterDoc = cloud_firestore._WithConverterDocumentReference$(T).as(documentReference);
        firestoreData = (t152 = withConverterDoc, t153 = data, t154 = options, dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()]).as(t152[S$0._toFirestore])(t153, t154));
      }
      return new cloud_firestore.Transaction.__(this[S$0._firestore$2], this[S$0._delegate$7].set(documentReference.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(firestoreData)), options));
    }
  };
  (cloud_firestore.Transaction.__ = function(_firestore, _delegate) {
    this[S$0._firestore$2] = _firestore;
    this[S$0._delegate$7] = _delegate;
    platform_interface_transaction.TransactionPlatform.verify(this[S$0._delegate$7]);
  }).prototype = cloud_firestore.Transaction.prototype;
  dart.addTypeTests(cloud_firestore.Transaction);
  dart.addTypeCaches(cloud_firestore.Transaction);
  dart.setMethodSignature(cloud_firestore.Transaction, () => ({
    __proto__: dart.getMethods(cloud_firestore.Transaction.__proto__),
    get: dart.gFnType(T => [async.Future$(cloud_firestore.DocumentSnapshot$(T)), [cloud_firestore.DocumentReference$(T)]], T => [dart.nullable(core.Object)]),
    delete: dart.fnType(cloud_firestore.Transaction, [cloud_firestore.DocumentReference$(dart.nullable(core.Object))]),
    update: dart.fnType(cloud_firestore.Transaction, [cloud_firestore.DocumentReference$(dart.nullable(core.Object)), core.Map$(core.String, dart.dynamic)]),
    set: dart.gFnType(T => [cloud_firestore.Transaction, [cloud_firestore.DocumentReference$(T), T], [dart.nullable(set_options.SetOptions)]], T => [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(cloud_firestore.Transaction, I[102]);
  dart.setFieldSignature(cloud_firestore.Transaction, () => ({
    __proto__: dart.getFields(cloud_firestore.Transaction.__proto__),
    [S$0._firestore$2]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$0._delegate$7]: dart.finalFieldType(platform_interface_transaction.TransactionPlatform)
  }));
  cloud_firestore._CodecUtility = class _CodecUtility extends core.Object {
    static replaceValueWithDelegatesInMap(data) {
      if (data == null) {
        return null;
      }
      let output = T$.LinkedHashMapOfString$dynamic().from(data);
      output[S$0.$updateAll](dart.fn((_, value) => cloud_firestore._CodecUtility.valueEncode(value), T$.StringAnddynamicTodynamic()));
      return output;
    }
    static replaceValueWithDelegatesInMapFieldPath(data) {
      if (data == null) {
        return null;
      }
      let output = new (T$.LinkedMapOfFieldPath$dynamic()).new();
      data[S$.$forEach](dart.fn((key, value) => {
        if (field_path.FieldPath.is(key)) {
          output[S$.$_set](key, cloud_firestore._CodecUtility.valueEncode(value));
        } else if (typeof key == 'string') {
          output[S$.$_set](new field_path.FieldPath.fromString(key), cloud_firestore._CodecUtility.valueEncode(value));
        } else {
          dart.throw(new core.StateError.new("Invalid key type for map. Expected String or FieldPath, but got " + dart.str(key) + ": " + dart.str(key[S$.$runtimeType]) + "."));
        }
      }, T$.ObjectAnddynamicTovoid()));
      return output;
    }
    static replaceValueWithDelegatesInArray(data) {
      if (data == null) {
        return null;
      }
      return core.List.from(data)[S$.$map](dart.dynamic, C[162] || CT.C162)[S$.$toList]();
    }
    static replaceDelegatesWithValueInMap(data, firestore) {
      if (data == null) {
        return null;
      }
      let output = T$.LinkedHashMapOfString$dynamic().from(data);
      output[S$0.$updateAll](dart.fn((_, value) => cloud_firestore._CodecUtility.valueDecode(value, firestore), T$.StringAnddynamicTodynamic()));
      return output;
    }
    static replaceDelegatesWithValueInArray(data, firestore) {
      if (data == null) {
        return null;
      }
      return core.List.from(data)[S$.$map](dart.dynamic, dart.fn(value => cloud_firestore._CodecUtility.valueDecode(value, firestore), T$.dynamicTodynamic()))[S$.$toList]();
    }
    static valueEncode(value) {
      if (T$.DocumentReferenceOfObjectN().is(value)) {
        return value[S$0._delegate$7];
      } else if (core.Iterable.is(value)) {
        return cloud_firestore._CodecUtility.replaceValueWithDelegatesInArray(value);
      } else if (core.Map.is(value)) {
        return cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(value);
      }
      return value;
    }
    static valueDecode(value, firestore) {
      if (platform_interface_document_reference.DocumentReferencePlatform.is(value)) {
        return new cloud_firestore._JsonDocumentReference.new(firestore, value);
      } else if (core.List.is(value)) {
        return cloud_firestore._CodecUtility.replaceDelegatesWithValueInArray(value, firestore);
      } else if (core.Map.is(value)) {
        return cloud_firestore._CodecUtility.replaceDelegatesWithValueInMap(value, firestore);
      }
      return value;
    }
    static ['_#new#tearOff']() {
      return new cloud_firestore._CodecUtility.new();
    }
  };
  (cloud_firestore._CodecUtility.new = function() {
    ;
  }).prototype = cloud_firestore._CodecUtility.prototype;
  dart.addTypeTests(cloud_firestore._CodecUtility);
  dart.addTypeCaches(cloud_firestore._CodecUtility);
  dart.setStaticMethodSignature(cloud_firestore._CodecUtility, () => ['replaceValueWithDelegatesInMap', 'replaceValueWithDelegatesInMapFieldPath', 'replaceValueWithDelegatesInArray', 'replaceDelegatesWithValueInMap', 'replaceDelegatesWithValueInArray', 'valueEncode', 'valueDecode']);
  dart.setLibraryUri(cloud_firestore._CodecUtility, I[102]);
  cloud_firestore.WriteBatch = class WriteBatch extends core.Object {
    static ['_#_#tearOff'](_firestore, _delegate) {
      return new cloud_firestore.WriteBatch.__(_firestore, _delegate);
    }
    commit() {
      return this[S$0._delegate$7].commit();
    }
    delete(document) {
      if (!document.firestore._equals(this[S$0._firestore$2])) dart.assertFailed("the document provided is from a different Firestore instance", I[111], 29, 7, "document.firestore == _firestore");
      return this[S$0._delegate$7].delete(document.path);
    }
    set(T, document, data, options = null) {
      let t154, t153, t152;
      if (!document.firestore._equals(this[S$0._firestore$2])) dart.assertFailed("the document provided is from a different Firestore instance", I[111], 47, 7, "document.firestore == _firestore");
      let firestoreData = null;
      if (cloud_firestore._JsonDocumentReference.is(document)) {
        firestoreData = T$.MapOfString$dynamic().as(data);
      } else {
        let withConverterDoc = cloud_firestore._WithConverterDocumentReference$(T).as(document);
        firestoreData = (t152 = withConverterDoc, t153 = data, t154 = options, dart.fnType(T$.MapOfString$ObjectN(), [T, T$.SetOptionsN()]).as(t152[S$0._toFirestore])(t153, t154));
      }
      return this[S$0._delegate$7].set(document.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(firestoreData)), options);
    }
    update(document, data) {
      if (!document.firestore._equals(this[S$0._firestore$2])) dart.assertFailed("the document provided is from a different Firestore instance", I[111], 71, 7, "document.firestore == _firestore");
      return this[S$0._delegate$7].update(document.path, dart.nullCheck(cloud_firestore._CodecUtility.replaceValueWithDelegatesInMap(data)));
    }
  };
  (cloud_firestore.WriteBatch.__ = function(_firestore, _delegate) {
    this[S$0._firestore$2] = _firestore;
    this[S$0._delegate$7] = _delegate;
    platform_interface_write_batch.WriteBatchPlatform.verify(this[S$0._delegate$7]);
  }).prototype = cloud_firestore.WriteBatch.prototype;
  dart.addTypeTests(cloud_firestore.WriteBatch);
  dart.addTypeCaches(cloud_firestore.WriteBatch);
  dart.setMethodSignature(cloud_firestore.WriteBatch, () => ({
    __proto__: dart.getMethods(cloud_firestore.WriteBatch.__proto__),
    commit: dart.fnType(async.Future$(dart.void), []),
    delete: dart.fnType(dart.void, [cloud_firestore.DocumentReference$(dart.nullable(core.Object))]),
    set: dart.gFnType(T => [dart.void, [cloud_firestore.DocumentReference$(T), T], [dart.nullable(set_options.SetOptions)]], T => [dart.nullable(core.Object)]),
    update: dart.fnType(dart.void, [cloud_firestore.DocumentReference$(dart.nullable(core.Object)), core.Map$(core.String, dart.dynamic)])
  }));
  dart.setLibraryUri(cloud_firestore.WriteBatch, I[102]);
  dart.setFieldSignature(cloud_firestore.WriteBatch, () => ({
    __proto__: dart.getFields(cloud_firestore.WriteBatch.__proto__),
    [S$0._firestore$2]: dart.finalFieldType(cloud_firestore.FirebaseFirestore),
    [S$0._delegate$7]: dart.finalFieldType(platform_interface_write_batch.WriteBatchPlatform)
  }));
  dart.defineLazy(cloud_firestore, {
    /*cloud_firestore.notSetQueryParam*/get notSetQueryParam() {
      return C[10] || CT.C10;
    }
  }, false);
  storage_methods.StorageMethods = class StorageMethods extends core.Object {
    uploadImageToStorage(childName, file, isPost) {
      return async.async(core.String, (function* uploadImageToStorage() {
        let ref = this[S$0._storage].ref().child(childName).child(dart.nullCheck(this[S$0._auth$4].currentUser).uid);
        if (isPost) {
          let id = (C[163] || CT.C163).v1();
          ref = ref.child(id);
        }
        let uploadTask = ref.putData(file);
        let snapshot = (yield uploadTask);
        let downloadUrl = (yield snapshot.ref.getDownloadURL());
        return downloadUrl;
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new storage_methods.StorageMethods.new();
    }
  };
  (storage_methods.StorageMethods.new = function() {
    this[S$0._auth$4] = firebase_auth.FirebaseAuth.instance;
    this[S$0._storage] = firebase_storage.FirebaseStorage.instance;
    ;
  }).prototype = storage_methods.StorageMethods.prototype;
  dart.addTypeTests(storage_methods.StorageMethods);
  dart.addTypeCaches(storage_methods.StorageMethods);
  dart.setMethodSignature(storage_methods.StorageMethods, () => ({
    __proto__: dart.getMethods(storage_methods.StorageMethods.__proto__),
    uploadImageToStorage: dart.fnType(async.Future$(core.String), [core.String, typed_data.Uint8List, core.bool])
  }));
  dart.setLibraryUri(storage_methods.StorageMethods, I[112]);
  dart.setFieldSignature(storage_methods.StorageMethods, () => ({
    __proto__: dart.getFields(storage_methods.StorageMethods.__proto__),
    [S$0._auth$4]: dart.finalFieldType(firebase_auth.FirebaseAuth),
    [S$0._storage]: dart.finalFieldType(firebase_storage.FirebaseStorage)
  }));
  add_post_screen.AddPostScreen = class AddPostScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new add_post_screen.AddPostScreen.new({key: key});
    }
    createState() {
      return new add_post_screen._AddPostScreenState.new();
    }
  };
  (add_post_screen.AddPostScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    add_post_screen.AddPostScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = add_post_screen.AddPostScreen.prototype;
  dart.addTypeTests(add_post_screen.AddPostScreen);
  dart.addTypeCaches(add_post_screen.AddPostScreen);
  dart.setMethodSignature(add_post_screen.AddPostScreen, () => ({
    __proto__: dart.getMethods(add_post_screen.AddPostScreen.__proto__),
    createState: dart.fnType(add_post_screen._AddPostScreenState, [])
  }));
  dart.setLibraryUri(add_post_screen.AddPostScreen, I[113]);
  add_post_screen._AddPostScreenState = class _AddPostScreenState extends framework.State$(add_post_screen.AddPostScreen) {
    [S$0._selectImage](parentContext) {
      return async.async(dart.dynamic, (function* _selectImage() {
        return dialog.showDialog(dart.dynamic, {context: parentContext, builder: dart.fn(context => new dialog.SimpleDialog.new({title: C[164] || CT.C164, children: T$.JSArrayOfWidget().of([new dialog.SimpleDialogOption.new({padding: C[165] || CT.C165, child: C[166] || CT.C166, onPressed: dart.fn(() => async.async(dart.void, (function*() {
                  navigator.Navigator.pop(T$.ObjectN(), context);
                  let file = typed_data.Uint8List.as(yield utils.pickImage(image_source.ImageSource.camera));
                  this.setState(dart.fn(() => {
                    this[S$0._file] = file;
                  }, T$.VoidTovoid()));
                }).bind(this)), T$.VoidToFutureOfvoid())}), new dialog.SimpleDialogOption.new({padding: C[165] || CT.C165, child: C[167] || CT.C167, onPressed: dart.fn(() => async.async(dart.void, (function*() {
                  navigator.Navigator.of(context).pop(T$.ObjectN());
                  let file = typed_data.Uint8List.as(yield utils.pickImage(image_source.ImageSource.gallery));
                  this.setState(dart.fn(() => {
                    this[S$0._file] = file;
                  }, T$.VoidTovoid()));
                }).bind(this)), T$.VoidToFutureOfvoid())}), new dialog.SimpleDialogOption.new({padding: C[165] || CT.C165, child: C[169] || CT.C169, onPressed: dart.fn(() => {
                  navigator.Navigator.pop(T$.ObjectN(), context);
                }, T$.VoidTovoid())})])}), T$.BuildContextToSimpleDialog())});
      }).bind(this));
    }
    postImage(uid, username, profImage) {
      return async.async(dart.void, (function* postImage() {
        this.setState(dart.fn(() => {
          this.isLoading = true;
        }, T$.VoidTovoid()));
        try {
          let res = (yield new firestore_methods.FireStoreMethods.new().uploadPost(this[S$0._descriptionController].text, dart.nullCheck(this[S$0._file]), uid, username, profImage));
          if (res === "success") {
            this.setState(dart.fn(() => {
              this.isLoading = false;
            }, T$.VoidTovoid()));
            if (this.context.mounted) {
              utils.showSnackBar(this.context, "Posted!");
            }
            this.clearImage();
          } else {
            if (this.context.mounted) {
              utils.showSnackBar(this.context, res);
            }
          }
        } catch (e) {
          let err = dart.getThrown(e);
          if (core.Object.is(err)) {
            this.setState(dart.fn(() => {
              this.isLoading = false;
            }, T$.VoidTovoid()));
            utils.showSnackBar(this.context, err[S$.$toString]());
          } else
            throw e;
        }
      }).bind(this));
    }
    clearImage() {
      this.setState(dart.fn(() => {
        this[S$0._file] = null;
      }, T$.VoidTovoid()));
    }
    dispose() {
      super.dispose();
      this[S$0._descriptionController].dispose();
    }
    build(context) {
      let userProvider = provider$.Provider.of(user_provider.UserProvider, context);
      return this[S$0._file] == null ? new basic.Center.new({child: new icon_button.IconButton.new({icon: C[170] || CT.C170, onPressed: dart.fn(() => this[S$0._selectImage](context), T$.VoidTovoid())})}) : new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: colors$0.mobileBackgroundColor, leading: new icon_button.IconButton.new({icon: C[172] || CT.C172, onPressed: dart.bind(this, 'clearImage')}), title: C[174] || CT.C174, centerTitle: false, actions: T$.JSArrayOfWidget().of([new text_button.TextButton.new({onPressed: dart.fn(() => this.postImage(userProvider.getUser.uid, userProvider.getUser.username, userProvider.getUser.photoUrl), T$.VoidTovoid()), child: C[175] || CT.C175})])}), body: new basic.Column.new({children: T$.JSArrayOfWidget().of([this.isLoading ? C[184] || CT.C184 : C[185] || CT.C185, C[187] || CT.C187, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceAround, crossAxisAlignment: flex.CrossAxisAlignment.start, children: T$.JSArrayOfWidget().of([new circle_avatar.CircleAvatar.new({backgroundImage: new _network_image_web.NetworkImage.new(userProvider.getUser.photoUrl)}), new basic.SizedBox.new({width: media_query.MediaQuery.of(context).size.width * 0.3, child: new text_field.TextField.new({controller: this[S$0._descriptionController], decoration: C[188] || CT.C188, maxLines: 8})}), new basic.SizedBox.new({height: 45, width: 45, child: new basic.AspectRatio.new({aspectRatio: 487 / 451, child: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({image: new decoration_image.DecorationImage.new({fit: box_fit.BoxFit.fill, alignment: fractional_offset.FractionalOffset.topCenter, image: new image_provider.MemoryImage.new(dart.nullCheck(this[S$0._file]))})})})})})])}), C[187] || CT.C187])})});
    }
    static ['_#new#tearOff']() {
      return new add_post_screen._AddPostScreenState.new();
    }
  };
  (add_post_screen._AddPostScreenState.new = function() {
    this[S$0._file] = null;
    this.isLoading = false;
    this[S$0._descriptionController] = new editable_text.TextEditingController.new();
    add_post_screen._AddPostScreenState.__proto__.new.call(this);
    ;
  }).prototype = add_post_screen._AddPostScreenState.prototype;
  dart.addTypeTests(add_post_screen._AddPostScreenState);
  dart.addTypeCaches(add_post_screen._AddPostScreenState);
  dart.setMethodSignature(add_post_screen._AddPostScreenState, () => ({
    __proto__: dart.getMethods(add_post_screen._AddPostScreenState.__proto__),
    [S$0._selectImage]: dart.fnType(dart.dynamic, [framework.BuildContext]),
    postImage: dart.fnType(dart.void, [core.String, core.String, core.String]),
    clearImage: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(add_post_screen._AddPostScreenState, I[113]);
  dart.setFieldSignature(add_post_screen._AddPostScreenState, () => ({
    __proto__: dart.getFields(add_post_screen._AddPostScreenState.__proto__),
    [S$0._file]: dart.fieldType(dart.nullable(typed_data.Uint8List)),
    isLoading: dart.fieldType(core.bool),
    [S$0._descriptionController]: dart.finalFieldType(editable_text.TextEditingController)
  }));
  feed_screen.FeedScreen = class FeedScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new feed_screen.FeedScreen.new({key: key});
    }
    createState() {
      return new feed_screen._FeedScreenState.new();
    }
  };
  (feed_screen.FeedScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    feed_screen.FeedScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = feed_screen.FeedScreen.prototype;
  dart.addTypeTests(feed_screen.FeedScreen);
  dart.addTypeCaches(feed_screen.FeedScreen);
  dart.setMethodSignature(feed_screen.FeedScreen, () => ({
    __proto__: dart.getMethods(feed_screen.FeedScreen.__proto__),
    createState: dart.fnType(framework.State$(feed_screen.FeedScreen), [])
  }));
  dart.setLibraryUri(feed_screen.FeedScreen, I[114]);
  feed_screen._FeedScreenState = class _FeedScreenState extends framework.State$(feed_screen.FeedScreen) {
    get mobileBackgroundColor() {
      return null;
    }
    build(context) {
      let width = media_query.MediaQuery.of(context).size.width;
      return new scaffold.Scaffold.new({backgroundColor: T$.ColorN().as(this.mobileBackgroundColor), appBar: new app_bar.AppBar.new({backgroundColor: T$.ColorN().as(this.mobileBackgroundColor), centerTitle: false, title: C[192] || CT.C192, actions: T$.JSArrayOfWidget().of([new icon_button.IconButton.new({icon: C[194] || CT.C194, onPressed: dart.fn(() => {
              }, T$.VoidTovoid())})])}), body: new (T$.StreamBuilderOfQuerySnapshotOfMapOfString$dynamic()).new({stream: cloud_firestore.FirebaseFirestore.instance.collection("posts").snapshots(), builder: dart.fn((context, snapshot) => {
            if (snapshot.connectionState === async$.ConnectionState.waiting) {
              return C[2] || CT.C2;
            }
            return new scroll_view.ListView.builder({itemCount: dart.nullCheck(snapshot.data).docs[S$.$length], itemBuilder: dart.fn((ctx, index) => new container.Container.new({margin: new edge_insets.EdgeInsets.symmetric({horizontal: width > 600 ? width * 0.3 : 0, vertical: width > 600 ? 15 : 0}), child: new post_card.PostCard.new({snap: dart.nullCheck(snapshot.data).docs[S$.$_get](index).data()})}), T$.BuildContextAndintToContainer())});
          }, T$.BuildContextAndAsyncSnapshotOfQuerySnapshotOfMapOfString$dynamicToWidget())})});
    }
    static ['_#new#tearOff']() {
      return new feed_screen._FeedScreenState.new();
    }
  };
  (feed_screen._FeedScreenState.new = function() {
    feed_screen._FeedScreenState.__proto__.new.call(this);
    ;
  }).prototype = feed_screen._FeedScreenState.prototype;
  dart.addTypeTests(feed_screen._FeedScreenState);
  dart.addTypeCaches(feed_screen._FeedScreenState);
  dart.setMethodSignature(feed_screen._FeedScreenState, () => ({
    __proto__: dart.getMethods(feed_screen._FeedScreenState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(feed_screen._FeedScreenState, () => ({
    __proto__: dart.getGetters(feed_screen._FeedScreenState.__proto__),
    mobileBackgroundColor: dart.dynamic
  }));
  dart.setLibraryUri(feed_screen._FeedScreenState, I[114]);
  profile_screen.ProfileScreen = class ProfileScreen extends framework.StatefulWidget {
    get uid() {
      return this[S$0.uid$4];
    }
    set uid(value) {
      super.uid = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      return new profile_screen.ProfileScreen.new({key: key, uid: uid});
    }
    createState() {
      return new profile_screen._ProfileScreenState.new();
    }
  };
  (profile_screen.ProfileScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    this[S$0.uid$4] = uid;
    profile_screen.ProfileScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = profile_screen.ProfileScreen.prototype;
  dart.addTypeTests(profile_screen.ProfileScreen);
  dart.addTypeCaches(profile_screen.ProfileScreen);
  dart.setMethodSignature(profile_screen.ProfileScreen, () => ({
    __proto__: dart.getMethods(profile_screen.ProfileScreen.__proto__),
    createState: dart.fnType(framework.State$(profile_screen.ProfileScreen), [])
  }));
  dart.setLibraryUri(profile_screen.ProfileScreen, I[115]);
  dart.setFieldSignature(profile_screen.ProfileScreen, () => ({
    __proto__: dart.getFields(profile_screen.ProfileScreen.__proto__),
    uid: dart.finalFieldType(core.String)
  }));
  profile_screen._ProfileScreenState = class _ProfileScreenState extends framework.State$(profile_screen.ProfileScreen) {
    initState() {
      super.initState();
      this.getData();
    }
    getData() {
      return async.async(dart.dynamic, (function* getData() {
        this.setState(dart.fn(() => {
          this.isLoading = true;
        }, T$.VoidTovoid()));
        try {
          let userSnap = (yield cloud_firestore.FirebaseFirestore.instance.collection("users").doc(this.widget.uid).get());
          let postSnap = (yield cloud_firestore.FirebaseFirestore.instance.collection("posts").where("uid", {isEqualTo: dart.nullCheck(firebase_auth.FirebaseAuth.instance.currentUser).uid}).get());
          this.postLen = postSnap.docs[S$.$length];
          this.userData = dart.nullCheck(userSnap.data());
          this.followers = core.int.as(dart.dload(dart.nullCheck(userSnap.data())[S$.$_get]("followers"), 'length'));
          this.following = core.int.as(dart.dload(dart.nullCheck(userSnap.data())[S$.$_get]("following"), 'length'));
          this.isFollowing = core.bool.as(dart.dsend(dart.nullCheck(userSnap.data())[S$.$_get]("followers"), 'contains', [dart.nullCheck(firebase_auth.FirebaseAuth.instance.currentUser).uid]));
          this.setState(dart.fn(() => {
          }, T$.VoidTovoid()));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            utils.showSnackBar(this.context, e[S$.$toString]());
          } else
            throw e$;
        }
        this.setState(dart.fn(() => {
          this.isLoading = false;
        }, T$.VoidTovoid()));
      }).bind(this));
    }
    build(context) {
      return this.isLoading ? C[2] || CT.C2 : new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: colors$0.mobileBackgroundColor, title: new text$.Text.new(core.String.as(this.userData[S$.$_get]("username")), {style: new text_style.TextStyle.new({fontSize: 18, fontWeight: ui.FontWeight.w400})}), centerTitle: false}), body: new scroll_view.ListView.new({children: T$.JSArrayOfWidget().of([new basic.Padding.new({padding: C[196] || CT.C196, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.Row.new({children: T$.JSArrayOfWidget().of([new circle_avatar.CircleAvatar.new({backgroundColor: colors.Colors.grey, backgroundImage: new _network_image_web.NetworkImage.new(core.String.as(this.userData[S$.$_get]("photoUrl"))), radius: 40}), new basic.Expanded.new({flex: 1, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.Row.new({mainAxisSize: flex.MainAxisSize.max, mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T$.JSArrayOfWidget().of([this.buildStatColumn(this.postLen, "posts"), this.buildStatColumn(this.followers, "followers"), this.buildStatColumn(this.following, "following")])}), new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T$.JSArrayOfWidget().of([dart.nullCheck(firebase_auth.FirebaseAuth.instance.currentUser).uid === this.widget.uid ? new follow_button.FollowButton.new({text: "Sign Out", backgroundColor: colors$0.mobileBackgroundColor, textColor: colors$0.primaryColor, borderColor: colors.Colors.grey, function: dart.fn(() => async.async(core.Null, function*() {
                                    yield new auth_methods.AuthMethods.new().signOut();
                                    if (context.mounted) {
                                      navigator.Navigator.of(context).pushReplacement(dart.dynamic, T$.ObjectN(), new page.MaterialPageRoute.new({builder: dart.fn(context => C[6] || CT.C6, T$.BuildContextToLoginScreen())}));
                                    }
                                  }), T$.VoidToFutureOfNull())}) : this.isFollowing ? new follow_button.FollowButton.new({text: "Unfollow", backgroundColor: colors.Colors.blue, textColor: colors.Colors.white, borderColor: colors.Colors.blue, function: dart.fn(() => async.async(core.Null, (function*() {
                                    yield new firestore_methods.FireStoreMethods.new().followUser(dart.nullCheck(firebase_auth.FirebaseAuth.instance.currentUser).uid, core.String.as(this.userData[S$.$_get]("uid")));
                                    this.setState(dart.fn(() => {
                                      this.isFollowing = false;
                                      this.followers = this.followers - 1;
                                    }, T$.VoidTovoid()));
                                  }).bind(this)), T$.VoidToFutureOfNull())}) : new follow_button.FollowButton.new({text: "Follow", backgroundColor: colors.Colors.blue, textColor: colors.Colors.white, borderColor: colors.Colors.blue, function: dart.fn(() => async.async(core.Null, (function*() {
                                    yield new firestore_methods.FireStoreMethods.new().followUser(dart.nullCheck(firebase_auth.FirebaseAuth.instance.currentUser).uid, core.String.as(this.userData[S$.$_get]("uid")));
                                    this.setState(dart.fn(() => {
                                      this.isFollowing = true;
                                      this.followers = this.followers + 1;
                                    }, T$.VoidTovoid()));
                                  }).bind(this)), T$.VoidToFutureOfNull())})])})])})})])}), new container.Container.new({alignment: alignment.Alignment.centerLeft, padding: C[197] || CT.C197, child: new text$.Text.new(core.String.as(this.userData[S$.$_get]("username")), {style: C[198] || CT.C198})}), new container.Container.new({alignment: alignment.Alignment.centerLeft, padding: C[199] || CT.C199, child: new text$.Text.new(core.String.as(this.userData[S$.$_get]("bio")))})])})}), C[187] || CT.C187, new (T$.FutureBuilderOfQuerySnapshotOfMapOfString$dynamic()).new({future: cloud_firestore.FirebaseFirestore.instance.collection("posts").where("uid", {isEqualTo: this.widget.uid}).get(), builder: dart.fn((context, snapshot) => {
                if (snapshot.connectionState === async$.ConnectionState.waiting) {
                  return C[2] || CT.C2;
                }
                return new scroll_view.GridView.builder({shrinkWrap: true, itemCount: T$.intN().as(dart.dload(dart.dload(dart.nullCheck(snapshot.data), 'docs'), 'length')), gridDelegate: C[200] || CT.C200, itemBuilder: dart.fn((context, index) => {
                    let snap = T$.DocumentSnapshotOfObjectN().as(dart.dsend(dart.dload(dart.nullCheck(snapshot.data), 'docs'), '_get', [index]));
                    return new basic.SizedBox.new({child: new image.Image.new({image: new _network_image_web.NetworkImage.new(core.String.as(snap._get("postUrl"))), fit: box_fit.BoxFit.cover})});
                  }, T$.BuildContextAndintToSizedBox())});
              }, T$.BuildContextAndAsyncSnapshotOfQuerySnapshotOfMapOfString$dynamicToWidget())})])})});
    }
    buildStatColumn(num, label) {
      return new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new text$.Text.new(num[S$.$toString](), {style: C[201] || CT.C201}), new container.Container.new({margin: C[202] || CT.C202, child: new text$.Text.new(label, {style: C[203] || CT.C203})})])});
    }
    static ['_#new#tearOff']() {
      return new profile_screen._ProfileScreenState.new();
    }
  };
  (profile_screen._ProfileScreenState.new = function() {
    this.userData = new _js_helper.LinkedMap.new();
    this.postLen = 0;
    this.followers = 0;
    this.following = 0;
    this.isFollowing = false;
    this.isLoading = false;
    profile_screen._ProfileScreenState.__proto__.new.call(this);
    ;
  }).prototype = profile_screen._ProfileScreenState.prototype;
  dart.addTypeTests(profile_screen._ProfileScreenState);
  dart.addTypeCaches(profile_screen._ProfileScreenState);
  dart.setMethodSignature(profile_screen._ProfileScreenState, () => ({
    __proto__: dart.getMethods(profile_screen._ProfileScreenState.__proto__),
    getData: dart.fnType(dart.dynamic, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    buildStatColumn: dart.fnType(basic.Column, [core.int, core.String])
  }));
  dart.setLibraryUri(profile_screen._ProfileScreenState, I[115]);
  dart.setFieldSignature(profile_screen._ProfileScreenState, () => ({
    __proto__: dart.getFields(profile_screen._ProfileScreenState.__proto__),
    userData: dart.fieldType(core.Map),
    postLen: dart.fieldType(core.int),
    followers: dart.fieldType(core.int),
    following: dart.fieldType(core.int),
    isFollowing: dart.fieldType(core.bool),
    isLoading: dart.fieldType(core.bool)
  }));
  search_screen.SearchScreen = class SearchScreen extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new search_screen.SearchScreen.new({key: key});
    }
    createState() {
      return new search_screen._SearchScreenState.new();
    }
  };
  (search_screen.SearchScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    search_screen.SearchScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = search_screen.SearchScreen.prototype;
  dart.addTypeTests(search_screen.SearchScreen);
  dart.addTypeCaches(search_screen.SearchScreen);
  dart.setMethodSignature(search_screen.SearchScreen, () => ({
    __proto__: dart.getMethods(search_screen.SearchScreen.__proto__),
    createState: dart.fnType(framework.State$(search_screen.SearchScreen), [])
  }));
  dart.setLibraryUri(search_screen.SearchScreen, I[116]);
  search_screen._SearchScreenState = class _SearchScreenState extends framework.State$(search_screen.SearchScreen) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: colors$0.mobileBackgroundColor, title: new form.Form.new({child: new text_form_field.TextFormField.new({controller: this.searchController, decoration: C[204] || CT.C204, onFieldSubmitted: dart.fn(_ => {
                this.setState(dart.fn(() => {
                  this.isShowUsers = true;
                }, T$.VoidTovoid()));
              }, T$.StringTovoid())})})}), body: this.isShowUsers ? new (T$.FutureBuilderOfQuerySnapshotOfMapOfString$dynamic()).new({future: cloud_firestore.FirebaseFirestore.instance.collection("users").where("username", {isGreaterThanOrEqualTo: this.searchController.text}).get(), builder: dart.fn((context, snapshot) => {
            if (!snapshot.hasData) {
              return C[2] || CT.C2;
            }
            return new scroll_view.ListView.builder({itemCount: T$.intN().as(dart.dload(dart.dload(dart.nullCheck(snapshot.data), 'docs'), 'length')), itemBuilder: dart.fn((context, index) => new ink_well.InkWell.new({onTap: dart.fn(() => navigator.Navigator.of(context).push(dart.dynamic, new page.MaterialPageRoute.new({builder: dart.fn(context => new profile_screen.ProfileScreen.new({uid: core.String.as(dart.dsend(dart.dsend(dart.dload(dart.nullCheck(snapshot.data), 'docs'), '_get', [index]), '_get', ["uid"]))}), T$.BuildContextToProfileScreen())})), T$.VoidTovoid()), child: new list_tile.ListTile.new({leading: new circle_avatar.CircleAvatar.new({backgroundImage: new _network_image_web.NetworkImage.new(core.String.as(dart.dsend(dart.dsend(dart.dload(dart.nullCheck(snapshot.data), 'docs'), '_get', [index]), '_get', ["photoUrl"]))), radius: 16}), title: new text$.Text.new(core.String.as(dart.dsend(dart.dsend(dart.dload(dart.nullCheck(snapshot.data), 'docs'), '_get', [index]), '_get', ["username"])))})}), T$.BuildContextAndintToInkWell())});
          }, T$.BuildContextAndAsyncSnapshotOfQuerySnapshotOfMapOfString$dynamicToWidget())}) : new (T$.FutureBuilderOfQuerySnapshotOfMapOfString$dynamic()).new({future: cloud_firestore.FirebaseFirestore.instance.collection("posts").orderBy("datePublished").get(), builder: dart.fn((context, snapshot) => {
            if (!snapshot.hasData) {
              return C[2] || CT.C2;
            }
            return new masonry_grid_view.MasonryGridView.count({crossAxisCount: 3, itemCount: T$.intN().as(dart.dload(dart.dload(dart.nullCheck(snapshot.data), 'docs'), 'length')), itemBuilder: dart.fn((context, index) => new image.Image.network(core.String.as(dart.dsend(dart.dsend(dart.dload(dart.nullCheck(snapshot.data), 'docs'), '_get', [index]), '_get', ["postUrl"])), {fit: box_fit.BoxFit.cover}), T$.BuildContextAndintToImage()), mainAxisSpacing: 8, crossAxisSpacing: 8});
          }, T$.BuildContextAndAsyncSnapshotOfQuerySnapshotOfMapOfString$dynamicToWidget())})});
    }
    static ['_#new#tearOff']() {
      return new search_screen._SearchScreenState.new();
    }
  };
  (search_screen._SearchScreenState.new = function() {
    this.searchController = new editable_text.TextEditingController.new();
    this.isShowUsers = false;
    search_screen._SearchScreenState.__proto__.new.call(this);
    ;
  }).prototype = search_screen._SearchScreenState.prototype;
  dart.addTypeTests(search_screen._SearchScreenState);
  dart.addTypeCaches(search_screen._SearchScreenState);
  dart.setMethodSignature(search_screen._SearchScreenState, () => ({
    __proto__: dart.getMethods(search_screen._SearchScreenState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(search_screen._SearchScreenState, I[116]);
  dart.setFieldSignature(search_screen._SearchScreenState, () => ({
    __proto__: dart.getFields(search_screen._SearchScreenState.__proto__),
    searchController: dart.finalFieldType(editable_text.TextEditingController),
    isShowUsers: dart.fieldType(core.bool)
  }));
  image_picker.ImagePicker = class ImagePicker extends core.Object {
    static get platform() {
      return image_picker_platform.ImagePickerPlatform.instance;
    }
    pickImage(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
      let imagePickerOptions = new image_options.ImagePickerOptions.createAndValidate({maxWidth: maxWidth, maxHeight: maxHeight, imageQuality: imageQuality, preferredCameraDevice: preferredCameraDevice, requestFullMetadata: requestFullMetadata});
      return image_picker.ImagePicker.platform.getImageFromSource({source: source, options: imagePickerOptions});
    }
    pickMultiImage(opts) {
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
      let imageOptions = new image_options.ImageOptions.createAndValidate({maxWidth: maxWidth, maxHeight: maxHeight, imageQuality: imageQuality, requestFullMetadata: requestFullMetadata});
      return image_picker.ImagePicker.platform.getMultiImageWithOptions({options: new multi_image_picker_options.MultiImagePickerOptions.new({imageOptions: imageOptions})});
    }
    pickMedia(opts) {
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
      return async.async(T$.XFileN(), function* pickMedia() {
        let listMedia = (yield image_picker.ImagePicker.platform.getMedia({options: new media_options.MediaOptions.new({imageOptions: new image_options.ImageOptions.createAndValidate({maxHeight: maxHeight, maxWidth: maxWidth, imageQuality: imageQuality, requestFullMetadata: requestFullMetadata}), allowMultiple: false})}));
        return listMedia[S$.$isNotEmpty] ? listMedia[S$.$first] : null;
      });
    }
    pickMultipleMedia(opts) {
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
      return image_picker.ImagePicker.platform.getMedia({options: new media_options.MediaOptions.new({allowMultiple: true, imageOptions: new image_options.ImageOptions.createAndValidate({maxHeight: maxHeight, maxWidth: maxWidth, imageQuality: imageQuality, requestFullMetadata: requestFullMetadata})})});
    }
    pickVideo(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      let maxDuration = opts && 'maxDuration' in opts ? opts.maxDuration : null;
      return image_picker.ImagePicker.platform.getVideo({source: source, preferredCameraDevice: preferredCameraDevice, maxDuration: maxDuration});
    }
    retrieveLostData() {
      return image_picker.ImagePicker.platform.getLostData();
    }
    supportsImageSource(source) {
      return image_picker.ImagePicker.platform.supportsImageSource(source);
    }
    static ['_#new#tearOff']() {
      return new image_picker.ImagePicker.new();
    }
  };
  (image_picker.ImagePicker.new = function() {
    ;
  }).prototype = image_picker.ImagePicker.prototype;
  dart.addTypeTests(image_picker.ImagePicker);
  dart.addTypeCaches(image_picker.ImagePicker);
  dart.setMethodSignature(image_picker.ImagePicker, () => ({
    __proto__: dart.getMethods(image_picker.ImagePicker.__proto__),
    pickImage: dart.fnType(async.Future$(dart.nullable(html$.XFile)), [], {imageQuality: dart.nullable(core.int), maxHeight: dart.nullable(core.double), maxWidth: dart.nullable(core.double), preferredCameraDevice: camera_device.CameraDevice, requestFullMetadata: core.bool}, {source: image_source.ImageSource}),
    pickMultiImage: dart.fnType(async.Future$(core.List$(html$.XFile)), [], {imageQuality: dart.nullable(core.int), maxHeight: dart.nullable(core.double), maxWidth: dart.nullable(core.double), requestFullMetadata: core.bool}, {}),
    pickMedia: dart.fnType(async.Future$(dart.nullable(html$.XFile)), [], {imageQuality: dart.nullable(core.int), maxHeight: dart.nullable(core.double), maxWidth: dart.nullable(core.double), requestFullMetadata: core.bool}, {}),
    pickMultipleMedia: dart.fnType(async.Future$(core.List$(html$.XFile)), [], {imageQuality: dart.nullable(core.int), maxHeight: dart.nullable(core.double), maxWidth: dart.nullable(core.double), requestFullMetadata: core.bool}, {}),
    pickVideo: dart.fnType(async.Future$(dart.nullable(html$.XFile)), [], {maxDuration: dart.nullable(core.Duration), preferredCameraDevice: camera_device.CameraDevice}, {source: image_source.ImageSource}),
    retrieveLostData: dart.fnType(async.Future$(lost_data_response.LostDataResponse), []),
    supportsImageSource: dart.fnType(core.bool, [image_source.ImageSource])
  }));
  dart.setStaticGetterSignature(image_picker.ImagePicker, () => ['platform']);
  dart.setLibraryUri(image_picker.ImagePicker, I[117]);
  pointer.Pointer = class Pointer extends core.Object {
    get components() {
      return this[S$0.components];
    }
    set components(value) {
      super.components = value;
    }
    static ['_#new#tearOff'](path) {
      return new pointer.Pointer.new(path);
    }
    get path() {
      return this.components[S$.$join]("/");
    }
    get id() {
      return this.components[S$0.$last];
    }
    isCollection() {
      return this.components[S$.$length][S$0.$isOdd];
    }
    isDocument() {
      return this.components[S$.$length][S$0.$isEven];
    }
    collectionPath(collectionPath) {
      if (!this.isDocument()) dart.assertFailed(null, I[118], 56, 12, "isDocument()");
      return this.path + "/" + collectionPath;
    }
    documentPath(documentPath) {
      if (!this.isCollection()) dart.assertFailed(null, I[118], 62, 12, "isCollection()");
      return this.path + "/" + documentPath;
    }
    parentPath() {
      let t154;
      if (this.components[S$.$length] < 2) {
        return null;
      }
      let parentComponents = (t154 = T$.ListOfString().from(this.components), (() => {
        t154[S$0.$removeLast]();
        return t154;
      })());
      return parentComponents[S$.$join]("/");
    }
    _equals(other) {
      if (other == null) return false;
      return pointer.Pointer.is(other) && other.path === this.path;
    }
    get hashCode() {
      return this.path[S$.$hashCode];
    }
  };
  (pointer.Pointer.new = function(path) {
    this[S$0.components] = path[S$.$split]("/")[S$.$where](dart.fn(element => element[S$.$isNotEmpty], T$.StringTobool()))[S$.$toList]();
    ;
  }).prototype = pointer.Pointer.prototype;
  dart.addTypeTests(pointer.Pointer);
  dart.addTypeCaches(pointer.Pointer);
  dart.setMethodSignature(pointer.Pointer, () => ({
    __proto__: dart.getMethods(pointer.Pointer.__proto__),
    isCollection: dart.fnType(core.bool, []),
    isDocument: dart.fnType(core.bool, []),
    collectionPath: dart.fnType(core.String, [core.String]),
    documentPath: dart.fnType(core.String, [core.String]),
    parentPath: dart.fnType(dart.nullable(core.String), [])
  }));
  dart.setGetterSignature(pointer.Pointer, () => ({
    __proto__: dart.getGetters(pointer.Pointer.__proto__),
    path: core.String,
    id: core.String
  }));
  dart.setLibraryUri(pointer.Pointer, I[119]);
  dart.setFieldSignature(pointer.Pointer, () => ({
    __proto__: dart.getFields(pointer.Pointer.__proto__),
    components: dart.finalFieldType(core.List$(core.String))
  }));
  dart.defineExtensionMethods(pointer.Pointer, ['_equals']);
  dart.defineExtensionAccessors(pointer.Pointer, ['hashCode']);
  messages$46pigeon$0.DocumentChangeType = class DocumentChangeType extends core._Enum {
    [S$0._enumToString]() {
      return "DocumentChangeType." + this[S$0._name];
    }
  };
  (messages$46pigeon$0.DocumentChangeType.new = function(index, name) {
    messages$46pigeon$0.DocumentChangeType.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$0.DocumentChangeType.prototype;
  dart.addTypeTests(messages$46pigeon$0.DocumentChangeType);
  dart.addTypeCaches(messages$46pigeon$0.DocumentChangeType);
  dart.setMethodSignature(messages$46pigeon$0.DocumentChangeType, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.DocumentChangeType.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$0.DocumentChangeType, I[120]);
  dart.setStaticFieldSignature(messages$46pigeon$0.DocumentChangeType, () => ['values', 'added', 'modified', 'removed']);
  dart.defineLazy(messages$46pigeon$0.DocumentChangeType, {
    /*messages$46pigeon$0.DocumentChangeType.values*/get values() {
      return C[206] || CT.C206;
    },
    /*messages$46pigeon$0.DocumentChangeType.added*/get added() {
      return C[207] || CT.C207;
    },
    /*messages$46pigeon$0.DocumentChangeType.modified*/get modified() {
      return C[208] || CT.C208;
    },
    /*messages$46pigeon$0.DocumentChangeType.removed*/get removed() {
      return C[209] || CT.C209;
    }
  }, false);
  messages$46pigeon$0.Source = class Source extends core._Enum {
    [S$0._enumToString]() {
      return "Source." + this[S$0._name];
    }
  };
  (messages$46pigeon$0.Source.new = function(index, name) {
    messages$46pigeon$0.Source.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$0.Source.prototype;
  dart.addTypeTests(messages$46pigeon$0.Source);
  dart.addTypeCaches(messages$46pigeon$0.Source);
  dart.setMethodSignature(messages$46pigeon$0.Source, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.Source.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$0.Source, I[120]);
  dart.setStaticFieldSignature(messages$46pigeon$0.Source, () => ['values', 'serverAndCache', 'server', 'cache']);
  dart.defineLazy(messages$46pigeon$0.Source, {
    /*messages$46pigeon$0.Source.values*/get values() {
      return C[210] || CT.C210;
    },
    /*messages$46pigeon$0.Source.serverAndCache*/get serverAndCache() {
      return C[54] || CT.C54;
    },
    /*messages$46pigeon$0.Source.server*/get server() {
      return C[113] || CT.C113;
    },
    /*messages$46pigeon$0.Source.cache*/get cache() {
      return C[112] || CT.C112;
    }
  }, false);
  messages$46pigeon$0.ServerTimestampBehavior = class ServerTimestampBehavior extends core._Enum {
    [S$0._enumToString]() {
      return "ServerTimestampBehavior." + this[S$0._name];
    }
  };
  (messages$46pigeon$0.ServerTimestampBehavior.new = function(index, name) {
    messages$46pigeon$0.ServerTimestampBehavior.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$0.ServerTimestampBehavior.prototype;
  dart.addTypeTests(messages$46pigeon$0.ServerTimestampBehavior);
  dart.addTypeCaches(messages$46pigeon$0.ServerTimestampBehavior);
  dart.setMethodSignature(messages$46pigeon$0.ServerTimestampBehavior, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.ServerTimestampBehavior.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$0.ServerTimestampBehavior, I[120]);
  dart.setStaticFieldSignature(messages$46pigeon$0.ServerTimestampBehavior, () => ['values', 'none', 'estimate', 'previous']);
  dart.defineLazy(messages$46pigeon$0.ServerTimestampBehavior, {
    /*messages$46pigeon$0.ServerTimestampBehavior.values*/get values() {
      return C[211] || CT.C211;
    },
    /*messages$46pigeon$0.ServerTimestampBehavior.none*/get none() {
      return C[53] || CT.C53;
    },
    /*messages$46pigeon$0.ServerTimestampBehavior.estimate*/get estimate() {
      return C[110] || CT.C110;
    },
    /*messages$46pigeon$0.ServerTimestampBehavior.previous*/get previous() {
      return C[111] || CT.C111;
    }
  }, false);
  messages$46pigeon$0.AggregateSource = class AggregateSource extends core._Enum {
    [S$0._enumToString]() {
      return "AggregateSource." + this[S$0._name];
    }
  };
  (messages$46pigeon$0.AggregateSource.new = function(index, name) {
    messages$46pigeon$0.AggregateSource.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$0.AggregateSource.prototype;
  dart.addTypeTests(messages$46pigeon$0.AggregateSource);
  dart.addTypeCaches(messages$46pigeon$0.AggregateSource);
  dart.setMethodSignature(messages$46pigeon$0.AggregateSource, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.AggregateSource.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$0.AggregateSource, I[120]);
  dart.setStaticFieldSignature(messages$46pigeon$0.AggregateSource, () => ['values', 'server']);
  dart.defineLazy(messages$46pigeon$0.AggregateSource, {
    /*messages$46pigeon$0.AggregateSource.values*/get values() {
      return C[212] || CT.C212;
    },
    /*messages$46pigeon$0.AggregateSource.server*/get server() {
      return C[160] || CT.C160;
    }
  }, false);
  messages$46pigeon$0.PigeonTransactionResult = class PigeonTransactionResult extends core._Enum {
    [S$0._enumToString]() {
      return "PigeonTransactionResult." + this[S$0._name];
    }
  };
  (messages$46pigeon$0.PigeonTransactionResult.new = function(index, name) {
    messages$46pigeon$0.PigeonTransactionResult.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$0.PigeonTransactionResult.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonTransactionResult);
  dart.addTypeCaches(messages$46pigeon$0.PigeonTransactionResult);
  dart.setMethodSignature(messages$46pigeon$0.PigeonTransactionResult, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonTransactionResult.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$0.PigeonTransactionResult, I[120]);
  dart.setStaticFieldSignature(messages$46pigeon$0.PigeonTransactionResult, () => ['values', 'success', 'failure']);
  dart.defineLazy(messages$46pigeon$0.PigeonTransactionResult, {
    /*messages$46pigeon$0.PigeonTransactionResult.values*/get values() {
      return C[213] || CT.C213;
    },
    /*messages$46pigeon$0.PigeonTransactionResult.success*/get success() {
      return C[214] || CT.C214;
    },
    /*messages$46pigeon$0.PigeonTransactionResult.failure*/get failure() {
      return C[215] || CT.C215;
    }
  }, false);
  messages$46pigeon$0.PigeonTransactionType = class PigeonTransactionType extends core._Enum {
    [S$0._enumToString]() {
      return "PigeonTransactionType." + this[S$0._name];
    }
  };
  (messages$46pigeon$0.PigeonTransactionType.new = function(index, name) {
    messages$46pigeon$0.PigeonTransactionType.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$0.PigeonTransactionType.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonTransactionType);
  dart.addTypeCaches(messages$46pigeon$0.PigeonTransactionType);
  dart.setMethodSignature(messages$46pigeon$0.PigeonTransactionType, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonTransactionType.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$0.PigeonTransactionType, I[120]);
  dart.setStaticFieldSignature(messages$46pigeon$0.PigeonTransactionType, () => ['values', 'get', 'update', 'set', 'deleteType']);
  dart.defineLazy(messages$46pigeon$0.PigeonTransactionType, {
    /*messages$46pigeon$0.PigeonTransactionType.values*/get values() {
      return C[216] || CT.C216;
    },
    /*messages$46pigeon$0.PigeonTransactionType.get*/get get() {
      return C[217] || CT.C217;
    },
    /*messages$46pigeon$0.PigeonTransactionType.update*/get update() {
      return C[218] || CT.C218;
    },
    /*messages$46pigeon$0.PigeonTransactionType.set*/get set() {
      return C[219] || CT.C219;
    },
    /*messages$46pigeon$0.PigeonTransactionType.deleteType*/get deleteType() {
      return C[220] || CT.C220;
    }
  }, false);
  messages$46pigeon$0.AggregateType = class AggregateType extends core._Enum {
    [S$0._enumToString]() {
      return "AggregateType." + this[S$0._name];
    }
  };
  (messages$46pigeon$0.AggregateType.new = function(index, name) {
    messages$46pigeon$0.AggregateType.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$0.AggregateType.prototype;
  dart.addTypeTests(messages$46pigeon$0.AggregateType);
  dart.addTypeCaches(messages$46pigeon$0.AggregateType);
  dart.setMethodSignature(messages$46pigeon$0.AggregateType, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.AggregateType.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$0.AggregateType, I[120]);
  dart.setStaticFieldSignature(messages$46pigeon$0.AggregateType, () => ['values', 'count', 'sum', 'average']);
  dart.defineLazy(messages$46pigeon$0.AggregateType, {
    /*messages$46pigeon$0.AggregateType.values*/get values() {
      return C[221] || CT.C221;
    },
    /*messages$46pigeon$0.AggregateType.count*/get count() {
      return C[119] || CT.C119;
    },
    /*messages$46pigeon$0.AggregateType.sum*/get sum() {
      return C[120] || CT.C120;
    },
    /*messages$46pigeon$0.AggregateType.average*/get average() {
      return C[121] || CT.C121;
    }
  }, false);
  messages$46pigeon$0.PigeonFirebaseSettings = class PigeonFirebaseSettings extends core.Object {
    get persistenceEnabled() {
      return this[S$0.persistenceEnabled];
    }
    set persistenceEnabled(value) {
      this[S$0.persistenceEnabled] = value;
    }
    get host() {
      return this[S$0.host];
    }
    set host(value) {
      this[S$0.host] = value;
    }
    get sslEnabled() {
      return this[S$0.sslEnabled];
    }
    set sslEnabled(value) {
      this[S$0.sslEnabled] = value;
    }
    get cacheSizeBytes() {
      return this[S$0.cacheSizeBytes];
    }
    set cacheSizeBytes(value) {
      this[S$0.cacheSizeBytes] = value;
    }
    get ignoreUndefinedProperties() {
      return this[S$0.ignoreUndefinedProperties];
    }
    set ignoreUndefinedProperties(value) {
      this[S$0.ignoreUndefinedProperties] = value;
    }
    static ['_#new#tearOff'](opts) {
      let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
      let host = opts && 'host' in opts ? opts.host : null;
      let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
      let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
      let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : null;
      return new messages$46pigeon$0.PigeonFirebaseSettings.new({persistenceEnabled: persistenceEnabled, host: host, sslEnabled: sslEnabled, cacheSizeBytes: cacheSizeBytes, ignoreUndefinedProperties: ignoreUndefinedProperties});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.persistenceEnabled, this.host, this.sslEnabled, this.cacheSizeBytes, this.ignoreUndefinedProperties]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonFirebaseSettings.new({persistenceEnabled: T$.boolN().as(result[S$.$_get](0)), host: T$.StringN().as(result[S$.$_get](1)), sslEnabled: T$.boolN().as(result[S$.$_get](2)), cacheSizeBytes: T$.intN().as(result[S$.$_get](3)), ignoreUndefinedProperties: core.bool.as(dart.nullCheck(result[S$.$_get](4)))});
    }
  };
  (messages$46pigeon$0.PigeonFirebaseSettings.new = function(opts) {
    let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
    let host = opts && 'host' in opts ? opts.host : null;
    let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
    let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
    let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : null;
    this[S$0.persistenceEnabled] = persistenceEnabled;
    this[S$0.host] = host;
    this[S$0.sslEnabled] = sslEnabled;
    this[S$0.cacheSizeBytes] = cacheSizeBytes;
    this[S$0.ignoreUndefinedProperties] = ignoreUndefinedProperties;
    ;
  }).prototype = messages$46pigeon$0.PigeonFirebaseSettings.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonFirebaseSettings);
  dart.addTypeCaches(messages$46pigeon$0.PigeonFirebaseSettings);
  dart.setMethodSignature(messages$46pigeon$0.PigeonFirebaseSettings, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonFirebaseSettings.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonFirebaseSettings, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonFirebaseSettings, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonFirebaseSettings, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonFirebaseSettings.__proto__),
    persistenceEnabled: dart.fieldType(dart.nullable(core.bool)),
    host: dart.fieldType(dart.nullable(core.String)),
    sslEnabled: dart.fieldType(dart.nullable(core.bool)),
    cacheSizeBytes: dart.fieldType(dart.nullable(core.int)),
    ignoreUndefinedProperties: dart.fieldType(core.bool)
  }));
  messages$46pigeon$0.FirestorePigeonFirebaseApp = class FirestorePigeonFirebaseApp extends core.Object {
    get appName() {
      return this[S$0.appName$1];
    }
    set appName(value) {
      this[S$0.appName$1] = value;
    }
    get settings() {
      return this[S$0.settings];
    }
    set settings(value) {
      this[S$0.settings] = value;
    }
    get databaseURL() {
      return this[S$0.databaseURL$3];
    }
    set databaseURL(value) {
      this[S$0.databaseURL$3] = value;
    }
    static ['_#new#tearOff'](opts) {
      let appName = opts && 'appName' in opts ? opts.appName : null;
      let settings = opts && 'settings' in opts ? opts.settings : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new messages$46pigeon$0.FirestorePigeonFirebaseApp.new({appName: appName, settings: settings, databaseURL: databaseURL});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.appName, this.settings.encode(), this.databaseURL]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.FirestorePigeonFirebaseApp.new({appName: core.String.as(dart.nullCheck(result[S$.$_get](0))), settings: messages$46pigeon$0.PigeonFirebaseSettings.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](1)))), databaseURL: core.String.as(dart.nullCheck(result[S$.$_get](2)))});
    }
  };
  (messages$46pigeon$0.FirestorePigeonFirebaseApp.new = function(opts) {
    let appName = opts && 'appName' in opts ? opts.appName : null;
    let settings = opts && 'settings' in opts ? opts.settings : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    this[S$0.appName$1] = appName;
    this[S$0.settings] = settings;
    this[S$0.databaseURL$3] = databaseURL;
    ;
  }).prototype = messages$46pigeon$0.FirestorePigeonFirebaseApp.prototype;
  dart.addTypeTests(messages$46pigeon$0.FirestorePigeonFirebaseApp);
  dart.addTypeCaches(messages$46pigeon$0.FirestorePigeonFirebaseApp);
  dart.setMethodSignature(messages$46pigeon$0.FirestorePigeonFirebaseApp, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.FirestorePigeonFirebaseApp.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.FirestorePigeonFirebaseApp, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.FirestorePigeonFirebaseApp, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.FirestorePigeonFirebaseApp, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.FirestorePigeonFirebaseApp.__proto__),
    appName: dart.fieldType(core.String),
    settings: dart.fieldType(messages$46pigeon$0.PigeonFirebaseSettings),
    databaseURL: dart.fieldType(core.String)
  }));
  messages$46pigeon$0.PigeonSnapshotMetadata = class PigeonSnapshotMetadata extends core.Object {
    get hasPendingWrites() {
      return this[S$0.hasPendingWrites];
    }
    set hasPendingWrites(value) {
      this[S$0.hasPendingWrites] = value;
    }
    get isFromCache() {
      return this[S$0.isFromCache];
    }
    set isFromCache(value) {
      this[S$0.isFromCache] = value;
    }
    static ['_#new#tearOff'](opts) {
      let hasPendingWrites = opts && 'hasPendingWrites' in opts ? opts.hasPendingWrites : null;
      let isFromCache = opts && 'isFromCache' in opts ? opts.isFromCache : null;
      return new messages$46pigeon$0.PigeonSnapshotMetadata.new({hasPendingWrites: hasPendingWrites, isFromCache: isFromCache});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.hasPendingWrites, this.isFromCache]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonSnapshotMetadata.new({hasPendingWrites: core.bool.as(dart.nullCheck(result[S$.$_get](0))), isFromCache: core.bool.as(dart.nullCheck(result[S$.$_get](1)))});
    }
  };
  (messages$46pigeon$0.PigeonSnapshotMetadata.new = function(opts) {
    let hasPendingWrites = opts && 'hasPendingWrites' in opts ? opts.hasPendingWrites : null;
    let isFromCache = opts && 'isFromCache' in opts ? opts.isFromCache : null;
    this[S$0.hasPendingWrites] = hasPendingWrites;
    this[S$0.isFromCache] = isFromCache;
    ;
  }).prototype = messages$46pigeon$0.PigeonSnapshotMetadata.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonSnapshotMetadata);
  dart.addTypeCaches(messages$46pigeon$0.PigeonSnapshotMetadata);
  dart.setMethodSignature(messages$46pigeon$0.PigeonSnapshotMetadata, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonSnapshotMetadata.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonSnapshotMetadata, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonSnapshotMetadata, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonSnapshotMetadata, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonSnapshotMetadata.__proto__),
    hasPendingWrites: dart.fieldType(core.bool),
    isFromCache: dart.fieldType(core.bool)
  }));
  messages$46pigeon$0.PigeonDocumentSnapshot = class PigeonDocumentSnapshot extends core.Object {
    get path() {
      return this[S$0.path];
    }
    set path(value) {
      this[S$0.path] = value;
    }
    get data() {
      return this[S$0.data$1];
    }
    set data(value) {
      this[S$0.data$1] = value;
    }
    get metadata() {
      return this[S$0.metadata];
    }
    set metadata(value) {
      this[S$0.metadata] = value;
    }
    static ['_#new#tearOff'](opts) {
      let path = opts && 'path' in opts ? opts.path : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let metadata = opts && 'metadata' in opts ? opts.metadata : null;
      return new messages$46pigeon$0.PigeonDocumentSnapshot.new({path: path, data: data, metadata: metadata});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.path, this.data, this.metadata.encode()]);
    }
    static decode(result) {
      let t168;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonDocumentSnapshot.new({path: core.String.as(dart.nullCheck(result[S$.$_get](0))), data: (t168 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](1)), t168 == null ? null : t168[S$.$cast](T$.StringN(), T$.ObjectN())), metadata: messages$46pigeon$0.PigeonSnapshotMetadata.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](2))))});
    }
  };
  (messages$46pigeon$0.PigeonDocumentSnapshot.new = function(opts) {
    let path = opts && 'path' in opts ? opts.path : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let metadata = opts && 'metadata' in opts ? opts.metadata : null;
    this[S$0.path] = path;
    this[S$0.data$1] = data;
    this[S$0.metadata] = metadata;
    ;
  }).prototype = messages$46pigeon$0.PigeonDocumentSnapshot.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonDocumentSnapshot);
  dart.addTypeCaches(messages$46pigeon$0.PigeonDocumentSnapshot);
  dart.setMethodSignature(messages$46pigeon$0.PigeonDocumentSnapshot, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonDocumentSnapshot.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonDocumentSnapshot, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonDocumentSnapshot, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonDocumentSnapshot, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonDocumentSnapshot.__proto__),
    path: dart.fieldType(core.String),
    data: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))),
    metadata: dart.fieldType(messages$46pigeon$0.PigeonSnapshotMetadata)
  }));
  messages$46pigeon$0.PigeonDocumentChange = class PigeonDocumentChange extends core.Object {
    get type() {
      return this[S$0.type$1];
    }
    set type(value) {
      this[S$0.type$1] = value;
    }
    get document() {
      return this[S$0.document];
    }
    set document(value) {
      this[S$0.document] = value;
    }
    get oldIndex() {
      return this[S$0.oldIndex];
    }
    set oldIndex(value) {
      this[S$0.oldIndex] = value;
    }
    get newIndex() {
      return this[S$0.newIndex];
    }
    set newIndex(value) {
      this[S$0.newIndex] = value;
    }
    static ['_#new#tearOff'](opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let document = opts && 'document' in opts ? opts.document : null;
      let oldIndex = opts && 'oldIndex' in opts ? opts.oldIndex : null;
      let newIndex = opts && 'newIndex' in opts ? opts.newIndex : null;
      return new messages$46pigeon$0.PigeonDocumentChange.new({type: type, document: document, oldIndex: oldIndex, newIndex: newIndex});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.type.index, this.document.encode(), this.oldIndex, this.newIndex]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonDocumentChange.new({type: messages$46pigeon$0.DocumentChangeType.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), document: messages$46pigeon$0.PigeonDocumentSnapshot.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](1)))), oldIndex: core.int.as(dart.nullCheck(result[S$.$_get](2))), newIndex: core.int.as(dart.nullCheck(result[S$.$_get](3)))});
    }
  };
  (messages$46pigeon$0.PigeonDocumentChange.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let document = opts && 'document' in opts ? opts.document : null;
    let oldIndex = opts && 'oldIndex' in opts ? opts.oldIndex : null;
    let newIndex = opts && 'newIndex' in opts ? opts.newIndex : null;
    this[S$0.type$1] = type;
    this[S$0.document] = document;
    this[S$0.oldIndex] = oldIndex;
    this[S$0.newIndex] = newIndex;
    ;
  }).prototype = messages$46pigeon$0.PigeonDocumentChange.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonDocumentChange);
  dart.addTypeCaches(messages$46pigeon$0.PigeonDocumentChange);
  dart.setMethodSignature(messages$46pigeon$0.PigeonDocumentChange, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonDocumentChange.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonDocumentChange, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonDocumentChange, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonDocumentChange, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonDocumentChange.__proto__),
    type: dart.fieldType(messages$46pigeon$0.DocumentChangeType),
    document: dart.fieldType(messages$46pigeon$0.PigeonDocumentSnapshot),
    oldIndex: dart.fieldType(core.int),
    newIndex: dart.fieldType(core.int)
  }));
  messages$46pigeon$0.PigeonQuerySnapshot = class PigeonQuerySnapshot extends core.Object {
    get documents() {
      return this[S$0.documents];
    }
    set documents(value) {
      this[S$0.documents] = value;
    }
    get documentChanges() {
      return this[S$0.documentChanges];
    }
    set documentChanges(value) {
      this[S$0.documentChanges] = value;
    }
    get metadata() {
      return this[S$0.metadata$1];
    }
    set metadata(value) {
      this[S$0.metadata$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let documents = opts && 'documents' in opts ? opts.documents : null;
      let documentChanges = opts && 'documentChanges' in opts ? opts.documentChanges : null;
      let metadata = opts && 'metadata' in opts ? opts.metadata : null;
      return new messages$46pigeon$0.PigeonQuerySnapshot.new({documents: documents, documentChanges: documentChanges, metadata: metadata});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.documents, this.documentChanges, this.metadata.encode()]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonQuerySnapshot.new({documents: dart.nullCheck(T$.ListNOfObjectN().as(result[S$.$_get](0)))[S$.$cast](T$.PigeonDocumentSnapshotN()), documentChanges: dart.nullCheck(T$.ListNOfObjectN().as(result[S$.$_get](1)))[S$.$cast](T$.PigeonDocumentChangeN()), metadata: messages$46pigeon$0.PigeonSnapshotMetadata.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](2))))});
    }
  };
  (messages$46pigeon$0.PigeonQuerySnapshot.new = function(opts) {
    let documents = opts && 'documents' in opts ? opts.documents : null;
    let documentChanges = opts && 'documentChanges' in opts ? opts.documentChanges : null;
    let metadata = opts && 'metadata' in opts ? opts.metadata : null;
    this[S$0.documents] = documents;
    this[S$0.documentChanges] = documentChanges;
    this[S$0.metadata$1] = metadata;
    ;
  }).prototype = messages$46pigeon$0.PigeonQuerySnapshot.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonQuerySnapshot);
  dart.addTypeCaches(messages$46pigeon$0.PigeonQuerySnapshot);
  dart.setMethodSignature(messages$46pigeon$0.PigeonQuerySnapshot, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonQuerySnapshot.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonQuerySnapshot, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonQuerySnapshot, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonQuerySnapshot, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonQuerySnapshot.__proto__),
    documents: dart.fieldType(core.List$(dart.nullable(messages$46pigeon$0.PigeonDocumentSnapshot))),
    documentChanges: dart.fieldType(core.List$(dart.nullable(messages$46pigeon$0.PigeonDocumentChange))),
    metadata: dart.fieldType(messages$46pigeon$0.PigeonSnapshotMetadata)
  }));
  messages$46pigeon$0.PigeonGetOptions = class PigeonGetOptions extends core.Object {
    get source() {
      return this[S$0.source];
    }
    set source(value) {
      this[S$0.source] = value;
    }
    get serverTimestampBehavior() {
      return this[S$0.serverTimestampBehavior];
    }
    set serverTimestampBehavior(value) {
      this[S$0.serverTimestampBehavior] = value;
    }
    static ['_#new#tearOff'](opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : null;
      return new messages$46pigeon$0.PigeonGetOptions.new({source: source, serverTimestampBehavior: serverTimestampBehavior});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.source.index, this.serverTimestampBehavior.index]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonGetOptions.new({source: messages$46pigeon$0.Source.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), serverTimestampBehavior: messages$46pigeon$0.ServerTimestampBehavior.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](1))))});
    }
  };
  (messages$46pigeon$0.PigeonGetOptions.new = function(opts) {
    let source = opts && 'source' in opts ? opts.source : null;
    let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : null;
    this[S$0.source] = source;
    this[S$0.serverTimestampBehavior] = serverTimestampBehavior;
    ;
  }).prototype = messages$46pigeon$0.PigeonGetOptions.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonGetOptions);
  dart.addTypeCaches(messages$46pigeon$0.PigeonGetOptions);
  dart.setMethodSignature(messages$46pigeon$0.PigeonGetOptions, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonGetOptions.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonGetOptions, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonGetOptions, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonGetOptions, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonGetOptions.__proto__),
    source: dart.fieldType(messages$46pigeon$0.Source),
    serverTimestampBehavior: dart.fieldType(messages$46pigeon$0.ServerTimestampBehavior)
  }));
  messages$46pigeon$0.PigeonDocumentOption = class PigeonDocumentOption extends core.Object {
    get merge() {
      return this[S$0.merge];
    }
    set merge(value) {
      this[S$0.merge] = value;
    }
    get mergeFields() {
      return this[S$0.mergeFields];
    }
    set mergeFields(value) {
      this[S$0.mergeFields] = value;
    }
    static ['_#new#tearOff'](opts) {
      let merge = opts && 'merge' in opts ? opts.merge : null;
      let mergeFields = opts && 'mergeFields' in opts ? opts.mergeFields : null;
      return new messages$46pigeon$0.PigeonDocumentOption.new({merge: merge, mergeFields: mergeFields});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.merge, this.mergeFields]);
    }
    static decode(result) {
      let t168;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonDocumentOption.new({merge: T$.boolN().as(result[S$.$_get](0)), mergeFields: (t168 = T$.ListNOfObjectN().as(result[S$.$_get](1)), t168 == null ? null : t168[S$.$cast](T$.ListNOfStringN()))});
    }
  };
  (messages$46pigeon$0.PigeonDocumentOption.new = function(opts) {
    let merge = opts && 'merge' in opts ? opts.merge : null;
    let mergeFields = opts && 'mergeFields' in opts ? opts.mergeFields : null;
    this[S$0.merge] = merge;
    this[S$0.mergeFields] = mergeFields;
    ;
  }).prototype = messages$46pigeon$0.PigeonDocumentOption.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonDocumentOption);
  dart.addTypeCaches(messages$46pigeon$0.PigeonDocumentOption);
  dart.setMethodSignature(messages$46pigeon$0.PigeonDocumentOption, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonDocumentOption.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonDocumentOption, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonDocumentOption, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonDocumentOption, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonDocumentOption.__proto__),
    merge: dart.fieldType(dart.nullable(core.bool)),
    mergeFields: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.List$(dart.nullable(core.String))))))
  }));
  messages$46pigeon$0.PigeonTransactionCommand = class PigeonTransactionCommand extends core.Object {
    get type() {
      return this[S$0.type$2];
    }
    set type(value) {
      this[S$0.type$2] = value;
    }
    get path() {
      return this[S$0.path$1];
    }
    set path(value) {
      this[S$0.path$1] = value;
    }
    get data() {
      return this[S$0.data$2];
    }
    set data(value) {
      this[S$0.data$2] = value;
    }
    get option() {
      return this[S$0.option];
    }
    set option(value) {
      this[S$0.option] = value;
    }
    static ['_#new#tearOff'](opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let path = opts && 'path' in opts ? opts.path : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let option = opts && 'option' in opts ? opts.option : null;
      return new messages$46pigeon$0.PigeonTransactionCommand.new({type: type, path: path, data: data, option: option});
    }
    encode() {
      let t168;
      return T$.JSArrayOfObjectN().of([this.type.index, this.path, this.data, (t168 = this.option, t168 == null ? null : t168.encode())]);
    }
    static decode(result) {
      let t168;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonTransactionCommand.new({type: messages$46pigeon$0.PigeonTransactionType.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), path: core.String.as(dart.nullCheck(result[S$.$_get](1))), data: (t168 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](2)), t168 == null ? null : t168[S$.$cast](T$.StringN(), T$.ObjectN())), option: result[S$.$_get](3) != null ? messages$46pigeon$0.PigeonDocumentOption.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](3)))) : null});
    }
  };
  (messages$46pigeon$0.PigeonTransactionCommand.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let path = opts && 'path' in opts ? opts.path : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let option = opts && 'option' in opts ? opts.option : null;
    this[S$0.type$2] = type;
    this[S$0.path$1] = path;
    this[S$0.data$2] = data;
    this[S$0.option] = option;
    ;
  }).prototype = messages$46pigeon$0.PigeonTransactionCommand.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonTransactionCommand);
  dart.addTypeCaches(messages$46pigeon$0.PigeonTransactionCommand);
  dart.setMethodSignature(messages$46pigeon$0.PigeonTransactionCommand, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonTransactionCommand.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonTransactionCommand, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonTransactionCommand, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonTransactionCommand, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonTransactionCommand.__proto__),
    type: dart.fieldType(messages$46pigeon$0.PigeonTransactionType),
    path: dart.fieldType(core.String),
    data: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))),
    option: dart.fieldType(dart.nullable(messages$46pigeon$0.PigeonDocumentOption))
  }));
  messages$46pigeon$0.DocumentReferenceRequest = class DocumentReferenceRequest extends core.Object {
    get path() {
      return this[S$0.path$2];
    }
    set path(value) {
      this[S$0.path$2] = value;
    }
    get data() {
      return this[S$0.data$3];
    }
    set data(value) {
      this[S$0.data$3] = value;
    }
    get option() {
      return this[S$0.option$1];
    }
    set option(value) {
      this[S$0.option$1] = value;
    }
    get source() {
      return this[S$0.source$1];
    }
    set source(value) {
      this[S$0.source$1] = value;
    }
    get serverTimestampBehavior() {
      return this[S$0.serverTimestampBehavior$1];
    }
    set serverTimestampBehavior(value) {
      this[S$0.serverTimestampBehavior$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let path = opts && 'path' in opts ? opts.path : null;
      let data = opts && 'data' in opts ? opts.data : null;
      let option = opts && 'option' in opts ? opts.option : null;
      let source = opts && 'source' in opts ? opts.source : null;
      let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : null;
      return new messages$46pigeon$0.DocumentReferenceRequest.new({path: path, data: data, option: option, source: source, serverTimestampBehavior: serverTimestampBehavior});
    }
    encode() {
      let t168, t168$, t168$0;
      return T$.JSArrayOfObjectN().of([this.path, this.data, (t168 = this.option, t168 == null ? null : t168.encode()), (t168$ = this.source, t168$ == null ? null : t168$.index), (t168$0 = this.serverTimestampBehavior, t168$0 == null ? null : t168$0.index)]);
    }
    static decode(result) {
      let t168;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.DocumentReferenceRequest.new({path: core.String.as(dart.nullCheck(result[S$.$_get](0))), data: (t168 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](1)), t168 == null ? null : t168[S$.$cast](T$.ObjectN(), T$.ObjectN())), option: result[S$.$_get](2) != null ? messages$46pigeon$0.PigeonDocumentOption.decode(T$.ListOfObjectN().as(dart.nullCheck(result[S$.$_get](2)))) : null, source: result[S$.$_get](3) != null ? messages$46pigeon$0.Source.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](3)))) : null, serverTimestampBehavior: result[S$.$_get](4) != null ? messages$46pigeon$0.ServerTimestampBehavior.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](4)))) : null});
    }
  };
  (messages$46pigeon$0.DocumentReferenceRequest.new = function(opts) {
    let path = opts && 'path' in opts ? opts.path : null;
    let data = opts && 'data' in opts ? opts.data : null;
    let option = opts && 'option' in opts ? opts.option : null;
    let source = opts && 'source' in opts ? opts.source : null;
    let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : null;
    this[S$0.path$2] = path;
    this[S$0.data$3] = data;
    this[S$0.option$1] = option;
    this[S$0.source$1] = source;
    this[S$0.serverTimestampBehavior$1] = serverTimestampBehavior;
    ;
  }).prototype = messages$46pigeon$0.DocumentReferenceRequest.prototype;
  dart.addTypeTests(messages$46pigeon$0.DocumentReferenceRequest);
  dart.addTypeCaches(messages$46pigeon$0.DocumentReferenceRequest);
  dart.setMethodSignature(messages$46pigeon$0.DocumentReferenceRequest, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.DocumentReferenceRequest.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.DocumentReferenceRequest, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.DocumentReferenceRequest, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.DocumentReferenceRequest, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.DocumentReferenceRequest.__proto__),
    path: dart.fieldType(core.String),
    data: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))),
    option: dart.fieldType(dart.nullable(messages$46pigeon$0.PigeonDocumentOption)),
    source: dart.fieldType(dart.nullable(messages$46pigeon$0.Source)),
    serverTimestampBehavior: dart.fieldType(dart.nullable(messages$46pigeon$0.ServerTimestampBehavior))
  }));
  messages$46pigeon$0.PigeonQueryParameters = class PigeonQueryParameters extends core.Object {
    get where() {
      return this[S$0.where];
    }
    set where(value) {
      this[S$0.where] = value;
    }
    get orderBy() {
      return this[S$0.orderBy];
    }
    set orderBy(value) {
      this[S$0.orderBy] = value;
    }
    get limit() {
      return this[S$0.limit];
    }
    set limit(value) {
      this[S$0.limit] = value;
    }
    get limitToLast() {
      return this[S$0.limitToLast];
    }
    set limitToLast(value) {
      this[S$0.limitToLast] = value;
    }
    get startAt() {
      return this[S$0.startAt];
    }
    set startAt(value) {
      this[S$0.startAt] = value;
    }
    get startAfter() {
      return this[S$0.startAfter];
    }
    set startAfter(value) {
      this[S$0.startAfter] = value;
    }
    get endAt() {
      return this[S$0.endAt];
    }
    set endAt(value) {
      this[S$0.endAt] = value;
    }
    get endBefore() {
      return this[S$0.endBefore];
    }
    set endBefore(value) {
      this[S$0.endBefore] = value;
    }
    get filters() {
      return this[S$0.filters];
    }
    set filters(value) {
      this[S$0.filters] = value;
    }
    static ['_#new#tearOff'](opts) {
      let where = opts && 'where' in opts ? opts.where : null;
      let orderBy = opts && 'orderBy' in opts ? opts.orderBy : null;
      let limit = opts && 'limit' in opts ? opts.limit : null;
      let limitToLast = opts && 'limitToLast' in opts ? opts.limitToLast : null;
      let startAt = opts && 'startAt' in opts ? opts.startAt : null;
      let startAfter = opts && 'startAfter' in opts ? opts.startAfter : null;
      let endAt = opts && 'endAt' in opts ? opts.endAt : null;
      let endBefore = opts && 'endBefore' in opts ? opts.endBefore : null;
      let filters = opts && 'filters' in opts ? opts.filters : null;
      return new messages$46pigeon$0.PigeonQueryParameters.new({where: where, orderBy: orderBy, limit: limit, limitToLast: limitToLast, startAt: startAt, startAfter: startAfter, endAt: endAt, endBefore: endBefore, filters: filters});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.where, this.orderBy, this.limit, this.limitToLast, this.startAt, this.startAfter, this.endAt, this.endBefore, this.filters]);
    }
    static decode(result) {
      let t168, t168$, t168$0, t168$1, t168$2, t168$3, t168$4;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.PigeonQueryParameters.new({where: (t168 = T$.ListNOfObjectN().as(result[S$.$_get](0)), t168 == null ? null : t168[S$.$cast](T$.ListNOfObjectN())), orderBy: (t168$ = T$.ListNOfObjectN().as(result[S$.$_get](1)), t168$ == null ? null : t168$[S$.$cast](T$.ListNOfObjectN())), limit: T$.intN().as(result[S$.$_get](2)), limitToLast: T$.intN().as(result[S$.$_get](3)), startAt: (t168$0 = T$.ListNOfObjectN().as(result[S$.$_get](4)), t168$0 == null ? null : t168$0[S$.$cast](T$.ObjectN())), startAfter: (t168$1 = T$.ListNOfObjectN().as(result[S$.$_get](5)), t168$1 == null ? null : t168$1[S$.$cast](T$.ObjectN())), endAt: (t168$2 = T$.ListNOfObjectN().as(result[S$.$_get](6)), t168$2 == null ? null : t168$2[S$.$cast](T$.ObjectN())), endBefore: (t168$3 = T$.ListNOfObjectN().as(result[S$.$_get](7)), t168$3 == null ? null : t168$3[S$.$cast](T$.ObjectN())), filters: (t168$4 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](8)), t168$4 == null ? null : t168$4[S$.$cast](T$.StringN(), T$.ObjectN()))});
    }
  };
  (messages$46pigeon$0.PigeonQueryParameters.new = function(opts) {
    let where = opts && 'where' in opts ? opts.where : null;
    let orderBy = opts && 'orderBy' in opts ? opts.orderBy : null;
    let limit = opts && 'limit' in opts ? opts.limit : null;
    let limitToLast = opts && 'limitToLast' in opts ? opts.limitToLast : null;
    let startAt = opts && 'startAt' in opts ? opts.startAt : null;
    let startAfter = opts && 'startAfter' in opts ? opts.startAfter : null;
    let endAt = opts && 'endAt' in opts ? opts.endAt : null;
    let endBefore = opts && 'endBefore' in opts ? opts.endBefore : null;
    let filters = opts && 'filters' in opts ? opts.filters : null;
    this[S$0.where] = where;
    this[S$0.orderBy] = orderBy;
    this[S$0.limit] = limit;
    this[S$0.limitToLast] = limitToLast;
    this[S$0.startAt] = startAt;
    this[S$0.startAfter] = startAfter;
    this[S$0.endAt] = endAt;
    this[S$0.endBefore] = endBefore;
    this[S$0.filters] = filters;
    ;
  }).prototype = messages$46pigeon$0.PigeonQueryParameters.prototype;
  dart.addTypeTests(messages$46pigeon$0.PigeonQueryParameters);
  dart.addTypeCaches(messages$46pigeon$0.PigeonQueryParameters);
  dart.setMethodSignature(messages$46pigeon$0.PigeonQueryParameters, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.PigeonQueryParameters.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.PigeonQueryParameters, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.PigeonQueryParameters, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.PigeonQueryParameters, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.PigeonQueryParameters.__proto__),
    where: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.List$(dart.nullable(core.Object)))))),
    orderBy: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.List$(dart.nullable(core.Object)))))),
    limit: dart.fieldType(dart.nullable(core.int)),
    limitToLast: dart.fieldType(dart.nullable(core.int)),
    startAt: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.Object)))),
    startAfter: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.Object)))),
    endAt: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.Object)))),
    endBefore: dart.fieldType(dart.nullable(core.List$(dart.nullable(core.Object)))),
    filters: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object))))
  }));
  messages$46pigeon$0.AggregateQuery = class AggregateQuery extends core.Object {
    get type() {
      return this[S$0.type$3];
    }
    set type(value) {
      this[S$0.type$3] = value;
    }
    get field() {
      return this[S$0.field];
    }
    set field(value) {
      this[S$0.field] = value;
    }
    static ['_#new#tearOff'](opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let field = opts && 'field' in opts ? opts.field : null;
      return new messages$46pigeon$0.AggregateQuery.new({type: type, field: field});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.type.index, this.field]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), field: T$.StringN().as(result[S$.$_get](1))});
    }
  };
  (messages$46pigeon$0.AggregateQuery.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let field = opts && 'field' in opts ? opts.field : null;
    this[S$0.type$3] = type;
    this[S$0.field] = field;
    ;
  }).prototype = messages$46pigeon$0.AggregateQuery.prototype;
  dart.addTypeTests(messages$46pigeon$0.AggregateQuery);
  dart.addTypeCaches(messages$46pigeon$0.AggregateQuery);
  dart.setMethodSignature(messages$46pigeon$0.AggregateQuery, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.AggregateQuery.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.AggregateQuery, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.AggregateQuery, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.AggregateQuery, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.AggregateQuery.__proto__),
    type: dart.fieldType(messages$46pigeon$0.AggregateType),
    field: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$0.AggregateQueryResponse = class AggregateQueryResponse extends core.Object {
    get type() {
      return this[S$0.type$4];
    }
    set type(value) {
      this[S$0.type$4] = value;
    }
    get field() {
      return this[S$0.field$1];
    }
    set field(value) {
      this[S$0.field$1] = value;
    }
    get value() {
      return this[S$0.value$1];
    }
    set value(value) {
      this[S$0.value$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let field = opts && 'field' in opts ? opts.field : null;
      let value = opts && 'value' in opts ? opts.value : null;
      return new messages$46pigeon$0.AggregateQueryResponse.new({type: type, field: field, value: value});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.type.index, this.field, this.value]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$0.AggregateQueryResponse.new({type: messages$46pigeon$0.AggregateType.values[S$.$_get](core.int.as(dart.nullCheck(result[S$.$_get](0)))), field: T$.StringN().as(result[S$.$_get](1)), value: core.double.as(dart.nullCheck(result[S$.$_get](2)))});
    }
  };
  (messages$46pigeon$0.AggregateQueryResponse.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let field = opts && 'field' in opts ? opts.field : null;
    let value = opts && 'value' in opts ? opts.value : null;
    this[S$0.type$4] = type;
    this[S$0.field$1] = field;
    this[S$0.value$1] = value;
    ;
  }).prototype = messages$46pigeon$0.AggregateQueryResponse.prototype;
  dart.addTypeTests(messages$46pigeon$0.AggregateQueryResponse);
  dart.addTypeCaches(messages$46pigeon$0.AggregateQueryResponse);
  dart.setMethodSignature(messages$46pigeon$0.AggregateQueryResponse, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.AggregateQueryResponse.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$0.AggregateQueryResponse, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$0.AggregateQueryResponse, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.AggregateQueryResponse, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.AggregateQueryResponse.__proto__),
    type: dart.fieldType(messages$46pigeon$0.AggregateType),
    field: dart.fieldType(dart.nullable(core.String)),
    value: dart.fieldType(core.double)
  }));
  firestore_message_codec.FirestoreMessageCodec = class FirestoreMessageCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new firestore_message_codec.FirestoreMessageCodec.new();
    }
    writeValue(buffer, value) {
      if (core.DateTime.is(value)) {
        buffer.putUint8(180);
        buffer.putInt64(value.millisecondsSinceEpoch);
      } else if (timestamp.Timestamp.is(value)) {
        buffer.putUint8(188);
        buffer.putInt64(value.seconds);
        buffer.putInt32(value.nanoseconds);
      } else if (geo_point.GeoPoint.is(value)) {
        buffer.putUint8(181);
        buffer.putFloat64(value.latitude);
        buffer.putFloat64(value.longitude);
      } else if (platform_interface_document_reference.DocumentReferencePlatform.is(value)) {
        buffer.putUint8(182);
        this.writeValue(buffer, value.firestore);
        this.writeValue(buffer, value.path);
      } else if (blob.Blob.is(value)) {
        buffer.putUint8(183);
        this.writeSize(buffer, value.bytes[S$.$length]);
        buffer.putUint8List(value.bytes);
      } else if (platform_interface_field_value.FieldValuePlatform.is(value)) {
        let delegate = method_channel_field_value.MethodChannelFieldValue.as(platform_interface_field_value.FieldValuePlatform.getDelegate(value));
        let code = dart.nullCheck(firestore_message_codec.FirestoreMessageCodec._kFieldValueCodes[S$.$_get](delegate.type));
        buffer.putUint8(code);
        if (delegate.value != null) this.writeValue(buffer, delegate.value);
      } else if (field_path_type.FieldPathType.is(value)) {
        let code = dart.nullCheck(firestore_message_codec.FirestoreMessageCodec._kFieldPathCodes[S$.$_get](value));
        buffer.putUint8(code);
      } else if (field_path.FieldPath.is(value)) {
        buffer.putUint8(192);
        this.writeSize(buffer, value.components[S$.$length]);
        for (let item of value.components) {
          this.writeValue(buffer, item);
        }
      } else if (method_channel_firestore.MethodChannelFirebaseFirestore.is(value)) {
        buffer.putUint8(196);
        this.writeValue(buffer, value.app.name);
        this.writeValue(buffer, value.databaseURL);
        this.writeValue(buffer, value.settings);
      } else if (method_channel_query.MethodChannelQuery.is(value)) {
        buffer.putUint8(197);
        this.writeValue(buffer, new (T$.IdentityMapOfString$dynamic()).from(["firestore", value.firestore, "path", value.path, "isCollectionGroup", value.isCollectionGroupQuery, "parameters", value.parameters]));
      } else if (settings.Settings.is(value)) {
        buffer.putUint8(198);
        this.writeValue(buffer, value.asMap);
      } else if (core.Iterable.is(value) && !core.List.is(value)) {
        super.writeValue(buffer, value[S$.$toList]());
      } else if (typeof value == 'number' && value[S$0.$isNaN]) {
        buffer.putUint8(193);
      } else if (dart.equals(value, 1 / 0)) {
        buffer.putUint8(194);
      } else if (dart.equals(value, -1 / 0)) {
        buffer.putUint8(195);
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 180:
          {
            return new core.DateTime.fromMillisecondsSinceEpoch(buffer.getInt64());
          }
        case 188:
          {
            return new timestamp.Timestamp.new(buffer.getInt64(), buffer.getInt32());
          }
        case 181:
          {
            return new geo_point.GeoPoint.new(buffer.getFloat64(), buffer.getFloat64());
          }
        case 182:
          {
            let appName = core.String.as(dart.nullCheck(this.readValue(buffer)));
            let path = core.String.as(dart.nullCheck(this.readValue(buffer)));
            let databaseURL = core.String.as(dart.nullCheck(this.readValue(buffer)));
            let app = firebase_core.Firebase.app(appName);
            let firestore = platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: app, databaseURL: databaseURL});
            return firestore.doc(path);
          }
        case 183:
          {
            let length = this.readSize(buffer);
            let bytes = buffer.getUint8List(length);
            return new blob.Blob.new(typed_data.Uint8List.as(bytes));
          }
        case 191:
          {
            return field_path.FieldPath.documentId;
          }
        case 193:
          {
            return 0 / 0;
          }
        case 194:
          {
            return 1 / 0;
          }
        case 195:
          {
            return -1 / 0;
          }
        case 196:
        case 197:
        case 198:
        case 184:
        case 185:
        case 186:
        case 187:
        case 189:
        case 190:
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (firestore_message_codec.FirestoreMessageCodec.new = function() {
    firestore_message_codec.FirestoreMessageCodec.__proto__.new.call(this);
    ;
  }).prototype = firestore_message_codec.FirestoreMessageCodec.prototype;
  dart.addTypeTests(firestore_message_codec.FirestoreMessageCodec);
  dart.addTypeCaches(firestore_message_codec.FirestoreMessageCodec);
  dart.setMethodSignature(firestore_message_codec.FirestoreMessageCodec, () => ({
    __proto__: dart.getMethods(firestore_message_codec.FirestoreMessageCodec.__proto__),
    writeValue: dart.fnType(dart.void, [serialization.WriteBuffer, dart.dynamic])
  }));
  dart.setLibraryUri(firestore_message_codec.FirestoreMessageCodec, I[121]);
  dart.setStaticFieldSignature(firestore_message_codec.FirestoreMessageCodec, () => ['_kDateTime', '_kGeoPoint', '_kDocumentReference', '_kBlob', '_kArrayUnion', '_kArrayRemove', '_kDelete', '_kServerTimestamp', '_kTimestamp', '_kIncrementDouble', '_kIncrementInteger', '_kDocumentId', '_kFieldPath', '_kNaN', '_kInfinity', '_kNegativeInfinity', '_kFirestoreInstance', '_kFirestoreQuery', '_kFirestoreSettings', '_kFieldValueCodes', '_kFieldPathCodes']);
  dart.defineLazy(firestore_message_codec.FirestoreMessageCodec, {
    /*firestore_message_codec.FirestoreMessageCodec._kDateTime*/get _kDateTime() {
      return 180;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kGeoPoint*/get _kGeoPoint() {
      return 181;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kDocumentReference*/get _kDocumentReference() {
      return 182;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kBlob*/get _kBlob() {
      return 183;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kArrayUnion*/get _kArrayUnion() {
      return 184;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kArrayRemove*/get _kArrayRemove() {
      return 185;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kDelete*/get _kDelete() {
      return 186;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kServerTimestamp*/get _kServerTimestamp() {
      return 187;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kTimestamp*/get _kTimestamp() {
      return 188;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kIncrementDouble*/get _kIncrementDouble() {
      return 189;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kIncrementInteger*/get _kIncrementInteger() {
      return 190;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kDocumentId*/get _kDocumentId() {
      return 191;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFieldPath*/get _kFieldPath() {
      return 192;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kNaN*/get _kNaN() {
      return 193;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kInfinity*/get _kInfinity() {
      return 194;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kNegativeInfinity*/get _kNegativeInfinity() {
      return 195;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFirestoreInstance*/get _kFirestoreInstance() {
      return 196;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFirestoreQuery*/get _kFirestoreQuery() {
      return 197;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFirestoreSettings*/get _kFirestoreSettings() {
      return 198;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFieldValueCodes*/get _kFieldValueCodes() {
      return C[222] || CT.C222;
    },
    /*firestore_message_codec.FirestoreMessageCodec._kFieldPathCodes*/get _kFieldPathCodes() {
      return C[229] || CT.C229;
    }
  }, false);
  messages$46pigeon$0._FirebaseFirestoreHostApiCodec = class _FirebaseFirestoreHostApiCodec extends firestore_message_codec.FirestoreMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$0._FirebaseFirestoreHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$0.AggregateQuery.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.AggregateQueryResponse.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.DocumentReferenceRequest.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.FirestorePigeonFirebaseApp.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonDocumentChange.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonDocumentOption.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonDocumentSnapshot.is(value)) {
        buffer.putUint8(134);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonFirebaseSettings.is(value)) {
        buffer.putUint8(135);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonGetOptions.is(value)) {
        buffer.putUint8(136);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonQueryParameters.is(value)) {
        buffer.putUint8(137);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonQuerySnapshot.is(value)) {
        buffer.putUint8(138);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonSnapshotMetadata.is(value)) {
        buffer.putUint8(139);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$0.PigeonTransactionCommand.is(value)) {
        buffer.putUint8(140);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$0.AggregateQuery.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$0.AggregateQueryResponse.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon$0.DocumentReferenceRequest.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon$0.FirestorePigeonFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon$0.PigeonDocumentChange.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon$0.PigeonDocumentOption.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 134:
          {
            return messages$46pigeon$0.PigeonDocumentSnapshot.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 135:
          {
            return messages$46pigeon$0.PigeonFirebaseSettings.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 136:
          {
            return messages$46pigeon$0.PigeonGetOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 137:
          {
            return messages$46pigeon$0.PigeonQueryParameters.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 138:
          {
            return messages$46pigeon$0.PigeonQuerySnapshot.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 139:
          {
            return messages$46pigeon$0.PigeonSnapshotMetadata.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 140:
          {
            return messages$46pigeon$0.PigeonTransactionCommand.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$0._FirebaseFirestoreHostApiCodec.new = function() {
    messages$46pigeon$0._FirebaseFirestoreHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$0._FirebaseFirestoreHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$0._FirebaseFirestoreHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$0._FirebaseFirestoreHostApiCodec);
  dart.setMethodSignature(messages$46pigeon$0._FirebaseFirestoreHostApiCodec, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0._FirebaseFirestoreHostApiCodec.__proto__),
    writeValue: dart.fnType(dart.void, [serialization.WriteBuffer, dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(messages$46pigeon$0._FirebaseFirestoreHostApiCodec, I[120]);
  messages$46pigeon$0.FirebaseFirestoreHostApi = class FirebaseFirestoreHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$0.FirebaseFirestoreHostApi.new({binaryMessenger: binaryMessenger});
    }
    loadBundle(arg_app, arg_bundle) {
      return async.async(core.String, (function* loadBundle() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.loadBundle", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_bundle])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    namedQueryGet(arg_app, arg_name, arg_options) {
      return async.async(messages$46pigeon$0.PigeonQuerySnapshot, (function* namedQueryGet() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.namedQueryGet", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_name, arg_options])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonQuerySnapshotN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    clearPersistence(arg_app) {
      return async.async(dart.void, (function* clearPersistence() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.clearPersistence", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    disableNetwork(arg_app) {
      return async.async(dart.void, (function* disableNetwork() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.disableNetwork", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    enableNetwork(arg_app) {
      return async.async(dart.void, (function* enableNetwork() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.enableNetwork", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    terminate(arg_app) {
      return async.async(dart.void, (function* terminate() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.terminate", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    waitForPendingWrites(arg_app) {
      return async.async(dart.void, (function* waitForPendingWrites() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.waitForPendingWrites", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setIndexConfiguration(arg_app, arg_indexConfiguration) {
      return async.async(dart.void, (function* setIndexConfiguration() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.setIndexConfiguration", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_indexConfiguration])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setLoggingEnabled(arg_loggingEnabled) {
      return async.async(dart.void, (function* setLoggingEnabled() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.setLoggingEnabled", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_loggingEnabled])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    snapshotsInSyncSetup(arg_app) {
      return async.async(core.String, (function* snapshotsInSyncSetup() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.snapshotsInSyncSetup", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    transactionCreate(arg_app, arg_timeout, arg_maxAttempts) {
      return async.async(core.String, (function* transactionCreate() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.transactionCreate", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_timeout, arg_maxAttempts])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    transactionStoreResult(arg_transactionId, arg_resultType, arg_commands) {
      return async.async(dart.void, (function* transactionStoreResult() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.transactionStoreResult", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_transactionId, arg_resultType.index, arg_commands])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    transactionGet(arg_app, arg_transactionId, arg_path) {
      return async.async(messages$46pigeon$0.PigeonDocumentSnapshot, (function* transactionGet() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.transactionGet", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_transactionId, arg_path])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonDocumentSnapshotN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    documentReferenceSet(arg_app, arg_request) {
      return async.async(dart.void, (function* documentReferenceSet() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.documentReferenceSet", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_request])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    documentReferenceUpdate(arg_app, arg_request) {
      return async.async(dart.void, (function* documentReferenceUpdate() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.documentReferenceUpdate", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_request])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    documentReferenceGet(arg_app, arg_request) {
      return async.async(messages$46pigeon$0.PigeonDocumentSnapshot, (function* documentReferenceGet() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.documentReferenceGet", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_request])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonDocumentSnapshotN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    documentReferenceDelete(arg_app, arg_request) {
      return async.async(dart.void, (function* documentReferenceDelete() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.documentReferenceDelete", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_request])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    queryGet(arg_app, arg_path, arg_isCollectionGroup, arg_parameters, arg_options) {
      return async.async(messages$46pigeon$0.PigeonQuerySnapshot, (function* queryGet() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.queryGet", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_path, arg_isCollectionGroup, arg_parameters, arg_options])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.PigeonQuerySnapshotN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    aggregateQuery(arg_app, arg_path, arg_parameters, arg_source, arg_queries, arg_isCollectionGroup) {
      return async.async(T$.ListOfAggregateQueryResponseN(), (function* aggregateQuery() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.aggregateQuery", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_path, arg_parameters, arg_source.index, arg_queries, arg_isCollectionGroup])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.ListNOfObjectN().as(replyList[S$.$_get](0)))[S$.$cast](T$.AggregateQueryResponseN());
        }
      }).bind(this));
    }
    writeBatchCommit(arg_app, arg_writes) {
      return async.async(dart.void, (function* writeBatchCommit() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.writeBatchCommit", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_writes])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    querySnapshot(arg_app, arg_path, arg_isCollectionGroup, arg_parameters, arg_options, arg_includeMetadataChanges) {
      return async.async(core.String, (function* querySnapshot() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.querySnapshot", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_path, arg_isCollectionGroup, arg_parameters, arg_options, arg_includeMetadataChanges])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    documentReferenceSnapshot(arg_app, arg_parameters, arg_includeMetadataChanges) {
      return async.async(core.String, (function* documentReferenceSnapshot() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.cloud_firestore_platform_interface.FirebaseFirestoreHostApi.documentReferenceSnapshot", messages$46pigeon$0.FirebaseFirestoreHostApi.codec, {binaryMessenger: this[S$0._binaryMessenger$2]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_parameters, arg_includeMetadataChanges])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$0.FirebaseFirestoreHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S$0._binaryMessenger$2] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$0.FirebaseFirestoreHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$0.FirebaseFirestoreHostApi);
  dart.addTypeCaches(messages$46pigeon$0.FirebaseFirestoreHostApi);
  dart.setMethodSignature(messages$46pigeon$0.FirebaseFirestoreHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$0.FirebaseFirestoreHostApi.__proto__),
    loadBundle: dart.fnType(async.Future$(core.String), [messages$46pigeon$0.FirestorePigeonFirebaseApp, typed_data.Uint8List]),
    namedQueryGet: dart.fnType(async.Future$(messages$46pigeon$0.PigeonQuerySnapshot), [messages$46pigeon$0.FirestorePigeonFirebaseApp, core.String, messages$46pigeon$0.PigeonGetOptions]),
    clearPersistence: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.FirestorePigeonFirebaseApp]),
    disableNetwork: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.FirestorePigeonFirebaseApp]),
    enableNetwork: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.FirestorePigeonFirebaseApp]),
    terminate: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.FirestorePigeonFirebaseApp]),
    waitForPendingWrites: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.FirestorePigeonFirebaseApp]),
    setIndexConfiguration: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.FirestorePigeonFirebaseApp, core.String]),
    setLoggingEnabled: dart.fnType(async.Future$(dart.void), [core.bool]),
    snapshotsInSyncSetup: dart.fnType(async.Future$(core.String), [messages$46pigeon$0.FirestorePigeonFirebaseApp]),
    transactionCreate: dart.fnType(async.Future$(core.String), [messages$46pigeon$0.FirestorePigeonFirebaseApp, core.int, core.int]),
    transactionStoreResult: dart.fnType(async.Future$(dart.void), [core.String, messages$46pigeon$0.PigeonTransactionResult, dart.nullable(core.List$(dart.nullable(messages$46pigeon$0.PigeonTransactionCommand)))]),
    transactionGet: dart.fnType(async.Future$(messages$46pigeon$0.PigeonDocumentSnapshot), [messages$46pigeon$0.FirestorePigeonFirebaseApp, core.String, core.String]),
    documentReferenceSet: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.FirestorePigeonFirebaseApp, messages$46pigeon$0.DocumentReferenceRequest]),
    documentReferenceUpdate: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.FirestorePigeonFirebaseApp, messages$46pigeon$0.DocumentReferenceRequest]),
    documentReferenceGet: dart.fnType(async.Future$(messages$46pigeon$0.PigeonDocumentSnapshot), [messages$46pigeon$0.FirestorePigeonFirebaseApp, messages$46pigeon$0.DocumentReferenceRequest]),
    documentReferenceDelete: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.FirestorePigeonFirebaseApp, messages$46pigeon$0.DocumentReferenceRequest]),
    queryGet: dart.fnType(async.Future$(messages$46pigeon$0.PigeonQuerySnapshot), [messages$46pigeon$0.FirestorePigeonFirebaseApp, core.String, core.bool, messages$46pigeon$0.PigeonQueryParameters, messages$46pigeon$0.PigeonGetOptions]),
    aggregateQuery: dart.fnType(async.Future$(core.List$(dart.nullable(messages$46pigeon$0.AggregateQueryResponse))), [messages$46pigeon$0.FirestorePigeonFirebaseApp, core.String, messages$46pigeon$0.PigeonQueryParameters, messages$46pigeon$0.AggregateSource, core.List$(dart.nullable(messages$46pigeon$0.AggregateQuery)), core.bool]),
    writeBatchCommit: dart.fnType(async.Future$(dart.void), [messages$46pigeon$0.FirestorePigeonFirebaseApp, core.List$(dart.nullable(messages$46pigeon$0.PigeonTransactionCommand))]),
    querySnapshot: dart.fnType(async.Future$(core.String), [messages$46pigeon$0.FirestorePigeonFirebaseApp, core.String, core.bool, messages$46pigeon$0.PigeonQueryParameters, messages$46pigeon$0.PigeonGetOptions, core.bool]),
    documentReferenceSnapshot: dart.fnType(async.Future$(core.String), [messages$46pigeon$0.FirestorePigeonFirebaseApp, messages$46pigeon$0.DocumentReferenceRequest, core.bool])
  }));
  dart.setLibraryUri(messages$46pigeon$0.FirebaseFirestoreHostApi, I[120]);
  dart.setFieldSignature(messages$46pigeon$0.FirebaseFirestoreHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$0.FirebaseFirestoreHostApi.__proto__),
    [S$0._binaryMessenger$2]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$0.FirebaseFirestoreHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$0.FirebaseFirestoreHostApi, {
    /*messages$46pigeon$0.FirebaseFirestoreHostApi.codec*/get codec() {
      return C[231] || CT.C231;
    }
  }, false);
  blob.Blob = class Blob extends core.Object {
    get bytes() {
      return this[S$0.bytes];
    }
    set bytes(value) {
      super.bytes = value;
    }
    static ['_#new#tearOff'](bytes) {
      return new blob.Blob.new(bytes);
    }
    _equals(other) {
      if (other == null) return false;
      return blob.Blob.is(other) && (C[73] || CT.C73).equals(other.bytes, this.bytes);
    }
    get hashCode() {
      return core.Object.hashAll(this.bytes);
    }
  };
  (blob.Blob.new = function(bytes) {
    this[S$0.bytes] = bytes;
    ;
  }).prototype = blob.Blob.prototype;
  dart.addTypeTests(blob.Blob);
  dart.addTypeCaches(blob.Blob);
  dart.setLibraryUri(blob.Blob, I[122]);
  dart.setFieldSignature(blob.Blob, () => ({
    __proto__: dart.getFields(blob.Blob.__proto__),
    bytes: dart.finalFieldType(typed_data.Uint8List)
  }));
  dart.defineExtensionMethods(blob.Blob, ['_equals']);
  dart.defineExtensionAccessors(blob.Blob, ['hashCode']);
  field_path.FieldPath = class FieldPath extends core.Object {
    get components() {
      return this[S$0.components$1];
    }
    set components(value) {
      super.components = value;
    }
    static ['_#new#tearOff'](components) {
      return new field_path.FieldPath.new(components);
    }
    static get documentId() {
      return field_path_type.FieldPathType.documentId;
    }
    static ['_#fromString#tearOff'](path) {
      return new field_path.FieldPath.fromString(path);
    }
    _equals(other) {
      if (other == null) return false;
      return field_path.FieldPath.is(other) && (C[161] || CT.C161).equals(other.components, this.components);
    }
    get hashCode() {
      return core.Object.hashAll(this.components);
    }
    toString() {
      return "FieldPath(" + dart.str(this.components) + ")";
    }
  };
  (field_path.FieldPath.new = function(components) {
    this[S$0.components$1] = components;
    if (!components[S$.$isNotEmpty]) dart.assertFailed(null, I[123], 23, 16, "components.isNotEmpty");
    if (!components[S$.$where](dart.fn(component => component[S$.$isEmpty], T$.StringTobool()))[S$.$isEmpty]) dart.assertFailed("Expected all FieldPath components to be non-null or non-empty strings.", I[123], 25, 11, "components.where((component) => component.isEmpty).isEmpty");
    ;
  }).prototype = field_path.FieldPath.prototype;
  (field_path.FieldPath.fromString = function(path) {
    this[S$0.components$1] = path[S$.$split](".");
    if (!path[S$.$isNotEmpty]) dart.assertFailed(null, I[123], 44, 16, "path.isNotEmpty");
    if (!!path[S$.$startsWith](".")) dart.assertFailed(null, I[123], 45, 16, "!path.startsWith('.')");
    if (!!path[S$0.$endsWith](".")) dart.assertFailed(null, I[123], 46, 16, "!path.endsWith('.')");
    if (!!path[S$.$contains]("..")) dart.assertFailed(null, I[123], 47, 16, "!path.contains('..')");
    if (!!path[S$.$contains]("~")) dart.assertFailed(field_path._reserved, I[123], 48, 16, "!path.contains('~')");
    if (!!path[S$.$contains]("*")) dart.assertFailed(field_path._reserved, I[123], 49, 16, "!path.contains('*')");
    if (!!path[S$.$contains]("/")) dart.assertFailed(field_path._reserved, I[123], 50, 16, "!path.contains('/')");
    if (!!path[S$.$contains]("[")) dart.assertFailed(field_path._reserved, I[123], 51, 16, "!path.contains('[')");
    if (!!path[S$.$contains]("]")) dart.assertFailed(field_path._reserved, I[123], 52, 16, "!path.contains(']')");
    ;
  }).prototype = field_path.FieldPath.prototype;
  dart.addTypeTests(field_path.FieldPath);
  dart.addTypeCaches(field_path.FieldPath);
  dart.setStaticGetterSignature(field_path.FieldPath, () => ['documentId']);
  dart.setLibraryUri(field_path.FieldPath, I[124]);
  dart.setFieldSignature(field_path.FieldPath, () => ({
    __proto__: dart.getFields(field_path.FieldPath.__proto__),
    components: dart.finalFieldType(core.List$(core.String))
  }));
  dart.defineExtensionMethods(field_path.FieldPath, ['_equals', 'toString']);
  dart.defineExtensionAccessors(field_path.FieldPath, ['hashCode']);
  dart.defineLazy(field_path, {
    /*field_path._reserved*/get _reserved() {
      return "Paths must not contain '~', '*', '/', '[', or ']'.";
    },
    set _reserved(value) {}
  }, false);
  field_path_type.FieldPathType = class FieldPathType extends core._Enum {
    [S$0._enumToString]() {
      return "FieldPathType." + this[S$0._name];
    }
  };
  (field_path_type.FieldPathType.new = function(index, name) {
    field_path_type.FieldPathType.__proto__.new.call(this, index, name);
    ;
  }).prototype = field_path_type.FieldPathType.prototype;
  dart.addTypeTests(field_path_type.FieldPathType);
  dart.addTypeCaches(field_path_type.FieldPathType);
  dart.setMethodSignature(field_path_type.FieldPathType, () => ({
    __proto__: dart.getMethods(field_path_type.FieldPathType.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(field_path_type.FieldPathType, I[125]);
  dart.setStaticFieldSignature(field_path_type.FieldPathType, () => ['values', 'documentId']);
  dart.defineLazy(field_path_type.FieldPathType, {
    /*field_path_type.FieldPathType.values*/get values() {
      return C[232] || CT.C232;
    },
    /*field_path_type.FieldPathType.documentId*/get documentId() {
      return C[230] || CT.C230;
    }
  }, false);
  geo_point.GeoPoint = class GeoPoint extends core.Object {
    get latitude() {
      return this[S$0.latitude];
    }
    set latitude(value) {
      super.latitude = value;
    }
    get longitude() {
      return this[S$0.longitude];
    }
    set longitude(value) {
      super.longitude = value;
    }
    static ['_#new#tearOff'](latitude, longitude) {
      return new geo_point.GeoPoint.new(latitude, longitude);
    }
    _equals(other) {
      if (other == null) return false;
      return geo_point.GeoPoint.is(other) && other.latitude === this.latitude && other.longitude === this.longitude;
    }
    get hashCode() {
      return core.Object.hash(this.latitude, this.longitude);
    }
  };
  (geo_point.GeoPoint.new = function(latitude, longitude) {
    this[S$0.latitude] = latitude;
    this[S$0.longitude] = longitude;
    if (!(latitude >= -90 && latitude <= 90)) dart.assertFailed(null, I[126], 13, 16, "latitude >= -90 && latitude <= 90");
    if (!(longitude >= -180 && longitude <= 180)) dart.assertFailed(null, I[126], 14, 16, "longitude >= -180 && longitude <= 180");
    ;
  }).prototype = geo_point.GeoPoint.prototype;
  dart.addTypeTests(geo_point.GeoPoint);
  dart.addTypeCaches(geo_point.GeoPoint);
  dart.setLibraryUri(geo_point.GeoPoint, I[127]);
  dart.setFieldSignature(geo_point.GeoPoint, () => ({
    __proto__: dart.getFields(geo_point.GeoPoint.__proto__),
    latitude: dart.finalFieldType(core.double),
    longitude: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(geo_point.GeoPoint, ['_equals']);
  dart.defineExtensionAccessors(geo_point.GeoPoint, ['hashCode']);
  get_options.GetOptions = class GetOptions extends core.Object {
    get source() {
      return this[S$0.source$2];
    }
    set source(value) {
      super.source = value;
    }
    get serverTimestampBehavior() {
      return this[S$0.serverTimestampBehavior$2];
    }
    set serverTimestampBehavior(value) {
      super.serverTimestampBehavior = value;
    }
    static ['_#new#tearOff'](opts) {
      let source = opts && 'source' in opts ? opts.source : C[54] || CT.C54;
      let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : C[53] || CT.C53;
      return new get_options.GetOptions.new({source: source, serverTimestampBehavior: serverTimestampBehavior});
    }
  };
  (get_options.GetOptions.new = function(opts) {
    let source = opts && 'source' in opts ? opts.source : C[54] || CT.C54;
    let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : C[53] || CT.C53;
    this[S$0.source$2] = source;
    this[S$0.serverTimestampBehavior$2] = serverTimestampBehavior;
    ;
  }).prototype = get_options.GetOptions.prototype;
  dart.addTypeTests(get_options.GetOptions);
  dart.addTypeCaches(get_options.GetOptions);
  dart.setLibraryUri(get_options.GetOptions, I[128]);
  dart.setFieldSignature(get_options.GetOptions, () => ({
    __proto__: dart.getFields(get_options.GetOptions.__proto__),
    source: dart.finalFieldType(messages$46pigeon$0.Source),
    serverTimestampBehavior: dart.finalFieldType(messages$46pigeon$0.ServerTimestampBehavior)
  }));
  load_bundle_task_state.LoadBundleTaskState = class LoadBundleTaskState extends core._Enum {
    [S$0._enumToString]() {
      return "LoadBundleTaskState." + this[S$0._name];
    }
  };
  (load_bundle_task_state.LoadBundleTaskState.new = function(index, name) {
    load_bundle_task_state.LoadBundleTaskState.__proto__.new.call(this, index, name);
    ;
  }).prototype = load_bundle_task_state.LoadBundleTaskState.prototype;
  dart.addTypeTests(load_bundle_task_state.LoadBundleTaskState);
  dart.addTypeCaches(load_bundle_task_state.LoadBundleTaskState);
  dart.setMethodSignature(load_bundle_task_state.LoadBundleTaskState, () => ({
    __proto__: dart.getMethods(load_bundle_task_state.LoadBundleTaskState.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(load_bundle_task_state.LoadBundleTaskState, I[129]);
  dart.setStaticFieldSignature(load_bundle_task_state.LoadBundleTaskState, () => ['values', 'running', 'success', 'error']);
  dart.defineLazy(load_bundle_task_state.LoadBundleTaskState, {
    /*load_bundle_task_state.LoadBundleTaskState.values*/get values() {
      return C[233] || CT.C233;
    },
    /*load_bundle_task_state.LoadBundleTaskState.running*/get running() {
      return C[234] || CT.C234;
    },
    /*load_bundle_task_state.LoadBundleTaskState.success*/get success() {
      return C[235] || CT.C235;
    },
    /*load_bundle_task_state.LoadBundleTaskState.error*/get error() {
      return C[236] || CT.C236;
    }
  }, false);
  persistence_settings.PersistenceSettings = class PersistenceSettings extends core.Object {
    get synchronizeTabs() {
      return this[S$0.synchronizeTabs];
    }
    set synchronizeTabs(value) {
      super.synchronizeTabs = value;
    }
    static ['_#new#tearOff'](opts) {
      let synchronizeTabs = opts && 'synchronizeTabs' in opts ? opts.synchronizeTabs : null;
      return new persistence_settings.PersistenceSettings.new({synchronizeTabs: synchronizeTabs});
    }
  };
  (persistence_settings.PersistenceSettings.new = function(opts) {
    let synchronizeTabs = opts && 'synchronizeTabs' in opts ? opts.synchronizeTabs : null;
    this[S$0.synchronizeTabs] = synchronizeTabs;
    ;
  }).prototype = persistence_settings.PersistenceSettings.prototype;
  dart.addTypeTests(persistence_settings.PersistenceSettings);
  dart.addTypeCaches(persistence_settings.PersistenceSettings);
  dart.setLibraryUri(persistence_settings.PersistenceSettings, I[130]);
  dart.setFieldSignature(persistence_settings.PersistenceSettings, () => ({
    __proto__: dart.getFields(persistence_settings.PersistenceSettings.__proto__),
    synchronizeTabs: dart.finalFieldType(core.bool)
  }));
  platform_interface_aggregate_query.AggregateQueryPlatform = class AggregateQueryPlatform extends plugin_platform_interface.PlatformInterface {
    get query() {
      return this[S$0.query$2];
    }
    set query(value) {
      super.query = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_aggregate_query.AggregateQueryPlatform._token);
    }
    get(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      return async.async(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, function* get() {
        dart.throw(new core.UnimplementedError.new("get() is not implemented"));
      });
    }
    count() {
      dart.throw(new core.UnimplementedError.new("count() is not implemented"));
    }
    sum(field) {
      dart.throw(new core.UnimplementedError.new("sum() is not implemented"));
    }
    average(field) {
      dart.throw(new core.UnimplementedError.new("average() is not implemented"));
    }
  };
  (platform_interface_aggregate_query.AggregateQueryPlatform.new = function(query) {
    this[S$0.query$2] = query;
    platform_interface_aggregate_query.AggregateQueryPlatform.__proto__.new.call(this, {token: platform_interface_aggregate_query.AggregateQueryPlatform._token});
    ;
  }).prototype = platform_interface_aggregate_query.AggregateQueryPlatform.prototype;
  dart.addTypeTests(platform_interface_aggregate_query.AggregateQueryPlatform);
  dart.addTypeCaches(platform_interface_aggregate_query.AggregateQueryPlatform);
  dart.setMethodSignature(platform_interface_aggregate_query.AggregateQueryPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_aggregate_query.AggregateQueryPlatform.__proto__),
    get: dart.fnType(async.Future$(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform), [], {}, {source: messages$46pigeon$0.AggregateSource}),
    count: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, []),
    sum: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, [core.String]),
    average: dart.fnType(platform_interface_aggregate_query.AggregateQueryPlatform, [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_aggregate_query.AggregateQueryPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_aggregate_query.AggregateQueryPlatform, I[131]);
  dart.setFieldSignature(platform_interface_aggregate_query.AggregateQueryPlatform, () => ({
    __proto__: dart.getFields(platform_interface_aggregate_query.AggregateQueryPlatform.__proto__),
    query: dart.finalFieldType(platform_interface_query.QueryPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_aggregate_query.AggregateQueryPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_aggregate_query.AggregateQueryPlatform, {
    /*platform_interface_aggregate_query.AggregateQueryPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform = class AggregateQuerySnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff'](opts) {
      let count = opts && 'count' in opts ? opts.count : null;
      let sum = opts && 'sum' in opts ? opts.sum : null;
      let average = opts && 'average' in opts ? opts.average : null;
      return new platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.new({count: count, sum: sum, average: average});
    }
    static verifyExtends(instance) {
      plugin_platform_interface.PlatformInterface.verifyToken(instance, platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform._token);
    }
    get count() {
      return this[S$0._count];
    }
    getAverage(field) {
      let t172;
      t172 = iterable_extensions['IterableExtension|firstWhereOrNull'](messages$46pigeon$0.AggregateQueryResponse, this[S$0._average], dart.fn(element => element.field === field, T$.AggregateQueryResponseTobool()));
      return t172 == null ? null : t172.value;
    }
    getSum(field) {
      let t172;
      t172 = iterable_extensions['IterableExtension|firstWhereOrNull'](messages$46pigeon$0.AggregateQueryResponse, this[S$0._sum], dart.fn(element => element.field === field, T$.AggregateQueryResponseTobool()));
      return t172 == null ? null : t172.value;
    }
  };
  (platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.new = function(opts) {
    let count = opts && 'count' in opts ? opts.count : null;
    let sum = opts && 'sum' in opts ? opts.sum : null;
    let average = opts && 'average' in opts ? opts.average : null;
    this[S$0._count] = count;
    this[S$0._sum] = sum;
    this[S$0._average] = average;
    platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.__proto__.new.call(this, {token: platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform._token});
    ;
  }).prototype = platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform);
  dart.addTypeCaches(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform);
  dart.setMethodSignature(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.__proto__),
    getAverage: dart.fnType(dart.nullable(core.double), [core.String]),
    getSum: dart.fnType(dart.nullable(core.double), [core.String])
  }));
  dart.setStaticMethodSignature(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, () => ['verifyExtends']);
  dart.setGetterSignature(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.__proto__),
    count: dart.nullable(core.int)
  }));
  dart.setLibraryUri(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, I[132]);
  dart.setFieldSignature(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.__proto__),
    [S$0._count]: dart.finalFieldType(dart.nullable(core.int)),
    [S$0._average]: dart.finalFieldType(core.List$(messages$46pigeon$0.AggregateQueryResponse)),
    [S$0._sum]: dart.finalFieldType(core.List$(messages$46pigeon$0.AggregateQueryResponse))
  }));
  dart.setStaticFieldSignature(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, {
    /*platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_collection_reference.CollectionReferencePlatform = class CollectionReferencePlatform extends platform_interface_query.QueryPlatform {
    get id() {
      return this[S$._pointer$1].id;
    }
    get parent() {
      let parentPath = this[S$._pointer$1].parentPath();
      if (parentPath == null) {
        return null;
      }
      return this.firestore.doc(parentPath);
    }
    get path() {
      return this[S$._pointer$1].path;
    }
    doc(path = null) {
      dart.throw(new core.UnimplementedError.new("doc() is not implemented"));
    }
    _equals(other) {
      if (other == null) return false;
      return platform_interface_collection_reference.CollectionReferencePlatform.is(other) && other.firestore._equals(this.firestore) && other.path === this.path;
    }
    get hashCode() {
      return this.path[S$.$hashCode];
    }
    toString() {
      return dart.str(dart.wrapType(platform_interface_collection_reference.CollectionReferencePlatform)) + "(" + this.path + ")";
    }
  };
  (platform_interface_collection_reference.CollectionReferencePlatform.new = function(firestore, path) {
    this[S$._pointer$1] = new pointer.Pointer.new(path);
    platform_interface_collection_reference.CollectionReferencePlatform.__proto__.new.call(this, firestore, new (T$.IdentityMapOfString$dynamic()).new());
    ;
  }).prototype = platform_interface_collection_reference.CollectionReferencePlatform.prototype;
  dart.addTypeTests(platform_interface_collection_reference.CollectionReferencePlatform);
  dart.addTypeCaches(platform_interface_collection_reference.CollectionReferencePlatform);
  dart.setMethodSignature(platform_interface_collection_reference.CollectionReferencePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_collection_reference.CollectionReferencePlatform.__proto__),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [], [dart.nullable(core.String)])
  }));
  dart.setGetterSignature(platform_interface_collection_reference.CollectionReferencePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_collection_reference.CollectionReferencePlatform.__proto__),
    id: core.String,
    parent: dart.nullable(platform_interface_document_reference.DocumentReferencePlatform),
    path: core.String
  }));
  dart.setLibraryUri(platform_interface_collection_reference.CollectionReferencePlatform, I[133]);
  dart.setFieldSignature(platform_interface_collection_reference.CollectionReferencePlatform, () => ({
    __proto__: dart.getFields(platform_interface_collection_reference.CollectionReferencePlatform.__proto__),
    [S$._pointer$1]: dart.finalFieldType(pointer.Pointer)
  }));
  dart.defineExtensionMethods(platform_interface_collection_reference.CollectionReferencePlatform, ['_equals', 'toString']);
  dart.defineExtensionAccessors(platform_interface_collection_reference.CollectionReferencePlatform, ['hashCode']);
  platform_interface_document_change.DocumentChangePlatform = class DocumentChangePlatform extends plugin_platform_interface.PlatformInterface {
    get type() {
      return this[S$0.type$5];
    }
    set type(value) {
      super.type = value;
    }
    get oldIndex() {
      return this[S$0.oldIndex$1];
    }
    set oldIndex(value) {
      super.oldIndex = value;
    }
    get newIndex() {
      return this[S$0.newIndex$1];
    }
    set newIndex(value) {
      super.newIndex = value;
    }
    get document() {
      return this[S$0.document$1];
    }
    set document(value) {
      super.document = value;
    }
    static ['_#new#tearOff'](type, oldIndex, newIndex, document) {
      return new platform_interface_document_change.DocumentChangePlatform.new(type, oldIndex, newIndex, document);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_document_change.DocumentChangePlatform._token);
    }
  };
  (platform_interface_document_change.DocumentChangePlatform.new = function(type, oldIndex, newIndex, document) {
    this[S$0.type$5] = type;
    this[S$0.oldIndex$1] = oldIndex;
    this[S$0.newIndex$1] = newIndex;
    this[S$0.document$1] = document;
    platform_interface_document_change.DocumentChangePlatform.__proto__.new.call(this, {token: platform_interface_document_change.DocumentChangePlatform._token});
    ;
  }).prototype = platform_interface_document_change.DocumentChangePlatform.prototype;
  dart.addTypeTests(platform_interface_document_change.DocumentChangePlatform);
  dart.addTypeCaches(platform_interface_document_change.DocumentChangePlatform);
  dart.setStaticMethodSignature(platform_interface_document_change.DocumentChangePlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_document_change.DocumentChangePlatform, I[134]);
  dart.setFieldSignature(platform_interface_document_change.DocumentChangePlatform, () => ({
    __proto__: dart.getFields(platform_interface_document_change.DocumentChangePlatform.__proto__),
    type: dart.finalFieldType(messages$46pigeon$0.DocumentChangeType),
    oldIndex: dart.finalFieldType(core.int),
    newIndex: dart.finalFieldType(core.int),
    document: dart.finalFieldType(platform_interface_document_snapshot.DocumentSnapshotPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_document_change.DocumentChangePlatform, () => ['_token']);
  dart.defineLazy(platform_interface_document_change.DocumentChangePlatform, {
    /*platform_interface_document_change.DocumentChangePlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_document_snapshot.DocumentSnapshotPlatform = class DocumentSnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    static ['_#new#tearOff'](_firestore, path, _data, _metadata) {
      return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(_firestore, path, _data, _metadata);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_document_snapshot.DocumentSnapshotPlatform._token);
    }
    get id() {
      return this[S$0._pointer$3].id;
    }
    get metadata() {
      return new snapshot_metadata.SnapshotMetadataPlatform.new(this[S$0._metadata].hasPendingWrites, this[S$0._metadata].isFromCache);
    }
    get exists() {
      return this[S$0._data$4] != null;
    }
    get reference() {
      return this[S$0._firestore$3].doc(this[S$0._pointer$3].path);
    }
    data() {
      return this.exists ? T$.LinkedHashMapOfString$dynamic().from(dart.nullCheck(this[S$0._data$4])[S$.$cast](core.String, dart.dynamic)) : null;
    }
    get(field) {
      if (!(typeof field == 'string' || field_path.FieldPath.is(field))) dart.assertFailed("Supported [field] types are [String] and [FieldPath]", I[135], 77, 7, "field is String || field is FieldPath");
      if (!this.exists) {
        dart.throw(new core.StateError.new("cannot get field \"" + dart.str(field) + "\" on a " + dart.str(dart.wrapType(platform_interface_document_snapshot.DocumentSnapshotPlatform)) + " which does not exist"));
      }
      function _findKeyValueInMap(key, map) {
        if (map[S$.$containsKey](key)) {
          return map[S$.$_get](key);
        }
        dart.throw(new core.StateError.new("field \"" + key + "\" does not exist within the " + dart.str(dart.wrapType(platform_interface_document_snapshot.DocumentSnapshotPlatform))));
      }
      dart.fn(_findKeyValueInMap, T$.StringAndMapOfString$dynamicTodynamic());
      let fieldPath = null;
      if (typeof field == 'string') {
        fieldPath = new field_path.FieldPath.fromString(field);
      } else {
        fieldPath = field_path.FieldPath.as(field);
      }
      let components = fieldPath.components;
      let snapshotData = this.data();
      function _findComponent(componentIndex, data) {
        let isLast = componentIndex + 1 === components[S$.$length];
        let value = _findKeyValueInMap(components[S$.$_get](componentIndex), dart.nullCheck(data));
        if (isLast) {
          return value;
        }
        if (core.Map.is(value)) {
          return _findComponent(componentIndex + 1, T$.LinkedHashMapOfString$dynamic().from(value));
        } else {
          dart.throw(new core.StateError.new("field \"" + dart.str(value) + "\" does not exist within the " + dart.str(dart.wrapType(platform_interface_document_snapshot.DocumentSnapshotPlatform))));
        }
      }
      dart.fn(_findComponent, T$.intAndMapNOfString$dynamicTodynamic());
      return _findComponent(0, snapshotData);
    }
    _get(field) {
      return this.get(field);
    }
  };
  (platform_interface_document_snapshot.DocumentSnapshotPlatform.new = function(_firestore, path, _data, _metadata) {
    this[S$0._firestore$3] = _firestore;
    this[S$0._data$4] = _data;
    this[S$0._metadata] = _metadata;
    this[S$0._pointer$3] = new pointer.Pointer.new(path);
    platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__.new.call(this, {token: platform_interface_document_snapshot.DocumentSnapshotPlatform._token});
    ;
  }).prototype = platform_interface_document_snapshot.DocumentSnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_document_snapshot.DocumentSnapshotPlatform);
  dart.addTypeCaches(platform_interface_document_snapshot.DocumentSnapshotPlatform);
  dart.setMethodSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__),
    data: dart.fnType(dart.nullable(core.Map$(core.String, dart.dynamic)), []),
    get: dart.fnType(dart.dynamic, [core.Object]),
    _get: dart.fnType(dart.dynamic, [core.Object])
  }));
  dart.setStaticMethodSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__),
    id: core.String,
    metadata: snapshot_metadata.SnapshotMetadataPlatform,
    exists: core.bool,
    reference: platform_interface_document_reference.DocumentReferencePlatform
  }));
  dart.setLibraryUri(platform_interface_document_snapshot.DocumentSnapshotPlatform, I[136]);
  dart.setFieldSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_document_snapshot.DocumentSnapshotPlatform.__proto__),
    [S$0._firestore$3]: dart.finalFieldType(platform_interface_firestore.FirebaseFirestorePlatform),
    [S$0._pointer$3]: dart.finalFieldType(pointer.Pointer),
    [S$0._data$4]: dart.finalFieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object)))),
    [S$0._metadata]: dart.finalFieldType(messages$46pigeon$0.PigeonSnapshotMetadata)
  }));
  dart.setStaticFieldSignature(platform_interface_document_snapshot.DocumentSnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_document_snapshot.DocumentSnapshotPlatform, {
    /*platform_interface_document_snapshot.DocumentSnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_index_definitions.Index = class Index extends core.Object {
    get collectionGroup() {
      return this[S$0.collectionGroup];
    }
    set collectionGroup(value) {
      super.collectionGroup = value;
    }
    get queryScope() {
      return this[S$0.queryScope];
    }
    set queryScope(value) {
      super.queryScope = value;
    }
    get fields() {
      return this[S$0.fields];
    }
    set fields(value) {
      super.fields = value;
    }
    static ['_#new#tearOff'](opts) {
      let collectionGroup = opts && 'collectionGroup' in opts ? opts.collectionGroup : null;
      let fields = opts && 'fields' in opts ? opts.fields : null;
      let queryScope = opts && 'queryScope' in opts ? opts.queryScope : null;
      return new platform_interface_index_definitions.Index.new({collectionGroup: collectionGroup, fields: fields, queryScope: queryScope});
    }
    toMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["collectionGroup", this.collectionGroup, "fields", this.fields[S$.$map](T$.MapOfString$dynamic(), dart.fn(field => field.toMap(), T$.IndexFieldToMapOfString$dynamic()))[S$.$toList](), "queryScope", this.queryScope === platform_interface_index_definitions.QueryScope.collection ? "COLLECTION" : "COLLECTION_GROUP"]);
    }
  };
  (platform_interface_index_definitions.Index.new = function(opts) {
    let collectionGroup = opts && 'collectionGroup' in opts ? opts.collectionGroup : null;
    let fields = opts && 'fields' in opts ? opts.fields : null;
    let queryScope = opts && 'queryScope' in opts ? opts.queryScope : null;
    this[S$0.collectionGroup] = collectionGroup;
    this[S$0.fields] = fields;
    this[S$0.queryScope] = queryScope;
    ;
  }).prototype = platform_interface_index_definitions.Index.prototype;
  dart.addTypeTests(platform_interface_index_definitions.Index);
  dart.addTypeCaches(platform_interface_index_definitions.Index);
  dart.setMethodSignature(platform_interface_index_definitions.Index, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.Index.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.Index, I[137]);
  dart.setFieldSignature(platform_interface_index_definitions.Index, () => ({
    __proto__: dart.getFields(platform_interface_index_definitions.Index.__proto__),
    collectionGroup: dart.finalFieldType(core.String),
    queryScope: dart.finalFieldType(platform_interface_index_definitions.QueryScope),
    fields: dart.finalFieldType(core.List$(platform_interface_index_definitions.IndexField))
  }));
  platform_interface_index_definitions.IndexField = class IndexField extends core.Object {
    get fieldPath() {
      return this[S$0.fieldPath];
    }
    set fieldPath(value) {
      super.fieldPath = value;
    }
    get order() {
      return this[S$0.order];
    }
    set order(value) {
      super.order = value;
    }
    get arrayConfig() {
      return this[S$0.arrayConfig];
    }
    set arrayConfig(value) {
      super.arrayConfig = value;
    }
    static ['_#new#tearOff'](opts) {
      let fieldPath = opts && 'fieldPath' in opts ? opts.fieldPath : null;
      let order = opts && 'order' in opts ? opts.order : null;
      let arrayConfig = opts && 'arrayConfig' in opts ? opts.arrayConfig : null;
      return new platform_interface_index_definitions.IndexField.new({fieldPath: fieldPath, order: order, arrayConfig: arrayConfig});
    }
    toMap() {
      return (() => {
        let t172 = new (T$.IdentityMapOfString$dynamic()).new();
        t172[S$.$_set]("fieldPath", this.fieldPath);
        if (this.order != null) t172[S$.$_set]("order", this.order === platform_interface_index_definitions.Order.ascending ? "ASCENDING" : "DESCENDING");
        if (this.arrayConfig != null) t172[S$.$_set]("arrayConfig", "CONTAINS");
        return t172;
      })();
    }
  };
  (platform_interface_index_definitions.IndexField.new = function(opts) {
    let fieldPath = opts && 'fieldPath' in opts ? opts.fieldPath : null;
    let order = opts && 'order' in opts ? opts.order : null;
    let arrayConfig = opts && 'arrayConfig' in opts ? opts.arrayConfig : null;
    this[S$0.fieldPath] = fieldPath;
    this[S$0.order] = order;
    this[S$0.arrayConfig] = arrayConfig;
    ;
  }).prototype = platform_interface_index_definitions.IndexField.prototype;
  dart.addTypeTests(platform_interface_index_definitions.IndexField);
  dart.addTypeCaches(platform_interface_index_definitions.IndexField);
  dart.setMethodSignature(platform_interface_index_definitions.IndexField, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.IndexField.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.IndexField, I[137]);
  dart.setFieldSignature(platform_interface_index_definitions.IndexField, () => ({
    __proto__: dart.getFields(platform_interface_index_definitions.IndexField.__proto__),
    fieldPath: dart.finalFieldType(core.String),
    order: dart.finalFieldType(dart.nullable(platform_interface_index_definitions.Order)),
    arrayConfig: dart.finalFieldType(dart.nullable(platform_interface_index_definitions.ArrayConfig))
  }));
  platform_interface_index_definitions.FieldOverrides = class FieldOverrides extends core.Object {
    get collectionGroup() {
      return this[S$0.collectionGroup$1];
    }
    set collectionGroup(value) {
      super.collectionGroup = value;
    }
    get fieldPath() {
      return this[S$0.fieldPath$1];
    }
    set fieldPath(value) {
      super.fieldPath = value;
    }
    get indexes() {
      return this[S$0.indexes];
    }
    set indexes(value) {
      super.indexes = value;
    }
    static ['_#new#tearOff'](opts) {
      let collectionGroup = opts && 'collectionGroup' in opts ? opts.collectionGroup : null;
      let fieldPath = opts && 'fieldPath' in opts ? opts.fieldPath : null;
      let indexes = opts && 'indexes' in opts ? opts.indexes : null;
      return new platform_interface_index_definitions.FieldOverrides.new({collectionGroup: collectionGroup, fieldPath: fieldPath, indexes: indexes});
    }
    toMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["collectionGroup", this.collectionGroup, "fieldPath", this.fieldPath, "indexes", this.indexes[S$.$map](T$.MapOfString$dynamic(), dart.fn(index => index.toMap(), T$.FieldOverrideIndexToMapOfString$dynamic()))[S$.$toList]()]);
    }
  };
  (platform_interface_index_definitions.FieldOverrides.new = function(opts) {
    let collectionGroup = opts && 'collectionGroup' in opts ? opts.collectionGroup : null;
    let fieldPath = opts && 'fieldPath' in opts ? opts.fieldPath : null;
    let indexes = opts && 'indexes' in opts ? opts.indexes : null;
    this[S$0.collectionGroup$1] = collectionGroup;
    this[S$0.fieldPath$1] = fieldPath;
    this[S$0.indexes] = indexes;
    ;
  }).prototype = platform_interface_index_definitions.FieldOverrides.prototype;
  dart.addTypeTests(platform_interface_index_definitions.FieldOverrides);
  dart.addTypeCaches(platform_interface_index_definitions.FieldOverrides);
  dart.setMethodSignature(platform_interface_index_definitions.FieldOverrides, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.FieldOverrides.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.FieldOverrides, I[137]);
  dart.setFieldSignature(platform_interface_index_definitions.FieldOverrides, () => ({
    __proto__: dart.getFields(platform_interface_index_definitions.FieldOverrides.__proto__),
    collectionGroup: dart.finalFieldType(core.String),
    fieldPath: dart.finalFieldType(core.String),
    indexes: dart.finalFieldType(core.List$(platform_interface_index_definitions.FieldOverrideIndex))
  }));
  platform_interface_index_definitions.FieldOverrideIndex = class FieldOverrideIndex extends core.Object {
    get queryScope() {
      return this[S$0.queryScope$1];
    }
    set queryScope(value) {
      super.queryScope = value;
    }
    get order() {
      return this[S$0.order$1];
    }
    set order(value) {
      super.order = value;
    }
    get arrayConfig() {
      return this[S$0.arrayConfig$1];
    }
    set arrayConfig(value) {
      super.arrayConfig = value;
    }
    static ['_#new#tearOff'](opts) {
      let queryScope = opts && 'queryScope' in opts ? opts.queryScope : null;
      let order = opts && 'order' in opts ? opts.order : null;
      let arrayConfig = opts && 'arrayConfig' in opts ? opts.arrayConfig : null;
      return new platform_interface_index_definitions.FieldOverrideIndex.new({queryScope: queryScope, order: order, arrayConfig: arrayConfig});
    }
    toMap() {
      return (() => {
        let t173 = new (T$.IdentityMapOfString$dynamic()).new();
        t173[S$.$_set]("queryScope", this.queryScope);
        if (this.order != null) t173[S$.$_set]("order", this.order === platform_interface_index_definitions.Order.ascending ? "ASCENDING" : "DESCENDING");
        if (this.arrayConfig != null) t173[S$.$_set]("arrayConfig", "CONTAINS");
        return t173;
      })();
    }
  };
  (platform_interface_index_definitions.FieldOverrideIndex.new = function(opts) {
    let queryScope = opts && 'queryScope' in opts ? opts.queryScope : null;
    let order = opts && 'order' in opts ? opts.order : null;
    let arrayConfig = opts && 'arrayConfig' in opts ? opts.arrayConfig : null;
    this[S$0.queryScope$1] = queryScope;
    this[S$0.order$1] = order;
    this[S$0.arrayConfig$1] = arrayConfig;
    ;
  }).prototype = platform_interface_index_definitions.FieldOverrideIndex.prototype;
  dart.addTypeTests(platform_interface_index_definitions.FieldOverrideIndex);
  dart.addTypeCaches(platform_interface_index_definitions.FieldOverrideIndex);
  dart.setMethodSignature(platform_interface_index_definitions.FieldOverrideIndex, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.FieldOverrideIndex.__proto__),
    toMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.FieldOverrideIndex, I[137]);
  dart.setFieldSignature(platform_interface_index_definitions.FieldOverrideIndex, () => ({
    __proto__: dart.getFields(platform_interface_index_definitions.FieldOverrideIndex.__proto__),
    queryScope: dart.finalFieldType(core.String),
    order: dart.finalFieldType(dart.nullable(platform_interface_index_definitions.Order)),
    arrayConfig: dart.finalFieldType(dart.nullable(platform_interface_index_definitions.ArrayConfig))
  }));
  platform_interface_index_definitions.Order = class Order extends core._Enum {
    [S$0._enumToString]() {
      return "Order." + this[S$0._name];
    }
  };
  (platform_interface_index_definitions.Order.new = function(index, name) {
    platform_interface_index_definitions.Order.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_index_definitions.Order.prototype;
  dart.addTypeTests(platform_interface_index_definitions.Order);
  dart.addTypeCaches(platform_interface_index_definitions.Order);
  dart.setMethodSignature(platform_interface_index_definitions.Order, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.Order.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.Order, I[137]);
  dart.setStaticFieldSignature(platform_interface_index_definitions.Order, () => ['values', 'ascending', 'descending']);
  dart.defineLazy(platform_interface_index_definitions.Order, {
    /*platform_interface_index_definitions.Order.values*/get values() {
      return C[237] || CT.C237;
    },
    /*platform_interface_index_definitions.Order.ascending*/get ascending() {
      return C[238] || CT.C238;
    },
    /*platform_interface_index_definitions.Order.descending*/get descending() {
      return C[239] || CT.C239;
    }
  }, false);
  platform_interface_index_definitions.ArrayConfig = class ArrayConfig extends core._Enum {
    [S$0._enumToString]() {
      return "ArrayConfig." + this[S$0._name];
    }
  };
  (platform_interface_index_definitions.ArrayConfig.new = function(index, name) {
    platform_interface_index_definitions.ArrayConfig.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_index_definitions.ArrayConfig.prototype;
  dart.addTypeTests(platform_interface_index_definitions.ArrayConfig);
  dart.addTypeCaches(platform_interface_index_definitions.ArrayConfig);
  dart.setMethodSignature(platform_interface_index_definitions.ArrayConfig, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.ArrayConfig.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.ArrayConfig, I[137]);
  dart.setStaticFieldSignature(platform_interface_index_definitions.ArrayConfig, () => ['values', 'contains']);
  dart.defineLazy(platform_interface_index_definitions.ArrayConfig, {
    /*platform_interface_index_definitions.ArrayConfig.values*/get values() {
      return C[240] || CT.C240;
    },
    /*platform_interface_index_definitions.ArrayConfig.contains*/get contains() {
      return C[241] || CT.C241;
    }
  }, false);
  platform_interface_index_definitions.QueryScope = class QueryScope extends core._Enum {
    [S$0._enumToString]() {
      return "QueryScope." + this[S$0._name];
    }
  };
  (platform_interface_index_definitions.QueryScope.new = function(index, name) {
    platform_interface_index_definitions.QueryScope.__proto__.new.call(this, index, name);
    ;
  }).prototype = platform_interface_index_definitions.QueryScope.prototype;
  dart.addTypeTests(platform_interface_index_definitions.QueryScope);
  dart.addTypeCaches(platform_interface_index_definitions.QueryScope);
  dart.setMethodSignature(platform_interface_index_definitions.QueryScope, () => ({
    __proto__: dart.getMethods(platform_interface_index_definitions.QueryScope.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(platform_interface_index_definitions.QueryScope, I[137]);
  dart.setStaticFieldSignature(platform_interface_index_definitions.QueryScope, () => ['values', 'collection', 'collectionGroup']);
  dart.defineLazy(platform_interface_index_definitions.QueryScope, {
    /*platform_interface_index_definitions.QueryScope.values*/get values() {
      return C[242] || CT.C242;
    },
    /*platform_interface_index_definitions.QueryScope.collection*/get collection() {
      return C[243] || CT.C243;
    },
    /*platform_interface_index_definitions.QueryScope.collectionGroup*/get collectionGroup() {
      return C[244] || CT.C244;
    }
  }, false);
  platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform = class LoadBundleTaskSnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    get taskState() {
      return this[S$0.taskState$1];
    }
    set taskState(value) {
      super.taskState = value;
    }
    get bytesLoaded() {
      return this[S$0.bytesLoaded$1];
    }
    set bytesLoaded(value) {
      super.bytesLoaded = value;
    }
    get documentsLoaded() {
      return this[S$0.documentsLoaded$1];
    }
    set documentsLoaded(value) {
      super.documentsLoaded = value;
    }
    get totalBytes() {
      return this[S$0.totalBytes$1];
    }
    set totalBytes(value) {
      super.totalBytes = value;
    }
    get totalDocuments() {
      return this[S$0.totalDocuments$1];
    }
    set totalDocuments(value) {
      super.totalDocuments = value;
    }
    static ['_#new#tearOff'](taskState, data) {
      return new platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new(taskState, data);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform._token);
    }
  };
  (platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new = function(taskState, data) {
    this[S$0.taskState$1] = taskState;
    this[S$0.bytesLoaded$1] = core.int.as(dart.dsend(data, '_get', ["bytesLoaded"]));
    this[S$0.documentsLoaded$1] = core.int.as(dart.dsend(data, '_get', ["documentsLoaded"]));
    this[S$0.totalBytes$1] = core.int.as(dart.dsend(data, '_get', ["totalBytes"]));
    this[S$0.totalDocuments$1] = core.int.as(dart.dsend(data, '_get', ["totalDocuments"]));
    platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.__proto__.new.call(this, {token: platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform._token});
    ;
  }).prototype = platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform);
  dart.addTypeCaches(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform);
  dart.setStaticMethodSignature(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, () => ['verify']);
  dart.setLibraryUri(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, I[138]);
  dart.setFieldSignature(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.__proto__),
    taskState: dart.finalFieldType(load_bundle_task_state.LoadBundleTaskState),
    bytesLoaded: dart.finalFieldType(core.int),
    documentsLoaded: dart.finalFieldType(core.int),
    totalBytes: dart.finalFieldType(core.int),
    totalDocuments: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform, {
    /*platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_query.AggregateField = class AggregateField extends core.Object {};
  (platform_interface_query.AggregateField.new = function() {
    ;
  }).prototype = platform_interface_query.AggregateField.prototype;
  dart.addTypeTests(platform_interface_query.AggregateField);
  dart.addTypeCaches(platform_interface_query.AggregateField);
  dart.setLibraryUri(platform_interface_query.AggregateField, I[45]);
  platform_interface_query.count = class count extends platform_interface_query.AggregateField {
    static ['_#new#tearOff']() {
      return new platform_interface_query.count.new();
    }
  };
  (platform_interface_query.count.new = function() {
    ;
  }).prototype = platform_interface_query.count.prototype;
  dart.addTypeTests(platform_interface_query.count);
  dart.addTypeCaches(platform_interface_query.count);
  dart.setLibraryUri(platform_interface_query.count, I[45]);
  platform_interface_query.sum = class sum extends platform_interface_query.AggregateField {
    get field() {
      return this[S$0.field$2];
    }
    set field(value) {
      super.field = value;
    }
    static ['_#new#tearOff'](field) {
      return new platform_interface_query.sum.new(field);
    }
  };
  (platform_interface_query.sum.new = function(field) {
    this[S$0.field$2] = field;
    ;
  }).prototype = platform_interface_query.sum.prototype;
  dart.addTypeTests(platform_interface_query.sum);
  dart.addTypeCaches(platform_interface_query.sum);
  dart.setLibraryUri(platform_interface_query.sum, I[45]);
  dart.setFieldSignature(platform_interface_query.sum, () => ({
    __proto__: dart.getFields(platform_interface_query.sum.__proto__),
    field: dart.finalFieldType(core.String)
  }));
  platform_interface_query.average = class average extends platform_interface_query.AggregateField {
    get field() {
      return this[S$0.field$3];
    }
    set field(value) {
      super.field = value;
    }
    static ['_#new#tearOff'](field) {
      return new platform_interface_query.average.new(field);
    }
  };
  (platform_interface_query.average.new = function(field) {
    this[S$0.field$3] = field;
    ;
  }).prototype = platform_interface_query.average.prototype;
  dart.addTypeTests(platform_interface_query.average);
  dart.addTypeCaches(platform_interface_query.average);
  dart.setLibraryUri(platform_interface_query.average, I[45]);
  dart.setFieldSignature(platform_interface_query.average, () => ({
    __proto__: dart.getFields(platform_interface_query.average.__proto__),
    field: dart.finalFieldType(core.String)
  }));
  dart.defineLazy(platform_interface_query, {
    /*platform_interface_query._initialParameters*/get _initialParameters() {
      return T$.MapOfString$dynamic().unmodifiable(new _js_helper.LinkedMap.from(["where", T$.ListOfList().unmodifiable([]), "orderBy", T$.ListOfList().unmodifiable([]), "startAt", null, "startAfter", null, "endAt", null, "endBefore", null, "limit", null, "limitToLast", null]));
    },
    set _initialParameters(value) {}
  }, false);
  platform_interface_query_snapshot.QuerySnapshotPlatform = class QuerySnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    get docs() {
      return this[S$0.docs];
    }
    set docs(value) {
      super.docs = value;
    }
    get docChanges() {
      return this[S$0.docChanges];
    }
    set docChanges(value) {
      super.docChanges = value;
    }
    get metadata() {
      return this[S$0.metadata$2];
    }
    set metadata(value) {
      super.metadata = value;
    }
    static ['_#new#tearOff'](docs, docChanges, metadata) {
      return new platform_interface_query_snapshot.QuerySnapshotPlatform.new(docs, docChanges, metadata);
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_query_snapshot.QuerySnapshotPlatform._token);
    }
    get size() {
      return this.docs[S$.$length];
    }
  };
  (platform_interface_query_snapshot.QuerySnapshotPlatform.new = function(docs, docChanges, metadata) {
    this[S$0.docs] = docs;
    this[S$0.docChanges] = docChanges;
    this[S$0.metadata$2] = metadata;
    platform_interface_query_snapshot.QuerySnapshotPlatform.__proto__.new.call(this, {token: platform_interface_query_snapshot.QuerySnapshotPlatform._token});
    ;
  }).prototype = platform_interface_query_snapshot.QuerySnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_query_snapshot.QuerySnapshotPlatform);
  dart.addTypeCaches(platform_interface_query_snapshot.QuerySnapshotPlatform);
  dart.setStaticMethodSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_query_snapshot.QuerySnapshotPlatform.__proto__),
    size: core.int
  }));
  dart.setLibraryUri(platform_interface_query_snapshot.QuerySnapshotPlatform, I[139]);
  dart.setFieldSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_query_snapshot.QuerySnapshotPlatform.__proto__),
    docs: dart.finalFieldType(core.List$(platform_interface_document_snapshot.DocumentSnapshotPlatform)),
    docChanges: dart.finalFieldType(core.List$(platform_interface_document_change.DocumentChangePlatform)),
    metadata: dart.finalFieldType(snapshot_metadata.SnapshotMetadataPlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_query_snapshot.QuerySnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_query_snapshot.QuerySnapshotPlatform, {
    /*platform_interface_query_snapshot.QuerySnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  load_bundle_task_state$.convertToTaskState = function convertToTaskState(state) {
    switch (state) {
      case "running":
        {
          return load_bundle_task_state.LoadBundleTaskState.running;
        }
      case "success":
        {
          return load_bundle_task_state.LoadBundleTaskState.success;
        }
      case "error":
        {
          return load_bundle_task_state.LoadBundleTaskState.error;
        }
      default:
        {
          dart.throw(new core.UnsupportedError.new("Unknown LoadBundleTaskState value: " + state + "."));
        }
    }
  };
  set_options.SetOptions = class SetOptions extends core.Object {
    get merge() {
      return this[S$0.merge$1];
    }
    set merge(value) {
      super.merge = value;
    }
    get mergeFields() {
      return this[S$0.mergeFields$1];
    }
    set mergeFields(value) {
      super.mergeFields = value;
    }
    static ['_#new#tearOff'](opts) {
      let merge = opts && 'merge' in opts ? opts.merge : null;
      let mergeFields = opts && 'mergeFields' in opts ? opts.mergeFields : null;
      return new set_options.SetOptions.new({merge: merge, mergeFields: mergeFields});
    }
  };
  (set_options.SetOptions.new = function(opts) {
    let t180;
    let merge = opts && 'merge' in opts ? opts.merge : null;
    let mergeFields = opts && 'mergeFields' in opts ? opts.mergeFields : null;
    this[S$0.merge$1] = merge;
    if (!(merge != null !== (mergeFields != null))) dart.assertFailed("options must provide either 'merge' or 'mergeFields'", I[140], 16, 11, "(merge != null) ^ (mergeFields != null)");
    this[S$0.mergeFields$1] = (t180 = mergeFields, t180 == null ? null : t180[S$.$map](field_path.FieldPath, dart.fn(field => {
      if (!(typeof field == 'string' || field_path.FieldPath.is(field))) dart.assertFailed("[mergeFields] can only contain Strings or FieldPaths but got " + dart.str(field), I[140], 21, 13, "field is String || field is FieldPath");
      if (typeof field == 'string') return new field_path.FieldPath.fromString(field);
      return field_path.FieldPath.as(field);
    }, T$.ObjectToFieldPath()))[S$.$toList]({growable: false}));
    ;
  }).prototype = set_options.SetOptions.prototype;
  dart.addTypeTests(set_options.SetOptions);
  dart.addTypeCaches(set_options.SetOptions);
  dart.setLibraryUri(set_options.SetOptions, I[141]);
  dart.setFieldSignature(set_options.SetOptions, () => ({
    __proto__: dart.getFields(set_options.SetOptions.__proto__),
    merge: dart.finalFieldType(dart.nullable(core.bool)),
    mergeFields: dart.finalFieldType(dart.nullable(core.List$(field_path.FieldPath)))
  }));
  settings.Settings = class Settings extends core.Object {
    get persistenceEnabled() {
      return this[S$0.persistenceEnabled$1];
    }
    set persistenceEnabled(value) {
      super.persistenceEnabled = value;
    }
    get host() {
      return this[S$0.host$1];
    }
    set host(value) {
      super.host = value;
    }
    get sslEnabled() {
      return this[S$0.sslEnabled$1];
    }
    set sslEnabled(value) {
      super.sslEnabled = value;
    }
    get cacheSizeBytes() {
      return this[S$0.cacheSizeBytes$1];
    }
    set cacheSizeBytes(value) {
      super.cacheSizeBytes = value;
    }
    get ignoreUndefinedProperties() {
      return this[S$0.ignoreUndefinedProperties$1];
    }
    set ignoreUndefinedProperties(value) {
      super.ignoreUndefinedProperties = value;
    }
    static ['_#new#tearOff'](opts) {
      let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
      let host = opts && 'host' in opts ? opts.host : null;
      let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
      let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
      let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : false;
      return new settings.Settings.new({persistenceEnabled: persistenceEnabled, host: host, sslEnabled: sslEnabled, cacheSizeBytes: cacheSizeBytes, ignoreUndefinedProperties: ignoreUndefinedProperties});
    }
    get asMap() {
      return (() => {
        let t180 = new (T$.IdentityMapOfString$dynamic()).new();
        t180[S$.$_set]("persistenceEnabled", this.persistenceEnabled);
        t180[S$.$_set]("host", this.host);
        t180[S$.$_set]("sslEnabled", this.sslEnabled);
        t180[S$.$_set]("cacheSizeBytes", this.cacheSizeBytes);
        t180[S$.$_set]("ignoreUndefinedProperties", this.ignoreUndefinedProperties);
        return t180;
      })();
    }
    copyWith(opts) {
      let t181, t181$, t181$0, t181$1, t181$2;
      let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
      let host = opts && 'host' in opts ? opts.host : null;
      let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
      let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
      let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : null;
      if (!(cacheSizeBytes == null || cacheSizeBytes === -1 || dart.notNull(cacheSizeBytes) >= 1048576 && dart.notNull(cacheSizeBytes) <= 104857600)) dart.assertFailed("Cache size must be between 1048576 bytes (inclusive) and 104857600 bytes (inclusive)", I[142], 74, 9, "cacheSizeBytes == null ||\n            cacheSizeBytes == CACHE_SIZE_UNLIMITED ||\n            // 1mb and 100mb. minimum and maximum inclusive range.\n            (cacheSizeBytes >= 1048576 && cacheSizeBytes <= 104857600)");
      return new settings.Settings.new({persistenceEnabled: (t181 = persistenceEnabled, t181 == null ? this.persistenceEnabled : t181), host: (t181$ = host, t181$ == null ? this.host : t181$), sslEnabled: (t181$0 = sslEnabled, t181$0 == null ? this.sslEnabled : t181$0), cacheSizeBytes: (t181$1 = cacheSizeBytes, t181$1 == null ? this.cacheSizeBytes : t181$1), ignoreUndefinedProperties: (t181$2 = ignoreUndefinedProperties, t181$2 == null ? this.ignoreUndefinedProperties : t181$2)});
    }
    _equals(other) {
      if (other == null) return false;
      return settings.Settings.is(other) && other[S$.$runtimeType]._equals(this[S$.$runtimeType]) && other.persistenceEnabled == this.persistenceEnabled && other.host == this.host && other.sslEnabled == this.sslEnabled && other.cacheSizeBytes == this.cacheSizeBytes && other.ignoreUndefinedProperties === this.ignoreUndefinedProperties;
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.persistenceEnabled, this.host, this.sslEnabled, this.cacheSizeBytes, this.ignoreUndefinedProperties);
    }
    toString() {
      return "Settings(" + dart.str(this.asMap) + ")";
    }
  };
  (settings.Settings.new = function(opts) {
    let persistenceEnabled = opts && 'persistenceEnabled' in opts ? opts.persistenceEnabled : null;
    let host = opts && 'host' in opts ? opts.host : null;
    let sslEnabled = opts && 'sslEnabled' in opts ? opts.sslEnabled : null;
    let cacheSizeBytes = opts && 'cacheSizeBytes' in opts ? opts.cacheSizeBytes : null;
    let ignoreUndefinedProperties = opts && 'ignoreUndefinedProperties' in opts ? opts.ignoreUndefinedProperties : false;
    this[S$0.persistenceEnabled$1] = persistenceEnabled;
    this[S$0.host$1] = host;
    this[S$0.sslEnabled$1] = sslEnabled;
    this[S$0.cacheSizeBytes$1] = cacheSizeBytes;
    this[S$0.ignoreUndefinedProperties$1] = ignoreUndefinedProperties;
    ;
  }).prototype = settings.Settings.prototype;
  dart.addTypeTests(settings.Settings);
  dart.addTypeCaches(settings.Settings);
  dart.setMethodSignature(settings.Settings, () => ({
    __proto__: dart.getMethods(settings.Settings.__proto__),
    copyWith: dart.fnType(settings.Settings, [], {cacheSizeBytes: dart.nullable(core.int), host: dart.nullable(core.String), ignoreUndefinedProperties: dart.nullable(core.bool), persistenceEnabled: dart.nullable(core.bool), sslEnabled: dart.nullable(core.bool)}, {})
  }));
  dart.setGetterSignature(settings.Settings, () => ({
    __proto__: dart.getGetters(settings.Settings.__proto__),
    asMap: core.Map$(core.String, dart.dynamic)
  }));
  dart.setLibraryUri(settings.Settings, I[143]);
  dart.setFieldSignature(settings.Settings, () => ({
    __proto__: dart.getFields(settings.Settings.__proto__),
    persistenceEnabled: dart.finalFieldType(dart.nullable(core.bool)),
    host: dart.finalFieldType(dart.nullable(core.String)),
    sslEnabled: dart.finalFieldType(dart.nullable(core.bool)),
    cacheSizeBytes: dart.finalFieldType(dart.nullable(core.int)),
    ignoreUndefinedProperties: dart.finalFieldType(core.bool)
  }));
  dart.setStaticFieldSignature(settings.Settings, () => ['CACHE_SIZE_UNLIMITED']);
  dart.defineExtensionMethods(settings.Settings, ['_equals', 'toString']);
  dart.defineExtensionAccessors(settings.Settings, ['hashCode']);
  dart.defineLazy(settings.Settings, {
    /*settings.Settings.CACHE_SIZE_UNLIMITED*/get CACHE_SIZE_UNLIMITED() {
      return -1;
    }
  }, false);
  snapshot_metadata.SnapshotMetadataPlatform = class SnapshotMetadataPlatform extends core.Object {
    get hasPendingWrites() {
      return this[S$0.hasPendingWrites$1];
    }
    set hasPendingWrites(value) {
      super.hasPendingWrites = value;
    }
    get isFromCache() {
      return this[S$0.isFromCache$1];
    }
    set isFromCache(value) {
      super.isFromCache = value;
    }
    static ['_#new#tearOff'](hasPendingWrites, isFromCache) {
      return new snapshot_metadata.SnapshotMetadataPlatform.new(hasPendingWrites, isFromCache);
    }
  };
  (snapshot_metadata.SnapshotMetadataPlatform.new = function(hasPendingWrites, isFromCache) {
    this[S$0.hasPendingWrites$1] = hasPendingWrites;
    this[S$0.isFromCache$1] = isFromCache;
    ;
  }).prototype = snapshot_metadata.SnapshotMetadataPlatform.prototype;
  dart.addTypeTests(snapshot_metadata.SnapshotMetadataPlatform);
  dart.addTypeCaches(snapshot_metadata.SnapshotMetadataPlatform);
  dart.setLibraryUri(snapshot_metadata.SnapshotMetadataPlatform, I[144]);
  dart.setFieldSignature(snapshot_metadata.SnapshotMetadataPlatform, () => ({
    __proto__: dart.getFields(snapshot_metadata.SnapshotMetadataPlatform.__proto__),
    hasPendingWrites: dart.finalFieldType(core.bool),
    isFromCache: dart.finalFieldType(core.bool)
  }));
  timestamp.Timestamp = class Timestamp extends core.Object {
    static ['_#new#tearOff'](_seconds, _nanoseconds) {
      return new timestamp.Timestamp.new(_seconds, _nanoseconds);
    }
    static fromMillisecondsSinceEpoch(milliseconds) {
      let seconds = (milliseconds / 1000)[S$0.$floor]();
      let nanoseconds = (milliseconds - seconds * 1000) * 1000000;
      return new timestamp.Timestamp.new(seconds, nanoseconds);
    }
    static ['_#fromMillisecondsSinceEpoch#tearOff'](milliseconds) {
      return timestamp.Timestamp.fromMillisecondsSinceEpoch(milliseconds);
    }
    static fromMicrosecondsSinceEpoch(microseconds) {
      let seconds = (microseconds / 1000000)[S$0.$truncate]();
      let nanoseconds = (microseconds - seconds * 1000000) * 1000;
      return new timestamp.Timestamp.new(seconds, nanoseconds);
    }
    static ['_#fromMicrosecondsSinceEpoch#tearOff'](microseconds) {
      return timestamp.Timestamp.fromMicrosecondsSinceEpoch(microseconds);
    }
    static fromDate(date) {
      return timestamp.Timestamp.fromMicrosecondsSinceEpoch(date.microsecondsSinceEpoch);
    }
    static ['_#fromDate#tearOff'](date) {
      return timestamp.Timestamp.fromDate(date);
    }
    static now() {
      return timestamp.Timestamp.fromMicrosecondsSinceEpoch(new core.DateTime.now().microsecondsSinceEpoch);
    }
    static ['_#now#tearOff']() {
      return timestamp.Timestamp.now();
    }
    get seconds() {
      return this[S$0._seconds];
    }
    get nanoseconds() {
      return this[S$0._nanoseconds];
    }
    get millisecondsSinceEpoch() {
      return this.seconds * 1000 + (this.nanoseconds / 1000000)[S$0.$truncate]();
    }
    get microsecondsSinceEpoch() {
      return this.seconds * 1000000 + (this.nanoseconds / 1000)[S$0.$truncate]();
    }
    toDate() {
      return new core.DateTime.fromMicrosecondsSinceEpoch(this.microsecondsSinceEpoch);
    }
    get hashCode() {
      return core.Object.hash(this.seconds, this.nanoseconds);
    }
    _equals(other) {
      if (other == null) return false;
      return timestamp.Timestamp.is(other) && other.seconds === this.seconds && other.nanoseconds === this.nanoseconds;
    }
    compareTo(other) {
      timestamp.Timestamp.as(other);
      if (this.seconds === other.seconds) {
        return this.nanoseconds[S$0.$compareTo](other.nanoseconds);
      }
      return this.seconds[S$0.$compareTo](other.seconds);
    }
    toString() {
      return "Timestamp(seconds=" + dart.str(this.seconds) + ", nanoseconds=" + dart.str(this.nanoseconds) + ")";
    }
    static _validateRange(seconds, nanoseconds) {
      timestamp._check(nanoseconds >= 0, "nanoseconds", nanoseconds);
      timestamp._check(nanoseconds < 1000000000, "nanoseconds", nanoseconds);
      timestamp._check(seconds >= -62135596800, "seconds", seconds);
      timestamp._check(seconds < 253402300800, "seconds", seconds);
    }
  };
  (timestamp.Timestamp.new = function(_seconds, _nanoseconds) {
    this[S$0._seconds] = _seconds;
    this[S$0._nanoseconds] = _nanoseconds;
    timestamp.Timestamp._validateRange(this[S$0._seconds], this[S$0._nanoseconds]);
  }).prototype = timestamp.Timestamp.prototype;
  dart.addTypeTests(timestamp.Timestamp);
  dart.addTypeCaches(timestamp.Timestamp);
  timestamp.Timestamp[dart.implements] = () => [core.Comparable$(timestamp.Timestamp)];
  dart.setMethodSignature(timestamp.Timestamp, () => ({
    __proto__: dart.getMethods(timestamp.Timestamp.__proto__),
    toDate: dart.fnType(core.DateTime, []),
    compareTo: dart.fnType(core.int, [dart.nullable(core.Object)]),
    [S$0.$compareTo]: dart.fnType(core.int, [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(timestamp.Timestamp, () => ['fromMillisecondsSinceEpoch', 'fromMicrosecondsSinceEpoch', 'fromDate', 'now', '_validateRange']);
  dart.setGetterSignature(timestamp.Timestamp, () => ({
    __proto__: dart.getGetters(timestamp.Timestamp.__proto__),
    seconds: core.int,
    nanoseconds: core.int,
    millisecondsSinceEpoch: core.int,
    microsecondsSinceEpoch: core.int
  }));
  dart.setLibraryUri(timestamp.Timestamp, I[145]);
  dart.setFieldSignature(timestamp.Timestamp, () => ({
    __proto__: dart.getFields(timestamp.Timestamp.__proto__),
    [S$0._seconds]: dart.finalFieldType(core.int),
    [S$0._nanoseconds]: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(timestamp.Timestamp, () => ['_kStartOfTime', '_kEndOfTime']);
  dart.defineExtensionMethods(timestamp.Timestamp, ['_equals', 'compareTo', 'toString']);
  dart.defineExtensionAccessors(timestamp.Timestamp, ['hashCode']);
  dart.defineLazy(timestamp.Timestamp, {
    /*timestamp.Timestamp._kStartOfTime*/get _kStartOfTime() {
      return -62135596800;
    },
    /*timestamp.Timestamp._kEndOfTime*/get _kEndOfTime() {
      return 253402300800;
    }
  }, false);
  timestamp._check = function _check(expr, name, value) {
    if (!expr) {
      dart.throw(new core.ArgumentError.new("Timestamp " + name + " out of range: " + dart.str(value)));
    }
  };
  dart.defineLazy(timestamp, {
    /*timestamp._kThousand*/get _kThousand() {
      return 1000;
    },
    /*timestamp._kMillion*/get _kMillion() {
      return 1000000;
    },
    /*timestamp._kBillion*/get _kBillion() {
      return 1000000000;
    }
  }, false);
  _flutterfire_internals['ObjectX|guard'] = function ObjectX$124guard(T, R, $this, cb) {
    if (T.is($this)) return cb(T.as($this));
    return null;
  };
  _flutterfire_internals['ObjectX|get#guard'] = function ObjectX$124get$35guard(T, $this) {
    return dart.fn((R, cb) => _flutterfire_internals['ObjectX|guard'](T, R, $this, cb), dart.gFnType(R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [__t$RN(), [dart.fnType(R, [T])]];
    }, R => {
      var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
      return [T$.ObjectN()];
    }));
  };
  _flutterfire_internals['ObjectX|safeCast'] = function ObjectX$124safeCast(T, R, $this) {
    if (R.is($this)) return R.as($this);
    return null;
  };
  _flutterfire_internals['ObjectX|get#safeCast'] = function ObjectX$124get$35safeCast(T, $this) {
    return dart.fn(R => _flutterfire_internals['ObjectX|safeCast'](T, R, $this), T$.VoidToRN());
  };
  _flutterfire_internals._firebaseExceptionFromCoreFirebaseError = function _firebaseExceptionFromCoreFirebaseError(firebaseError, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    let code = codeParser(firebaseError.code);
    let message = messageParser != null ? messageParser(code, firebaseError.message) : firebaseError.message[S$.$replaceFirst]("(" + firebaseError.code + ")", "");
    return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, message: message, code: code});
  };
  _flutterfire_internals._testException = function _testException(exception) {
    return dart.packageJSType("FirebaseError", false).is(exception);
  };
  _flutterfire_internals._mapException = function _mapException(exception, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    if (!_flutterfire_internals._testException(exception)) dart.assertFailed(null, I[146], 89, 10, "_testException(exception)");
    if (dart.packageJSType("FirebaseError", false).is(exception)) {
      return _flutterfire_internals._firebaseExceptionFromCoreFirebaseError(exception, {plugin: plugin, codeParser: codeParser, messageParser: messageParser});
    }
    dart.throw(new core.StateError.new("unrecognized error " + dart.str(exception)));
  };
  _flutterfire_internals.guardWebExceptions = function guardWebExceptions(R, cb, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let codeParser = opts && 'codeParser' in opts ? opts.codeParser : null;
    let messageParser = opts && 'messageParser' in opts ? opts.messageParser : null;
    try {
      let value = cb();
      if (async.Future.is(value)) {
        return R.as(value.catchError(dart.fn((err, stack) => core.Error.throwWithStackTrace(_flutterfire_internals._mapException(err, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), core.StackTrace.as(stack)), T$.dynamicAnddynamicToNever()), {test: C[245] || CT.C245}));
      } else if (async.Stream.is(value)) {
        return R.as(value.handleError(dart.fn((err, stack) => core.Error.throwWithStackTrace(_flutterfire_internals._mapException(err, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), core.StackTrace.as(stack)), T$.dynamicAnddynamicToNever()), {test: C[245] || CT.C245}));
      }
      return value;
    } catch (e) {
      let error = dart.getThrown(e);
      let stack = dart.stackTrace(e);
      if (core.Object.is(error)) {
        if (!_flutterfire_internals._testException(error)) {
          dart.rethrow(e);
        }
        core.Error.throwWithStackTrace(_flutterfire_internals._mapException(error, {plugin: plugin, codeParser: codeParser, messageParser: messageParser}), stack);
      } else
        throw e;
    }
  };
  decode_utility.DecodeUtility = class DecodeUtility extends core.Object {
    static decodeMapData(data, firestore) {
      let t186;
      if (data == null) {
        return null;
      }
      t186 = data;
      return (() => {
        t186[S$0.$updateAll](dart.fn((key, value) => decode_utility.DecodeUtility.valueDecode(value, firestore), T$.StringAnddynamicTodynamic()));
        return t186;
      })();
    }
    static decodeArrayData(data, firestore) {
      if (data == null) {
        return null;
      }
      return data[S$.$map](dart.dynamic, dart.fn(v => decode_utility.DecodeUtility.valueDecode(v, firestore), T$.dynamicTodynamic()))[S$.$toList]();
    }
    static valueDecode(value, firestore) {
      if (js_util.instanceof(value, dart.global.firebase_firestore.GeoPoint)) {
        return new geo_point.GeoPoint.new(core.double.as(dart.dload(value, 'latitude')), core.double.as(dart.dload(value, 'longitude')));
      } else if (core.DateTime.is(value)) {
        return timestamp.Timestamp.fromDate(value);
      } else if (js_util.instanceof(value, dart.global.firebase_firestore.Bytes)) {
        return new blob.Blob.new(typed_data.Uint8List.as(dart.dsend(value, 'toUint8Array', [])));
      } else if (firestore$.DocumentReference.is(value)) {
        return cloud_firestore_web.FirebaseFirestoreWeb.as(firestore).doc(value.path);
      } else if (T$.MapOfString$dynamic().is(value)) {
        return decode_utility.DecodeUtility.decodeMapData(value, firestore);
      } else if (core.List.is(value)) {
        return decode_utility.DecodeUtility.decodeArrayData(value, firestore);
      }
      return value;
    }
    static ['_#new#tearOff']() {
      return new decode_utility.DecodeUtility.new();
    }
  };
  (decode_utility.DecodeUtility.new = function() {
    ;
  }).prototype = decode_utility.DecodeUtility.prototype;
  dart.addTypeTests(decode_utility.DecodeUtility);
  dart.addTypeCaches(decode_utility.DecodeUtility);
  dart.setStaticMethodSignature(decode_utility.DecodeUtility, () => ['decodeMapData', 'decodeArrayData', 'valueDecode']);
  dart.setLibraryUri(decode_utility.DecodeUtility, I[147]);
  js_interop.dartifyDate = function dartifyDate(jsObject) {
    if (js_util.hasProperty(jsObject, "toDateString")) {
      try {
        let date = jsObject;
        return new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(dart.dsend(date, 'getTime', [])));
      } catch (e) {
        let ex = dart.getThrown(e);
        if (core.NoSuchMethodError.is(ex)) {
          return null;
        } else
          throw e;
      }
    }
    return null;
  };
  utils$0.dartify = function dartify$(jsObject, customDartify = null) {
    let t188;
    if (utils$0._isBasicType(jsObject)) {
      return jsObject;
    }
    if (core.Iterable.is(jsObject)) {
      return jsObject[S$.$map](dart.dynamic, dart.fn(item => utils$0.dartify(item, customDartify), T$.dynamicTodynamic()))[S$.$toList]();
    }
    let jsDate = js_interop.dartifyDate(dart.nullCheck(jsObject));
    if (jsDate != null) {
      return jsDate;
    }
    let value = (t188 = customDartify, t188 == null ? null : t188(jsObject));
    if (value == null) {
      let keys = dart.global.Object.keys(jsObject);
      let map = new (T$.IdentityMapOfString$dynamic()).new();
      for (let key of keys) {
        map[S$.$_set](key, utils$0.dartify(js_util.getProperty(T$.ObjectN(), jsObject, key), customDartify));
      }
      return map;
    }
    return value;
  };
  utils$0.jsifyList = function jsifyList(list, customJsify = null) {
    return dart.global.Array.from(list[S$.$map](dart.dynamic, dart.fn(item => utils$0.jsify(item, customJsify), T$.dynamicTodynamic()))[S$.$toList]());
  };
  utils$0.jsify = function jsify$(dartObject, customJsify = null) {
    let t188;
    if (utils$0._isBasicType(dartObject)) {
      if (dartObject == null) {
        return null;
      }
      return dartObject;
    }
    if (core.Iterable.is(dartObject)) {
      return utils$0.jsifyList(dartObject, customJsify);
    }
    if (core.Map.is(dartObject)) {
      let jsMap = js_util.newObject(dart.dynamic);
      dartObject[S$.$forEach](dart.fn((key, value) => {
        js_util.setProperty(core.Object, core.Object.as(jsMap), core.Object.as(key), utils$0.jsify(value, customJsify));
      }, T$.dynamicAnddynamicTovoid()));
      return jsMap;
    }
    if (core.Function.is(dartObject)) {
      return js.allowInterop(core.Function, dartObject);
    }
    let value = (t188 = customJsify, t188 == null ? null : t188(dartObject));
    if (value == null) {
      dart.throw(new core.ArgumentError.value(dartObject, "dartObject", "Could not convert"));
    }
    return value;
  };
  utils$0.callMethod = function callMethod(jsObject, method, args) {
    return js_util.callMethod(dart.dynamic, jsObject, method, args);
  };
  utils$0._isBasicType = function _isBasicType(value) {
    if (value == null || typeof value == 'number' || typeof value == 'boolean' || typeof value == 'string') {
      return true;
    }
    return false;
  };
  utils$0.handleThenable = function handleThenable(T, thenable) {
    return async.async(T, function* handleThenable() {
      return js_util.promiseToFuture(T, thenable);
    });
  };
  utils$0.handleFutureWithMapper = function handleFutureWithMapper(T, S, future, mapper) {
    return new dart.global.Promise(js.allowInterop(core.Function, dart.fn((resolve, reject) => {
      future.then(core.Null, dart.fn(value => {
        let mappedValue = mapper(value);
        resolve(mappedValue);
      }, dart.fnType(core.Null, [T]))).catchError(dart.fn(error => reject(core.Object.as(error)), T$.dynamicTodynamic()));
    }, dart.fnType(core.Null, [dart.fnType(dart.dynamic, [S]), T$.ObjectTodynamic()]))));
  };
  encode_utility.EncodeUtility = class EncodeUtility extends core.Object {
    static encodeMapData(data) {
      if (data == null) {
        return null;
      }
      let output = T$.LinkedHashMapOfString$dynamic().from(data);
      output[S$0.$updateAll](dart.fn((key, value) => encode_utility.EncodeUtility.valueEncode(value), T$.StringAnddynamicTodynamic()));
      return output;
    }
    static encodeMapDataFieldPath(data) {
      if (data == null) {
        return null;
      }
      let output = new (T$.LinkedMapOfFieldPath$dynamic$1()).new();
      data[S$.$forEach](dart.fn((key, value) => {
        output[S$.$_set](dart.packageJSType("firebase_firestore.FieldPath", false).as(encode_utility.EncodeUtility.valueEncode(key)), encode_utility.EncodeUtility.valueEncode(value));
      }, T$.ObjectAnddynamicTovoid()));
      return output;
    }
    static encodeArrayData(data) {
      if (data == null) {
        return null;
      }
      return core.List.from(data)[S$.$map](dart.dynamic, C[246] || CT.C246)[S$.$toList]();
    }
    static valueEncode(value) {
      if (platform_interface_field_value.FieldValuePlatform.is(value)) {
        let delegate = field_value_web.FieldValueWeb.as(platform_interface_field_value.FieldValuePlatform.getDelegate(value));
        return delegate.data;
      } else if (field_path.FieldPath.is(value)) {
        let components = value.components;
        let length = components[S$.$length];
        switch (length) {
          case 1:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0));
            }
          case 2:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1));
            }
          case 3:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2));
            }
          case 4:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3));
            }
          case 5:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4));
            }
          case 6:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5));
            }
          case 7:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6));
            }
          case 8:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6), components[S$.$_get](7));
            }
          case 9:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6), components[S$.$_get](7), components[S$.$_get](8));
            }
          case 10:
            {
              return new dart.global.firebase_firestore.FieldPath(components[S$.$_get](0), components[S$.$_get](1), components[S$.$_get](2), components[S$.$_get](3), components[S$.$_get](4), components[S$.$_get](5), components[S$.$_get](6), components[S$.$_get](7), components[S$.$_get](8), components[S$.$_get](9));
            }
          default:
            {
              dart.throw(core.Exception.new("Firestore web FieldPath only supports 10 levels deep field paths"));
            }
        }
      } else if (dart.equals(value, field_path.FieldPath.documentId)) {
        return dart.global.firebase_firestore.documentId();
      } else if (timestamp.Timestamp.is(value)) {
        return value.toDate();
      } else if (geo_point.GeoPoint.is(value)) {
        return new dart.global.firebase_firestore.GeoPoint(value.latitude, value.longitude);
      } else if (blob.Blob.is(value)) {
        return dart.global.firebase_firestore.Bytes.fromUint8Array(value.bytes);
      } else if (document_reference_web.DocumentReferenceWeb.is(value)) {
        return value.firestoreWeb.doc(value.path);
      } else if (T$.MapOfString$dynamic().is(value)) {
        return encode_utility.EncodeUtility.encodeMapData(value);
      } else if (core.List.is(value)) {
        return encode_utility.EncodeUtility.encodeArrayData(value);
      } else if (core.Iterable.is(value)) {
        return encode_utility.EncodeUtility.encodeArrayData(value[S$.$toList]());
      }
      return value;
    }
    static ['_#new#tearOff']() {
      return new encode_utility.EncodeUtility.new();
    }
  };
  (encode_utility.EncodeUtility.new = function() {
    ;
  }).prototype = encode_utility.EncodeUtility.prototype;
  dart.addTypeTests(encode_utility.EncodeUtility);
  dart.addTypeCaches(encode_utility.EncodeUtility);
  dart.setStaticMethodSignature(encode_utility.EncodeUtility, () => ['encodeMapData', 'encodeMapDataFieldPath', 'encodeArrayData', 'valueEncode']);
  dart.setLibraryUri(encode_utility.EncodeUtility, I[148]);
  field_value_web.FieldValueWeb = class FieldValueWeb extends core.Object {
    get data() {
      return this[S$0.data$4];
    }
    set data(value) {
      this[S$0.data$4] = value;
    }
    static ['_#new#tearOff'](data) {
      return new field_value_web.FieldValueWeb.new(data);
    }
    _equals(other) {
      if (other == null) return false;
      return field_value_web.FieldValueWeb.is(other) && other.data[S$0.$_equals](this.data);
    }
    get hashCode() {
      return this.data[S$.$hashCode];
    }
  };
  (field_value_web.FieldValueWeb.new = function(data) {
    this[S$0.data$4] = data;
    ;
  }).prototype = field_value_web.FieldValueWeb.prototype;
  dart.addTypeTests(field_value_web.FieldValueWeb);
  dart.addTypeCaches(field_value_web.FieldValueWeb);
  dart.setLibraryUri(field_value_web.FieldValueWeb, I[149]);
  dart.setFieldSignature(field_value_web.FieldValueWeb, () => ({
    __proto__: dart.getFields(field_value_web.FieldValueWeb.__proto__),
    data: dart.fieldType(firestore$.FieldValue)
  }));
  dart.defineExtensionMethods(field_value_web.FieldValueWeb, ['_equals']);
  dart.defineExtensionAccessors(field_value_web.FieldValueWeb, ['hashCode']);
  utils$1.dartify = function dartify$0(jsObject) {
    return utils$0.dartify(jsObject, dart.fn(object => {
      if (object == null) {
        return null;
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.DocumentReference)) {
        return firestore$.DocumentReference.getInstance(dart.packageJSType("firebase_firestore.DocumentReference", false).as(object));
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.GeoPoint)) {
        return object;
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.Timestamp)) {
        return new timestamp.Timestamp.new(dart.packageJSType("firebase_firestore.Timestamp", false).as(object).seconds, object.nanoseconds);
      }
      if (js_util.instanceof(object, dart.global.firebase_firestore.Bytes)) {
        return dart.packageJSType("BytesJsImpl", false).as(object);
      }
      return null;
    }, T$.ObjectNToObjectN()));
  };
  utils$1.jsify = function jsify$0(dartObject) {
    if (dartObject == null) {
      return null;
    }
    return utils$0.jsify(dartObject, dart.fn(object => {
      if (core.DateTime.is(object)) {
        return dart.global.firebase_firestore.Timestamp.fromMillis(object.millisecondsSinceEpoch);
      }
      if (timestamp.Timestamp.is(object)) {
        return dart.global.firebase_firestore.Timestamp.fromMillis(object.millisecondsSinceEpoch);
      }
      if (firestore$.DocumentReference.is(object)) {
        return object.jsObject;
      }
      if (firestore$.FieldValue.is(object)) {
        return firestore$.jsifyFieldValue(object);
      }
      if (dart.packageJSType("BytesJsImpl", false).is(object)) {
        return object;
      }
      if (dart.packageJSType("firebase_firestore.GeoPoint", false).is(object)) {
        return dartObject;
      }
      if (core.Function.is(object)) {
        return js.allowInterop(core.Function, object);
      }
      return null;
    }, T$.ObjectNTodynamic()));
  };
  aggregate_query_web.AggregateQueryWeb = class AggregateQueryWeb extends platform_interface_aggregate_query.AggregateQueryPlatform {
    static ['_#new#tearOff'](query, _webQuery, _aggregateQueries) {
      return new aggregate_query_web.AggregateQueryWeb.new(query, _webQuery, _aggregateQueries);
    }
    get(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      return async.async(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, (function* get() {
        let snapshot = (yield this[S$0._delegate$10].get(this[S$0._aggregateQueries]));
        let sum = T$.JSArrayOfAggregateQueryResponse().of([]);
        let average = T$.JSArrayOfAggregateQueryResponse().of([]);
        for (let query of this[S$0._aggregateQueries]) {
          switch (query.type) {
            case C[120] || CT.C120:
              {
                sum[S$.$add](new messages$46pigeon$0.AggregateQueryResponse.new({type: messages$46pigeon$0.AggregateType.sum, value: snapshot.getDataValue(query), field: query.field}));
                break;
              }
            case C[121] || CT.C121:
              {
                average[S$.$add](new messages$46pigeon$0.AggregateQueryResponse.new({type: messages$46pigeon$0.AggregateType.average, value: snapshot.getDataValue(query), field: query.field}));
                break;
              }
            default:
              {
                break;
              }
          }
        }
        return new platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.new({count: snapshot.count, sum: sum, average: average});
      }).bind(this));
    }
    count() {
      return new aggregate_query_web.AggregateQueryWeb.new(this.query, this[S$0._webQuery$1], (() => {
        let t188 = T$.ListOfAggregateQuery().of(this[S$0._aggregateQueries]);
        t188.push(new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.count}));
        return t188;
      })());
    }
    sum(field) {
      return new aggregate_query_web.AggregateQueryWeb.new(this.query, this[S$0._webQuery$1], (() => {
        let t189 = T$.ListOfAggregateQuery().of(this[S$0._aggregateQueries]);
        t189.push(new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.sum, field: field}));
        return t189;
      })());
    }
    average(field) {
      return new aggregate_query_web.AggregateQueryWeb.new(this.query, this[S$0._webQuery$1], (() => {
        let t190 = T$.ListOfAggregateQuery().of(this[S$0._aggregateQueries]);
        t190.push(new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.average, field: field}));
        return t190;
      })());
    }
  };
  (aggregate_query_web.AggregateQueryWeb.new = function(query, _webQuery, _aggregateQueries) {
    this[S$0._aggregateQueries] = _aggregateQueries;
    this[S$0._delegate$10] = new firestore$.AggregateQuery.new(T$.QueryOfQueryJsImpl().as(_webQuery));
    this[S$0._webQuery$1] = T$.QueryOfQueryJsImpl().as(_webQuery);
    aggregate_query_web.AggregateQueryWeb.__proto__.new.call(this, query);
    ;
  }).prototype = aggregate_query_web.AggregateQueryWeb.prototype;
  dart.addTypeTests(aggregate_query_web.AggregateQueryWeb);
  dart.addTypeCaches(aggregate_query_web.AggregateQueryWeb);
  dart.setLibraryUri(aggregate_query_web.AggregateQueryWeb, I[150]);
  dart.setFieldSignature(aggregate_query_web.AggregateQueryWeb, () => ({
    __proto__: dart.getFields(aggregate_query_web.AggregateQueryWeb.__proto__),
    [S$0._delegate$10]: dart.finalFieldType(firestore$.AggregateQuery),
    [S$0._aggregateQueries]: dart.finalFieldType(core.List$(messages$46pigeon$0.AggregateQuery)),
    [S$0._webQuery$1]: dart.finalFieldType(firestore$.Query$(dart.packageJSType("firebase_firestore.Query", false)))
  }));
  file_picker$.FileType = class FileType extends core._Enum {
    [S$0._enumToString]() {
      return "FileType." + this[S$0._name];
    }
  };
  (file_picker$.FileType.new = function(index, name) {
    file_picker$.FileType.__proto__.new.call(this, index, name);
    ;
  }).prototype = file_picker$.FileType.prototype;
  dart.addTypeTests(file_picker$.FileType);
  dart.addTypeCaches(file_picker$.FileType);
  dart.setMethodSignature(file_picker$.FileType, () => ({
    __proto__: dart.getMethods(file_picker$.FileType.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(file_picker$.FileType, I[15]);
  dart.setStaticFieldSignature(file_picker$.FileType, () => ['values', 'any', 'media', 'image', 'video', 'audio', 'custom']);
  dart.defineLazy(file_picker$.FileType, {
    /*file_picker$.FileType.values*/get values() {
      return C[247] || CT.C247;
    },
    /*file_picker$.FileType.any*/get any() {
      return C[55] || CT.C55;
    },
    /*file_picker$.FileType.media*/get media() {
      return C[59] || CT.C59;
    },
    /*file_picker$.FileType.image*/get image() {
      return C[57] || CT.C57;
    },
    /*file_picker$.FileType.video*/get video() {
      return C[58] || CT.C58;
    },
    /*file_picker$.FileType.audio*/get audio() {
      return C[56] || CT.C56;
    },
    /*file_picker$.FileType.custom*/get custom() {
      return C[60] || CT.C60;
    }
  }, false);
  file_picker$.FilePickerStatus = class FilePickerStatus extends core._Enum {
    [S$0._enumToString]() {
      return "FilePickerStatus." + this[S$0._name];
    }
  };
  (file_picker$.FilePickerStatus.new = function(index, name) {
    file_picker$.FilePickerStatus.__proto__.new.call(this, index, name);
    ;
  }).prototype = file_picker$.FilePickerStatus.prototype;
  dart.addTypeTests(file_picker$.FilePickerStatus);
  dart.addTypeCaches(file_picker$.FilePickerStatus);
  dart.setMethodSignature(file_picker$.FilePickerStatus, () => ({
    __proto__: dart.getMethods(file_picker$.FilePickerStatus.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(file_picker$.FilePickerStatus, I[15]);
  dart.setStaticFieldSignature(file_picker$.FilePickerStatus, () => ['values', 'picking', 'done']);
  dart.defineLazy(file_picker$.FilePickerStatus, {
    /*file_picker$.FilePickerStatus.values*/get values() {
      return C[248] || CT.C248;
    },
    /*file_picker$.FilePickerStatus.picking*/get picking() {
      return C[249] || CT.C249;
    },
    /*file_picker$.FilePickerStatus.done*/get done() {
      return C[250] || CT.C250;
    }
  }, false);
  dart.defineLazy(file_picker$, {
    /*file_picker$.defaultDialogTitle*/get defaultDialogTitle() {
      return "";
    }
  }, false);
  platform_file.PlatformFile = class PlatformFile extends core.Object {
    get name() {
      return this[S$0.name$3];
    }
    set name(value) {
      super.name = value;
    }
    get bytes() {
      return this[S$0.bytes$1];
    }
    set bytes(value) {
      super.bytes = value;
    }
    get readStream() {
      return this[S$0.readStream];
    }
    set readStream(value) {
      super.readStream = value;
    }
    get size() {
      return this[S$0.size];
    }
    set size(value) {
      super.size = value;
    }
    get identifier() {
      return this[S$0.identifier];
    }
    set identifier(value) {
      super.identifier = value;
    }
    static ['_#new#tearOff'](opts) {
      let path = opts && 'path' in opts ? opts.path : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let size = opts && 'size' in opts ? opts.size : null;
      let bytes = opts && 'bytes' in opts ? opts.bytes : null;
      let readStream = opts && 'readStream' in opts ? opts.readStream : null;
      let identifier = opts && 'identifier' in opts ? opts.identifier : null;
      return new platform_file.PlatformFile.new({path: path, name: name, size: size, bytes: bytes, readStream: readStream, identifier: identifier});
    }
    static fromMap(data, opts) {
      let readStream = opts && 'readStream' in opts ? opts.readStream : null;
      return new platform_file.PlatformFile.new({name: core.String.as(data[S$.$_get]("name")), path: T$.StringN().as(data[S$.$_get]("path")), bytes: T$.Uint8ListN().as(data[S$.$_get]("bytes")), size: core.int.as(data[S$.$_get]("size")), identifier: T$.StringN().as(data[S$.$_get]("identifier")), readStream: readStream});
    }
    static ['_#fromMap#tearOff'](data, opts) {
      let readStream = opts && 'readStream' in opts ? opts.readStream : null;
      return platform_file.PlatformFile.fromMap(data, {readStream: readStream});
    }
    get path() {
      {
        dart.throw("      On web `path` is always `null`,\n      You should access `bytes` property instead,\n      Read more about it [here](https://github.com/miguelpruivo/flutter_file_picker/wiki/FAQ)\n      ");
      }
      return this[S$0._path$1];
    }
    get extension() {
      return this.name[S$.$split](".")[S$0.$last];
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      return platform_file.PlatformFile.is(other) && (true || other.path == this.path) && other.name === this.name && dart.equals(other.bytes, this.bytes) && dart.equals(other.readStream, this.readStream) && other.identifier == this.identifier && other.size === this.size;
    }
    get hashCode() {
      return 0;
    }
    toString() {
      return "PlatformFile(" + ", name: " + this.name + ", bytes: " + dart.str(this.bytes) + ", readStream: " + dart.str(this.readStream) + ", size: " + dart.str(this.size) + ")";
    }
  };
  (platform_file.PlatformFile.new = function(opts) {
    let path = opts && 'path' in opts ? opts.path : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let size = opts && 'size' in opts ? opts.size : null;
    let bytes = opts && 'bytes' in opts ? opts.bytes : null;
    let readStream = opts && 'readStream' in opts ? opts.readStream : null;
    let identifier = opts && 'identifier' in opts ? opts.identifier : null;
    this[S$0.name$3] = name;
    this[S$0.size] = size;
    this[S$0.bytes$1] = bytes;
    this[S$0.readStream] = readStream;
    this[S$0.identifier] = identifier;
    this[S$0._path$1] = path;
    ;
  }).prototype = platform_file.PlatformFile.prototype;
  dart.addTypeTests(platform_file.PlatformFile);
  dart.addTypeCaches(platform_file.PlatformFile);
  dart.setStaticMethodSignature(platform_file.PlatformFile, () => ['fromMap']);
  dart.setGetterSignature(platform_file.PlatformFile, () => ({
    __proto__: dart.getGetters(platform_file.PlatformFile.__proto__),
    path: dart.nullable(core.String),
    extension: dart.nullable(core.String)
  }));
  dart.setLibraryUri(platform_file.PlatformFile, I[151]);
  dart.setFieldSignature(platform_file.PlatformFile, () => ({
    __proto__: dart.getFields(platform_file.PlatformFile.__proto__),
    [S$0._path$1]: dart.fieldType(dart.nullable(core.String)),
    name: dart.finalFieldType(core.String),
    bytes: dart.finalFieldType(dart.nullable(typed_data.Uint8List)),
    readStream: dart.finalFieldType(dart.nullable(async.Stream$(core.List$(core.int)))),
    size: dart.finalFieldType(core.int),
    identifier: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(platform_file.PlatformFile, ['_equals', 'toString']);
  dart.defineExtensionAccessors(platform_file.PlatformFile, ['hashCode']);
  file_picker_result.FilePickerResult = class FilePickerResult extends core.Object {
    get files() {
      return this[S$0.files];
    }
    set files(value) {
      super.files = value;
    }
    static ['_#new#tearOff'](files) {
      return new file_picker_result.FilePickerResult.new(files);
    }
    get isSinglePick() {
      return this.files[S$.$length] === 1;
    }
    get count() {
      return this.files[S$.$length];
    }
    get paths() {
      return this.files[S$.$map](T$.StringN(), dart.fn(file => dart.throw(new core.UnsupportedError.new("Picking paths is unsupported on Web. Please, use bytes property instead.")), T$.PlatformFileToStringN()))[S$.$toList]();
    }
    get names() {
      return this.files[S$.$map](core.String, dart.fn(file => file.name, T$.PlatformFileToString()))[S$.$toList]();
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      return file_picker_result.FilePickerResult.is(other) && collections.listEquals(platform_file.PlatformFile, other.files, this.files);
    }
    get hashCode() {
      return this.files[S$.$hashCode];
    }
    toString() {
      return "FilePickerResult(files: " + dart.str(this.files) + ")";
    }
  };
  (file_picker_result.FilePickerResult.new = function(files) {
    this[S$0.files] = files;
    ;
  }).prototype = file_picker_result.FilePickerResult.prototype;
  dart.addTypeTests(file_picker_result.FilePickerResult);
  dart.addTypeCaches(file_picker_result.FilePickerResult);
  dart.setGetterSignature(file_picker_result.FilePickerResult, () => ({
    __proto__: dart.getGetters(file_picker_result.FilePickerResult.__proto__),
    isSinglePick: core.bool,
    count: core.int,
    paths: core.List$(dart.nullable(core.String)),
    names: core.List$(dart.nullable(core.String))
  }));
  dart.setLibraryUri(file_picker_result.FilePickerResult, I[152]);
  dart.setFieldSignature(file_picker_result.FilePickerResult, () => ({
    __proto__: dart.getFields(file_picker_result.FilePickerResult.__proto__),
    files: dart.finalFieldType(core.List$(platform_file.PlatformFile))
  }));
  dart.defineExtensionMethods(file_picker_result.FilePickerResult, ['_equals', 'toString']);
  dart.defineExtensionAccessors(file_picker_result.FilePickerResult, ['hashCode']);
  auth_interop['AuthErrorExtension|get#code'] = function AuthErrorExtension$124get$35code($this) {
    return js_util.getProperty(core.String, $this, "code");
  };
  auth_interop['AuthErrorExtension|set#code'] = function AuthErrorExtension$124set$35code($this, s) {
    return js_util._setPropertyUnchecked(core.String, $this, "code", s);
  };
  auth_interop['AuthErrorExtension|get#message'] = function AuthErrorExtension$124get$35message($this) {
    return js_util.getProperty(core.String, $this, "message");
  };
  auth_interop['AuthErrorExtension|set#message'] = function AuthErrorExtension$124set$35message($this, s) {
    return js_util._setPropertyUnchecked(core.String, $this, "message", s);
  };
  auth_interop['AuthErrorExtension|get#email'] = function AuthErrorExtension$124get$35email($this) {
    return js_util.getProperty(core.String, $this, "email");
  };
  auth_interop['AuthErrorExtension|set#email'] = function AuthErrorExtension$124set$35email($this, s) {
    return js_util._setPropertyUnchecked(core.String, $this, "email", s);
  };
  auth_interop['AuthErrorExtension|get#credential'] = function AuthErrorExtension$124get$35credential($this) {
    return js_util.getProperty(dart.packageJSType("firebase_auth.AuthCredential", false), $this, "credential");
  };
  auth_interop['AuthErrorExtension|set#credential'] = function AuthErrorExtension$124set$35credential($this, c) {
    return js_util._setPropertyUnchecked(dart.packageJSType("firebase_auth.AuthCredential", false), $this, "credential", c);
  };
  auth_interop['AuthErrorExtension|get#tenantId'] = function AuthErrorExtension$124get$35tenantId($this) {
    return js_util.getProperty(core.String, $this, "tenantId");
  };
  auth_interop['AuthErrorExtension|set#tenantId'] = function AuthErrorExtension$124set$35tenantId($this, s) {
    return js_util._setPropertyUnchecked(core.String, $this, "tenantId", s);
  };
  auth_interop['AuthErrorExtension|get#phoneNumber'] = function AuthErrorExtension$124get$35phoneNumber($this) {
    return js_util.getProperty(core.String, $this, "phoneNumber");
  };
  auth_interop['AuthErrorExtension|set#phoneNumber'] = function AuthErrorExtension$124set$35phoneNumber($this, s) {
    return js_util._setPropertyUnchecked(core.String, $this, "phoneNumber", s);
  };
  auth_interop['AuthErrorExtension|get#customData'] = function AuthErrorExtension$124get$35customData($this) {
    return js_util.getProperty(core.Object, $this, "customData");
  };
  auth_interop['AuthErrorCustomDataExtension|get#appName'] = function AuthErrorCustomDataExtension$124get$35appName($this) {
    return js_util.getProperty(core.String, $this, "appName");
  };
  auth_interop['AuthErrorCustomDataExtension|get#email'] = function AuthErrorCustomDataExtension$124get$35email($this) {
    return js_util.getProperty(T$.StringN(), $this, "email");
  };
  auth_interop['AuthErrorCustomDataExtension|get#phoneNumber'] = function AuthErrorCustomDataExtension$124get$35phoneNumber($this) {
    return js_util.getProperty(T$.StringN(), $this, "phoneNumber");
  };
  auth_interop['AuthErrorCustomDataExtension|get#tenantId'] = function AuthErrorCustomDataExtension$124get$35tenantId($this) {
    return js_util.getProperty(T$.StringN(), $this, "tenantId");
  };
  app$.App = class App extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_core.FirebaseApp", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new app$.App._fromJsObject(jsObject);
    }
    get name() {
      return this.jsObject.name;
    }
    get options() {
      return this.jsObject.options;
    }
    static getInstance(jsObject) {
      let t215, t214, t213, t212;
      t212 = app$.App._expando;
      t213 = jsObject;
      t214 = t212._get(t213);
      return t214 == null ? (t215 = new app$.App._fromJsObject(jsObject), t212._set(t213, t215), t215) : t214;
    }
    delete() {
      return utils$0.handleThenable(dart.void, dart.global.firebase_core.deleteApp(this.jsObject));
    }
  };
  (app$.App._fromJsObject = function(jsObject) {
    app$.App.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = app$.App.prototype;
  dart.addTypeTests(app$.App);
  dart.addTypeCaches(app$.App);
  dart.setMethodSignature(app$.App, () => ({
    __proto__: dart.getMethods(app$.App.__proto__),
    delete: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setStaticMethodSignature(app$.App, () => ['getInstance']);
  dart.setGetterSignature(app$.App, () => ({
    __proto__: dart.getGetters(app$.App.__proto__),
    name: core.String,
    options: dart.packageJSType("FirebaseOptions", false)
  }));
  dart.setLibraryUri(app$.App, I[153]);
  dart.setStaticFieldSignature(app$.App, () => ['_expando']);
  dart.defineLazy(app$.App, {
    /*app$.App._expando*/get _expando() {
      return new (T$.ExpandoOfApp()).new();
    }
  }, false);
  storage.TaskState = class TaskState extends core._Enum {
    [S$0._enumToString]() {
      return "TaskState." + this[S$0._name];
    }
  };
  (storage.TaskState.new = function(index, name) {
    storage.TaskState.__proto__.new.call(this, index, name);
    ;
  }).prototype = storage.TaskState.prototype;
  dart.addTypeTests(storage.TaskState);
  dart.addTypeCaches(storage.TaskState);
  dart.setMethodSignature(storage.TaskState, () => ({
    __proto__: dart.getMethods(storage.TaskState.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(storage.TaskState, I[154]);
  dart.setStaticFieldSignature(storage.TaskState, () => ['values', 'RUNNING', 'PAUSED', 'SUCCESS', 'CANCELED', 'ERROR']);
  dart.defineLazy(storage.TaskState, {
    /*storage.TaskState.values*/get values() {
      return C[251] || CT.C251;
    },
    /*storage.TaskState.RUNNING*/get RUNNING() {
      return C[252] || CT.C252;
    },
    /*storage.TaskState.PAUSED*/get PAUSED() {
      return C[253] || CT.C253;
    },
    /*storage.TaskState.SUCCESS*/get SUCCESS() {
      return C[254] || CT.C254;
    },
    /*storage.TaskState.CANCELED*/get CANCELED() {
      return C[255] || CT.C255;
    },
    /*storage.TaskState.ERROR*/get ERROR() {
      return C[256] || CT.C256;
    }
  }, false);
  storage.Storage = class Storage extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_storage.FirebaseStorage", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.Storage._fromJsObject(jsObject);
    }
    get app() {
      return app$.App.getInstance(this.jsObject.app);
    }
    get maxOperationRetryTime() {
      return this.jsObject.maxOperationRetryTime;
    }
    get maxUploadRetryTime() {
      return this.jsObject.maxUploadRetryTime;
    }
    static getInstance(jsObject) {
      let t217, t216, t215, t214;
      t214 = storage.Storage._expando;
      t215 = jsObject;
      t216 = t214._get(t215);
      return t216 == null ? (t217 = new storage.Storage._fromJsObject(jsObject), t214._set(t215, t217), t217) : t216;
    }
    ref(path = null) {
      return storage.StorageReference.getInstance(dart.global.firebase_storage.ref(this.jsObject, path));
    }
    refFromURL(url) {
      return storage.StorageReference.getInstance(dart.global.firebase_storage.ref(this.jsObject, url));
    }
    set maxOperationRetryTime(time) {
      this.jsObject.maxOperationRetryTime = time;
    }
    set maxUploadRetryTime(time) {
      this.jsObject.maxUploadRetryTime = time;
    }
    useStorageEmulator(host, port) {
      return dart.global.firebase_storage.connectStorageEmulator(this.jsObject, host, port);
    }
  };
  (storage.Storage._fromJsObject = function(jsObject) {
    storage.Storage.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.Storage.prototype;
  dart.addTypeTests(storage.Storage);
  dart.addTypeCaches(storage.Storage);
  dart.setMethodSignature(storage.Storage, () => ({
    __proto__: dart.getMethods(storage.Storage.__proto__),
    ref: dart.fnType(storage.StorageReference, [], [dart.nullable(core.String)]),
    refFromURL: dart.fnType(storage.StorageReference, [core.String]),
    useStorageEmulator: dart.fnType(dart.void, [core.String, core.int])
  }));
  dart.setStaticMethodSignature(storage.Storage, () => ['getInstance']);
  dart.setGetterSignature(storage.Storage, () => ({
    __proto__: dart.getGetters(storage.Storage.__proto__),
    app: app$.App,
    maxOperationRetryTime: core.int,
    maxUploadRetryTime: core.int
  }));
  dart.setSetterSignature(storage.Storage, () => ({
    __proto__: dart.getSetters(storage.Storage.__proto__),
    maxOperationRetryTime: core.int,
    maxUploadRetryTime: core.int
  }));
  dart.setLibraryUri(storage.Storage, I[154]);
  dart.setStaticFieldSignature(storage.Storage, () => ['_expando']);
  dart.defineLazy(storage.Storage, {
    /*storage.Storage._expando*/get _expando() {
      return new (T$.ExpandoOfStorage()).new();
    }
  }, false);
  storage.StorageReference = class StorageReference extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_storage.StorageReference", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.StorageReference._fromJsObject(jsObject);
    }
    get bucket() {
      return this.jsObject.bucket;
    }
    get fullPath() {
      return this.jsObject.fullPath;
    }
    get name() {
      return this.jsObject.name;
    }
    get parent() {
      return storage.StorageReference.getInstance(this.jsObject.parent);
    }
    get root() {
      return storage.StorageReference.getInstance(this.jsObject.root);
    }
    get storage() {
      return storage.Storage.getInstance(this.jsObject.storage);
    }
    static getInstance(jsObject) {
      let t217, t216, t215, t214;
      t214 = storage.StorageReference._expando;
      t215 = jsObject;
      t216 = t214._get(t215);
      return t216 == null ? (t217 = new storage.StorageReference._fromJsObject(jsObject), t214._set(t215, t217), t217) : t216;
    }
    child(path) {
      return storage.StorageReference.getInstance(dart.global.firebase_storage.ref(this.jsObject, path));
    }
    delete() {
      return utils$0.handleThenable(dart.dynamic, dart.global.firebase_storage.deleteObject(this.jsObject));
    }
    getDownloadURL() {
      return async.async(core.Uri, (function* getDownloadURL() {
        let uriString = (yield utils$0.handleThenable(core.String, dart.global.firebase_storage.getDownloadURL(this.jsObject)));
        return core.Uri.parse(uriString);
      }).bind(this));
    }
    getMetadata() {
      return utils$0.handleThenable(dart.packageJSType("FullMetadataJsImpl", false), dart.global.firebase_storage.getMetadata(this.jsObject)).then(storage.FullMetadata, C[257] || CT.C257);
    }
    list(options) {
      let t214;
      return utils$0.handleThenable(dart.packageJSType("ListResultJsImpl", false), dart.global.firebase_storage.list(this.jsObject, (t214 = options, t214 == null ? null : t214.jsObject))).then(storage.ListResult, C[258] || CT.C258);
    }
    listAll() {
      return utils$0.handleThenable(dart.packageJSType("ListResultJsImpl", false), dart.global.firebase_storage.listAll(this.jsObject)).then(storage.ListResult, C[258] || CT.C258);
    }
    put(blob, metadata = null) {
      let taskImpl = null;
      if (metadata != null) {
        taskImpl = dart.global.firebase_storage.uploadBytesResumable(this.jsObject, blob, metadata.jsObject);
      } else {
        taskImpl = dart.global.firebase_storage.uploadBytesResumable(this.jsObject, blob);
      }
      return storage.UploadTask.getInstance(taskImpl);
    }
    toString() {
      return this.jsObject.toString();
    }
    updateMetadata(metadata) {
      return async.async(storage.FullMetadata, (function* updateMetadata() {
        yield utils$0.handleThenable(dart.packageJSType("FullMetadataJsImpl", false), dart.global.firebase_storage.updateMetadata(this.jsObject, metadata.jsObject));
        return this.getMetadata();
      }).bind(this));
    }
  };
  (storage.StorageReference._fromJsObject = function(jsObject) {
    storage.StorageReference.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.StorageReference.prototype;
  dart.addTypeTests(storage.StorageReference);
  dart.addTypeCaches(storage.StorageReference);
  dart.setMethodSignature(storage.StorageReference, () => ({
    __proto__: dart.getMethods(storage.StorageReference.__proto__),
    child: dart.fnType(storage.StorageReference, [core.String]),
    delete: dart.fnType(async.Future, []),
    getDownloadURL: dart.fnType(async.Future$(core.Uri), []),
    getMetadata: dart.fnType(async.Future$(storage.FullMetadata), []),
    list: dart.fnType(async.Future$(storage.ListResult), [dart.nullable(storage.ListOptions)]),
    listAll: dart.fnType(async.Future$(storage.ListResult), []),
    put: dart.fnType(storage.UploadTask, [dart.dynamic], [dart.nullable(storage.UploadMetadata)]),
    updateMetadata: dart.fnType(async.Future$(storage.FullMetadata), [storage.SettableMetadata])
  }));
  dart.setStaticMethodSignature(storage.StorageReference, () => ['getInstance']);
  dart.setGetterSignature(storage.StorageReference, () => ({
    __proto__: dart.getGetters(storage.StorageReference.__proto__),
    bucket: core.String,
    fullPath: core.String,
    name: core.String,
    parent: dart.nullable(storage.StorageReference),
    root: storage.StorageReference,
    storage: storage.Storage
  }));
  dart.setLibraryUri(storage.StorageReference, I[154]);
  dart.setStaticFieldSignature(storage.StorageReference, () => ['_expando']);
  dart.defineExtensionMethods(storage.StorageReference, ['toString']);
  dart.defineLazy(storage.StorageReference, {
    /*storage.StorageReference._expando*/get _expando() {
      return new (T$.ExpandoOfStorageReference()).new();
    }
  }, false);
  const _is__SettableMetadataBase_default = Symbol('_is__SettableMetadataBase_default');
  storage._SettableMetadataBase$ = dart.generic(T => {
    class _SettableMetadataBase extends js$0.JsObjectWrapper$(T) {
      get cacheControl() {
        return this.jsObject.cacheControl;
      }
      set cacheControl(s) {
        this.jsObject.cacheControl = s;
      }
      get contentDisposition() {
        return this.jsObject.contentDisposition;
      }
      set contentDisposition(s) {
        this.jsObject.contentDisposition = s;
      }
      get contentEncoding() {
        return this.jsObject.contentEncoding;
      }
      set contentEncoding(s) {
        this.jsObject.contentEncoding = s;
      }
      get contentLanguage() {
        return this.jsObject.contentLanguage;
      }
      set contentLanguage(s) {
        this.jsObject.contentLanguage = s;
      }
      get contentType() {
        return this.jsObject.contentType;
      }
      set contentType(s) {
        this.jsObject.contentType = s;
      }
      get customMetadata() {
        let metadata = T$.MapNOfString$dynamic().as(utils$0.dartify(this.jsObject.customMetadata));
        if (metadata != null) {
          return T$.LinkedHashMapOfString$String().from(metadata);
        } else {
          return new (T$.IdentityMapOfString$String()).new();
        }
      }
      set customMetadata(m) {
        this.jsObject.customMetadata = utils$0.jsify(m);
      }
    }
    (_SettableMetadataBase.fromJsObject = function(jsObject) {
      _SettableMetadataBase.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = _SettableMetadataBase.prototype;
    dart.addTypeTests(_SettableMetadataBase);
    _SettableMetadataBase.prototype[_is__SettableMetadataBase_default] = true;
    dart.addTypeCaches(_SettableMetadataBase);
    dart.setGetterSignature(_SettableMetadataBase, () => ({
      __proto__: dart.getGetters(_SettableMetadataBase.__proto__),
      cacheControl: core.String,
      contentDisposition: core.String,
      contentEncoding: core.String,
      contentLanguage: core.String,
      contentType: core.String,
      customMetadata: core.Map$(core.String, core.String)
    }));
    dart.setSetterSignature(_SettableMetadataBase, () => ({
      __proto__: dart.getSetters(_SettableMetadataBase.__proto__),
      cacheControl: core.String,
      contentDisposition: core.String,
      contentEncoding: core.String,
      contentLanguage: core.String,
      contentType: core.String,
      customMetadata: core.Map$(core.String, core.String)
    }));
    dart.setLibraryUri(_SettableMetadataBase, I[154]);
    return _SettableMetadataBase;
  });
  storage._SettableMetadataBase = storage._SettableMetadataBase$();
  dart.addTypeTests(storage._SettableMetadataBase, _is__SettableMetadataBase_default);
  const _is__UploadMetadataBase_default = Symbol('_is__UploadMetadataBase_default');
  storage._UploadMetadataBase$ = dart.generic(T => {
    class _UploadMetadataBase extends storage._SettableMetadataBase$(T) {
      get md5Hash() {
        return this.jsObject.md5Hash;
      }
      set md5Hash(s) {
        this.jsObject.md5Hash = s;
      }
    }
    (_UploadMetadataBase.fromJsObject = function(jsObject) {
      _UploadMetadataBase.__proto__.fromJsObject.call(this, jsObject);
      ;
    }).prototype = _UploadMetadataBase.prototype;
    dart.addTypeTests(_UploadMetadataBase);
    _UploadMetadataBase.prototype[_is__UploadMetadataBase_default] = true;
    dart.addTypeCaches(_UploadMetadataBase);
    dart.setGetterSignature(_UploadMetadataBase, () => ({
      __proto__: dart.getGetters(_UploadMetadataBase.__proto__),
      md5Hash: core.String
    }));
    dart.setSetterSignature(_UploadMetadataBase, () => ({
      __proto__: dart.getSetters(_UploadMetadataBase.__proto__),
      md5Hash: core.String
    }));
    dart.setLibraryUri(_UploadMetadataBase, I[154]);
    return _UploadMetadataBase;
  });
  storage._UploadMetadataBase = storage._UploadMetadataBase$();
  dart.addTypeTests(storage._UploadMetadataBase, _is__UploadMetadataBase_default);
  storage.FullMetadata = class FullMetadata extends storage._UploadMetadataBase$(dart.packageJSType("FullMetadataJsImpl", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.FullMetadata._fromJsObject(jsObject);
    }
    get bucket() {
      return this.jsObject.bucket;
    }
    get fullPath() {
      return this.jsObject.fullPath;
    }
    get generation() {
      return this.jsObject.generation;
    }
    get metageneration() {
      return this.jsObject.metageneration;
    }
    get name() {
      return this.jsObject.name;
    }
    get size() {
      return this.jsObject.size;
    }
    get timeCreated() {
      return this.jsObject.timeCreated == null ? null : core.DateTime.parse(dart.nullCheck(this.jsObject.timeCreated));
    }
    get updated() {
      return this.jsObject.updated == null ? null : core.DateTime.parse(dart.nullCheck(this.jsObject.updated));
    }
    static getInstance(jsObject) {
      let t217, t216, t215, t214;
      t214 = storage.FullMetadata._expando;
      t215 = jsObject;
      t216 = t214._get(t215);
      return t216 == null ? (t217 = new storage.FullMetadata._fromJsObject(jsObject), t214._set(t215, t217), t217) : t216;
    }
  };
  (storage.FullMetadata._fromJsObject = function(jsObject) {
    storage.FullMetadata.__proto__.fromJsObject.call(this, dart.packageJSType("FullMetadataJsImpl", false).as(jsObject));
    ;
  }).prototype = storage.FullMetadata.prototype;
  dart.addTypeTests(storage.FullMetadata);
  dart.addTypeCaches(storage.FullMetadata);
  dart.setStaticMethodSignature(storage.FullMetadata, () => ['getInstance']);
  dart.setGetterSignature(storage.FullMetadata, () => ({
    __proto__: dart.getGetters(storage.FullMetadata.__proto__),
    bucket: core.String,
    fullPath: dart.nullable(core.String),
    generation: dart.nullable(core.String),
    metageneration: dart.nullable(core.String),
    name: dart.nullable(core.String),
    size: dart.nullable(core.int),
    timeCreated: dart.nullable(core.DateTime),
    updated: dart.nullable(core.DateTime)
  }));
  dart.setLibraryUri(storage.FullMetadata, I[154]);
  dart.setStaticFieldSignature(storage.FullMetadata, () => ['_expando']);
  dart.defineLazy(storage.FullMetadata, {
    /*storage.FullMetadata._expando*/get _expando() {
      return new (T$.ExpandoOfFullMetadata()).new();
    }
  }, false);
  storage.UploadMetadata = class UploadMetadata extends storage._UploadMetadataBase$(dart.packageJSType("UploadMetadataJsImpl", false)) {
    static new(opts) {
      let md5Hash = opts && 'md5Hash' in opts ? opts.md5Hash : null;
      let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
      let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
      let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
      let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
      return new storage.UploadMetadata.fromJsObject({md5Hash: md5Hash, cacheControl: cacheControl, contentDisposition: contentDisposition, contentEncoding: contentEncoding, contentLanguage: contentLanguage, contentType: contentType, customMetadata: customMetadata != null ? utils$0.jsify(customMetadata) : null});
    }
    static ['_#new#tearOff'](opts) {
      let md5Hash = opts && 'md5Hash' in opts ? opts.md5Hash : null;
      let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
      let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
      let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
      let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
      return storage.UploadMetadata.new({md5Hash: md5Hash, cacheControl: cacheControl, contentDisposition: contentDisposition, contentEncoding: contentEncoding, contentLanguage: contentLanguage, contentType: contentType, customMetadata: customMetadata});
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new storage.UploadMetadata.fromJsObject(jsObject);
    }
  };
  (storage.UploadMetadata.fromJsObject = function(jsObject) {
    storage.UploadMetadata.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.UploadMetadata.prototype;
  dart.addTypeTests(storage.UploadMetadata);
  dart.addTypeCaches(storage.UploadMetadata);
  dart.setStaticMethodSignature(storage.UploadMetadata, () => ['new']);
  dart.setLibraryUri(storage.UploadMetadata, I[154]);
  storage.UploadTask = class UploadTask extends js$0.JsObjectWrapper$(dart.packageJSType("firebase_storage.UploadTask", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.UploadTask._fromJsObject(jsObject);
    }
    get future() {
      let t214;
      t214 = this[S$0._future];
      return t214 == null ? this[S$0._future] = utils$0.handleThenable(dart.packageJSType("UploadTaskSnapshotJsImpl", false), this.jsObject).then(storage.UploadTaskSnapshot, C[259] || CT.C259) : t214;
    }
    get snapshot() {
      return storage.UploadTaskSnapshot.getInstance(this.jsObject.snapshot);
    }
    static getInstance(jsObject) {
      let t217, t216, t215, t214;
      t214 = storage.UploadTask._expando;
      t215 = jsObject;
      t216 = t214._get(t215);
      return t216 == null ? (t217 = new storage.UploadTask._fromJsObject(jsObject), t214._set(t215, t217), t217) : t216;
    }
    cancel() {
      return this.jsObject.cancel();
    }
    get onStateChanged() {
      let changeController = null;
      function changeController$35get() {
        let t215;
        t215 = changeController;
        return t215 == null ? dart.throw(new _internal.LateError.localNI("changeController")) : t215;
      }
      function changeController$35set(changeController$35param) {
        return changeController = changeController$35param;
      }
      let onStateChangedUnsubscribe = null;
      function onStateChangedUnsubscribe$35get() {
        let t218;
        t218 = onStateChangedUnsubscribe;
        return t218 == null ? dart.throw(new _internal.LateError.localNI("onStateChangedUnsubscribe")) : t218;
      }
      function onStateChangedUnsubscribe$35set(onStateChangedUnsubscribe$35param) {
        return onStateChangedUnsubscribe = onStateChangedUnsubscribe$35param;
      }
      let nextWrapper = js.allowInterop(T$.UploadTaskSnapshotJsImplToNull(), dart.fn(data => {
        changeController$35get().add(storage.UploadTaskSnapshot.getInstance(data));
      }, T$.UploadTaskSnapshotJsImplToNull()));
      let errorWrapper = js.allowInterop(T$.dynamicTovoid(), dart.fn(e => changeController$35get().addError(core.Object.as(e)), T$.dynamicTovoid()));
      let onCompletion = js.allowInterop(T$.VoidToNull(), dart.fn(() => {
        changeController$35get().close();
      }, T$.VoidToNull()));
      const startListen = () => {
        onStateChangedUnsubscribe$35set(this.jsObject.on(dart.global.firebase_storage.TaskEvent, dart.assertInterop(nextWrapper), dart.assertInterop(errorWrapper), dart.assertInterop(onCompletion)));
      };
      dart.fn(startListen, T$.VoidTovoid());
      function stopListen() {
        onStateChangedUnsubscribe$35get()();
        changeController$35get().close();
      }
      dart.fn(stopListen, T$.VoidTovoid());
      changeController$35set(T$.StreamControllerOfUploadTaskSnapshot().broadcast({onListen: startListen, onCancel: stopListen, sync: true}));
      return changeController$35get().stream;
    }
    pause() {
      return this.jsObject.pause();
    }
    resume() {
      return this.jsObject.resume();
    }
  };
  (storage.UploadTask._fromJsObject = function(jsObject) {
    this[S$0._future] = null;
    storage.UploadTask.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.UploadTask.prototype;
  dart.addTypeTests(storage.UploadTask);
  dart.addTypeCaches(storage.UploadTask);
  dart.setMethodSignature(storage.UploadTask, () => ({
    __proto__: dart.getMethods(storage.UploadTask.__proto__),
    cancel: dart.fnType(core.bool, []),
    pause: dart.fnType(core.bool, []),
    resume: dart.fnType(core.bool, [])
  }));
  dart.setStaticMethodSignature(storage.UploadTask, () => ['getInstance']);
  dart.setGetterSignature(storage.UploadTask, () => ({
    __proto__: dart.getGetters(storage.UploadTask.__proto__),
    future: async.Future$(storage.UploadTaskSnapshot),
    snapshot: storage.UploadTaskSnapshot,
    onStateChanged: async.Stream$(storage.UploadTaskSnapshot)
  }));
  dart.setLibraryUri(storage.UploadTask, I[154]);
  dart.setFieldSignature(storage.UploadTask, () => ({
    __proto__: dart.getFields(storage.UploadTask.__proto__),
    [S$0._future]: dart.fieldType(dart.nullable(async.Future$(storage.UploadTaskSnapshot)))
  }));
  dart.setStaticFieldSignature(storage.UploadTask, () => ['_expando']);
  dart.defineLazy(storage.UploadTask, {
    /*storage.UploadTask._expando*/get _expando() {
      return new (T$.ExpandoOfUploadTask()).new();
    }
  }, false);
  storage.UploadTaskSnapshot = class UploadTaskSnapshot extends js$0.JsObjectWrapper$(dart.packageJSType("UploadTaskSnapshotJsImpl", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.UploadTaskSnapshot._fromJsObject(jsObject);
    }
    get bytesTransferred() {
      return this.jsObject.bytesTransferred;
    }
    get metadata() {
      return storage.FullMetadata.getInstance(this.jsObject.metadata);
    }
    get ref() {
      return storage.StorageReference.getInstance(this.jsObject.ref);
    }
    get state() {
      switch (this.jsObject.state) {
        case "running":
          {
            return storage.TaskState.RUNNING;
          }
        case "paused":
          {
            return storage.TaskState.PAUSED;
          }
        case "success":
          {
            return storage.TaskState.SUCCESS;
          }
        case "canceled":
          {
            return storage.TaskState.CANCELED;
          }
        case "error":
          {
            return storage.TaskState.ERROR;
          }
        default:
          {
            dart.throw(new core.UnsupportedError.new("Unknown state '" + this.jsObject.state + "' please file a bug."));
          }
      }
    }
    get task() {
      return storage.UploadTask.getInstance(this.jsObject.task);
    }
    get totalBytes() {
      return this.jsObject.totalBytes;
    }
    static getInstance(jsObject) {
      let t223, t222, t221, t220;
      t220 = storage.UploadTaskSnapshot._expando;
      t221 = jsObject;
      t222 = t220._get(t221);
      return t222 == null ? (t223 = new storage.UploadTaskSnapshot._fromJsObject(jsObject), t220._set(t221, t223), t223) : t222;
    }
  };
  (storage.UploadTaskSnapshot._fromJsObject = function(jsObject) {
    storage.UploadTaskSnapshot.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.UploadTaskSnapshot.prototype;
  dart.addTypeTests(storage.UploadTaskSnapshot);
  dart.addTypeCaches(storage.UploadTaskSnapshot);
  dart.setStaticMethodSignature(storage.UploadTaskSnapshot, () => ['getInstance']);
  dart.setGetterSignature(storage.UploadTaskSnapshot, () => ({
    __proto__: dart.getGetters(storage.UploadTaskSnapshot.__proto__),
    bytesTransferred: core.int,
    metadata: storage.FullMetadata,
    ref: storage.StorageReference,
    state: storage.TaskState,
    task: storage.UploadTask,
    totalBytes: core.int
  }));
  dart.setLibraryUri(storage.UploadTaskSnapshot, I[154]);
  dart.setStaticFieldSignature(storage.UploadTaskSnapshot, () => ['_expando']);
  dart.defineLazy(storage.UploadTaskSnapshot, {
    /*storage.UploadTaskSnapshot._expando*/get _expando() {
      return new (T$.ExpandoOfUploadTaskSnapshot()).new();
    }
  }, false);
  storage.SettableMetadata = class SettableMetadata extends storage._SettableMetadataBase$(dart.packageJSType("SettableMetadataJsImpl", false)) {
    static new(opts) {
      let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
      let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
      let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
      let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
      return new storage.SettableMetadata.fromJsObject({cacheControl: cacheControl, contentDisposition: contentDisposition, contentEncoding: contentEncoding, contentLanguage: contentLanguage, contentType: contentType, customMetadata: customMetadata != null ? utils$0.jsify(customMetadata) : null});
    }
    static ['_#new#tearOff'](opts) {
      let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
      let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
      let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
      let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
      return storage.SettableMetadata.new({cacheControl: cacheControl, contentDisposition: contentDisposition, contentEncoding: contentEncoding, contentLanguage: contentLanguage, contentType: contentType, customMetadata: customMetadata});
    }
    static ['_#fromJsObject#tearOff'](jsObject) {
      return new storage.SettableMetadata.fromJsObject(jsObject);
    }
  };
  (storage.SettableMetadata.fromJsObject = function(jsObject) {
    storage.SettableMetadata.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.SettableMetadata.prototype;
  dart.addTypeTests(storage.SettableMetadata);
  dart.addTypeCaches(storage.SettableMetadata);
  dart.setStaticMethodSignature(storage.SettableMetadata, () => ['new']);
  dart.setLibraryUri(storage.SettableMetadata, I[154]);
  storage.ListOptions = class ListOptions extends js$0.JsObjectWrapper$(dart.packageJSType("ListOptionsJsImpl", false)) {
    static new(opts) {
      let maxResults = opts && 'maxResults' in opts ? opts.maxResults : null;
      let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
      return new storage.ListOptions._fromJsObject({maxResults: maxResults, pageToken: pageToken});
    }
    static ['_#new#tearOff'](opts) {
      let maxResults = opts && 'maxResults' in opts ? opts.maxResults : null;
      let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
      return storage.ListOptions.new({maxResults: maxResults, pageToken: pageToken});
    }
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.ListOptions._fromJsObject(jsObject);
    }
    get maxResults() {
      return this.jsObject.maxResults;
    }
    set maxResults(n) {
      return this.jsObject.maxResults = n;
    }
    get pageToken() {
      return this.jsObject.pageToken;
    }
    set pageToken(t) {
      return this.jsObject.pageToken = t;
    }
  };
  (storage.ListOptions._fromJsObject = function(jsObject) {
    storage.ListOptions.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.ListOptions.prototype;
  dart.addTypeTests(storage.ListOptions);
  dart.addTypeCaches(storage.ListOptions);
  dart.setStaticMethodSignature(storage.ListOptions, () => ['new']);
  dart.setGetterSignature(storage.ListOptions, () => ({
    __proto__: dart.getGetters(storage.ListOptions.__proto__),
    maxResults: core.int,
    pageToken: core.String
  }));
  dart.setSetterSignature(storage.ListOptions, () => ({
    __proto__: dart.getSetters(storage.ListOptions.__proto__),
    maxResults: core.int,
    pageToken: core.String
  }));
  dart.setLibraryUri(storage.ListOptions, I[154]);
  storage.ListResult = class ListResult extends js$0.JsObjectWrapper$(dart.packageJSType("ListResultJsImpl", false)) {
    static ['_#_fromJsObject#tearOff'](jsObject) {
      return new storage.ListResult._fromJsObject(jsObject);
    }
    get items() {
      return this.jsObject.items[S$.$map](storage.StorageReference, dart.fn(data => new storage.StorageReference._fromJsObject(dart.packageJSType("firebase_storage.StorageReference", false).as(data)), T$.dynamicToStorageReference()))[S$.$toList]();
    }
    get nextPageToken() {
      return this.jsObject.nextPageToken;
    }
    get prefixes() {
      return this.jsObject.prefixes[S$.$map](storage.StorageReference, dart.fn(data => new storage.StorageReference._fromJsObject(dart.packageJSType("firebase_storage.StorageReference", false).as(data)), T$.dynamicToStorageReference()))[S$.$toList]();
    }
    static getInstance(jsObject) {
      let t223, t222, t221, t220;
      t220 = storage.ListResult._expando;
      t221 = jsObject;
      t222 = t220._get(t221);
      return t222 == null ? (t223 = new storage.ListResult._fromJsObject(jsObject), t220._set(t221, t223), t223) : t222;
    }
  };
  (storage.ListResult._fromJsObject = function(jsObject) {
    storage.ListResult.__proto__.fromJsObject.call(this, jsObject);
    ;
  }).prototype = storage.ListResult.prototype;
  dart.addTypeTests(storage.ListResult);
  dart.addTypeCaches(storage.ListResult);
  dart.setStaticMethodSignature(storage.ListResult, () => ['getInstance']);
  dart.setGetterSignature(storage.ListResult, () => ({
    __proto__: dart.getGetters(storage.ListResult.__proto__),
    items: core.List$(storage.StorageReference),
    nextPageToken: core.String,
    prefixes: core.List$(storage.StorageReference)
  }));
  dart.setLibraryUri(storage.ListResult, I[154]);
  dart.setStaticFieldSignature(storage.ListResult, () => ['_expando']);
  dart.defineLazy(storage.ListResult, {
    /*storage.ListResult._expando*/get _expando() {
      return new (T$.ExpandoOfListResult()).new();
    }
  }, false);
  storage.getStorageInstance = function getStorageInstance(app = null, bucket = null) {
    let appImpl = app != null ? core$.app(app.name) : core$.app();
    return storage.Storage.getInstance(bucket != null ? dart.global.firebase_storage.getStorage(appImpl.jsObject, bucket) : dart.global.firebase_storage.getStorage(appImpl.jsObject));
  };
  platform_interface_reference.ReferencePlatform = class ReferencePlatform extends plugin_platform_interface.PlatformInterface {
    get storage() {
      return this[S$0.storage];
    }
    set storage(value) {
      super.storage = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_reference.ReferencePlatform._token);
    }
    get bucket() {
      return this.storage.bucket;
    }
    get fullPath() {
      return this[S$0._pointer$4].path;
    }
    get name() {
      return this[S$0._pointer$4].name;
    }
    get parent() {
      let parentPath = this[S$0._pointer$4].parent;
      if (parentPath == null) {
        return null;
      }
      return this.storage.ref(parentPath);
    }
    get root() {
      return this.storage.ref("/");
    }
    child(path) {
      return this.storage.ref(this[S$0._pointer$4].child(path));
    }
    delete() {
      dart.throw(new core.UnimplementedError.new("delete() is not implemented"));
    }
    getDownloadURL() {
      dart.throw(new core.UnimplementedError.new("getDownloadURL() is not implemented"));
    }
    getMetadata() {
      dart.throw(new core.UnimplementedError.new("getMetadata() is not implemented"));
    }
    list(options = null) {
      dart.throw(new core.UnimplementedError.new("list() is not implemented"));
    }
    listAll() {
      dart.throw(new core.UnimplementedError.new("listAll() is not implemented"));
    }
    getData(maxSize) {
      return async.async(T$.Uint8ListN(), function* getData() {
        dart.throw(new core.UnimplementedError.new("getData() is not implemented"));
      });
    }
    putData(data, metadata = null) {
      dart.throw(new core.UnimplementedError.new("putData() is not implemented"));
    }
    putBlob(data, metadata = null) {
      dart.throw(new core.UnimplementedError.new("putBlob() is not implemented"));
    }
    putFile(file, metadata = null) {
      dart.throw(new core.UnimplementedError.new("putFile() is not implemented"));
    }
    putString(data, format, metadata = null) {
      dart.throw(new core.UnimplementedError.new("putString() is not implemented"));
    }
    updateMetadata(metadata) {
      dart.throw(new core.UnimplementedError.new("updateMetadata() is not implemented"));
    }
    writeToFile(file) {
      dart.throw(new core.UnimplementedError.new("writeToFile() is not implemented"));
    }
  };
  (platform_interface_reference.ReferencePlatform.new = function(storage, path) {
    this[S$0.storage] = storage;
    this[S$0._pointer$4] = new pointer$.Pointer.new(path);
    platform_interface_reference.ReferencePlatform.__proto__.new.call(this, {token: platform_interface_reference.ReferencePlatform._token});
    ;
  }).prototype = platform_interface_reference.ReferencePlatform.prototype;
  dart.addTypeTests(platform_interface_reference.ReferencePlatform);
  dart.addTypeCaches(platform_interface_reference.ReferencePlatform);
  dart.setMethodSignature(platform_interface_reference.ReferencePlatform, () => ({
    __proto__: dart.getMethods(platform_interface_reference.ReferencePlatform.__proto__),
    child: dart.fnType(platform_interface_reference.ReferencePlatform, [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    getDownloadURL: dart.fnType(async.Future$(core.String), []),
    getMetadata: dart.fnType(async.Future$(full_metadata.FullMetadata), []),
    list: dart.fnType(async.Future$(platform_interface_list_result.ListResultPlatform), [], [dart.nullable(list_options.ListOptions)]),
    listAll: dart.fnType(async.Future$(platform_interface_list_result.ListResultPlatform), []),
    getData: dart.fnType(async.Future$(dart.nullable(typed_data.Uint8List)), [core.int]),
    putData: dart.fnType(platform_interface_task.TaskPlatform, [typed_data.Uint8List], [dart.nullable(settable_metadata.SettableMetadata)]),
    putBlob: dart.fnType(platform_interface_task.TaskPlatform, [dart.dynamic], [dart.nullable(settable_metadata.SettableMetadata)]),
    putFile: dart.fnType(platform_interface_task.TaskPlatform, [io.File], [dart.nullable(settable_metadata.SettableMetadata)]),
    putString: dart.fnType(platform_interface_task.TaskPlatform, [core.String, put_string_format.PutStringFormat], [dart.nullable(settable_metadata.SettableMetadata)]),
    updateMetadata: dart.fnType(async.Future$(full_metadata.FullMetadata), [settable_metadata.SettableMetadata]),
    writeToFile: dart.fnType(platform_interface_task.TaskPlatform, [io.File])
  }));
  dart.setStaticMethodSignature(platform_interface_reference.ReferencePlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_reference.ReferencePlatform, () => ({
    __proto__: dart.getGetters(platform_interface_reference.ReferencePlatform.__proto__),
    bucket: core.String,
    fullPath: core.String,
    name: core.String,
    parent: dart.nullable(platform_interface_reference.ReferencePlatform),
    root: platform_interface_reference.ReferencePlatform
  }));
  dart.setLibraryUri(platform_interface_reference.ReferencePlatform, I[156]);
  dart.setFieldSignature(platform_interface_reference.ReferencePlatform, () => ({
    __proto__: dart.getFields(platform_interface_reference.ReferencePlatform.__proto__),
    [S$0._pointer$4]: dart.fieldType(pointer$.Pointer),
    storage: dart.finalFieldType(platform_interface_firebase_storage.FirebaseStoragePlatform)
  }));
  dart.setStaticFieldSignature(platform_interface_reference.ReferencePlatform, () => ['_token']);
  dart.defineLazy(platform_interface_reference.ReferencePlatform, {
    /*platform_interface_reference.ReferencePlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  reference_web.ReferenceWeb = class ReferenceWeb extends platform_interface_reference.ReferencePlatform {
    static ['_#new#tearOff'](storage, path) {
      return new reference_web.ReferenceWeb.new(storage, path);
    }
    get [S$0._ref]() {
      let t220;
      t220 = this[S$0.__ReferenceWeb__ref];
      return t220 == null ? dart.throw(new _internal.LateError.fieldNI("_ref")) : t220;
    }
    set [S$0._ref](_ref$35param) {
      this[S$0.__ReferenceWeb__ref] = _ref$35param;
    }
    delete() {
      return errors.guard(T$.FutureOfvoid(), dart.bind(this[S$0._ref], 'delete'));
    }
    getDownloadURL() {
      return errors.guard(T$.FutureOfString(), dart.fn(() => async.async(core.String, (function*() {
        let uri = (yield this[S$0._ref].getDownloadURL());
        return uri.toString();
      }).bind(this)), T$.VoidToFutureOfString()));
    }
    getMetadata() {
      return errors.guard(T$.FutureOfFullMetadata(), dart.fn(() => async.async(full_metadata.FullMetadata, (function*() {
        let fullMetadata = (yield this[S$0._ref].getMetadata());
        return metadata$.fbFullMetadataToFullMetadata(fullMetadata);
      }).bind(this)), T$.VoidToFutureOfFullMetadata()));
    }
    list(options = null) {
      return async.async(platform_interface_list_result.ListResultPlatform, (function* list$() {
        return errors.guard(T$.FutureOrOfListResultPlatform(), dart.fn(() => async.async(list_result_web.ListResultWeb, (function*() {
          let listResult = (yield this[S$0._ref].list(list.listOptionsToFbListOptions(options)));
          return list.fbListResultToListResultWeb(this.storage, listResult);
        }).bind(this)), T$.VoidToFutureOfListResultWeb()));
      }).bind(this));
    }
    listAll() {
      return errors.guard(T$.FutureOfListResultPlatform(), dart.fn(() => async.async(list_result_web.ListResultWeb, (function*() {
        let listResult = (yield this[S$0._ref].listAll());
        return list.fbListResultToListResultWeb(this.storage, listResult);
      }).bind(this)), T$.VoidToFutureOfListResultWeb()));
    }
    getData(maxSize, opts) {
      let readBytes = opts && 'readBytes' in opts ? opts.readBytes : C[260] || CT.C260;
      return async.async(T$.Uint8ListN(), (function* getData() {
        if (maxSize > 0) {
          let metadata = (yield this.getMetadata());
          if (dart.nullCheck(metadata.size) > maxSize) {
            return null;
          }
        }
        return errors.guard(T$.FutureOrOfUint8ListN(), dart.fn(() => async.async(typed_data.Uint8List, (function*() {
          let url = (yield this.getDownloadURL());
          return readBytes(core.Uri.parse(url));
        }).bind(this)), T$.VoidToFutureOfUint8List()));
      }).bind(this));
    }
    putData(data, metadata = null) {
      return new task_web.TaskWeb.new(this, this[S$0._ref].put(data, metadata$.settableMetadataToFbUploadMetadata(this[S$0._cache].store(metadata))));
    }
    putBlob(data, metadata = null) {
      if (!html.Blob.is(data)) dart.assertFailed("data must be a dart:html Blob object.", I[155], 159, 12, "data is html.Blob");
      return new task_web.TaskWeb.new(this, this[S$0._ref].put(data, metadata$.settableMetadataToFbUploadMetadata(this[S$0._cache].store(metadata))));
    }
    putString(data, format, metadata = null) {
      let _data = data;
      if (format === put_string_format.PutStringFormat.base64) {
        _data = convert.base64Decode(data);
      }
      return new task_web.TaskWeb.new(this, this[S$0._ref].put(_data, metadata$.settableMetadataToFbUploadMetadata(this[S$0._cache].store(metadata))));
    }
    updateMetadata(metadata) {
      return errors.guard(T$.FutureOfFullMetadata(), dart.fn(() => async.async(full_metadata.FullMetadata, (function*() {
        let fullMetadata = (yield this[S$0._ref].updateMetadata(metadata$.settableMetadataToFbSettableMetadata(this[S$0._cache].store(metadata))));
        return metadata$.fbFullMetadataToFullMetadata(fullMetadata);
      }).bind(this)), T$.VoidToFutureOfFullMetadata()));
    }
  };
  (reference_web.ReferenceWeb.new = function(storage, path) {
    this[S$0.__ReferenceWeb__ref] = null;
    this[S$0._cache] = new metadata_cache.SettableMetadataCache.new();
    this[S$0._path$2] = path;
    reference_web.ReferenceWeb.__proto__.new.call(this, storage, path);
    if (this[S$0._path$2][S$.$startsWith](reference_web._storageUrlPrefix)) {
      this[S$0._ref] = storage.delegate.refFromURL(this[S$0._path$2]);
    } else {
      this[S$0._ref] = storage.delegate.ref(this[S$0._path$2]);
    }
  }).prototype = reference_web.ReferenceWeb.prototype;
  dart.addTypeTests(reference_web.ReferenceWeb);
  dart.addTypeCaches(reference_web.ReferenceWeb);
  dart.setMethodSignature(reference_web.ReferenceWeb, () => ({
    __proto__: dart.getMethods(reference_web.ReferenceWeb.__proto__),
    getData: dart.fnType(async.Future$(dart.nullable(typed_data.Uint8List)), [core.int], {readBytes: dart.fnType(async.Future$(typed_data.Uint8List), [core.Uri])}, {})
  }));
  dart.setGetterSignature(reference_web.ReferenceWeb, () => ({
    __proto__: dart.getGetters(reference_web.ReferenceWeb.__proto__),
    [S$0._ref]: storage.StorageReference
  }));
  dart.setSetterSignature(reference_web.ReferenceWeb, () => ({
    __proto__: dart.getSetters(reference_web.ReferenceWeb.__proto__),
    [S$0._ref]: storage.StorageReference
  }));
  dart.setLibraryUri(reference_web.ReferenceWeb, I[157]);
  dart.setFieldSignature(reference_web.ReferenceWeb, () => ({
    __proto__: dart.getFields(reference_web.ReferenceWeb.__proto__),
    [S$0.__ReferenceWeb__ref]: dart.fieldType(dart.nullable(storage.StorageReference)),
    [S$0._cache]: dart.finalFieldType(metadata_cache.SettableMetadataCache),
    [S$0._path$2]: dart.finalFieldType(core.String)
  }));
  dart.defineLazy(reference_web, {
    /*reference_web._storageUrlPrefix*/get _storageUrlPrefix() {
      return core.RegExp.new("^(?:gs|https?):\\//");
    }
  }, false);
  errors.guard = function guard(R, cb) {
    return _flutterfire_internals.guardWebExceptions(R, cb, {plugin: "firebase_storage", codeParser: dart.fn(code => code[S$.$split]("/")[S$0.$last], T$.StringToString()), messageParser: dart.fn((code, message) => {
        let t220;
        t220 = errors._errorCodeToMessage[S$.$_get](code);
        return t220 == null ? message : t220;
      }, T$.StringAndStringToString())});
  };
  dart.defineLazy(errors, {
    /*errors._errorCodeToMessage*/get _errorCodeToMessage() {
      return new (T$.IdentityMapOfString$StringN()).from(["unauthorized", "User is not authorized to perform the desired action.", "object-not-found", "No object exists at the desired reference.", "invalid-argument", null, "canceled", null]);
    },
    set _errorCodeToMessage(value) {}
  }, false);
  const getImageFromSource = Symbol("getImageFromSource");
  const getVideo = Symbol("getVideo");
  image_picker_platform.CameraDelegatingImagePickerPlatform = class CameraDelegatingImagePickerPlatform extends image_picker_platform.ImagePickerPlatform {
    get cameraDelegate() {
      return this[S$0.cameraDelegate];
    }
    set cameraDelegate(value) {
      this[S$0.cameraDelegate] = value;
    }
    supportsImageSource(source) {
      if (source === image_source.ImageSource.camera) {
        return this.cameraDelegate != null;
      }
      return super.supportsImageSource(source);
    }
    getImageFromSource(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let options = opts && 'options' in opts ? opts.options : C[63] || CT.C63;
      return async.async(T$.XFileN(), (function* getImageFromSource$() {
        if (source === image_source.ImageSource.camera) {
          let delegate = this.cameraDelegate;
          if (delegate == null) {
            dart.throw(new core.StateError.new("This implementation of ImagePickerPlatform requires a " + "\"cameraDelegate\" in order to use ImageSource.camera"));
          }
          return delegate.takePhoto({options: new camera_delegate.ImagePickerCameraDelegateOptions.new({preferredCameraDevice: options.preferredCameraDevice})});
        }
        return this[getImageFromSource]({source: source, options: options});
      }).bind(this));
    }
    getVideo(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      let maxDuration = opts && 'maxDuration' in opts ? opts.maxDuration : null;
      return async.async(T$.XFileN(), (function* getVideo$() {
        if (source === image_source.ImageSource.camera) {
          let delegate = this.cameraDelegate;
          if (delegate == null) {
            dart.throw(new core.StateError.new("This implementation of ImagePickerPlatform requires a " + "\"cameraDelegate\" in order to use ImageSource.camera"));
          }
          return delegate.takeVideo({options: new camera_delegate.ImagePickerCameraDelegateOptions.new({preferredCameraDevice: preferredCameraDevice, maxVideoDuration: maxDuration})});
        }
        return this[getVideo]({source: source, preferredCameraDevice: preferredCameraDevice, maxDuration: maxDuration});
      }).bind(this));
    }
    [getImageFromSource](opts) {
      return super.getImageFromSource(opts);
    }
    [getVideo](opts) {
      return super.getVideo(opts);
    }
  };
  (image_picker_platform.CameraDelegatingImagePickerPlatform.new = function() {
    this[S$0.cameraDelegate] = null;
    image_picker_platform.CameraDelegatingImagePickerPlatform.__proto__.new.call(this);
    ;
  }).prototype = image_picker_platform.CameraDelegatingImagePickerPlatform.prototype;
  dart.addTypeTests(image_picker_platform.CameraDelegatingImagePickerPlatform);
  dart.addTypeCaches(image_picker_platform.CameraDelegatingImagePickerPlatform);
  dart.setLibraryUri(image_picker_platform.CameraDelegatingImagePickerPlatform, I[22]);
  dart.setFieldSignature(image_picker_platform.CameraDelegatingImagePickerPlatform, () => ({
    __proto__: dart.getFields(image_picker_platform.CameraDelegatingImagePickerPlatform.__proto__),
    cameraDelegate: dart.fieldType(dart.nullable(camera_delegate.ImagePickerCameraDelegate))
  }));
  dart.defineLazy(types$, {
    /*types$.kTypeImage*/get kTypeImage() {
      return "image";
    },
    /*types$.kTypeVideo*/get kTypeVideo() {
      return "video";
    },
    /*types$.kTypeMedia*/get kTypeMedia() {
      return "media";
    }
  }, false);
  mime_shared.MimeMultipart = class MimeMultipart extends async.Stream$(core.List$(core.int)) {};
  (mime_shared.MimeMultipart.new = function() {
    mime_shared.MimeMultipart.__proto__.new.call(this);
    ;
  }).prototype = mime_shared.MimeMultipart.prototype;
  dart.addTypeTests(mime_shared.MimeMultipart);
  dart.addTypeCaches(mime_shared.MimeMultipart);
  dart.setLibraryUri(mime_shared.MimeMultipart, I[158]);
  mime_multipart_transformer.MimeMultipartTransformer = class MimeMultipartTransformer extends async.StreamTransformerBase$(core.List$(core.int), mime_shared.MimeMultipart) {
    static ['_#new#tearOff'](boundary) {
      return new mime_multipart_transformer.MimeMultipartTransformer.new(boundary);
    }
    bind(stream) {
      T$.StreamOfListOfint().as(stream);
      return new bound_multipart_stream.BoundMultipartStream.new(this[S$0._boundary], stream).stream;
    }
  };
  (mime_multipart_transformer.MimeMultipartTransformer.new = function(boundary) {
    this[S$0._boundary] = mime_multipart_transformer._getBoundary(boundary);
    mime_multipart_transformer.MimeMultipartTransformer.__proto__.new.call(this);
    ;
  }).prototype = mime_multipart_transformer.MimeMultipartTransformer.prototype;
  dart.addTypeTests(mime_multipart_transformer.MimeMultipartTransformer);
  dart.addTypeCaches(mime_multipart_transformer.MimeMultipartTransformer);
  dart.setMethodSignature(mime_multipart_transformer.MimeMultipartTransformer, () => ({
    __proto__: dart.getMethods(mime_multipart_transformer.MimeMultipartTransformer.__proto__),
    bind: dart.fnType(async.Stream$(mime_shared.MimeMultipart), [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(mime_multipart_transformer.MimeMultipartTransformer, I[159]);
  dart.setFieldSignature(mime_multipart_transformer.MimeMultipartTransformer, () => ({
    __proto__: dart.getFields(mime_multipart_transformer.MimeMultipartTransformer.__proto__),
    [S$0._boundary]: dart.finalFieldType(core.List$(core.int))
  }));
  mime_multipart_transformer._getBoundary = function _getBoundary(boundary) {
    let charCodes = boundary[S$0.$codeUnits];
    let boundaryList = _native_typed_data.NativeUint8List.new(4 + charCodes[S$.$length]);
    boundaryList[S$.$_set](0, 13);
    boundaryList[S$.$_set](1, 10);
    boundaryList[S$.$_set](2, 45);
    boundaryList[S$.$_set](3, 45);
    boundaryList[S$0.$setRange](4, 4 + charCodes[S$.$length], charCodes);
    return boundaryList;
  };
  mime_shared.MimeMultipartException = class MimeMultipartException extends core.Object {
    get message() {
      return this[S$0.message$1];
    }
    set message(value) {
      super.message = value;
    }
    static ['_#new#tearOff'](message = "") {
      return new mime_shared.MimeMultipartException.new(message);
    }
    toString() {
      return "MimeMultipartException: " + this.message;
    }
  };
  (mime_shared.MimeMultipartException.new = function(message = "") {
    this[S$0.message$1] = message;
    ;
  }).prototype = mime_shared.MimeMultipartException.prototype;
  dart.addTypeTests(mime_shared.MimeMultipartException);
  dart.addTypeCaches(mime_shared.MimeMultipartException);
  mime_shared.MimeMultipartException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(mime_shared.MimeMultipartException, I[158]);
  dart.setFieldSignature(mime_shared.MimeMultipartException, () => ({
    __proto__: dart.getFields(mime_shared.MimeMultipartException.__proto__),
    message: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(mime_shared.MimeMultipartException, ['toString']);
  mime_type.MimeTypeResolver = class MimeTypeResolver extends core.Object {
    static ['_#empty#tearOff']() {
      return new mime_type.MimeTypeResolver.empty();
    }
    static ['_#new#tearOff']() {
      return new mime_type.MimeTypeResolver.new();
    }
    get magicNumbersMaxLength() {
      return this[S$0._magicNumbersMaxLength];
    }
    lookup(path, opts) {
      let headerBytes = opts && 'headerBytes' in opts ? opts.headerBytes : null;
      let result = null;
      if (headerBytes != null) {
        result = mime_type.MimeTypeResolver._matchMagic(headerBytes, this[S$0._magicNumbers]);
        if (result != null) return result;
        if (this[S$0._useDefault]) {
          result = mime_type.MimeTypeResolver._matchMagic(headerBytes, magic_number.initialMagicNumbers);
          if (result != null) return result;
        }
      }
      let ext = mime_type.MimeTypeResolver._ext(path);
      result = this[S$0._extensionMap][S$.$_get](ext);
      if (result != null) return result;
      if (this[S$0._useDefault]) {
        result = default_extension_map.defaultExtensionMap[S$.$_get](ext);
        if (result != null) return result;
      }
      return null;
    }
    addExtension(extension, mimeType) {
      this[S$0._extensionMap][S$.$_set](extension, mimeType);
    }
    addMagicNumber(bytes, mimeType, opts) {
      let mask = opts && 'mask' in opts ? opts.mask : null;
      if (mask != null && bytes[S$.$length] !== mask[S$.$length]) {
        dart.throw(new core.ArgumentError.new("Bytes and mask are of different lengths"));
      }
      if (bytes[S$.$length] > this[S$0._magicNumbersMaxLength]) {
        this[S$0._magicNumbersMaxLength] = bytes[S$.$length];
      }
      this[S$0._magicNumbers][S$.$add](new magic_number.MagicNumber.new(mimeType, bytes, {mask: mask}));
    }
    static _matchMagic(headerBytes, magicNumbers) {
      for (let mn of magicNumbers) {
        if (mn.matches(headerBytes)) return mn.mimeType;
      }
      return null;
    }
    static _ext(path) {
      let index = path[S$0.$lastIndexOf](".");
      if (index < 0 || index + 1 >= path.length) return path;
      return path[S$0.$substring](index + 1)[S$.$toLowerCase]();
    }
  };
  (mime_type.MimeTypeResolver.empty = function() {
    this[S$0._extensionMap] = new (T$.IdentityMapOfString$String()).new();
    this[S$0._magicNumbers] = T$.JSArrayOfMagicNumber().of([]);
    this[S$0._useDefault] = false;
    this[S$0._magicNumbersMaxLength] = 0;
    ;
  }).prototype = mime_type.MimeTypeResolver.prototype;
  (mime_type.MimeTypeResolver.new = function() {
    this[S$0._extensionMap] = new (T$.IdentityMapOfString$String()).new();
    this[S$0._magicNumbers] = T$.JSArrayOfMagicNumber().of([]);
    this[S$0._useDefault] = true;
    this[S$0._magicNumbersMaxLength] = 12;
    ;
  }).prototype = mime_type.MimeTypeResolver.prototype;
  dart.addTypeTests(mime_type.MimeTypeResolver);
  dart.addTypeCaches(mime_type.MimeTypeResolver);
  dart.setMethodSignature(mime_type.MimeTypeResolver, () => ({
    __proto__: dart.getMethods(mime_type.MimeTypeResolver.__proto__),
    lookup: dart.fnType(dart.nullable(core.String), [core.String], {headerBytes: dart.nullable(core.List$(core.int))}, {}),
    addExtension: dart.fnType(dart.void, [core.String, core.String]),
    addMagicNumber: dart.fnType(dart.void, [core.List$(core.int), core.String], {mask: dart.nullable(core.List$(core.int))}, {})
  }));
  dart.setStaticMethodSignature(mime_type.MimeTypeResolver, () => ['_matchMagic', '_ext']);
  dart.setGetterSignature(mime_type.MimeTypeResolver, () => ({
    __proto__: dart.getGetters(mime_type.MimeTypeResolver.__proto__),
    magicNumbersMaxLength: core.int
  }));
  dart.setLibraryUri(mime_type.MimeTypeResolver, I[160]);
  dart.setFieldSignature(mime_type.MimeTypeResolver, () => ({
    __proto__: dart.getFields(mime_type.MimeTypeResolver.__proto__),
    [S$0._extensionMap]: dart.finalFieldType(core.Map$(core.String, core.String)),
    [S$0._magicNumbers]: dart.finalFieldType(core.List$(magic_number.MagicNumber)),
    [S$0._useDefault]: dart.finalFieldType(core.bool),
    [S$0._magicNumbersMaxLength]: dart.fieldType(core.int)
  }));
  mime_type.lookupMimeType = function lookupMimeType(path, opts) {
    let headerBytes = opts && 'headerBytes' in opts ? opts.headerBytes : null;
    return mime_type._globalResolver.lookup(path, {headerBytes: headerBytes});
  };
  mime_type.extensionFromMime = function extensionFromMime(mime) {
    mime = mime[S$.$toLowerCase]();
    for (let entry of default_extension_map.defaultExtensionMap[S$0.$entries]) {
      if (default_extension_map.defaultExtensionMap[S$.$_get](entry.key) === mime) {
        return entry.key;
      }
    }
    return mime;
  };
  dart.copyProperties(mime_type, {
    get defaultMagicNumbersMaxLength() {
      return mime_type._globalResolver.magicNumbersMaxLength;
    }
  });
  dart.defineLazy(mime_type, {
    /*mime_type._globalResolver*/get _globalResolver() {
      return new mime_type.MimeTypeResolver.new();
    }
  }, false);
  image_resizer_utils.imageResizeNeeded = function imageResizeNeeded(maxWidth, maxHeight, imageQuality) {
    return imageQuality != null ? image_resizer_utils.isImageQualityValid(imageQuality) : maxWidth != null || maxHeight != null;
  };
  image_resizer_utils.isImageQualityValid = function isImageQualityValid(imageQuality) {
    return imageQuality >= 0 && imageQuality <= 100;
  };
  image_resizer_utils.calculateSizeOfDownScaledImage = function calculateSizeOfDownScaledImage(imageSize, maxWidth, maxHeight) {
    let widthFactor = maxWidth != null ? imageSize.width / dart.notNull(maxWidth) : 1;
    let heightFactor = maxHeight != null ? imageSize.height / dart.notNull(maxHeight) : 1;
    let resizeFactor = math.max(core.double, widthFactor, heightFactor);
    return resizeFactor > 1 ? imageSize['~/'](resizeFactor) : imageSize;
  };
  method_channel_firebase_auth.MethodChannelFirebaseAuth = class MethodChannelFirebaseAuth extends platform_interface_firebase_auth.FirebaseAuthPlatform {
    get currentUser() {
      return this[S$0.currentUser];
    }
    set currentUser(value) {
      this[S$0.currentUser] = value;
    }
    get languageCode() {
      return this[S$0.languageCode];
    }
    set languageCode(value) {
      this[S$0.languageCode] = value;
    }
    [S$0._createBroadcastStream](T) {
      return async.StreamController$(T).broadcast();
    }
    static get instance() {
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.__();
    }
    get pigeonDefault() {
      return new messages$46pigeon.AuthPigeonFirebaseApp.new({appName: this.app.name, tenantId: this.tenantId});
    }
    static ['_#_#tearOff']() {
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.__();
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return new method_channel_firebase_auth.MethodChannelFirebaseAuth.new({app: app});
    }
    sendAuthChangesEvent(appName, userPlatform) {
      if (!(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](appName) != null)) dart.assertFailed(null, I[161], 116, 12, "_userChangesListeners[appName] != null");
      dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](appName)).add(new (T$._ValueWrapperOfUserPlatform()).new(userPlatform));
    }
    [S$0._handleAuthStateChangesListener](appName, $arguments) {
      return async.async(dart.void, function* _handleAuthStateChangesListener() {
        let streamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[S$.$_get](appName));
        let instance = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$_get](appName));
        let multiFactorInstance = method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_get](appName);
        if (multiFactorInstance == null) {
          multiFactorInstance = new method_channel_multi_factor.MethodChannelMultiFactor.new(instance);
          method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_set](appName, multiFactorInstance);
        }
        let userMap = $arguments[S$.$_get]("user");
        if (userMap == null) {
          instance.currentUser = null;
          streamController.add(C[262] || CT.C262);
        } else {
          let user = new method_channel_user.MethodChannelUser.new(instance, multiFactorInstance, messages$46pigeon.PigeonUserDetails.decode(core.Object.as(userMap)));
          instance.currentUser = user;
          streamController.add(new (T$._ValueWrapperOfUserPlatform()).new(instance.currentUser));
        }
      });
    }
    [S$0._handleIdTokenChangesListener](appName, $arguments) {
      return async.async(dart.void, function* _handleIdTokenChangesListener() {
        let idTokenStreamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[S$.$_get](appName));
        let userChangesStreamController = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](appName));
        let instance = dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$_get](appName));
        let multiFactorInstance = method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_get](appName);
        if (multiFactorInstance == null) {
          multiFactorInstance = new method_channel_multi_factor.MethodChannelMultiFactor.new(instance);
          method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances[S$.$_set](appName, multiFactorInstance);
        }
        let userMap = $arguments[S$.$_get]("user");
        if (userMap == null) {
          instance.currentUser = null;
          idTokenStreamController.add(C[262] || CT.C262);
          userChangesStreamController.add(C[262] || CT.C262);
        } else {
          let user = new method_channel_user.MethodChannelUser.new(instance, multiFactorInstance, messages$46pigeon.PigeonUserDetails.decode(core.Object.as(userMap)));
          instance.currentUser = user;
          idTokenStreamController.add(new (T$._ValueWrapperOfUserPlatform()).new(user));
          userChangesStreamController.add(new (T$._ValueWrapperOfUserPlatform()).new(user));
        }
      });
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      return method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$putIfAbsent](app.name, dart.fn(() => new method_channel_firebase_auth.MethodChannelFirebaseAuth.new({app: app}), T$.VoidToMethodChannelFirebaseAuth()));
    }
    setInitialValues(opts) {
      let currentUser = opts && 'currentUser' in opts ? opts.currentUser : null;
      let languageCode = opts && 'languageCode' in opts ? opts.languageCode : null;
      if (currentUser != null) {
        let multiFactor = new method_channel_multi_factor.MethodChannelMultiFactor.new(this);
        this.currentUser = new method_channel_user.MethodChannelUser.new(this, multiFactor, currentUser);
      }
      this.languageCode = languageCode;
      return this;
    }
    useAuthEmulator(host, port) {
      return async.async(dart.void, (function* useAuthEmulator() {
        try {
          yield this[S$0._api$1].useEmulator(this.pigeonDefault, host, port);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    applyActionCode(code) {
      return async.async(dart.void, (function* applyActionCode() {
        try {
          yield this[S$0._api$1].applyActionCode(this.pigeonDefault, code);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    checkActionCode(code) {
      return async.async(action_code_info.ActionCodeInfo, (function* checkActionCode() {
        try {
          let result = (yield this[S$0._api$1].checkActionCode(this.pigeonDefault, code));
          return new action_code_info.ActionCodeInfo.new({operation: result.operation, data: new action_code_info.ActionCodeInfoData.new({email: result.data.email, previousEmail: result.data.previousEmail})});
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    confirmPasswordReset(code, newPassword) {
      return async.async(dart.void, (function* confirmPasswordReset() {
        try {
          yield this[S$0._api$1].confirmPasswordReset(this.pigeonDefault, code, newPassword);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    createUserWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* createUserWithEmailAndPassword() {
        try {
          let result = (yield this[S$0._api$1].createUserWithEmailAndPassword(this.pigeonDefault, email, password));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInAnonymously() {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInAnonymously() {
        try {
          let result = (yield this[S$0._api$1].signInAnonymously(this.pigeonDefault));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCredential() {
        try {
          let result = (yield this[S$0._api$1].signInWithCredential(this.pigeonDefault, credential.asMap()));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithCustomToken(token) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithCustomToken() {
        try {
          let result = (yield this[S$0._api$1].signInWithCustomToken(this.pigeonDefault, token));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailAndPassword(email, password) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailAndPassword() {
        try {
          let result = (yield this[S$0._api$1].signInWithEmailAndPassword(this.pigeonDefault, email, password));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithEmailLink(email, emailLink) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithEmailLink() {
        try {
          let result = (yield this[S$0._api$1].signInWithEmailLink(this.pigeonDefault, email, emailLink));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* signInWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let result = (yield this[S$0._api$1].signInWithProvider(this.pigeonDefault, new messages$46pigeon.PigeonSignInProvider.new({providerId: convertedProvider.providerId, scopes: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.scopes : null, customParameters: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.parameters : null})));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this, result);
          this.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    signInWithPopup(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithPopup() is only supported on web based platforms"));
    }
    signInWithRedirect(provider) {
      dart.throw(new core.UnimplementedError.new("signInWithRedirect() is only supported on web based platforms"));
    }
    signOut() {
      return async.async(dart.void, (function* signOut() {
        try {
          yield this[S$0._api$1].signOut(this.pigeonDefault);
          this.currentUser = null;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    fetchSignInMethodsForEmail(email) {
      return async.async(T$.ListOfString(), (function* fetchSignInMethodsForEmail() {
        try {
          let data = (yield this[S$0._api$1].fetchSignInMethodsForEmail(this.pigeonDefault, email));
          return iterable_extensions['IterableNullableExtension|whereNotNull'](core.String, data)[S$.$toList]();
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    authStateChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* authStateChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[S$.$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    idTokenChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* idTokenChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[S$.$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    userChanges() {
      return new (T$._AsyncStarImplOfUserPlatformN()).new((function* userChanges(stream) {
        if (stream.add(this.currentUser)) return;
        yield;
        if (stream.addStream(dart.nullCheck(method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_get](this.app.name)).stream.map(T$.UserPlatformN(), dart.fn(event => event.value, T$._ValueWrapperOfUserPlatformToUserPlatformN())))) return;
        yield;
      }).bind(this)).stream;
    }
    sendPasswordResetEmail(email, actionCodeSettings = null) {
      return async.async(dart.void, (function* sendPasswordResetEmail() {
        try {
          yield this[S$0._api$1].sendPasswordResetEmail(this.pigeonDefault, email, actionCodeSettings == null ? null : new messages$46pigeon.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendSignInLinkToEmail(email, actionCodeSettings) {
      return async.async(dart.void, (function* sendSignInLinkToEmail() {
        try {
          yield this[S$0._api$1].sendSignInLinkToEmail(this.pigeonDefault, email, new messages$46pigeon.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setLanguageCode(languageCode) {
      return async.async(dart.void, (function* setLanguageCode() {
        try {
          let newLanguageCode = (yield this[S$0._api$1].setLanguageCode(this.pigeonDefault, languageCode));
          this.languageCode = newLanguageCode;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setSettings(opts) {
      let appVerificationDisabledForTesting = opts && 'appVerificationDisabledForTesting' in opts ? opts.appVerificationDisabledForTesting : false;
      let userAccessGroup = opts && 'userAccessGroup' in opts ? opts.userAccessGroup : null;
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let smsCode = opts && 'smsCode' in opts ? opts.smsCode : null;
      let forceRecaptchaFlow = opts && 'forceRecaptchaFlow' in opts ? opts.forceRecaptchaFlow : null;
      return async.async(dart.void, (function* setSettings() {
        if (phoneNumber != null && smsCode == null || phoneNumber == null && smsCode != null) {
          dart.throw(new core.ArgumentError.new("The [smsCode] and the [phoneNumber] must both be either 'null' or a 'String''."));
        }
        try {
          yield this[S$0._api$1].setSettings(this.pigeonDefault, new messages$46pigeon.PigeonFirebaseAuthSettings.new({appVerificationDisabledForTesting: appVerificationDisabledForTesting, userAccessGroup: userAccessGroup, phoneNumber: phoneNumber, smsCode: smsCode, forceRecaptchaFlow: forceRecaptchaFlow}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setPersistence(persistence) {
      dart.throw(new core.UnimplementedError.new("setPersistence() is only supported on web based platforms"));
    }
    verifyPasswordResetCode(code) {
      return async.async(core.String, (function* verifyPasswordResetCode() {
        try {
          let userEmail = (yield this[S$0._api$1].verifyPasswordResetCode(this.pigeonDefault, code));
          return userEmail;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyPhoneNumber(opts) {
      let phoneNumber = opts && 'phoneNumber' in opts ? opts.phoneNumber : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      let verificationCompleted = opts && 'verificationCompleted' in opts ? opts.verificationCompleted : null;
      let verificationFailed = opts && 'verificationFailed' in opts ? opts.verificationFailed : null;
      let codeSent = opts && 'codeSent' in opts ? opts.codeSent : null;
      let codeAutoRetrievalTimeout = opts && 'codeAutoRetrievalTimeout' in opts ? opts.codeAutoRetrievalTimeout : null;
      let autoRetrievedSmsCodeForTesting = opts && 'autoRetrievedSmsCodeForTesting' in opts ? opts.autoRetrievedSmsCodeForTesting : null;
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[9] || CT.C9;
      let forceResendingToken = opts && 'forceResendingToken' in opts ? opts.forceResendingToken : null;
      let multiFactorSession = opts && 'multiFactorSession' in opts ? opts.multiFactorSession : null;
      return async.async(dart.void, (function* verifyPhoneNumber() {
        let t238, t238$;
        if (platform.defaultTargetPlatform === platform.TargetPlatform.macOS) {
          dart.throw(new core.UnimplementedError.new("verifyPhoneNumber() is not available on MacOS platforms."));
        }
        try {
          let eventChannelName = (yield this[S$0._api$1].verifyPhoneNumber(this.pigeonDefault, new messages$46pigeon.PigeonVerifyPhoneNumberRequest.new({phoneNumber: phoneNumber, multiFactorInfoId: (t238 = multiFactorInfo, t238 == null ? null : t238.uid), timeout: timeout.inMilliseconds, forceResendingToken: forceResendingToken, autoRetrievedSmsCodeForTesting: autoRetrievedSmsCodeForTesting, multiFactorSessionId: (t238$ = multiFactorSession, t238$ == null ? null : t238$.id)})));
          exception$['EventChannelExtension|receiveGuardedBroadcastStream'](new platform_channel.EventChannel.new(eventChannelName), {onError: C[261] || CT.C261}).listen(dart.fn($arguments => {
            let t238, t238$, t239, t238$0, t238$1, t239$, t238$2, t238$3;
            let name = dart.dsend($arguments, '_get', ["name"]);
            if (dart.equals(name, "Auth#phoneVerificationCompleted")) {
              let token = core.int.as(dart.dsend($arguments, '_get', ["token"]));
              let smsCode = T$.StringN().as(dart.dsend($arguments, '_get', ["smsCode"]));
              let phoneAuthCredential = phone_auth.PhoneAuthProvider.credentialFromToken(token, {smsCode: smsCode});
              verificationCompleted(phoneAuthCredential);
            } else if (dart.equals(name, "Auth#phoneVerificationFailed")) {
              let error = T$.MapN().as(dart.dsend($arguments, '_get', ["error"]));
              let details = T$.MapN().as((t238 = error, t238 == null ? null : t238[S$.$_get]("details")));
              let exception = new firebase_auth_exception.FirebaseAuthException.new({message: T$.StringN().as((t238$0 = (t238$ = details, t238$ == null ? null : t238$[S$.$_get]("message")), t238$0 == null ? (t239 = error, t239 == null ? null : t239[S$.$_get]("message")) : t238$0)), code: core.String.as((t238$3 = (t238$2 = (t238$1 = details, t238$1 == null ? null : t238$1[S$.$_get]("code")), t238$2 == null ? (t239$ = error, t239$ == null ? null : t239$[S$.$_get]("code")) : t238$2), t238$3 == null ? "unknown" : t238$3))});
              verificationFailed(exception);
            } else if (dart.equals(name, "Auth#phoneCodeSent")) {
              let verificationId = core.String.as(dart.dsend($arguments, '_get', ["verificationId"]));
              let forceResendingToken = T$.intN().as(dart.dsend($arguments, '_get', ["forceResendingToken"]));
              codeSent(verificationId, forceResendingToken);
            } else if (dart.equals(name, "Auth#phoneCodeAutoRetrievalTimeout")) {
              let verificationId = core.String.as(dart.dsend($arguments, '_get', ["verificationId"]));
              codeAutoRetrievalTimeout(verificationId);
            }
          }, T$.dynamicTovoid()));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    revokeTokenWithAuthorizationCode(authorizationCode) {
      return async.async(dart.void, (function* revokeTokenWithAuthorizationCode() {
        if (platform.defaultTargetPlatform === platform.TargetPlatform.macOS || platform.defaultTargetPlatform === platform.TargetPlatform.iOS) {
          try {
            yield this[S$0._api$1].revokeTokenWithAuthorizationCode(this.pigeonDefault, authorizationCode);
          } catch (e$) {
            let e = dart.getThrown(e$);
            let stack = dart.stackTrace(e$);
            if (core.Object.is(e)) {
              exception$0.convertPlatformException(e, stack);
            } else
              throw e$;
          }
        } else {
          dart.throw(new core.UnimplementedError.new("revokeTokenWithAuthorizationCode() is only available on apple platforms."));
        }
      }).bind(this));
    }
  };
  (method_channel_firebase_auth.MethodChannelFirebaseAuth.__ = function() {
    this[S$0._api$1] = new messages$46pigeon.FirebaseAuthHostApi.new();
    this[S$0.currentUser] = null;
    this[S$0.languageCode] = null;
    method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__.new.call(this, {appInstance: null});
    ;
  }).prototype = method_channel_firebase_auth.MethodChannelFirebaseAuth.prototype;
  (method_channel_firebase_auth.MethodChannelFirebaseAuth.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    this[S$0._api$1] = new messages$46pigeon.FirebaseAuthHostApi.new();
    this[S$0.currentUser] = null;
    this[S$0.languageCode] = null;
    method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__.new.call(this, {appInstance: app});
    this[S$0._api$1].registerIdTokenListener(this.pigeonDefault).then(core.Null, dart.fn(channelName => {
      let events = new platform_channel.EventChannel.new(channelName, method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.codec);
      exception$['EventChannelExtension|receiveGuardedBroadcastStream'](events, {onError: C[261] || CT.C261}).listen(dart.fn($arguments => {
        this[S$0._handleIdTokenChangesListener](app.name, core.Map.as($arguments));
      }, T$.dynamicTovoid()));
    }, T$.StringToNull()));
    this[S$0._api$1].registerAuthStateListener(this.pigeonDefault).then(core.Null, dart.fn(channelName => {
      let events = new platform_channel.EventChannel.new(channelName, method_channel_firebase_auth.MethodChannelFirebaseAuth.channel.codec);
      exception$['EventChannelExtension|receiveGuardedBroadcastStream'](events, {onError: C[261] || CT.C261}).listen(dart.fn($arguments => {
        this[S$0._handleAuthStateChangesListener](app.name, core.Map.as($arguments));
      }, T$.dynamicTovoid()));
    }, T$.StringToNull()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners[S$.$_set](app.name, this[S$0._createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners[S$.$_set](app.name, this[S$0._createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
    method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners[S$.$_set](app.name, this[S$0._createBroadcastStream](T$._ValueWrapperOfUserPlatform()));
  }).prototype = method_channel_firebase_auth.MethodChannelFirebaseAuth.prototype;
  dart.addTypeTests(method_channel_firebase_auth.MethodChannelFirebaseAuth);
  dart.addTypeCaches(method_channel_firebase_auth.MethodChannelFirebaseAuth);
  dart.setMethodSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ({
    __proto__: dart.getMethods(method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__),
    [S$0._createBroadcastStream]: dart.gFnType(T => [async.StreamController$(T), []], T => [dart.nullable(core.Object)]),
    [S$0._handleAuthStateChangesListener]: dart.fnType(async.Future$(dart.void), [core.String, core.Map]),
    [S$0._handleIdTokenChangesListener]: dart.fnType(async.Future$(dart.void), [core.String, core.Map]),
    setInitialValues: dart.fnType(method_channel_firebase_auth.MethodChannelFirebaseAuth, [], {currentUser: dart.nullable(messages$46pigeon.PigeonUserDetails), languageCode: dart.nullable(core.String)}, {}),
    verifyPhoneNumber: dart.fnType(async.Future$(dart.void), [], {autoRetrievedSmsCodeForTesting: dart.nullable(core.String), forceResendingToken: dart.nullable(core.int), multiFactorInfo: dart.nullable(platform_interface_multi_factor.MultiFactorInfo), multiFactorSession: dart.nullable(platform_interface_multi_factor.MultiFactorSession), phoneNumber: dart.nullable(core.String), timeout: core.Duration}, {codeAutoRetrievalTimeout: dart.fnType(dart.void, [core.String]), codeSent: dart.fnType(dart.void, [core.String, dart.nullable(core.int)]), verificationCompleted: dart.fnType(dart.void, [phone_auth.PhoneAuthCredential]), verificationFailed: dart.fnType(dart.void, [firebase_auth_exception.FirebaseAuthException])})
  }));
  dart.setGetterSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ({
    __proto__: dart.getGetters(method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__),
    pigeonDefault: messages$46pigeon.AuthPigeonFirebaseApp
  }));
  dart.setStaticGetterSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ['instance']);
  dart.setLibraryUri(method_channel_firebase_auth.MethodChannelFirebaseAuth, I[162]);
  dart.setFieldSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ({
    __proto__: dart.getFields(method_channel_firebase_auth.MethodChannelFirebaseAuth.__proto__),
    [S$0._api$1]: dart.finalFieldType(messages$46pigeon.FirebaseAuthHostApi),
    currentUser: dart.fieldType(dart.nullable(platform_interface_user.UserPlatform)),
    languageCode: dart.fieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(method_channel_firebase_auth.MethodChannelFirebaseAuth, () => ['channel', 'methodChannelFirebaseAuthInstances', '_multiFactorInstances', '_authStateChangesListeners', '_idTokenChangesListeners', '_userChangesListeners']);
  dart.defineLazy(method_channel_firebase_auth.MethodChannelFirebaseAuth, {
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth.channel*/get channel() {
      return C[263] || CT.C263;
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances*/get methodChannelFirebaseAuthInstances() {
      return new (T$.IdentityMapOfString$MethodChannelFirebaseAuth()).new();
    },
    set methodChannelFirebaseAuthInstances(value) {},
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._multiFactorInstances*/get _multiFactorInstances() {
      return new (T$.IdentityMapOfString$MethodChannelMultiFactor()).new();
    },
    set _multiFactorInstances(value) {},
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._authStateChangesListeners*/get _authStateChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._idTokenChangesListeners*/get _idTokenChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    },
    /*method_channel_firebase_auth.MethodChannelFirebaseAuth._userChangesListeners*/get _userChangesListeners() {
      return new (T$.IdentityMapOfString$StreamControllerOf_ValueWrapperOfUserPlatform()).new();
    }
  }, false);
  const _is__ValueWrapper_default = Symbol('_is__ValueWrapper_default');
  method_channel_firebase_auth._ValueWrapper$ = dart.generic(T => {
    class _ValueWrapper extends core.Object {
      get value() {
        return this[S$0.value$2];
      }
      set value(value) {
        super.value = value;
      }
      static ['_#new#tearOff'](T, value) {
        return new (method_channel_firebase_auth._ValueWrapper$(T)).new(value);
      }
      static ['_#absent#tearOff'](T) {
        return new (method_channel_firebase_auth._ValueWrapper$(T)).absent();
      }
    }
    (_ValueWrapper.new = function(value) {
      this[S$0.value$2] = value;
      ;
    }).prototype = _ValueWrapper.prototype;
    (_ValueWrapper.absent = function() {
      this[S$0.value$2] = null;
      ;
    }).prototype = _ValueWrapper.prototype;
    dart.addTypeTests(_ValueWrapper);
    _ValueWrapper.prototype[_is__ValueWrapper_default] = true;
    dart.addTypeCaches(_ValueWrapper);
    dart.setLibraryUri(_ValueWrapper, I[162]);
    dart.setFieldSignature(_ValueWrapper, () => ({
      __proto__: dart.getFields(_ValueWrapper.__proto__),
      value: dart.finalFieldType(dart.nullable(T))
    }));
    return _ValueWrapper;
  });
  method_channel_firebase_auth._ValueWrapper = method_channel_firebase_auth._ValueWrapper$();
  dart.addTypeTests(method_channel_firebase_auth._ValueWrapper, _is__ValueWrapper_default);
  method_channel_multi_factor.MethodChannelMultiFactor = class MethodChannelMultiFactor extends platform_interface_multi_factor.MultiFactorPlatform {
    static ['_#new#tearOff'](auth) {
      return new method_channel_multi_factor.MethodChannelMultiFactor.new(auth);
    }
    get pigeonDefault() {
      return new messages$46pigeon.AuthPigeonFirebaseApp.new({appName: this.auth.app.name, tenantId: this.auth.tenantId});
    }
    getSession() {
      return async.async(platform_interface_multi_factor.MultiFactorSession, (function* getSession() {
        try {
          let pigeonObject = (yield this[S$0._api$2].getSession(this.pigeonDefault));
          return new platform_interface_multi_factor.MultiFactorSession.new(pigeonObject.id);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    enroll(assertion, opts) {
      let displayName = opts && 'displayName' in opts ? opts.displayName : null;
      return async.async(dart.void, (function* enroll() {
        let _assertion = method_channel_multi_factor.MultiFactorAssertion.as(assertion);
        if (phone_auth.PhoneAuthCredential.is(_assertion.credential)) {
          let credential = phone_auth.PhoneAuthCredential.as(dart.nullCheck(_assertion.credential));
          let verificationId = credential.verificationId;
          let verificationCode = credential.smsCode;
          if (verificationCode == null) {
            dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
          }
          if (verificationId == null) {
            dart.throw(new core.ArgumentError.new("verificationId must not be null"));
          }
          try {
            yield this[S$0._api$2].enrollPhone(this.pigeonDefault, new messages$46pigeon.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode}), displayName);
          } catch (e$) {
            let e = dart.getThrown(e$);
            let stack = dart.stackTrace(e$);
            if (core.Object.is(e)) {
              exception$0.convertPlatformException(e, stack);
            } else
              throw e$;
          }
        } else if (method_channel_multi_factor.TotpMultiFactorAssertion.is(_assertion)) {
          try {
            yield this[S$0._api$2].enrollTotp(this.pigeonDefault, _assertion.assertionId, displayName);
          } catch (e$0) {
            let e = dart.getThrown(e$0);
            let stack = dart.stackTrace(e$0);
            if (core.Object.is(e)) {
              exception$0.convertPlatformException(e, stack);
            } else
              throw e$0;
          }
        } else {
          dart.throw(new core.UnimplementedError.new("Credential type " + dart.str(_assertion.credential) + " is not supported yet"));
        }
      }).bind(this));
    }
    unenroll(opts) {
      let factorUid = opts && 'factorUid' in opts ? opts.factorUid : null;
      let multiFactorInfo = opts && 'multiFactorInfo' in opts ? opts.multiFactorInfo : null;
      return async.async(dart.void, (function* unenroll() {
        let t244, t243;
        let uidToUnenroll = (t243 = factorUid, t243 == null ? (t244 = multiFactorInfo, t244 == null ? null : t244.uid) : t243);
        if (uidToUnenroll == null) {
          dart.throw(new core.ArgumentError.new("Either factorUid or multiFactorInfo must not be null"));
        }
        try {
          yield this[S$0._api$2].unenroll(this.pigeonDefault, uidToUnenroll);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getEnrolledFactors() {
      return async.async(T$.ListOfMultiFactorInfo(), (function* getEnrolledFactors() {
        try {
          let data = (yield this[S$0._api$2].getEnrolledFactors(this.pigeonDefault));
          return pigeon_helper.multiFactorInfoPigeonToObject(data);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (method_channel_multi_factor.MethodChannelMultiFactor.new = function(auth) {
    this[S$0._api$2] = new messages$46pigeon.MultiFactorUserHostApi.new();
    method_channel_multi_factor.MethodChannelMultiFactor.__proto__.new.call(this, auth);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelMultiFactor.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelMultiFactor);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelMultiFactor);
  dart.setGetterSignature(method_channel_multi_factor.MethodChannelMultiFactor, () => ({
    __proto__: dart.getGetters(method_channel_multi_factor.MethodChannelMultiFactor.__proto__),
    pigeonDefault: messages$46pigeon.AuthPigeonFirebaseApp
  }));
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelMultiFactor, I[163]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelMultiFactor, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelMultiFactor.__proto__),
    [S$0._api$2]: dart.finalFieldType(messages$46pigeon.MultiFactorUserHostApi)
  }));
  method_channel_multi_factor.MethodChannelMultiFactorResolver = class MethodChannelMultiFactorResolver extends platform_interface_multi_factor.MultiFactorResolverPlatform {
    static ['_#new#tearOff'](hints, session, resolverId, auth) {
      return new method_channel_multi_factor.MethodChannelMultiFactorResolver.new(hints, session, resolverId, auth);
    }
    resolveSignIn(assertion) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* resolveSignIn() {
        let _assertion = method_channel_multi_factor.MultiFactorAssertion.as(assertion);
        if (phone_auth.PhoneAuthCredential.is(_assertion.credential)) {
          let credential = phone_auth.PhoneAuthCredential.as(dart.nullCheck(_assertion.credential));
          let verificationId = credential.verificationId;
          let verificationCode = credential.smsCode;
          if (verificationCode == null) {
            dart.throw(new core.ArgumentError.new("verificationCode must not be null"));
          }
          if (verificationId == null) {
            dart.throw(new core.ArgumentError.new("verificationId must not be null"));
          }
          try {
            let result = (yield this[S$0._api$2].resolveSignIn(this[S$0._resolverId], new messages$46pigeon.PigeonPhoneMultiFactorAssertion.new({verificationId: verificationId, verificationCode: verificationCode}), null));
            let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this[S$0._auth$5], result);
            return userCredential;
          } catch (e$) {
            let e = dart.getThrown(e$);
            let stack = dart.stackTrace(e$);
            if (core.Object.is(e)) {
              exception$0.convertPlatformException(e, stack);
            } else
              throw e$;
          }
        } else if (method_channel_multi_factor.TotpMultiFactorAssertion.is(_assertion)) {
          try {
            let result = (yield this[S$0._api$2].resolveSignIn(this[S$0._resolverId], null, _assertion.assertionId));
            let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this[S$0._auth$5], result);
            return userCredential;
          } catch (e$0) {
            let e = dart.getThrown(e$0);
            let stack = dart.stackTrace(e$0);
            if (core.Object.is(e)) {
              exception$0.convertPlatformException(e, stack);
            } else
              throw e$0;
          }
        } else {
          dart.throw(new core.UnimplementedError.new("Credential type " + dart.str(_assertion.credential) + " is not supported yet"));
        }
      }).bind(this));
    }
  };
  (method_channel_multi_factor.MethodChannelMultiFactorResolver.new = function(hints, session, resolverId, auth) {
    this[S$0._api$2] = new messages$46pigeon.MultiFactoResolverHostApi.new();
    this[S$0._resolverId] = resolverId;
    this[S$0._auth$5] = auth;
    method_channel_multi_factor.MethodChannelMultiFactorResolver.__proto__.new.call(this, hints, session);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelMultiFactorResolver.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelMultiFactorResolver);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelMultiFactorResolver);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelMultiFactorResolver, I[163]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelMultiFactorResolver, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelMultiFactorResolver.__proto__),
    [S$0._resolverId]: dart.finalFieldType(core.String),
    [S$0._auth$5]: dart.finalFieldType(method_channel_firebase_auth.MethodChannelFirebaseAuth),
    [S$0._api$2]: dart.finalFieldType(messages$46pigeon.MultiFactoResolverHostApi)
  }));
  method_channel_multi_factor.MultiFactorAssertion = class MultiFactorAssertion extends platform_interface_multi_factor.MultiFactorAssertionPlatform {
    get credential() {
      return this[S$0.credential$3];
    }
    set credential(value) {
      super.credential = value;
    }
    static ['_#new#tearOff'](credential) {
      return new method_channel_multi_factor.MultiFactorAssertion.new(credential);
    }
  };
  (method_channel_multi_factor.MultiFactorAssertion.new = function(credential) {
    this[S$0.credential$3] = credential;
    method_channel_multi_factor.MultiFactorAssertion.__proto__.new.call(this);
    ;
  }).prototype = method_channel_multi_factor.MultiFactorAssertion.prototype;
  dart.addTypeTests(method_channel_multi_factor.MultiFactorAssertion);
  dart.addTypeCaches(method_channel_multi_factor.MultiFactorAssertion);
  dart.setLibraryUri(method_channel_multi_factor.MultiFactorAssertion, I[163]);
  dart.setFieldSignature(method_channel_multi_factor.MultiFactorAssertion, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MultiFactorAssertion.__proto__),
    credential: dart.finalFieldType(dart.nullable(auth_credential.AuthCredential))
  }));
  method_channel_multi_factor.PhoneMultiFactorAssertion = class PhoneMultiFactorAssertion extends method_channel_multi_factor.MultiFactorAssertion {
    static ['_#new#tearOff'](credential) {
      return new method_channel_multi_factor.PhoneMultiFactorAssertion.new(credential);
    }
  };
  (method_channel_multi_factor.PhoneMultiFactorAssertion.new = function(credential) {
    method_channel_multi_factor.PhoneMultiFactorAssertion.__proto__.new.call(this, credential);
    ;
  }).prototype = method_channel_multi_factor.PhoneMultiFactorAssertion.prototype;
  dart.addTypeTests(method_channel_multi_factor.PhoneMultiFactorAssertion);
  dart.addTypeCaches(method_channel_multi_factor.PhoneMultiFactorAssertion);
  dart.setLibraryUri(method_channel_multi_factor.PhoneMultiFactorAssertion, I[163]);
  method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator = class MethodChannelPhoneMultiFactorGenerator extends platform_interface_multi_factor.PhoneMultiFactorGeneratorPlatform {
    getAssertion(credential) {
      return new method_channel_multi_factor.PhoneMultiFactorAssertion.new(credential);
    }
    static ['_#new#tearOff']() {
      return new method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new();
    }
  };
  (method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.new = function() {
    method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.__proto__.new.call(this);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelPhoneMultiFactorGenerator, I[163]);
  method_channel_multi_factor.TotpMultiFactorAssertion = class TotpMultiFactorAssertion extends method_channel_multi_factor.MultiFactorAssertion {
    get assertionId() {
      return this[S$0.assertionId];
    }
    set assertionId(value) {
      super.assertionId = value;
    }
    static ['_#new#tearOff'](assertionId) {
      return new method_channel_multi_factor.TotpMultiFactorAssertion.new(assertionId);
    }
  };
  (method_channel_multi_factor.TotpMultiFactorAssertion.new = function(assertionId) {
    this[S$0.assertionId] = assertionId;
    method_channel_multi_factor.TotpMultiFactorAssertion.__proto__.new.call(this, null);
    ;
  }).prototype = method_channel_multi_factor.TotpMultiFactorAssertion.prototype;
  dart.addTypeTests(method_channel_multi_factor.TotpMultiFactorAssertion);
  dart.addTypeCaches(method_channel_multi_factor.TotpMultiFactorAssertion);
  dart.setLibraryUri(method_channel_multi_factor.TotpMultiFactorAssertion, I[163]);
  dart.setFieldSignature(method_channel_multi_factor.TotpMultiFactorAssertion, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.TotpMultiFactorAssertion.__proto__),
    assertionId: dart.finalFieldType(core.String)
  }));
  method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator = class MethodChannelTotpMultiFactorGenerator extends platform_interface_multi_factor.TotpMultiFactorGeneratorPlatform {
    generateSecret(session) {
      return async.async(platform_interface_multi_factor.TotpSecretPlatform, (function* generateSecret() {
        let pigeonSecret = (yield this[S$0._api$2].generateSecret(session.id));
        return new method_channel_multi_factor.MethodChannelTotpSecret.new(pigeonSecret.codeIntervalSeconds, pigeonSecret.codeLength, pigeonSecret.enrollmentCompletionDeadline != null ? new core.DateTime.fromMillisecondsSinceEpoch(dart.nullCheck(pigeonSecret.enrollmentCompletionDeadline)) : null, pigeonSecret.hashingAlgorithm, pigeonSecret.secretKey);
      }).bind(this));
    }
    getAssertionForEnrollment(secret, oneTimePassword) {
      return async.async(platform_interface_multi_factor.MultiFactorAssertionPlatform, (function* getAssertionForEnrollment() {
        let totpAssertionId = (yield this[S$0._api$2].getAssertionForEnrollment(secret.secretKey, oneTimePassword));
        return new method_channel_multi_factor.TotpMultiFactorAssertion.new(totpAssertionId);
      }).bind(this));
    }
    getAssertionForSignIn(enrollmentId, oneTimePassword) {
      return async.async(platform_interface_multi_factor.MultiFactorAssertionPlatform, (function* getAssertionForSignIn() {
        let totpAssertionId = (yield this[S$0._api$2].getAssertionForSignIn(enrollmentId, oneTimePassword));
        return new method_channel_multi_factor.TotpMultiFactorAssertion.new(totpAssertionId);
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.new();
    }
  };
  (method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.new = function() {
    this[S$0._api$2] = new messages$46pigeon.MultiFactorTotpHostApi.new();
    method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.__proto__.new.call(this);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator, I[163]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelTotpMultiFactorGenerator.__proto__),
    [S$0._api$2]: dart.finalFieldType(messages$46pigeon.MultiFactorTotpHostApi)
  }));
  method_channel_multi_factor.MethodChannelTotpSecret = class MethodChannelTotpSecret extends platform_interface_multi_factor.TotpSecretPlatform {
    static ['_#new#tearOff'](codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
      return new method_channel_multi_factor.MethodChannelTotpSecret.new(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey);
    }
    generateQrCodeUrl(opts) {
      let accountName = opts && 'accountName' in opts ? opts.accountName : null;
      let issuer = opts && 'issuer' in opts ? opts.issuer : null;
      return async.async(core.String, (function* generateQrCodeUrl() {
        let pigeonResponse = (yield this[S$0._api$2].generateQrCodeUrl(this.secretKey, accountName, issuer));
        return pigeonResponse;
      }).bind(this));
    }
    openInOtpApp(qrCodeUrl) {
      return async.async(dart.void, (function* openInOtpApp() {
        yield this[S$0._api$2].openInOtpApp(this.secretKey, qrCodeUrl);
      }).bind(this));
    }
  };
  (method_channel_multi_factor.MethodChannelTotpSecret.new = function(codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey) {
    this[S$0._api$2] = new messages$46pigeon.MultiFactorTotpSecretHostApi.new();
    method_channel_multi_factor.MethodChannelTotpSecret.__proto__.new.call(this, codeIntervalSeconds, codeLength, enrollmentCompletionDeadline, hashingAlgorithm, secretKey);
    ;
  }).prototype = method_channel_multi_factor.MethodChannelTotpSecret.prototype;
  dart.addTypeTests(method_channel_multi_factor.MethodChannelTotpSecret);
  dart.addTypeCaches(method_channel_multi_factor.MethodChannelTotpSecret);
  dart.setLibraryUri(method_channel_multi_factor.MethodChannelTotpSecret, I[163]);
  dart.setFieldSignature(method_channel_multi_factor.MethodChannelTotpSecret, () => ({
    __proto__: dart.getFields(method_channel_multi_factor.MethodChannelTotpSecret.__proto__),
    [S$0._api$2]: dart.finalFieldType(messages$46pigeon.MultiFactorTotpSecretHostApi)
  }));
  firebase_storage.FirebaseStorage = class FirebaseStorage extends firebase_core_platform_interface.FirebasePluginPlatform {
    get app() {
      return this[S$0.app$2];
    }
    set app(value) {
      this[S$0.app$2] = value;
    }
    get bucket() {
      return this[S$0.bucket$1];
    }
    set bucket(value) {
      this[S$0.bucket$1] = value;
    }
    static ['_#_#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return new firebase_storage.FirebaseStorage.__({app: app, bucket: bucket});
    }
    get [S$0._delegate$11]() {
      let t247;
      t247 = this[S$0._delegatePackingProperty$2];
      return t247 == null ? this[S$0._delegatePackingProperty$2] = platform_interface_firebase_storage.FirebaseStoragePlatform.instanceFor({app: this.app, bucket: this.bucket}) : t247;
    }
    get maxOperationRetryTime() {
      return new core.Duration.new({milliseconds: this[S$0._delegate$11].maxOperationRetryTime});
    }
    get maxUploadRetryTime() {
      return new core.Duration.new({milliseconds: this[S$0._delegate$11].maxUploadRetryTime});
    }
    get maxDownloadRetryTime() {
      return new core.Duration.new({milliseconds: this[S$0._delegate$11].maxDownloadRetryTime});
    }
    static get instance() {
      return firebase_storage.FirebaseStorage.instanceFor({app: firebase_core.Firebase.app()});
    }
    static instanceFor(opts) {
      let t247;
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      app == null ? app = firebase_core.Firebase.app() : null;
      if (bucket == null && app.options.storageBucket == null) {
        if (app.name === "[DEFAULT]") {
          firebase_storage._throwNoBucketError("No default storage bucket could be found. Ensure you have correctly followed the Getting Started guide.");
        } else {
          firebase_storage._throwNoBucketError("No storage bucket could be found for the app '" + app.name + "'. Ensure you have set the [storageBucket] on [FirebaseOptions] whilst initializing the secondary Firebase app.");
        }
      }
      let _bucket = (t247 = bucket, t247 == null ? dart.nullCheck(app.options.storageBucket) : t247);
      if (_bucket[S$.$startsWith]("gs://")) {
        _bucket = _bucket[S$.$replaceFirst]("gs://", "");
      }
      let key = app.name + "|" + _bucket;
      if (firebase_storage.FirebaseStorage._cachedInstances[S$.$containsKey](key)) {
        return dart.nullCheck(firebase_storage.FirebaseStorage._cachedInstances[S$.$_get](key));
      }
      let newInstance = new firebase_storage.FirebaseStorage.__({app: app, bucket: _bucket});
      firebase_storage.FirebaseStorage._cachedInstances[S$.$_set](key, newInstance);
      return newInstance;
    }
    ref(path = null) {
      path == null ? path = "/" : null;
      return new firebase_storage.Reference.__(this, this[S$0._delegate$11].ref(path[S$.$isEmpty] ? "/" : path));
    }
    refFromURL(url) {
      if (!(url[S$.$startsWith]("gs://") || url[S$.$startsWith]("http"))) dart.assertFailed("'a url must start with 'gs://' or 'https://'", I[164], 112, 12, "url.startsWith('gs://') || url.startsWith('http')");
      let bucket = null;
      let path = null;
      if (url[S$.$startsWith]("http")) {
        let parts = utils$2.partsFromHttpUrl(url);
        if (!(parts != null)) dart.assertFailed("url could not be parsed, ensure it's a valid storage url", I[164], 121, 14, "parts != null");
        bucket = dart.nullCheck(parts)[S$.$_get]("bucket");
        path = parts[S$.$_get]("path");
      } else {
        bucket = utils$2.bucketFromGoogleStorageUrl(url);
        path = utils$2.pathFromGoogleStorageUrl(url);
      }
      return firebase_storage.FirebaseStorage.instanceFor({app: this.app, bucket: "gs://" + dart.str(bucket)}).ref(path);
    }
    setMaxOperationRetryTime(time) {
      if (!!time.isNegative) dart.assertFailed(null, I[164], 137, 12, "!time.isNegative");
      return this[S$0._delegate$11].setMaxOperationRetryTime(time.inMilliseconds);
    }
    setMaxUploadRetryTime(time) {
      if (!!time.isNegative) dart.assertFailed(null, I[164], 143, 12, "!time.isNegative");
      return this[S$0._delegate$11].setMaxUploadRetryTime(time.inMilliseconds);
    }
    setMaxDownloadRetryTime(time) {
      if (!!time.isNegative) dart.assertFailed(null, I[164], 149, 12, "!time.isNegative");
      return this[S$0._delegate$11].setMaxDownloadRetryTime(time.inMilliseconds);
    }
    useEmulator(opts) {
      let host = opts && 'host' in opts ? opts.host : null;
      let port = opts && 'port' in opts ? opts.port : null;
      return async.async(dart.void, (function* useEmulator() {
        if (!host[S$.$isNotEmpty]) dart.assertFailed(null, I[164], 164, 12, "host.isNotEmpty");
        if (!!port[S$0.$isNegative]) dart.assertFailed(null, I[164], 165, 12, "!port.isNegative");
        let mappedHost = host;
        if (platform.defaultTargetPlatform === platform.TargetPlatform.android && false) {
          if (mappedHost === "localhost" || mappedHost === "127.0.0.1") {
            core.print("Mapping Storage Emulator host \"" + mappedHost + "\" to \"10.0.2.2\".");
            mappedHost = "10.0.2.2";
          }
        }
        yield this.useStorageEmulator(host, port);
      }).bind(this));
    }
    useStorageEmulator(host, port, opts) {
      let automaticHostMapping = opts && 'automaticHostMapping' in opts ? opts.automaticHostMapping : true;
      return async.async(dart.void, (function* useStorageEmulator() {
        if (!host[S$.$isNotEmpty]) dart.assertFailed(null, I[164], 189, 12, "host.isNotEmpty");
        if (!!port[S$0.$isNegative]) dart.assertFailed(null, I[164], 190, 12, "!port.isNegative");
        let mappedHost = host;
        if (platform.defaultTargetPlatform === platform.TargetPlatform.android && false) {
          if ((mappedHost === "localhost" || mappedHost === "127.0.0.1") && automaticHostMapping) {
            core.print("Mapping Storage Emulator host \"" + mappedHost + "\" to \"10.0.2.2\".");
            mappedHost = "10.0.2.2";
          }
        }
        yield this[S$0._delegate$11].useStorageEmulator(mappedHost, port);
      }).bind(this));
    }
    _equals(other) {
      if (other == null) return false;
      return firebase_storage.FirebaseStorage.is(other) && other.app.name === this.app.name && other.bucket === this.bucket;
    }
    get hashCode() {
      return core.Object.hash(this.app.name, this.bucket);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_storage.FirebaseStorage)) + "(app: " + this.app.name + ", bucket: " + this.bucket + ")";
    }
  };
  (firebase_storage.FirebaseStorage.__ = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    this[S$0._delegatePackingProperty$2] = null;
    this[S$0.app$2] = app;
    this[S$0.bucket$1] = bucket;
    firebase_storage.FirebaseStorage.__proto__.new.call(this, app.name, "plugins.flutter.io/firebase_storage");
    ;
  }).prototype = firebase_storage.FirebaseStorage.prototype;
  dart.addTypeTests(firebase_storage.FirebaseStorage);
  dart.addTypeCaches(firebase_storage.FirebaseStorage);
  dart.setMethodSignature(firebase_storage.FirebaseStorage, () => ({
    __proto__: dart.getMethods(firebase_storage.FirebaseStorage.__proto__),
    ref: dart.fnType(firebase_storage.Reference, [], [dart.nullable(core.String)]),
    refFromURL: dart.fnType(firebase_storage.Reference, [core.String]),
    setMaxOperationRetryTime: dart.fnType(dart.void, [core.Duration]),
    setMaxUploadRetryTime: dart.fnType(dart.void, [core.Duration]),
    setMaxDownloadRetryTime: dart.fnType(dart.void, [core.Duration]),
    useEmulator: dart.fnType(async.Future$(dart.void), [], {}, {host: core.String, port: core.int}),
    useStorageEmulator: dart.fnType(async.Future$(dart.void), [core.String, core.int], {automaticHostMapping: core.bool}, {})
  }));
  dart.setStaticMethodSignature(firebase_storage.FirebaseStorage, () => ['instanceFor']);
  dart.setGetterSignature(firebase_storage.FirebaseStorage, () => ({
    __proto__: dart.getGetters(firebase_storage.FirebaseStorage.__proto__),
    [S$0._delegate$11]: platform_interface_firebase_storage.FirebaseStoragePlatform,
    maxOperationRetryTime: core.Duration,
    maxUploadRetryTime: core.Duration,
    maxDownloadRetryTime: core.Duration
  }));
  dart.setStaticGetterSignature(firebase_storage.FirebaseStorage, () => ['instance']);
  dart.setLibraryUri(firebase_storage.FirebaseStorage, I[165]);
  dart.setFieldSignature(firebase_storage.FirebaseStorage, () => ({
    __proto__: dart.getFields(firebase_storage.FirebaseStorage.__proto__),
    [S$0._delegatePackingProperty$2]: dart.fieldType(dart.nullable(platform_interface_firebase_storage.FirebaseStoragePlatform)),
    app: dart.fieldType(firebase_core.FirebaseApp),
    bucket: dart.fieldType(core.String)
  }));
  dart.setStaticFieldSignature(firebase_storage.FirebaseStorage, () => ['_cachedInstances']);
  dart.defineExtensionMethods(firebase_storage.FirebaseStorage, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_storage.FirebaseStorage, ['hashCode']);
  dart.defineLazy(firebase_storage.FirebaseStorage, {
    /*firebase_storage.FirebaseStorage._cachedInstances*/get _cachedInstances() {
      return new (T$.IdentityMapOfString$FirebaseStorage()).new();
    }
  }, false);
  firebase_storage.ListResult = class ListResult extends core.Object {
    get storage() {
      return this[S$0.storage$1];
    }
    set storage(value) {
      super.storage = value;
    }
    static ['_#_#tearOff'](storage, _delegate) {
      return new firebase_storage.ListResult.__(storage, _delegate);
    }
    get items() {
      return this[S$0._delegate$11].items[S$.$map](firebase_storage.Reference, dart.fn(referencePlatform => new firebase_storage.Reference.__(this.storage, referencePlatform), T$.ReferencePlatformToReference()))[S$.$toList]();
    }
    get nextPageToken() {
      return this[S$0._delegate$11].nextPageToken;
    }
    get prefixes() {
      return this[S$0._delegate$11].prefixes[S$.$map](firebase_storage.Reference, dart.fn(referencePlatform => new firebase_storage.Reference.__(this.storage, referencePlatform), T$.ReferencePlatformToReference()))[S$.$toList]();
    }
  };
  (firebase_storage.ListResult.__ = function(storage, _delegate) {
    this[S$0.storage$1] = storage;
    this[S$0._delegate$11] = _delegate;
    platform_interface_list_result.ListResultPlatform.verify(this[S$0._delegate$11]);
  }).prototype = firebase_storage.ListResult.prototype;
  dart.addTypeTests(firebase_storage.ListResult);
  dart.addTypeCaches(firebase_storage.ListResult);
  dart.setGetterSignature(firebase_storage.ListResult, () => ({
    __proto__: dart.getGetters(firebase_storage.ListResult.__proto__),
    items: core.List$(firebase_storage.Reference),
    nextPageToken: dart.nullable(core.String),
    prefixes: core.List$(firebase_storage.Reference)
  }));
  dart.setLibraryUri(firebase_storage.ListResult, I[165]);
  dart.setFieldSignature(firebase_storage.ListResult, () => ({
    __proto__: dart.getFields(firebase_storage.ListResult.__proto__),
    [S$0._delegate$11]: dart.fieldType(platform_interface_list_result.ListResultPlatform),
    storage: dart.finalFieldType(firebase_storage.FirebaseStorage)
  }));
  firebase_storage.Reference = class Reference extends core.Object {
    get storage() {
      return this[S$0.storage$2];
    }
    set storage(value) {
      super.storage = value;
    }
    static ['_#_#tearOff'](storage, _delegate) {
      return new firebase_storage.Reference.__(storage, _delegate);
    }
    get bucket() {
      return this[S$0._delegate$11].bucket;
    }
    get fullPath() {
      return this[S$0._delegate$11].fullPath;
    }
    get name() {
      return this[S$0._delegate$11].name;
    }
    get parent() {
      let referenceParentPlatform = this[S$0._delegate$11].parent;
      if (referenceParentPlatform == null) {
        return null;
      }
      return new firebase_storage.Reference.__(this.storage, referenceParentPlatform);
    }
    get root() {
      return new firebase_storage.Reference.__(this.storage, this[S$0._delegate$11].root);
    }
    child(path) {
      return new firebase_storage.Reference.__(this.storage, this[S$0._delegate$11].child(path));
    }
    delete() {
      return this[S$0._delegate$11].delete();
    }
    getDownloadURL() {
      return this[S$0._delegate$11].getDownloadURL();
    }
    getMetadata() {
      return this[S$0._delegate$11].getMetadata();
    }
    list(options = null) {
      return async.async(firebase_storage.ListResult, (function* list() {
        if (!(options == null || options.maxResults == null || dart.nullCheck(options.maxResults) > 0 && dart.nullCheck(options.maxResults) <= 1000)) dart.assertFailed(null, I[166], 75, 12, "options == null ||\n        options.maxResults == null ||\n        options.maxResults! > 0 && options.maxResults! <= 1000");
        return new firebase_storage.ListResult.__(this.storage, yield this[S$0._delegate$11].list(options));
      }).bind(this));
    }
    listAll() {
      return async.async(firebase_storage.ListResult, (function* listAll() {
        return new firebase_storage.ListResult.__(this.storage, yield this[S$0._delegate$11].listAll());
      }).bind(this));
    }
    getData(maxSize = 10485760) {
      return async.async(T$.Uint8ListN(), (function* getData() {
        if (!(maxSize > 0)) dart.assertFailed(null, I[166], 102, 12, "maxSize > 0");
        return this[S$0._delegate$11].getData(maxSize);
      }).bind(this));
    }
    putData(data, metadata = null) {
      return new firebase_storage.UploadTask.__(this.storage, this[S$0._delegate$11].putData(data, metadata));
    }
    putBlob(blob, metadata = null) {
      if (!(blob != null)) dart.assertFailed(null, I[166], 119, 12, "blob != null");
      return new firebase_storage.UploadTask.__(this.storage, this[S$0._delegate$11].putBlob(blob, metadata));
    }
    putFile(file, metadata = null) {
      if (!file.absolute.existsSync()) dart.assertFailed(null, I[166], 127, 12, "file.absolute.existsSync()");
      return new firebase_storage.UploadTask.__(this.storage, this[S$0._delegate$11].putFile(file, metadata));
    }
    putString(data, opts) {
      let format = opts && 'format' in opts ? opts.format : C[265] || CT.C265;
      let metadata = opts && 'metadata' in opts ? opts.metadata : null;
      let _data = data;
      let _format = format;
      let _metadata = metadata;
      if (format === put_string_format.PutStringFormat.raw) {
        _data = convert.base64.encode(convert.utf8.encode(_data));
        _format = put_string_format.PutStringFormat.base64;
      }
      if (format === put_string_format.PutStringFormat.dataUrl) {
        _format = put_string_format.PutStringFormat.base64;
        let uri = core.UriData.fromUri(core.Uri.parse(data));
        if (!uri.isBase64) dart.assertFailed(null, I[166], 160, 14, "uri.isBase64");
        _data = uri.contentText;
        if (_metadata == null && uri.mimeType[S$.$isNotEmpty]) {
          _metadata = new settable_metadata.SettableMetadata.new({contentType: uri.mimeType});
        }
        if ((dart.nullCheck(_metadata).contentType == null || dart.nullCheck(_metadata.contentType)[S$.$isEmpty]) && uri.mimeType[S$.$isNotEmpty]) {
          _metadata = new settable_metadata.SettableMetadata.new({cacheControl: dart.nullCheck(metadata).cacheControl, contentDisposition: metadata.contentDisposition, contentEncoding: metadata.contentEncoding, contentLanguage: metadata.contentLanguage, contentType: uri.mimeType});
        }
      }
      return new firebase_storage.UploadTask.__(this.storage, this[S$0._delegate$11].putString(_data, _format, _metadata));
    }
    updateMetadata(metadata) {
      return this[S$0._delegate$11].updateMetadata(metadata);
    }
    writeToFile(file) {
      return new firebase_storage.DownloadTask.__(this.storage, this[S$0._delegate$11].writeToFile(file));
    }
    _equals(other) {
      if (other == null) return false;
      return firebase_storage.Reference.is(other) && other.fullPath === this.fullPath && other.storage._equals(this.storage);
    }
    get hashCode() {
      return core.Object.hash(this.storage, this.fullPath);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_storage.Reference)) + "(app: " + this.storage.app.name + ", fullPath: " + this.fullPath + ")";
    }
  };
  (firebase_storage.Reference.__ = function(storage, _delegate) {
    this[S$0.storage$2] = storage;
    this[S$0._delegate$11] = _delegate;
    platform_interface_reference.ReferencePlatform.verify(this[S$0._delegate$11]);
  }).prototype = firebase_storage.Reference.prototype;
  dart.addTypeTests(firebase_storage.Reference);
  dart.addTypeCaches(firebase_storage.Reference);
  dart.setMethodSignature(firebase_storage.Reference, () => ({
    __proto__: dart.getMethods(firebase_storage.Reference.__proto__),
    child: dart.fnType(firebase_storage.Reference, [core.String]),
    delete: dart.fnType(async.Future$(dart.void), []),
    getDownloadURL: dart.fnType(async.Future$(core.String), []),
    getMetadata: dart.fnType(async.Future$(full_metadata.FullMetadata), []),
    list: dart.fnType(async.Future$(firebase_storage.ListResult), [], [dart.nullable(list_options.ListOptions)]),
    listAll: dart.fnType(async.Future$(firebase_storage.ListResult), []),
    getData: dart.fnType(async.Future$(dart.nullable(typed_data.Uint8List)), [], [core.int]),
    putData: dart.fnType(firebase_storage.UploadTask, [typed_data.Uint8List], [dart.nullable(settable_metadata.SettableMetadata)]),
    putBlob: dart.fnType(firebase_storage.UploadTask, [dart.dynamic], [dart.nullable(settable_metadata.SettableMetadata)]),
    putFile: dart.fnType(firebase_storage.UploadTask, [io.File], [dart.nullable(settable_metadata.SettableMetadata)]),
    putString: dart.fnType(firebase_storage.UploadTask, [core.String], {format: put_string_format.PutStringFormat, metadata: dart.nullable(settable_metadata.SettableMetadata)}, {}),
    updateMetadata: dart.fnType(async.Future$(full_metadata.FullMetadata), [settable_metadata.SettableMetadata]),
    writeToFile: dart.fnType(firebase_storage.DownloadTask, [io.File])
  }));
  dart.setGetterSignature(firebase_storage.Reference, () => ({
    __proto__: dart.getGetters(firebase_storage.Reference.__proto__),
    bucket: core.String,
    fullPath: core.String,
    name: core.String,
    parent: dart.nullable(firebase_storage.Reference),
    root: firebase_storage.Reference
  }));
  dart.setLibraryUri(firebase_storage.Reference, I[165]);
  dart.setFieldSignature(firebase_storage.Reference, () => ({
    __proto__: dart.getFields(firebase_storage.Reference.__proto__),
    [S$0._delegate$11]: dart.fieldType(platform_interface_reference.ReferencePlatform),
    storage: dart.finalFieldType(firebase_storage.FirebaseStorage)
  }));
  dart.defineExtensionMethods(firebase_storage.Reference, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_storage.Reference, ['hashCode']);
  firebase_storage.Task = class Task extends core.Object {
    get storage() {
      return this[S$0.storage$3];
    }
    set storage(value) {
      super.storage = value;
    }
    get snapshotEvents() {
      return this[S$0._delegate$11].snapshotEvents.map(firebase_storage.TaskSnapshot, dart.fn(snapshotDelegate => new firebase_storage.TaskSnapshot.__(this.storage, snapshotDelegate), T$.TaskSnapshotPlatformToTaskSnapshot()));
    }
    get snapshot() {
      return new firebase_storage.TaskSnapshot.__(this.storage, this[S$0._delegate$11].snapshot);
    }
    pause() {
      return this[S$0._delegate$11].pause();
    }
    resume() {
      return this[S$0._delegate$11].resume();
    }
    cancel() {
      return this[S$0._delegate$11].cancel();
    }
    asStream() {
      return this[S$0._delegate$11].onComplete.asStream().map(firebase_storage.TaskSnapshot, dart.fn(_ => this.snapshot, T$.TaskSnapshotPlatformToTaskSnapshot()));
    }
    catchError(onError, opts) {
      let test = opts && 'test' in opts ? opts.test : null;
      return async.async(firebase_storage.TaskSnapshot, (function* catchError() {
        yield this[S$0._delegate$11].onComplete.catchError(onError, {test: test});
        return this.snapshot;
      }).bind(this));
    }
    then(S, onValue, opts) {
      let onError = opts && 'onError' in opts ? opts.onError : null;
      return this[S$0._delegate$11].onComplete.then(S, dart.fn(_ => onValue(this.snapshot), dart.fnType(async.FutureOr$(S), [platform_interface_task_snapshot.TaskSnapshotPlatform])), {onError: onError});
    }
    whenComplete(action) {
      return async.async(firebase_storage.TaskSnapshot, (function* whenComplete() {
        yield this[S$0._delegate$11].onComplete.whenComplete(action);
        return this.snapshot;
      }).bind(this));
    }
    timeout(timeLimit, opts) {
      let onTimeout = opts && 'onTimeout' in opts ? opts.onTimeout : null;
      T$.VoidToNFutureOrOfTaskSnapshot().as(onTimeout);
      return this[S$0._delegate$11].onComplete.then(firebase_storage.TaskSnapshot, dart.fn(_ => this.snapshot, T$.TaskSnapshotPlatformToTaskSnapshot())).timeout(timeLimit, {onTimeout: onTimeout});
    }
  };
  (firebase_storage.Task.__ = function(storage, _delegate) {
    this[S$0.storage$3] = storage;
    this[S$0._delegate$11] = _delegate;
    platform_interface_task.TaskPlatform.verify(this[S$0._delegate$11]);
  }).prototype = firebase_storage.Task.prototype;
  firebase_storage.Task.prototype[dart.isFuture] = true;
  dart.addTypeTests(firebase_storage.Task);
  dart.addTypeCaches(firebase_storage.Task);
  firebase_storage.Task[dart.implements] = () => [async.Future$(firebase_storage.TaskSnapshot)];
  dart.setMethodSignature(firebase_storage.Task, () => ({
    __proto__: dart.getMethods(firebase_storage.Task.__proto__),
    pause: dart.fnType(async.Future$(core.bool), []),
    resume: dart.fnType(async.Future$(core.bool), []),
    cancel: dart.fnType(async.Future$(core.bool), []),
    asStream: dart.fnType(async.Stream$(firebase_storage.TaskSnapshot), []),
    catchError: dart.fnType(async.Future$(firebase_storage.TaskSnapshot), [core.Function], {test: dart.nullable(dart.fnType(core.bool, [core.Object]))}, {}),
    then: dart.gFnType(S => [async.Future$(S), [dart.fnType(async.FutureOr$(S), [firebase_storage.TaskSnapshot])], {onError: dart.nullable(core.Function)}, {}], S => [dart.nullable(core.Object)]),
    whenComplete: dart.fnType(async.Future$(firebase_storage.TaskSnapshot), [dart.fnType(dart.dynamic, [])]),
    timeout: dart.fnType(async.Future$(firebase_storage.TaskSnapshot), [core.Duration], {onTimeout: dart.nullable(core.Object)}, {})
  }));
  dart.setGetterSignature(firebase_storage.Task, () => ({
    __proto__: dart.getGetters(firebase_storage.Task.__proto__),
    snapshotEvents: async.Stream$(firebase_storage.TaskSnapshot),
    snapshot: firebase_storage.TaskSnapshot
  }));
  dart.setLibraryUri(firebase_storage.Task, I[165]);
  dart.setFieldSignature(firebase_storage.Task, () => ({
    __proto__: dart.getFields(firebase_storage.Task.__proto__),
    [S$0._delegate$11]: dart.fieldType(platform_interface_task.TaskPlatform),
    storage: dart.finalFieldType(firebase_storage.FirebaseStorage)
  }));
  firebase_storage.UploadTask = class UploadTask extends firebase_storage.Task {
    static ['_#_#tearOff'](storage, delegate) {
      return new firebase_storage.UploadTask.__(storage, delegate);
    }
  };
  (firebase_storage.UploadTask.__ = function(storage, delegate) {
    firebase_storage.UploadTask.__proto__.__.call(this, storage, delegate);
    ;
  }).prototype = firebase_storage.UploadTask.prototype;
  dart.addTypeTests(firebase_storage.UploadTask);
  dart.addTypeCaches(firebase_storage.UploadTask);
  dart.setLibraryUri(firebase_storage.UploadTask, I[165]);
  firebase_storage.DownloadTask = class DownloadTask extends firebase_storage.Task {
    static ['_#_#tearOff'](storage, delegate) {
      return new firebase_storage.DownloadTask.__(storage, delegate);
    }
  };
  (firebase_storage.DownloadTask.__ = function(storage, delegate) {
    firebase_storage.DownloadTask.__proto__.__.call(this, storage, delegate);
    ;
  }).prototype = firebase_storage.DownloadTask.prototype;
  dart.addTypeTests(firebase_storage.DownloadTask);
  dart.addTypeCaches(firebase_storage.DownloadTask);
  dart.setLibraryUri(firebase_storage.DownloadTask, I[165]);
  firebase_storage.TaskSnapshot = class TaskSnapshot extends core.Object {
    get storage() {
      return this[S$0.storage$4];
    }
    set storage(value) {
      super.storage = value;
    }
    static ['_#_#tearOff'](storage, _delegate) {
      return new firebase_storage.TaskSnapshot.__(storage, _delegate);
    }
    get bytesTransferred() {
      return this[S$0._delegate$11].bytesTransferred;
    }
    get metadata() {
      return this[S$0._delegate$11].metadata;
    }
    get ref() {
      return new firebase_storage.Reference.__(this.storage, this[S$0._delegate$11].ref);
    }
    get state() {
      return this[S$0._delegate$11].state;
    }
    get totalBytes() {
      return this[S$0._delegate$11].totalBytes;
    }
    _equals(other) {
      if (other == null) return false;
      return firebase_storage.TaskSnapshot.is(other) && other.ref._equals(this.ref) && other.storage._equals(this.storage);
    }
    get hashCode() {
      return core.Object.hash(this.storage, this.ref);
    }
    toString() {
      return dart.str(dart.wrapType(firebase_storage.TaskSnapshot)) + "(ref: " + dart.str(this.ref) + ", state: " + dart.str(this.state) + ")";
    }
  };
  (firebase_storage.TaskSnapshot.__ = function(storage, _delegate) {
    this[S$0.storage$4] = storage;
    this[S$0._delegate$11] = _delegate;
    platform_interface_task_snapshot.TaskSnapshotPlatform.verify(this[S$0._delegate$11]);
  }).prototype = firebase_storage.TaskSnapshot.prototype;
  dart.addTypeTests(firebase_storage.TaskSnapshot);
  dart.addTypeCaches(firebase_storage.TaskSnapshot);
  dart.setGetterSignature(firebase_storage.TaskSnapshot, () => ({
    __proto__: dart.getGetters(firebase_storage.TaskSnapshot.__proto__),
    bytesTransferred: core.int,
    metadata: dart.nullable(full_metadata.FullMetadata),
    ref: firebase_storage.Reference,
    state: task_state.TaskState,
    totalBytes: core.int
  }));
  dart.setLibraryUri(firebase_storage.TaskSnapshot, I[165]);
  dart.setFieldSignature(firebase_storage.TaskSnapshot, () => ({
    __proto__: dart.getFields(firebase_storage.TaskSnapshot.__proto__),
    [S$0._delegate$11]: dart.fieldType(platform_interface_task_snapshot.TaskSnapshotPlatform),
    storage: dart.finalFieldType(firebase_storage.FirebaseStorage)
  }));
  dart.defineExtensionMethods(firebase_storage.TaskSnapshot, ['_equals', 'toString']);
  dart.defineExtensionAccessors(firebase_storage.TaskSnapshot, ['hashCode']);
  firebase_storage._throwNoBucketError = function _throwNoBucketError(message) {
    dart.throw(new firebase_core_platform_interface.FirebaseException.new({plugin: "firebase_storage", code: "no-bucket", message: message}));
  };
  uuid.Uuid = class Uuid extends core.Object {
    get goptions() {
      return this[S$0.goptions];
    }
    set goptions(value) {
      super.goptions = value;
    }
    static ['_#new#tearOff'](opts) {
      let goptions = opts && 'goptions' in opts ? opts.goptions : null;
      return new uuid.Uuid.new({goptions: goptions});
    }
    static parse(uuid, opts) {
      let buffer = opts && 'buffer' in opts ? opts.buffer : null;
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      let validate = opts && 'validate' in opts ? opts.validate : true;
      let validationMode = opts && 'validationMode' in opts ? opts.validationMode : C[266] || CT.C266;
      return parsing.UuidParsing.parse(uuid, {buffer: buffer, offset: offset, validate: validate, validationMode: validationMode});
    }
    static parseAsByteList(uuid, opts) {
      let buffer = opts && 'buffer' in opts ? opts.buffer : null;
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      let validate = opts && 'validate' in opts ? opts.validate : true;
      let validationMode = opts && 'validationMode' in opts ? opts.validationMode : C[266] || CT.C266;
      return parsing.UuidParsing.parseAsByteList(uuid, {buffer: buffer, offset: offset, validate: validate, validationMode: validationMode});
    }
    static unparse(buffer, opts) {
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      return parsing.UuidParsing.unparse(buffer, {offset: offset});
    }
    static isValidUUID(opts) {
      let fromString = opts && 'fromString' in opts ? opts.fromString : "";
      let fromByteList = opts && 'fromByteList' in opts ? opts.fromByteList : null;
      let validationMode = opts && 'validationMode' in opts ? opts.validationMode : C[266] || CT.C266;
      return validation.UuidValidation.isValidUUID({fromString: fromString, fromByteList: fromByteList, validationMode: validationMode});
    }
    v1(opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      let config = opts && 'config' in opts ? opts.config : null;
      if (options != null && options[S$.$isNotEmpty]) {
        config = new data.V1Options.new(T$.intN().as(options[S$.$_get]("clockSeq")), T$.intN().as(options[S$.$_get]("mSecs")), T$.intN().as(options[S$.$_get]("nSecs")), T$.ListNOfint().as(options[S$.$_get]("node")), T$.ListNOfint().as(options[S$.$_get]("seedBytes")));
      }
      return new v1.UuidV1.new({goptions: this.goptions}).generate({options: config});
    }
    v1buffer(buffer, opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      let config = opts && 'config' in opts ? opts.config : null;
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      let result = config != null ? this.v1({config: config}) : this.v1({options: options});
      return parsing.UuidParsing.parse(result, {buffer: buffer, offset: offset});
    }
    v1obj(opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      let config = opts && 'config' in opts ? opts.config : null;
      return config != null ? uuid_value.UuidValue.fromString(this.v1({config: config})) : uuid_value.UuidValue.fromString(this.v1({options: options}));
    }
    v4(opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      let config = opts && 'config' in opts ? opts.config : null;
      if (options != null && options[S$.$isNotEmpty]) {
        let rng = options[S$.$_get]("rng");
        if (options[S$.$_get]("rng") != null && !rng$.RNG.is(options[S$.$_get]("rng"))) {
          rng = new rng$.LegacyRNG.new(core.Function.as(options[S$.$_get]("rng")), T$.MapOfSymbol$dynamic().as(options[S$.$_get]("namedArgs")), core.List.as(options[S$.$_get]("positionalArgs")));
        }
        config = new data.V4Options.new(T$.ListNOfint().as(options[S$.$_get]("random")), T$.RNGN().as(rng));
      }
      return new v4.UuidV4.new({goptions: this.goptions}).generate({options: config});
    }
    v4buffer(buffer, opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      let config = opts && 'config' in opts ? opts.config : null;
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      let result = config != null ? this.v4({config: config}) : this.v4({options: options});
      return parsing.UuidParsing.parse(result, {buffer: buffer, offset: offset});
    }
    v4obj(opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      let config = opts && 'config' in opts ? opts.config : null;
      return config != null ? uuid_value.UuidValue.fromString(this.v4({config: config})) : uuid_value.UuidValue.fromString(this.v4({options: options}));
    }
    v5(namespace, name, opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      let config = opts && 'config' in opts ? opts.config : null;
      if (options != null && options[S$.$isNotEmpty]) {
        let v4config = null;
        config = new data.V5Options.new(T$.boolN().as(options[S$.$_get]("randomNamespace")), v4config);
      }
      return new v5.UuidV5.new({goptions: this.goptions}).generate(namespace, name, {options: config});
    }
    v5buffer(namespace, name, buffer, opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      let config = opts && 'config' in opts ? opts.config : null;
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      let result = config != null ? this.v5(namespace, name, {config: config}) : this.v5(namespace, name, {options: options});
      return parsing.UuidParsing.parse(result, {buffer: buffer, offset: offset});
    }
    v5obj(namespace, name, opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      let config = opts && 'config' in opts ? opts.config : null;
      return config != null ? uuid_value.UuidValue.fromString(this.v5(namespace, name, {config: config})) : uuid_value.UuidValue.fromString(this.v5(namespace, name, {options: options}));
    }
    v6(opts) {
      let config = opts && 'config' in opts ? opts.config : null;
      return new v6.UuidV6.new({goptions: this.goptions}).generate({options: config});
    }
    v6buffer(buffer, opts) {
      let config = opts && 'config' in opts ? opts.config : null;
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      return parsing.UuidParsing.parse(this.v6({config: config}), {buffer: buffer, offset: offset});
    }
    v6obj(opts) {
      let config = opts && 'config' in opts ? opts.config : null;
      return uuid_value.UuidValue.fromString(this.v6({config: config}));
    }
    v7(opts) {
      let config = opts && 'config' in opts ? opts.config : null;
      return new v7.UuidV7.new({goptions: this.goptions}).generate({options: config});
    }
    v7buffer(buffer, opts) {
      let config = opts && 'config' in opts ? opts.config : null;
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      return parsing.UuidParsing.parse(this.v7({config: config}), {buffer: buffer, offset: offset});
    }
    v7obj(opts) {
      let config = opts && 'config' in opts ? opts.config : null;
      return uuid_value.UuidValue.fromString(this.v7({config: config}));
    }
    v8(opts) {
      let config = opts && 'config' in opts ? opts.config : null;
      return new v8.UuidV8.new({goptions: this.goptions}).generate({options: config});
    }
    v8buffer(buffer, opts) {
      let config = opts && 'config' in opts ? opts.config : null;
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      return parsing.UuidParsing.parse(this.v8({config: config}), {buffer: buffer, offset: offset});
    }
    v8obj(opts) {
      let config = opts && 'config' in opts ? opts.config : null;
      return uuid_value.UuidValue.fromString(this.v8({config: config}));
    }
  };
  (uuid.Uuid.new = function(opts) {
    let goptions = opts && 'goptions' in opts ? opts.goptions : null;
    this[S$0.goptions] = goptions;
    ;
  }).prototype = uuid.Uuid.prototype;
  dart.addTypeTests(uuid.Uuid);
  dart.addTypeCaches(uuid.Uuid);
  dart.setMethodSignature(uuid.Uuid, () => ({
    __proto__: dart.getMethods(uuid.Uuid.__proto__),
    v1: dart.fnType(core.String, [], {config: dart.nullable(data.V1Options), options: dart.nullable(core.Map$(core.String, dart.dynamic))}, {}),
    v1buffer: dart.fnType(core.List$(core.int), [core.List$(core.int)], {config: dart.nullable(data.V1Options), offset: core.int, options: dart.nullable(core.Map$(core.String, dart.dynamic))}, {}),
    v1obj: dart.fnType(uuid_value.UuidValue, [], {config: dart.nullable(data.V1Options), options: dart.nullable(core.Map$(core.String, dart.dynamic))}, {}),
    v4: dart.fnType(core.String, [], {config: dart.nullable(data.V4Options), options: dart.nullable(core.Map$(core.String, dart.dynamic))}, {}),
    v4buffer: dart.fnType(core.List$(core.int), [core.List$(core.int)], {config: dart.nullable(data.V4Options), offset: core.int, options: dart.nullable(core.Map$(core.String, dart.dynamic))}, {}),
    v4obj: dart.fnType(uuid_value.UuidValue, [], {config: dart.nullable(data.V4Options), options: dart.nullable(core.Map$(core.String, dart.dynamic))}, {}),
    v5: dart.fnType(core.String, [dart.nullable(core.String), dart.nullable(core.String)], {config: dart.nullable(data.V5Options), options: dart.nullable(core.Map$(core.String, dart.dynamic))}, {}),
    v5buffer: dart.fnType(core.List$(core.int), [dart.nullable(core.String), dart.nullable(core.String), dart.nullable(core.List$(core.int))], {config: dart.nullable(data.V5Options), offset: core.int, options: dart.nullable(core.Map$(core.String, dart.dynamic))}, {}),
    v5obj: dart.fnType(uuid_value.UuidValue, [dart.nullable(core.String), dart.nullable(core.String)], {config: dart.nullable(data.V5Options), options: dart.nullable(core.Map$(core.String, dart.dynamic))}, {}),
    v6: dart.fnType(core.String, [], {config: dart.nullable(data.V6Options)}, {}),
    v6buffer: dart.fnType(core.List$(core.int), [core.List$(core.int)], {config: dart.nullable(data.V6Options), offset: core.int}, {}),
    v6obj: dart.fnType(uuid_value.UuidValue, [], {config: dart.nullable(data.V6Options)}, {}),
    v7: dart.fnType(core.String, [], {config: dart.nullable(data.V7Options)}, {}),
    v7buffer: dart.fnType(core.List$(core.int), [core.List$(core.int)], {config: dart.nullable(data.V7Options), offset: core.int}, {}),
    v7obj: dart.fnType(uuid_value.UuidValue, [], {config: dart.nullable(data.V7Options)}, {}),
    v8: dart.fnType(core.String, [], {config: dart.nullable(data.V8Options)}, {}),
    v8buffer: dart.fnType(core.List$(core.int), [core.List$(core.int)], {config: dart.nullable(data.V8Options), offset: core.int}, {}),
    v8obj: dart.fnType(uuid_value.UuidValue, [], {config: dart.nullable(data.V8Options)}, {})
  }));
  dart.setStaticMethodSignature(uuid.Uuid, () => ['parse', 'parseAsByteList', 'unparse', 'isValidUUID']);
  dart.setLibraryUri(uuid.Uuid, I[167]);
  dart.setFieldSignature(uuid.Uuid, () => ({
    __proto__: dart.getFields(uuid.Uuid.__proto__),
    goptions: dart.finalFieldType(dart.nullable(data.GlobalOptions))
  }));
  dart.setStaticFieldSignature(uuid.Uuid, () => ['NAMESPACE_DNS', 'NAMESPACE_URL', 'NAMESPACE_OID', 'NAMESPACE_X500', 'NAMESPACE_NIL']);
  dart.defineLazy(uuid.Uuid, {
    /*uuid.Uuid.NAMESPACE_DNS*/get NAMESPACE_DNS() {
      return "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
    },
    /*uuid.Uuid.NAMESPACE_URL*/get NAMESPACE_URL() {
      return "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
    },
    /*uuid.Uuid.NAMESPACE_OID*/get NAMESPACE_OID() {
      return "6ba7b812-9dad-11d1-80b4-00c04fd430c8";
    },
    /*uuid.Uuid.NAMESPACE_X500*/get NAMESPACE_X500() {
      return "6ba7b814-9dad-11d1-80b4-00c04fd430c8";
    },
    /*uuid.Uuid.NAMESPACE_NIL*/get NAMESPACE_NIL() {
      return "00000000-0000-0000-0000-000000000000";
    }
  }, false);
  firestore_methods.FireStoreMethods = class FireStoreMethods extends core.Object {
    uploadPost(description, file, uid, username, profImage) {
      return async.async(core.String, (function* uploadPost() {
        let res = "Some error occurred";
        try {
          let photoUrl = (yield new storage_methods.StorageMethods.new().uploadImageToStorage("posts", file, true));
          let postId = (C[163] || CT.C163).v1();
          let post = new post$.Post.new({description: description, uid: uid, username: username, likes: [], postId: postId, datePublished: new core.DateTime.now(), postUrl: photoUrl, profImage: profImage});
          this[S$0._firestore$4].collection("posts").doc(postId).set(post.toJson());
          res = "success";
        } catch (e) {
          let err = dart.getThrown(e);
          if (core.Object.is(err)) {
            res = err[S$.$toString]();
          } else
            throw e;
        }
        return res;
      }).bind(this));
    }
    likePost(postId, uid, likes) {
      return async.async(core.String, (function* likePost() {
        let res = "Some error occurred";
        try {
          if (likes[S$.$contains](uid)) {
            this[S$0._firestore$4].collection("posts").doc(postId).update(new (T$.LinkedMapOfObject$ObjectN()).from(["likes", cloud_firestore.FieldValue.arrayRemove([uid])]));
          } else {
            this[S$0._firestore$4].collection("posts").doc(postId).update(new (T$.LinkedMapOfObject$ObjectN()).from(["likes", cloud_firestore.FieldValue.arrayUnion([uid])]));
          }
          res = "success";
        } catch (e) {
          let err = dart.getThrown(e);
          if (core.Object.is(err)) {
            res = err[S$.$toString]();
          } else
            throw e;
        }
        return res;
      }).bind(this));
    }
    postComment(postId, text, uid, name, profilePic) {
      return async.async(core.String, (function* postComment() {
        let res = "Some error occurred";
        try {
          if (text[S$.$isNotEmpty]) {
            let commentId = (C[163] || CT.C163).v1();
            this[S$0._firestore$4].collection("posts").doc(postId).collection("comments").doc(commentId).set(new (T$.IdentityMapOfString$dynamic()).from(["profilePic", profilePic, "name", name, "uid", uid, "text", text, "commentId", commentId, "datePublished", new core.DateTime.now()]));
            res = "success";
          } else {
            res = "Please enter text";
          }
        } catch (e) {
          let err = dart.getThrown(e);
          if (core.Object.is(err)) {
            res = err[S$.$toString]();
          } else
            throw e;
        }
        return res;
      }).bind(this));
    }
    deletePost(postId) {
      return async.async(core.String, (function* deletePost() {
        let res = "Some error occurred";
        try {
          yield this[S$0._firestore$4].collection("posts").doc(postId).delete();
          res = "success";
        } catch (e) {
          let err = dart.getThrown(e);
          if (core.Object.is(err)) {
            res = err[S$.$toString]();
          } else
            throw e;
        }
        return res;
      }).bind(this));
    }
    followUser(uid, followId) {
      return async.async(dart.void, (function* followUser() {
        try {
          let snap = (yield this[S$0._firestore$4].collection("users").doc(uid).get());
          let following = core.List.as(dart.dsend(dart.nullCheck(snap.data()), '_get', ["following"]));
          if (following[S$.$contains](followId)) {
            yield this[S$0._firestore$4].collection("users").doc(followId).update(new (T$.LinkedMapOfObject$ObjectN()).from(["followers", cloud_firestore.FieldValue.arrayRemove([uid])]));
            yield this[S$0._firestore$4].collection("users").doc(uid).update(new (T$.LinkedMapOfObject$ObjectN()).from(["following", cloud_firestore.FieldValue.arrayRemove([followId])]));
          } else {
            yield this[S$0._firestore$4].collection("users").doc(followId).update(new (T$.LinkedMapOfObject$ObjectN()).from(["followers", cloud_firestore.FieldValue.arrayUnion([uid])]));
            yield this[S$0._firestore$4].collection("users").doc(uid).update(new (T$.LinkedMapOfObject$ObjectN()).from(["following", cloud_firestore.FieldValue.arrayUnion([followId])]));
          }
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (core.Object.is(e)) {
            core.print(e[S$.$toString]());
          } else
            throw e$;
        }
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new firestore_methods.FireStoreMethods.new();
    }
  };
  (firestore_methods.FireStoreMethods.new = function() {
    this[S$0._firestore$4] = cloud_firestore.FirebaseFirestore.instance;
    ;
  }).prototype = firestore_methods.FireStoreMethods.prototype;
  dart.addTypeTests(firestore_methods.FireStoreMethods);
  dart.addTypeCaches(firestore_methods.FireStoreMethods);
  dart.setMethodSignature(firestore_methods.FireStoreMethods, () => ({
    __proto__: dart.getMethods(firestore_methods.FireStoreMethods.__proto__),
    uploadPost: dart.fnType(async.Future$(core.String), [core.String, typed_data.Uint8List, core.String, core.String, core.String]),
    likePost: dart.fnType(async.Future$(core.String), [core.String, core.String, core.List]),
    postComment: dart.fnType(async.Future$(core.String), [core.String, core.String, core.String, core.String, core.String]),
    deletePost: dart.fnType(async.Future$(core.String), [core.String]),
    followUser: dart.fnType(async.Future$(dart.void), [core.String, core.String])
  }));
  dart.setLibraryUri(firestore_methods.FireStoreMethods, I[168]);
  dart.setFieldSignature(firestore_methods.FireStoreMethods, () => ({
    __proto__: dart.getFields(firestore_methods.FireStoreMethods.__proto__),
    [S$0._firestore$4]: dart.finalFieldType(cloud_firestore.FirebaseFirestore)
  }));
  dart.defineLazy(dimensions, {
    /*dimensions.webScreenSize*/get webScreenSize() {
      return 600;
    }
  }, false);
  post_card.PostCard = class PostCard extends framework.StatefulWidget {
    get snap() {
      return this[S$0.snap];
    }
    set snap(value) {
      super.snap = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let snap = opts && 'snap' in opts ? opts.snap : null;
      return new post_card.PostCard.new({key: key, snap: snap});
    }
    createState() {
      return new post_card._PostCardState.new();
    }
  };
  (post_card.PostCard.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let snap = opts && 'snap' in opts ? opts.snap : null;
    this[S$0.snap] = snap;
    post_card.PostCard.__proto__.new.call(this, {key: key});
    ;
  }).prototype = post_card.PostCard.prototype;
  dart.addTypeTests(post_card.PostCard);
  dart.addTypeCaches(post_card.PostCard);
  dart.setMethodSignature(post_card.PostCard, () => ({
    __proto__: dart.getMethods(post_card.PostCard.__proto__),
    createState: dart.fnType(framework.State$(post_card.PostCard), [])
  }));
  dart.setLibraryUri(post_card.PostCard, I[169]);
  dart.setFieldSignature(post_card.PostCard, () => ({
    __proto__: dart.getFields(post_card.PostCard.__proto__),
    snap: dart.finalFieldType(dart.dynamic)
  }));
  post_card._PostCardState = class _PostCardState extends framework.State$(post_card.PostCard) {
    initState() {
      super.initState();
      this.fetchCommentLen();
    }
    fetchCommentLen() {
      return async.async(dart.dynamic, (function* fetchCommentLen() {
        try {
          let snap = (yield cloud_firestore.FirebaseFirestore.instance.collection("posts").doc(T$.StringN().as(dart.dsend(this.widget.snap, '_get', ["postId"]))).collection("comments").get());
          this.commentLen = snap.docs[S$.$length];
        } catch (e) {
          let err = dart.getThrown(e);
          if (core.Object.is(err)) {
            utils.showSnackBar(this.context, err[S$.$toString]());
          } else
            throw e;
        }
        this.setState(dart.fn(() => {
        }, T$.VoidTovoid()));
      }).bind(this));
    }
    deletePost(postId) {
      return async.async(dart.dynamic, (function* deletePost() {
        try {
          yield new firestore_methods.FireStoreMethods.new().deletePost(postId);
        } catch (e) {
          let err = dart.getThrown(e);
          if (core.Object.is(err)) {
            utils.showSnackBar(this.context, err[S$.$toString]());
          } else
            throw e;
        }
      }).bind(this));
    }
    build(context) {
      let user = provider$.Provider.of(user_provider.UserProvider, context).getUser;
      let width = media_query.MediaQuery.of(context).size.width;
      return new container.Container.new({decoration: new box_decoration.BoxDecoration.new({border: box_border.Border.all({color: width > 600 ? colors$0.secondaryColor : colors$0.mobileBackgroundColor}), color: colors$0.mobileBackgroundColor}), padding: C[267] || CT.C267, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new container.Container.new({padding: (C[268] || CT.C268).copyWith({right: 0}), child: new basic.Row.new({children: T$.JSArrayOfWidget().of([new circle_avatar.CircleAvatar.new({radius: 16, backgroundImage: new _network_image_web.NetworkImage.new(dart.toString(dart.dsend(this.widget.snap, '_get', ["profImage"])))}), new basic.Expanded.new({child: new basic.Padding.new({padding: C[269] || CT.C269, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.start, children: T$.JSArrayOfWidget().of([new text$.Text.new(dart.toString(dart.dsend(this.widget.snap, '_get', ["username"])), {style: C[198] || CT.C198})])})})}), dart.toString(dart.dsend(this.widget.snap, '_get', ["uid"])) === user.uid ? new icon_button.IconButton.new({onPressed: dart.fn(() => {
                      dialog.showDialog(dart.dynamic, {useRootNavigator: false, context: context, builder: dart.fn(context => new dialog.Dialog.new({child: new scroll_view.ListView.new({padding: C[270] || CT.C270, shrinkWrap: true, children: T$.JSArrayOfString().of(["Delete"])[S$.$map](ink_well.InkWell, dart.fn(e => new ink_well.InkWell.new({child: new container.Container.new({padding: C[271] || CT.C271, child: new text$.Text.new(e)}), onTap: dart.fn(() => {
                                this.deletePost(dart.toString(dart.dsend(this.widget.snap, '_get', ["postId"])));
                                navigator.Navigator.of(context).pop(T$.ObjectN());
                              }, T$.VoidTovoid())}), T$.StringToInkWell()))[S$.$toList]()})}), T$.BuildContextToDialog())});
                    }, T$.VoidTovoid()), icon: C[272] || CT.C272}) : new container.Container.new()])})}), new gesture_detector.GestureDetector.new({onDoubleTap: dart.fn(() => {
                new firestore_methods.FireStoreMethods.new().likePost(dart.toString(dart.dsend(this.widget.snap, '_get', ["postId"])), user.uid, core.List.as(dart.dsend(this.widget.snap, '_get', ["likes"])));
                this.setState(dart.fn(() => {
                  this.isLikeAnimating = true;
                }, T$.VoidTovoid()));
              }, T$.VoidTovoid()), child: new basic.Stack.new({alignment: alignment.Alignment.center, children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({height: media_query.MediaQuery.of(context).size.height * 0.35, width: 1 / 0, child: new image.Image.network(dart.toString(dart.dsend(this.widget.snap, '_get', ["postUrl"])), {fit: box_fit.BoxFit.cover})}), new implicit_animations.AnimatedOpacity.new({duration: C[274] || CT.C274, opacity: this.isLikeAnimating ? 1 : 0, child: new like_animation.LikeAnimation.new({isAnimating: this.isLikeAnimating, duration: C[275] || CT.C275, onEnd: dart.fn(() => {
                        this.setState(dart.fn(() => {
                          this.isLikeAnimating = false;
                        }, T$.VoidTovoid()));
                      }, T$.VoidTovoid()), child: C[276] || CT.C276})})])})}), new basic.Row.new({children: T$.JSArrayOfWidget().of([new like_animation.LikeAnimation.new({isAnimating: core.bool.as(dart.dsend(dart.dsend(this.widget.snap, '_get', ["likes"]), 'contains', [user.uid])), smallLike: true, child: new icon_button.IconButton.new({icon: dart.dtest(dart.dsend(dart.dsend(this.widget.snap, '_get', ["likes"]), 'contains', [user.uid])) ? C[278] || CT.C278 : C[291] || CT.C291, onPressed: dart.fn(() => new firestore_methods.FireStoreMethods.new().likePost(dart.toString(dart.dsend(this.widget.snap, '_get', ["postId"])), user.uid, core.List.as(dart.dsend(this.widget.snap, '_get', ["likes"]))), T$.VoidTovoid())})}), new icon_button.IconButton.new({icon: C[293] || CT.C293, onPressed: dart.fn(() => navigator.Navigator.of(context).push(dart.dynamic, new page.MaterialPageRoute.new({builder: dart.fn(context => new comments_screen.CommentsScreen.new({postId: dart.toString(dart.dsend(this.widget.snap, '_get', ["postId"]))}), T$.BuildContextToCommentsScreen())})), T$.VoidTovoid())}), new icon_button.IconButton.new({icon: C[295] || CT.C295, onPressed: dart.fn(() => {
                  }, T$.VoidTovoid())}), new basic.Expanded.new({child: new basic.Align.new({alignment: alignment.Alignment.bottomRight, child: new icon_button.IconButton.new({icon: C[297] || CT.C297, onPressed: dart.fn(() => {
                      }, T$.VoidTovoid())})})})])}), new container.Container.new({padding: C[299] || CT.C299, child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, crossAxisAlignment: flex.CrossAxisAlignment.start, children: T$.JSArrayOfWidget().of([new text$.DefaultTextStyle.new({style: dart.nullCheck(theme.Theme.of(context).textTheme.titleSmall).copyWith({fontWeight: ui.FontWeight.w800}), child: new text$.Text.new(dart.str(dart.dload(dart.dsend(this.widget.snap, '_get', ["likes"]), 'length')) + " likes", {style: theme.Theme.of(context).textTheme.bodyMedium})}), new container.Container.new({width: 1 / 0, padding: C[300] || CT.C300, child: new basic.RichText.new({text: new text_span.TextSpan.new({style: C[205] || CT.C205, children: T$.JSArrayOfInlineSpan().of([new text_span.TextSpan.new({text: dart.toString(dart.dsend(this.widget.snap, '_get', ["username"])), style: C[198] || CT.C198}), new text_span.TextSpan.new({text: " " + dart.str(dart.dsend(this.widget.snap, '_get', ["description"]))})])})})}), new ink_well.InkWell.new({child: new container.Container.new({padding: C[301] || CT.C301, child: new text$.Text.new("View all " + dart.str(this.commentLen) + " comments", {style: C[302] || CT.C302})}), onTap: dart.fn(() => navigator.Navigator.of(context).push(dart.dynamic, new page.MaterialPageRoute.new({builder: dart.fn(context => new comments_screen.CommentsScreen.new({postId: dart.toString(dart.dsend(this.widget.snap, '_get', ["postId"]))}), T$.BuildContextToCommentsScreen())})), T$.VoidTovoid())}), new container.Container.new({padding: C[301] || CT.C301, child: new text$.Text.new(new date_format.DateFormat.yMMMd().format(core.DateTime.as(dart.dsend(dart.dsend(this.widget.snap, '_get', ["datePublished"]), 'toDate', []))), {style: C[303] || CT.C303})})])})})])})});
    }
    static ['_#new#tearOff']() {
      return new post_card._PostCardState.new();
    }
  };
  (post_card._PostCardState.new = function() {
    this.commentLen = 0;
    this.isLikeAnimating = false;
    post_card._PostCardState.__proto__.new.call(this);
    ;
  }).prototype = post_card._PostCardState.prototype;
  dart.addTypeTests(post_card._PostCardState);
  dart.addTypeCaches(post_card._PostCardState);
  dart.setMethodSignature(post_card._PostCardState, () => ({
    __proto__: dart.getMethods(post_card._PostCardState.__proto__),
    fetchCommentLen: dart.fnType(dart.dynamic, []),
    deletePost: dart.fnType(dart.dynamic, [core.String]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(post_card._PostCardState, I[169]);
  dart.setFieldSignature(post_card._PostCardState, () => ({
    __proto__: dart.getFields(post_card._PostCardState.__proto__),
    commentLen: dart.fieldType(core.int),
    isLikeAnimating: dart.fieldType(core.bool)
  }));
  follow_button.FollowButton = class FollowButton extends framework.StatelessWidget {
    get function() {
      return this[S$0.$function];
    }
    set function(value) {
      super.function = value;
    }
    get backgroundColor() {
      return this[S$0.backgroundColor];
    }
    set backgroundColor(value) {
      super.backgroundColor = value;
    }
    get borderColor() {
      return this[S$0.borderColor];
    }
    set borderColor(value) {
      super.borderColor = value;
    }
    get text() {
      return this[S$0.text];
    }
    set text(value) {
      super.text = value;
    }
    get textColor() {
      return this[S$0.textColor];
    }
    set textColor(value) {
      super.textColor = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
      let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
      let text = opts && 'text' in opts ? opts.text : null;
      let textColor = opts && 'textColor' in opts ? opts.textColor : null;
      let $function = opts && 'function' in opts ? opts.function : null;
      return new follow_button.FollowButton.new({key: key, backgroundColor: backgroundColor, borderColor: borderColor, text: text, textColor: textColor, function: $function});
    }
    build(context) {
      return new container.Container.new({padding: C[304] || CT.C304, child: new text_button.TextButton.new({onPressed: this.function, child: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: this.backgroundColor, border: box_border.Border.all({color: this.borderColor}), borderRadius: new border_radius.BorderRadius.circular(5)}), alignment: alignment.Alignment.center, width: 350, height: 35, child: new text$.Text.new(this.text, {style: new text_style.TextStyle.new({color: this.textColor, fontWeight: ui.FontWeight.bold})})})})});
    }
  };
  (follow_button.FollowButton.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let backgroundColor = opts && 'backgroundColor' in opts ? opts.backgroundColor : null;
    let borderColor = opts && 'borderColor' in opts ? opts.borderColor : null;
    let text = opts && 'text' in opts ? opts.text : null;
    let textColor = opts && 'textColor' in opts ? opts.textColor : null;
    let $function = opts && 'function' in opts ? opts.function : null;
    this[S$0.backgroundColor] = backgroundColor;
    this[S$0.borderColor] = borderColor;
    this[S$0.text] = text;
    this[S$0.textColor] = textColor;
    this[S$0.$function] = $function;
    follow_button.FollowButton.__proto__.new.call(this, {key: key});
    ;
  }).prototype = follow_button.FollowButton.prototype;
  dart.addTypeTests(follow_button.FollowButton);
  dart.addTypeCaches(follow_button.FollowButton);
  dart.setMethodSignature(follow_button.FollowButton, () => ({
    __proto__: dart.getMethods(follow_button.FollowButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(follow_button.FollowButton, I[170]);
  dart.setFieldSignature(follow_button.FollowButton, () => ({
    __proto__: dart.getFields(follow_button.FollowButton.__proto__),
    function: dart.finalFieldType(dart.nullable(dart.fnType(dart.dynamic, []))),
    backgroundColor: dart.finalFieldType(ui.Color),
    borderColor: dart.finalFieldType(ui.Color),
    text: dart.finalFieldType(core.String),
    textColor: dart.finalFieldType(ui.Color)
  }));
  method_channel_field_value_factory.MethodChannelFieldValueFactory = class MethodChannelFieldValueFactory extends platform_interface_field_value_factory.FieldValueFactoryPlatform {
    arrayRemove(elements) {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.arrayRemove, elements);
    }
    arrayUnion(elements) {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.arrayUnion, elements);
    }
    delete() {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.delete, null);
    }
    increment(value) {
      if (!(core.int.is(value) || typeof value == 'number')) dart.assertFailed(null, I[171], 31, 12, "value is int || value is double");
      if (typeof value == 'number') {
        return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.incrementDouble, value);
      } else if (core.int.is(value)) {
        return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.incrementInteger, value);
      }
      dart.throw(new core.StateError.new("MethodChannelFieldValue().increment() expects a \"num\" value"));
    }
    serverTimestamp() {
      return new method_channel_field_value.MethodChannelFieldValue.new(method_channel_field_value.FieldValueType.serverTimestamp, null);
    }
    static ['_#new#tearOff']() {
      return new method_channel_field_value_factory.MethodChannelFieldValueFactory.new();
    }
  };
  (method_channel_field_value_factory.MethodChannelFieldValueFactory.new = function() {
    method_channel_field_value_factory.MethodChannelFieldValueFactory.__proto__.new.call(this);
    ;
  }).prototype = method_channel_field_value_factory.MethodChannelFieldValueFactory.prototype;
  dart.addTypeTests(method_channel_field_value_factory.MethodChannelFieldValueFactory);
  dart.addTypeCaches(method_channel_field_value_factory.MethodChannelFieldValueFactory);
  dart.setMethodSignature(method_channel_field_value_factory.MethodChannelFieldValueFactory, () => ({
    __proto__: dart.getMethods(method_channel_field_value_factory.MethodChannelFieldValueFactory.__proto__),
    arrayRemove: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [core.List]),
    arrayUnion: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [core.List]),
    delete: dart.fnType(method_channel_field_value.MethodChannelFieldValue, []),
    increment: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [core.num]),
    serverTimestamp: dart.fnType(method_channel_field_value.MethodChannelFieldValue, [])
  }));
  dart.setLibraryUri(method_channel_field_value_factory.MethodChannelFieldValueFactory, I[172]);
  method_channel_firestore.MethodChannelFirebaseFirestore = class MethodChannelFirebaseFirestore extends platform_interface_firestore.FirebaseFirestorePlatform {
    get settings() {
      return this[S$0.settings$1];
    }
    set settings(value) {
      this[S$0.settings$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new method_channel_firestore.MethodChannelFirebaseFirestore.new({app: app, databaseURL: databaseURL});
    }
    static querySnapshotChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/query/" + id, C[305] || CT.C305);
    }
    static documentSnapshotChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/document/" + id, C[305] || CT.C305);
    }
    static snapshotsInSyncChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/snapshotsInSync/" + id, C[305] || CT.C305);
    }
    static loadBundleChannel(id) {
      return new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/loadBundle/" + id, C[305] || CT.C305);
    }
    get pigeonApp() {
      let t255, t254;
      t254 = this[S$0.__MethodChannelFirebaseFirestore_pigeonApp];
      return t254 == null ? (t255 = new messages$46pigeon$0.FirestorePigeonFirebaseApp.new({appName: dart.nullCheck(this.appInstance).name, databaseURL: this.databaseURL, settings: new messages$46pigeon$0.PigeonFirebaseSettings.new({persistenceEnabled: this.settings.persistenceEnabled, host: this.settings.host, sslEnabled: this.settings.sslEnabled, cacheSizeBytes: this.settings.cacheSizeBytes, ignoreUndefinedProperties: this.settings.ignoreUndefinedProperties})}), this[S$0.__MethodChannelFirebaseFirestore_pigeonApp] == null ? this[S$0.__MethodChannelFirebaseFirestore_pigeonApp] = t255 : dart.throw(new _internal.LateError.fieldADI("pigeonApp"))) : t254;
    }
    delegateFor(opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
      return new method_channel_firestore.MethodChannelFirebaseFirestore.new({app: app, databaseURL: databaseURL});
    }
    loadBundle(bundle) {
      return new method_channel_load_bundle_task.MethodChannelLoadBundleTask.new({task: method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.loadBundle(this.pigeonApp, bundle)});
    }
    namedQueryGet(name, opts) {
      let options = opts && 'options' in opts ? opts.options : C[52] || CT.C52;
      return async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function* namedQueryGet() {
        try {
          let data = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.namedQueryGet(this.pigeonApp, name, new messages$46pigeon$0.PigeonGetOptions.new({source: options.source, serverTimestampBehavior: options.serverTimestampBehavior})));
          return new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(platform_interface_firestore.FirebaseFirestorePlatform.instance, data);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            if (e[S$.$toString]()[S$.$contains]("Named query has not been found")) {
              core.Error.throwWithStackTrace(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", code: "non-existent-named-query", message: "Named query has not been found. " + "Please check it has been loaded properly via loadBundle()."}), stack);
            }
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    batch() {
      return new method_channel_write_batch.MethodChannelWriteBatch.new(this.pigeonApp);
    }
    clearPersistence() {
      return async.async(dart.void, (function* clearPersistence() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.clearPersistence(this.pigeonApp);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    enablePersistence(persistenceSettings = null) {
      return async.async(dart.void, function* enablePersistence() {
        dart.throw(new core.UnimplementedError.new("enablePersistence() is only available for Web. Use [Settings.persistenceEnabled] for other platforms."));
      });
    }
    collection(collectionPath) {
      return new method_channel_collection_reference.MethodChannelCollectionReference.new(this, collectionPath, this.pigeonApp);
    }
    collectionGroup(collectionPath) {
      return new method_channel_query.MethodChannelQuery.new(this, collectionPath, this.pigeonApp, {isCollectionGroupQuery: true});
    }
    disableNetwork() {
      return async.async(dart.void, (function* disableNetwork() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.disableNetwork(this.pigeonApp);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    enableNetwork() {
      return async.async(dart.void, (function* enableNetwork() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.enableNetwork(this.pigeonApp);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    doc(documentPath) {
      return new method_channel_document_reference.MethodChannelDocumentReference.new(this, documentPath, this.pigeonApp);
    }
    snapshotsInSync() {
      let snapshotStreamSubscription = null;
      let controller = null;
      function controller$35get() {
        let t259;
        t259 = controller;
        return t259 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t259;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      controller$35set(T$.StreamControllerOfvoid().broadcast({onListen: dart.fn(() => async.async(dart.void, (function*() {
          let observerId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.snapshotsInSyncSetup(this.pigeonApp));
          snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](method_channel_firestore.MethodChannelFirebaseFirestore.snapshotsInSyncChannel(observerId), {arguments: new (T$.IdentityMapOfString$dynamic()).from(["firestore", this]), onError: C[307] || CT.C307}).listen(dart.fn(event => controller$35get().add(null), T$.dynamicTovoid()), {onError: dart.bind(controller$35get(), 'addError')});
        }).bind(this)), T$.VoidToFutureOfvoid()), onCancel: dart.fn(() => {
          let t261;
          t261 = snapshotStreamSubscription;
          t261 == null ? null : t261.cancel();
        }, T$.VoidTovoid())}));
      return controller$35get().stream;
    }
    runTransaction(T, transactionHandler, opts) {
      let timeout = opts && 'timeout' in opts ? opts.timeout : C[9] || CT.C9;
      let maxAttempts = opts && 'maxAttempts' in opts ? opts.maxAttempts : 5;
      return async.async(T, (function* runTransaction() {
        if (!(timeout.inMilliseconds > 0)) dart.assertFailed("Transaction timeout must be more than 0 milliseconds", I[173], 224, 12, "timeout.inMilliseconds > 0");
        let transactionId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.transactionCreate(this.pigeonApp, timeout.inMilliseconds, maxAttempts));
        let completer = async.Completer$(T).new();
        let result = null;
        let result$35isSet = false;
        function result$35get() {
          return result$35isSet ? result : dart.throw(new _internal.LateError.localNI("result"));
        }
        function result$35set(result$35param) {
          result$35isSet = true;
          return result = result$35param;
        }
        let eventChannel = new platform_channel.EventChannel.new("plugins.flutter.io/firebase_firestore/transaction/" + transactionId, C[305] || CT.C305);
        let snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](eventChannel, {arguments: new (T$.IdentityMapOfString$dynamic()).from(["firestore", this, "timeout", timeout.inMilliseconds, "maxAttempts", maxAttempts]), onError: C[307] || CT.C307}).listen(dart.fn(event => async.async(dart.void, (function*() {
          if (dart.dsend(event, '_get', ["error"]) != null) {
            completer.completeError(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", code: T$.StringN().as(dart.dsend(dart.dsend(event, '_get', ["error"]), '_get', ["code"])), message: T$.StringN().as(dart.dsend(dart.dsend(event, '_get', ["error"]), '_get', ["message"]))}));
            return;
          } else if (dart.equals(dart.dsend(event, '_get', ["complete"]), true)) {
            completer.complete(result$35get());
            return;
          }
          let transaction = new method_channel_transaction.MethodChannelTransaction.new(transactionId, core.String.as(dart.dsend(event, '_get', ["appName"])), this.pigeonApp, this.databaseURL);
          try {
            result$35set(T.as(yield transactionHandler(transaction)));
          } catch (e) {
            let error = dart.getThrown(e);
            let stack = dart.stackTrace(e);
            if (core.Object.is(error)) {
              yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.transactionStoreResult(transactionId, messages$46pigeon$0.PigeonTransactionResult.failure, null);
              completer.completeError(error, stack);
              return;
            } else
              throw e;
          }
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.transactionStoreResult(transactionId, messages$46pigeon$0.PigeonTransactionResult.success, transaction.commands);
        }).bind(this)), T$.dynamicToFutureOfvoid()));
        return completer.future.whenComplete(dart.bind(snapshotStreamSubscription, 'cancel'));
      }).bind(this));
    }
    terminate() {
      return async.async(dart.void, (function* terminate() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.terminate(this.pigeonApp);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    waitForPendingWrites() {
      return async.async(dart.void, (function* waitForPendingWrites() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.waitForPendingWrites(this.pigeonApp);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setIndexConfiguration(indexConfiguration) {
      return async.async(dart.void, (function* setIndexConfiguration() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.setIndexConfiguration(this.pigeonApp, indexConfiguration);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setLoggingEnabled(enabled) {
      return async.async(dart.void, function* setLoggingEnabled() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.setLoggingEnabled(enabled);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      });
    }
  };
  (method_channel_firestore.MethodChannelFirebaseFirestore.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let databaseURL = opts && 'databaseURL' in opts ? opts.databaseURL : null;
    this[S$0.__MethodChannelFirebaseFirestore_pigeonApp] = null;
    this[S$0.settings$1] = C[51] || CT.C51;
    method_channel_firestore.MethodChannelFirebaseFirestore.__proto__.new.call(this, {appInstance: app, databaseChoice: databaseURL});
    ;
  }).prototype = method_channel_firestore.MethodChannelFirebaseFirestore.prototype;
  dart.addTypeTests(method_channel_firestore.MethodChannelFirebaseFirestore);
  dart.addTypeCaches(method_channel_firestore.MethodChannelFirebaseFirestore);
  dart.setMethodSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ({
    __proto__: dart.getMethods(method_channel_firestore.MethodChannelFirebaseFirestore.__proto__),
    runTransaction: dart.gFnType(T => [async.Future$(T), [dart.fnType(dart.nullable(async.Future$(dart.nullable(T))), [platform_interface_transaction.TransactionPlatform])], {maxAttempts: core.int, timeout: core.Duration}, {}], T => [dart.nullable(core.Object)])
  }));
  dart.setStaticMethodSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ['querySnapshotChannel', 'documentSnapshotChannel', 'snapshotsInSyncChannel', 'loadBundleChannel']);
  dart.setGetterSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ({
    __proto__: dart.getGetters(method_channel_firestore.MethodChannelFirebaseFirestore.__proto__),
    pigeonApp: messages$46pigeon$0.FirestorePigeonFirebaseApp
  }));
  dart.setLibraryUri(method_channel_firestore.MethodChannelFirebaseFirestore, I[174]);
  dart.setFieldSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ({
    __proto__: dart.getFields(method_channel_firestore.MethodChannelFirebaseFirestore.__proto__),
    [S$0.__MethodChannelFirebaseFirestore_pigeonApp]: dart.fieldType(dart.nullable(messages$46pigeon$0.FirestorePigeonFirebaseApp)),
    settings: dart.fieldType(settings.Settings)
  }));
  dart.setStaticFieldSignature(method_channel_firestore.MethodChannelFirebaseFirestore, () => ['pigeonChannel']);
  dart.defineLazy(method_channel_firestore.MethodChannelFirebaseFirestore, {
    /*method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel*/get pigeonChannel() {
      return new messages$46pigeon$0.FirebaseFirestoreHostApi.new();
    }
  }, false);
  exception$.convertPlatformExceptionToFirebaseException = function convertPlatformExceptionToFirebaseException(exception, rawStackTrace, opts) {
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let stackTrace = rawStackTrace;
    if (stackTrace[S$0.$_equals](core.StackTrace.empty)) {
      stackTrace = core.StackTrace.current;
    }
    if (!message_codec.PlatformException.is(exception)) {
      core.Error.throwWithStackTrace(exception, stackTrace);
    }
    core.Error.throwWithStackTrace(exception$.platformExceptionToFirebaseException(exception, {plugin: plugin}), stackTrace);
  };
  exception$.platformExceptionToFirebaseException = function platformExceptionToFirebaseException(platformException, opts) {
    let t270, t270$, t270$0;
    let plugin = opts && 'plugin' in opts ? opts.plugin : null;
    let details = platformException.details != null ? T$.LinkedHashMapOfString$Object().from(core.Map.as(platformException.details)) : null;
    let code = null;
    let message = (t270 = platformException.message, t270 == null ? "" : t270);
    if (details != null) {
      code = (t270$ = T$.StringN().as(details[S$.$_get]("code")), t270$ == null ? code : t270$);
      message = (t270$0 = T$.StringN().as(details[S$.$_get]("message")), t270$0 == null ? message : t270$0);
    }
    return new firebase_core_platform_interface.FirebaseException.new({plugin: plugin, code: code, message: message});
  };
  exception$['EventChannelExtension|receiveGuardedBroadcastStream'] = function EventChannelExtension$124receiveGuardedBroadcastStream($this, opts) {
    let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let incomingStackTrace = core.StackTrace.current;
    return $this.receiveBroadcastStream($arguments).handleError(dart.fn(error => onError(error, incomingStackTrace), T$.ObjectTodynamic()));
  };
  exception$['EventChannelExtension|get#receiveGuardedBroadcastStream'] = function EventChannelExtension$124get$35receiveGuardedBroadcastStream($this) {
    return dart.fn(opts => {
      let $arguments = opts && 'arguments' in opts ? opts.arguments : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      return exception$['EventChannelExtension|receiveGuardedBroadcastStream']($this, {arguments: $arguments, onError: onError});
    }, T$.__ToStream());
  };
  file_picker_io.FilePickerIO = class FilePickerIO extends file_picker$.FilePicker {
    pickFiles(opts) {
      let type = opts && 'type' in opts ? opts.type : C[55] || CT.C55;
      let allowedExtensions = opts && 'allowedExtensions' in opts ? opts.allowedExtensions : null;
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      let onFileLoading = opts && 'onFileLoading' in opts ? opts.onFileLoading : null;
      let allowCompression = opts && 'allowCompression' in opts ? opts.allowCompression : true;
      let allowMultiple = opts && 'allowMultiple' in opts ? opts.allowMultiple : false;
      let withData = opts && 'withData' in opts ? opts.withData : false;
      let withReadStream = opts && 'withReadStream' in opts ? opts.withReadStream : false;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      return this[S$0._getPath](type, allowMultiple, allowCompression, allowedExtensions, onFileLoading, withData, withReadStream);
    }
    clearTemporaryFiles() {
      return async.async(T$.boolN(), function* clearTemporaryFiles() {
        return file_picker_io._channel.invokeMethod(core.bool, "clear");
      });
    }
    getDirectoryPath(opts) {
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      return async.async(T$.StringN(), function* getDirectoryPath() {
        try {
          return yield file_picker_io._channel.invokeMethod(core.String, "dir", new _js_helper.LinkedMap.new());
        } catch (e) {
          let ex = dart.getThrown(e);
          if (message_codec.PlatformException.is(ex)) {
            if (ex.code === "unknown_path") {
              core.print("[" + "MethodChannelFilePicker" + "] Could not resolve directory path. Maybe it's a protected one or unsupported (such as Downloads folder). If you are on Android, make sure that you are on SDK 21 or above.");
            }
          } else
            throw e;
        }
        return null;
      });
    }
    [S$0._getPath](fileType, allowMultipleSelection, allowCompression, allowedExtensions, onFileLoading, withData, withReadStream) {
      return async.async(T$.FilePickerResultN(), function* _getPath() {
        let t273, t273$, t273$0;
        let type = diagnostics.describeEnum(fileType);
        if (type !== "custom" && dart.test((t273$ = (t273 = allowedExtensions, t273 == null ? null : t273[S$.$isNotEmpty]), t273$ == null ? false : t273$))) {
          dart.throw(core.Exception.new("You are setting a type [" + dart.str(fileType) + "]. Custom extension filters are only allowed with FileType.custom, please change it or remove filters."));
        }
        try {
          t273$0 = file_picker_io.FilePickerIO._eventSubscription;
          t273$0 == null ? null : t273$0.cancel();
          if (onFileLoading != null) {
            file_picker_io.FilePickerIO._eventSubscription = file_picker_io._eventChannel.receiveBroadcastStream().listen(dart.fn(data => onFileLoading(core.bool.as(data) ? file_picker$.FilePickerStatus.picking : file_picker$.FilePickerStatus.done), T$.dynamicTovoid()), {onError: dart.fn(error => dart.throw(core.Exception.new(error)), T$.dynamicToNever())});
          }
          let result = (yield file_picker_io._channel.invokeListMethod(core.Map, type, new (T$.IdentityMapOfString$ObjectN()).from(["allowMultipleSelection", allowMultipleSelection, "allowedExtensions", allowedExtensions, "allowCompression", allowCompression, "withData", withData])));
          if (result == null) {
            return null;
          }
          let platformFiles = T$.JSArrayOfPlatformFile().of([]);
          for (let platformFileMap of result) {
            platformFiles[S$.$add](platform_file.PlatformFile.fromMap(platformFileMap, {readStream: dart.nullCheck(withReadStream) ? io.File.new(core.String.as(platformFileMap[S$.$_get]("path"))).openRead() : null}));
          }
          return new file_picker_result.FilePickerResult.new(platformFiles);
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (message_codec.PlatformException.is(ex)) {
            let e = ex;
            core.print("[" + "MethodChannelFilePicker" + "] Platform exception: " + dart.str(e));
            dart.rethrow(e$);
          } else if (core.Object.is(ex)) {
            let e = ex;
            core.print("[" + "MethodChannelFilePicker" + "] Unsupported operation. Method not found. The exception thrown was: " + dart.str(e));
            dart.rethrow(e$);
          } else
            throw e$;
        }
      });
    }
    static ['_#new#tearOff']() {
      return new file_picker_io.FilePickerIO.new();
    }
  };
  (file_picker_io.FilePickerIO.new = function() {
    file_picker_io.FilePickerIO.__proto__.new.call(this);
    ;
  }).prototype = file_picker_io.FilePickerIO.prototype;
  dart.addTypeTests(file_picker_io.FilePickerIO);
  dart.addTypeCaches(file_picker_io.FilePickerIO);
  dart.setMethodSignature(file_picker_io.FilePickerIO, () => ({
    __proto__: dart.getMethods(file_picker_io.FilePickerIO.__proto__),
    pickFiles: dart.fnType(async.Future$(dart.nullable(file_picker_result.FilePickerResult)), [], {allowCompression: dart.nullable(core.bool), allowMultiple: core.bool, allowedExtensions: dart.nullable(core.List$(core.String)), dialogTitle: dart.nullable(core.String), initialDirectory: dart.nullable(core.String), lockParentWindow: core.bool, onFileLoading: dart.nullable(dart.fnType(dart.dynamic, [file_picker$.FilePickerStatus])), type: file_picker$.FileType, withData: dart.nullable(core.bool), withReadStream: dart.nullable(core.bool)}, {}),
    [S$0._getPath]: dart.fnType(async.Future$(dart.nullable(file_picker_result.FilePickerResult)), [file_picker$.FileType, core.bool, dart.nullable(core.bool), dart.nullable(core.List$(core.String)), dart.nullable(dart.fnType(dart.dynamic, [file_picker$.FilePickerStatus])), dart.nullable(core.bool), dart.nullable(core.bool)])
  }));
  dart.setLibraryUri(file_picker_io.FilePickerIO, I[175]);
  dart.setStaticFieldSignature(file_picker_io.FilePickerIO, () => ['_tag', '_eventSubscription']);
  dart.defineLazy(file_picker_io.FilePickerIO, {
    /*file_picker_io.FilePickerIO._tag*/get _tag() {
      return "MethodChannelFilePicker";
    },
    /*file_picker_io.FilePickerIO._eventSubscription*/get _eventSubscription() {
      return null;
    },
    set _eventSubscription(value) {}
  }, false);
  dart.defineLazy(file_picker_io, {
    /*file_picker_io._channel*/get _channel() {
      return new platform_channel.MethodChannel.new("miguelruivo.flutter.plugins.filepicker", io.Platform.isLinux || io.Platform.isWindows || io.Platform.isMacOS ? C[308] || CT.C308 : C[264] || CT.C264);
    },
    /*file_picker_io._eventChannel*/get _eventChannel() {
      return C[309] || CT.C309;
    }
  }, false);
  file_picker_macos.FilePickerMacOS = class FilePickerMacOS extends file_picker$.FilePicker {
    pickFiles(opts) {
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      let type = opts && 'type' in opts ? opts.type : C[55] || CT.C55;
      let allowedExtensions = opts && 'allowedExtensions' in opts ? opts.allowedExtensions : null;
      let onFileLoading = opts && 'onFileLoading' in opts ? opts.onFileLoading : null;
      let allowCompression = opts && 'allowCompression' in opts ? opts.allowCompression : true;
      let allowMultiple = opts && 'allowMultiple' in opts ? opts.allowMultiple : false;
      let withData = opts && 'withData' in opts ? opts.withData : false;
      let withReadStream = opts && 'withReadStream' in opts ? opts.withReadStream : false;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      return async.async(T$.FilePickerResultN(), (function* pickFiles() {
        let t275, t275$;
        let executable = (yield utils$3.isExecutableOnPath("osascript"));
        let fileFilter = this.fileTypeToFileFilter(type, allowedExtensions);
        let $arguments = this.generateCommandLineArguments(this.escapeDialogTitle((t275 = dialogTitle, t275 == null ? "" : t275)), {fileFilter: fileFilter, initialDirectory: (t275$ = initialDirectory, t275$ == null ? "" : t275$), multipleFiles: allowMultiple, pickDirectory: false});
        let fileSelectionResult = (yield utils$3.runExecutableWithArguments(executable, $arguments));
        if (fileSelectionResult == null) {
          return null;
        }
        let filePaths = this.resultStringToFilePaths(fileSelectionResult);
        let platformFiles = (yield utils$3.filePathsToPlatformFiles(filePaths, withReadStream, withData));
        return new file_picker_result.FilePickerResult.new(platformFiles);
      }).bind(this));
    }
    getDirectoryPath(opts) {
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      return async.async(T$.StringN(), (function* getDirectoryPath() {
        let t275, t275$;
        let executable = (yield utils$3.isExecutableOnPath("osascript"));
        let $arguments = this.generateCommandLineArguments(this.escapeDialogTitle((t275 = dialogTitle, t275 == null ? "" : t275)), {initialDirectory: (t275$ = initialDirectory, t275$ == null ? "" : t275$), pickDirectory: true});
        let directorySelectionResult = (yield utils$3.runExecutableWithArguments(executable, $arguments));
        if (directorySelectionResult == null) {
          return null;
        }
        return this.resultStringToFilePaths(directorySelectionResult)[S$.$first];
      }).bind(this));
    }
    saveFile(opts) {
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let fileName = opts && 'fileName' in opts ? opts.fileName : null;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      let type = opts && 'type' in opts ? opts.type : C[55] || CT.C55;
      let allowedExtensions = opts && 'allowedExtensions' in opts ? opts.allowedExtensions : null;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      return async.async(T$.StringN(), (function* saveFile() {
        let t275, t275$, t275$0;
        let executable = (yield utils$3.isExecutableOnPath("osascript"));
        let fileFilter = this.fileTypeToFileFilter(type, allowedExtensions);
        let $arguments = this.generateCommandLineArguments(this.escapeDialogTitle((t275 = dialogTitle, t275 == null ? "" : t275)), {fileFilter: fileFilter, fileName: (t275$ = fileName, t275$ == null ? "" : t275$), initialDirectory: (t275$0 = initialDirectory, t275$0 == null ? "" : t275$0), saveFile: true});
        let saveFileResult = (yield utils$3.runExecutableWithArguments(executable, $arguments));
        if (saveFileResult == null) {
          return null;
        }
        return this.resultStringToFilePaths(saveFileResult)[S$.$first];
      }).bind(this));
    }
    fileTypeToFileFilter(type, allowedExtensions) {
      switch (type) {
        case C[55] || CT.C55:
          {
            return "";
          }
        case C[56] || CT.C56:
          {
            return "\"aac\", \"midi\", \"mp3\", \"ogg\", \"wav\"";
          }
        case C[60] || CT.C60:
          {
            return "\"\", \"" + dart.nullCheck(allowedExtensions)[S$.$join]("\", \"") + "\"";
          }
        case C[57] || CT.C57:
          {
            return "\"bmp\", \"gif\", \"jpeg\", \"jpg\", \"png\"";
          }
        case C[59] || CT.C59:
          {
            return "\"avi\", \"flv\", \"mkv\", \"mov\", \"mp4\", \"mpeg\", \"webm\", \"wmv\", \"bmp\", \"gif\", \"jpeg\", \"jpg\", \"png\"";
          }
        case C[58] || CT.C58:
          {
            return "\"avi\", \"flv\", \"mkv\", \"mov\", \"mp4\", \"mpeg\", \"webm\", \"wmv\"";
          }
        default:
          {
            dart.throw(core.Exception.new("unknown file type"));
          }
      }
    }
    generateCommandLineArguments(dialogTitle, opts) {
      let fileFilter = opts && 'fileFilter' in opts ? opts.fileFilter : "";
      let fileName = opts && 'fileName' in opts ? opts.fileName : "";
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : "";
      let multipleFiles = opts && 'multipleFiles' in opts ? opts.multipleFiles : false;
      let pickDirectory = opts && 'pickDirectory' in opts ? opts.pickDirectory : false;
      let saveFile = opts && 'saveFile' in opts ? opts.saveFile : false;
      let $arguments = T$.JSArrayOfString().of(["-e"]);
      let argument = "choose ";
      if (pickDirectory) {
        argument = argument + "folder ";
      } else {
        argument = argument + "file ";
        if (saveFile) {
          argument = argument + "name ";
          if (fileName[S$.$isNotEmpty]) {
            argument = argument + ("default name \"" + fileName + "\" ");
          }
        } else {
          if (fileFilter[S$.$isNotEmpty]) {
            argument = argument + ("of type {" + fileFilter + "} ");
          }
          if (multipleFiles) {
            argument = argument + "with multiple selections allowed ";
          }
        }
      }
      if (initialDirectory[S$.$isNotEmpty]) {
        argument = argument + ("default location \"" + initialDirectory + "\" ");
      }
      argument = argument + ("with prompt \"" + dialogTitle + "\"");
      $arguments[S$.$add](argument);
      return $arguments;
    }
    escapeDialogTitle(dialogTitle) {
      return dialogTitle[S$.$replaceAll]("\\", "\\\\")[S$.$replaceAll]("\"", "\\\"")[S$.$replaceAll]("\n", "\\\n");
    }
    resultStringToFilePaths(fileSelectionResult) {
      if (fileSelectionResult[S$0.$trim]()[S$.$isEmpty]) {
        return T$.JSArrayOfString().of([]);
      }
      let paths = fileSelectionResult[S$0.$trim]()[S$.$split](", alias ")[S$.$map](core.String, dart.fn(path => path[S$0.$trim](), T$.StringToString()))[S$.$where](dart.fn(path => path[S$.$isNotEmpty], T$.StringTobool()))[S$.$toList]();
      if (paths[S$.$length] === 1 && paths[S$.$first][S$.$startsWith]("file ")) {
        paths[S$.$_set](0, paths[S$.$_get](0)[S$0.$substring](5));
      } else if (paths[S$.$isNotEmpty] && paths[S$.$first][S$.$startsWith]("alias ")) {
        paths[S$.$_set](0, paths[S$.$_get](0)[S$0.$substring](6));
      }
      return paths[S$.$map](core.String, dart.fn(path => {
        let pathElements = path[S$.$split](":")[S$.$where](dart.fn(e => e[S$.$isNotEmpty], T$.StringTobool()))[S$.$toList]();
        let volumeName = pathElements[S$.$_get](0);
        return (() => {
          let t275 = T$.JSArrayOfString().of(["/Volumes", volumeName]);
          t275[S$.$addAll](pathElements[S$0.$sublist](1));
          return t275;
        })()[S$.$join]("/");
      }, T$.StringToString()))[S$.$toList]();
    }
    static ['_#new#tearOff']() {
      return new file_picker_macos.FilePickerMacOS.new();
    }
  };
  (file_picker_macos.FilePickerMacOS.new = function() {
    file_picker_macos.FilePickerMacOS.__proto__.new.call(this);
    ;
  }).prototype = file_picker_macos.FilePickerMacOS.prototype;
  dart.addTypeTests(file_picker_macos.FilePickerMacOS);
  dart.addTypeCaches(file_picker_macos.FilePickerMacOS);
  dart.setMethodSignature(file_picker_macos.FilePickerMacOS, () => ({
    __proto__: dart.getMethods(file_picker_macos.FilePickerMacOS.__proto__),
    fileTypeToFileFilter: dart.fnType(core.String, [file_picker$.FileType, dart.nullable(core.List$(core.String))]),
    generateCommandLineArguments: dart.fnType(core.List$(core.String), [core.String], {fileFilter: core.String, fileName: core.String, initialDirectory: core.String, multipleFiles: core.bool, pickDirectory: core.bool, saveFile: core.bool}, {}),
    escapeDialogTitle: dart.fnType(core.String, [core.String]),
    resultStringToFilePaths: dart.fnType(core.List$(core.String), [core.String])
  }));
  dart.setLibraryUri(file_picker_macos.FilePickerMacOS, I[176]);
  file_picker_linux.FilePickerLinux = class FilePickerLinux extends file_picker$.FilePicker {
    pickFiles(opts) {
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      let type = opts && 'type' in opts ? opts.type : C[55] || CT.C55;
      let allowedExtensions = opts && 'allowedExtensions' in opts ? opts.allowedExtensions : null;
      let onFileLoading = opts && 'onFileLoading' in opts ? opts.onFileLoading : null;
      let allowCompression = opts && 'allowCompression' in opts ? opts.allowCompression : true;
      let allowMultiple = opts && 'allowMultiple' in opts ? opts.allowMultiple : false;
      let withData = opts && 'withData' in opts ? opts.withData : false;
      let withReadStream = opts && 'withReadStream' in opts ? opts.withReadStream : false;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      return async.async(T$.FilePickerResultN(), (function* pickFiles() {
        let t276, t276$;
        let executable = (yield this[S$0._getPathToExecutable]());
        let dialogHandler = dialog_handler.DialogHandler.new(executable);
        let fileFilter = dialogHandler.fileTypeToFileFilter(type, allowedExtensions);
        let $arguments = dialogHandler.generateCommandLineArguments((t276 = dialogTitle, t276 == null ? "" : t276), {fileFilter: fileFilter, initialDirectory: (t276$ = initialDirectory, t276$ == null ? "" : t276$), multipleFiles: allowMultiple, pickDirectory: false});
        let fileSelectionResult = (yield utils$3.runExecutableWithArguments(executable, $arguments));
        if (fileSelectionResult == null) {
          return null;
        }
        let filePaths = dialogHandler.resultStringToFilePaths(fileSelectionResult);
        let platformFiles = (yield utils$3.filePathsToPlatformFiles(filePaths, withReadStream, withData));
        return new file_picker_result.FilePickerResult.new(platformFiles);
      }).bind(this));
    }
    getDirectoryPath(opts) {
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      return async.async(T$.StringN(), (function* getDirectoryPath() {
        let t276, t276$;
        let executable = (yield this[S$0._getPathToExecutable]());
        let $arguments = dialog_handler.DialogHandler.new(executable).generateCommandLineArguments((t276 = dialogTitle, t276 == null ? "" : t276), {initialDirectory: (t276$ = initialDirectory, t276$ == null ? "" : t276$), pickDirectory: true});
        return yield utils$3.runExecutableWithArguments(executable, $arguments);
      }).bind(this));
    }
    saveFile(opts) {
      let dialogTitle = opts && 'dialogTitle' in opts ? opts.dialogTitle : null;
      let fileName = opts && 'fileName' in opts ? opts.fileName : null;
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : null;
      let type = opts && 'type' in opts ? opts.type : C[55] || CT.C55;
      let allowedExtensions = opts && 'allowedExtensions' in opts ? opts.allowedExtensions : null;
      let lockParentWindow = opts && 'lockParentWindow' in opts ? opts.lockParentWindow : false;
      return async.async(T$.StringN(), (function* saveFile() {
        let t276, t276$, t276$0;
        let executable = (yield this[S$0._getPathToExecutable]());
        let dialogHandler = dialog_handler.DialogHandler.new(executable);
        let fileFilter = dialogHandler.fileTypeToFileFilter(type, allowedExtensions);
        let $arguments = dialogHandler.generateCommandLineArguments((t276 = dialogTitle, t276 == null ? "" : t276), {fileFilter: fileFilter, fileName: (t276$ = fileName, t276$ == null ? "" : t276$), initialDirectory: (t276$0 = initialDirectory, t276$0 == null ? "" : t276$0), saveFile: true});
        return yield utils$3.runExecutableWithArguments(executable, $arguments);
      }).bind(this));
    }
    [S$0._getPathToExecutable]() {
      return async.async(core.String, function* _getPathToExecutable() {
        try {
          try {
            return yield utils$3.isExecutableOnPath("qarma");
          } catch (e) {
            let ex = dart.getThrown(e);
            if (core.Exception.is(ex)) {
              return yield utils$3.isExecutableOnPath("kdialog");
            } else
              throw e;
          }
        } catch (e$) {
          let ex$ = dart.getThrown(e$);
          if (core.Exception.is(ex$)) {
            return yield utils$3.isExecutableOnPath("zenity");
          } else
            throw e$;
        }
      });
    }
    static ['_#new#tearOff']() {
      return new file_picker_linux.FilePickerLinux.new();
    }
  };
  (file_picker_linux.FilePickerLinux.new = function() {
    file_picker_linux.FilePickerLinux.__proto__.new.call(this);
    ;
  }).prototype = file_picker_linux.FilePickerLinux.prototype;
  dart.addTypeTests(file_picker_linux.FilePickerLinux);
  dart.addTypeCaches(file_picker_linux.FilePickerLinux);
  dart.setMethodSignature(file_picker_linux.FilePickerLinux, () => ({
    __proto__: dart.getMethods(file_picker_linux.FilePickerLinux.__proto__),
    [S$0._getPathToExecutable]: dart.fnType(async.Future$(core.String), [])
  }));
  dart.setLibraryUri(file_picker_linux.FilePickerLinux, I[177]);
  stub.filePickerWithFFI = function filePickerWithFFI() {
    return dart.throw(new core.UnimplementedError.new("Unsupported"));
  };
  authentication_challenge.AuthenticationChallenge = class AuthenticationChallenge extends core.Object {
    get scheme() {
      return this[S$0.scheme];
    }
    set scheme(value) {
      super.scheme = value;
    }
    get parameters() {
      return this[S$0.parameters$1];
    }
    set parameters(value) {
      super.parameters = value;
    }
    static parseHeader(header) {
      return utils$4.wrapFormatException(T$.ListOfAuthenticationChallenge(), "authentication header", header, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(header);
        scanner.scan(scan.whitespace);
        let challenges = scan.parseList(authentication_challenge.AuthenticationChallenge, scanner, dart.fn(() => {
          let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner, {whitespaceName: "\" \" or \"=\""});
          let params = new (T$.IdentityMapOfString$String()).new();
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
          }
          authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params);
          let beforeComma = scanner.position;
          while (scanner.scan(",")) {
            scanner.scan(scan.whitespace);
            if (scanner.matches(",") || scanner.isDone) continue;
            scanner.expect(scan.token, {name: "a token"});
            let name = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
            scanner.scan(scan.whitespace);
            if (!scanner.scan("=")) {
              scanner.position = beforeComma;
              break;
            }
            scanner.scan(scan.whitespace);
            if (scanner.scan(scan.token)) {
              params[S$.$_set](name, dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
            } else {
              params[S$.$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
            }
            scanner.scan(scan.whitespace);
            beforeComma = scanner.position;
          }
          return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
        }, T$.VoidToAuthenticationChallenge()));
        scanner.expectDone();
        return challenges;
      }, T$.VoidToListOfAuthenticationChallenge()));
    }
    static parse(challenge) {
      return utils$4.wrapFormatException(authentication_challenge.AuthenticationChallenge, "authentication challenge", challenge, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(challenge);
        scanner.scan(scan.whitespace);
        let scheme = authentication_challenge.AuthenticationChallenge._scanScheme(scanner);
        let params = new (T$.IdentityMapOfString$String()).new();
        scan.parseList(dart.void, scanner, dart.fn(() => authentication_challenge.AuthenticationChallenge._scanAuthParam(scanner, params), T$.VoidTovoid()));
        scanner.expectDone();
        return new authentication_challenge.AuthenticationChallenge.new(scheme, params);
      }, T$.VoidToAuthenticationChallenge()));
    }
    static ['_#parse#tearOff'](challenge) {
      return authentication_challenge.AuthenticationChallenge.parse(challenge);
    }
    static _scanScheme(scanner, opts) {
      let whitespaceName = opts && 'whitespaceName' in opts ? opts.whitespaceName : null;
      scanner.expect(scan.token, {name: "a token"});
      let scheme = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[S$.$toLowerCase]();
      scanner.scan(scan.whitespace);
      if (scanner.lastMatch == null || !dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))[S$.$contains](" ")) {
        scanner.expect(" ", {name: whitespaceName});
      }
      return scheme;
    }
    static _scanAuthParam(scanner, params) {
      scanner.expect(scan.token, {name: "a token"});
      let name = dart.nullCheck(scanner.lastMatch)._get(0);
      scanner.scan(scan.whitespace);
      scanner.expect("=");
      scanner.scan(scan.whitespace);
      if (scanner.scan(scan.token)) {
        params[S$.$_set](name, dart.nullCheck(scanner.lastMatch)._get(0));
      } else {
        params[S$.$_set](name, scan.expectQuotedString(scanner, {name: "a token or a quoted string"}));
      }
      scanner.scan(scan.whitespace);
    }
    static ['_#new#tearOff'](scheme, parameters) {
      return new authentication_challenge.AuthenticationChallenge.new(scheme, parameters);
    }
  };
  (authentication_challenge.AuthenticationChallenge.new = function(scheme, parameters) {
    this[S$0.scheme] = scheme;
    this[S$0.parameters$1] = new (T$.UnmodifiableMapViewOfString$String()).new(new (T$.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = authentication_challenge.AuthenticationChallenge.prototype;
  dart.addTypeTests(authentication_challenge.AuthenticationChallenge);
  dart.addTypeCaches(authentication_challenge.AuthenticationChallenge);
  dart.setStaticMethodSignature(authentication_challenge.AuthenticationChallenge, () => ['parseHeader', 'parse', '_scanScheme', '_scanAuthParam']);
  dart.setLibraryUri(authentication_challenge.AuthenticationChallenge, I[178]);
  dart.setFieldSignature(authentication_challenge.AuthenticationChallenge, () => ({
    __proto__: dart.getFields(authentication_challenge.AuthenticationChallenge.__proto__),
    scheme: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  const _is_CaseInsensitiveMap_default = Symbol('_is_CaseInsensitiveMap_default');
  case_insensitive_map.CaseInsensitiveMap$ = dart.generic(V => {
    class CaseInsensitiveMap extends canonicalized_map.CanonicalizedMap$(core.String, core.String, V) {
      static ['_#new#tearOff'](V) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).new();
      }
      static ['_#from#tearOff'](V, other) {
        return new (case_insensitive_map.CaseInsensitiveMap$(V)).from(other);
      }
    }
    (CaseInsensitiveMap.new = function() {
      CaseInsensitiveMap.__proto__.new.call(this, dart.fn(key => key[S$.$toLowerCase](), T$.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    (CaseInsensitiveMap.from = function(other) {
      CaseInsensitiveMap.__proto__.from.call(this, other, dart.fn(key => key[S$.$toLowerCase](), T$.StringToString()));
      ;
    }).prototype = CaseInsensitiveMap.prototype;
    dart.addTypeTests(CaseInsensitiveMap);
    CaseInsensitiveMap.prototype[_is_CaseInsensitiveMap_default] = true;
    dart.addTypeCaches(CaseInsensitiveMap);
    dart.setLibraryUri(CaseInsensitiveMap, I[179]);
    return CaseInsensitiveMap;
  });
  case_insensitive_map.CaseInsensitiveMap = case_insensitive_map.CaseInsensitiveMap$();
  dart.addTypeTests(case_insensitive_map.CaseInsensitiveMap, _is_CaseInsensitiveMap_default);
  chunked_coding.ChunkedCodingCodec = class ChunkedCodingCodec extends convert.Codec$(core.List$(core.int), core.List$(core.int)) {
    get encoder() {
      return encoder.chunkedCodingEncoder;
    }
    get decoder() {
      return decoder.chunkedCodingDecoder;
    }
    static ['_#_#tearOff']() {
      return new chunked_coding.ChunkedCodingCodec.__();
    }
  };
  (chunked_coding.ChunkedCodingCodec.__ = function() {
    chunked_coding.ChunkedCodingCodec.__proto__.new.call(this);
    ;
  }).prototype = chunked_coding.ChunkedCodingCodec.prototype;
  dart.addTypeTests(chunked_coding.ChunkedCodingCodec);
  dart.addTypeCaches(chunked_coding.ChunkedCodingCodec);
  dart.setGetterSignature(chunked_coding.ChunkedCodingCodec, () => ({
    __proto__: dart.getGetters(chunked_coding.ChunkedCodingCodec.__proto__),
    encoder: encoder.ChunkedCodingEncoder,
    decoder: decoder.ChunkedCodingDecoder
  }));
  dart.setLibraryUri(chunked_coding.ChunkedCodingCodec, I[180]);
  dart.defineLazy(chunked_coding, {
    /*chunked_coding.chunkedCoding*/get chunkedCoding() {
      return C[310] || CT.C310;
    }
  }, false);
  http_date.formatHttpDate = function formatHttpDate(date) {
    let t280;
    date = date.toUtc();
    let buffer = (t280 = new core.StringBuffer.new(), (() => {
      t280.write(http_date._weekdays[S$.$_get](date.weekday - 1));
      t280.write(", ");
      t280.write(date.day <= 9 ? "0" : "");
      t280.write(date.day[S$.$toString]());
      t280.write(" ");
      t280.write(http_date._months[S$.$_get](date.month - 1));
      t280.write(" ");
      t280.write(date.year[S$.$toString]());
      t280.write(date.hour <= 9 ? " 0" : " ");
      t280.write(date.hour[S$.$toString]());
      t280.write(date.minute <= 9 ? ":0" : ":");
      t280.write(date.minute[S$.$toString]());
      t280.write(date.second <= 9 ? ":0" : ":");
      t280.write(date.second[S$.$toString]());
      t280.write(" GMT");
      return t280;
    })());
    return buffer.toString();
  };
  http_date.parseHttpDate = function parseHttpDate(date) {
    return utils$4.wrapFormatException(core.DateTime, "HTTP date", date, dart.fn(() => {
      let scanner = new string_scanner.StringScanner.new(date);
      if (scanner.scan(http_date._longWeekdayRegExp)) {
        scanner.expect(", ");
        let day = http_date._parseInt(scanner, 2);
        scanner.expect("-");
        let month = http_date._parseMonth(scanner);
        scanner.expect("-");
        let year = 1900 + http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(http_date._shortWeekdayRegExp);
      if (scanner.scan(", ")) {
        let day = http_date._parseInt(scanner, 2);
        scanner.expect(" ");
        let month = http_date._parseMonth(scanner);
        scanner.expect(" ");
        let year = http_date._parseInt(scanner, 4);
        scanner.expect(" ");
        let time = http_date._parseTime(scanner);
        scanner.expect(" GMT");
        scanner.expectDone();
        return http_date._makeDateTime(year, month, day, time);
      }
      scanner.expect(" ");
      let month = http_date._parseMonth(scanner);
      scanner.expect(" ");
      let day = scanner.scan(" ") ? http_date._parseInt(scanner, 1) : http_date._parseInt(scanner, 2);
      scanner.expect(" ");
      let time = http_date._parseTime(scanner);
      scanner.expect(" ");
      let year = http_date._parseInt(scanner, 4);
      scanner.expectDone();
      return http_date._makeDateTime(year, month, day, time);
    }, T$.VoidToDateTime()));
  };
  http_date._parseMonth = function _parseMonth(scanner) {
    scanner.expect(http_date._monthRegExp);
    return http_date._months[S$0.$indexOf](dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0))) + 1;
  };
  http_date._parseInt = function _parseInt(scanner, digits) {
    scanner.expect(http_date._digitRegExp);
    if (dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)).length !== digits) {
      scanner.error("expected a " + dart.str(digits) + "-digit number.");
    }
    return core.int.parse(dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0)));
  };
  http_date._parseTime = function _parseTime(scanner) {
    let hours = http_date._parseInt(scanner, 2);
    if (hours >= 24) scanner.error("hours may not be greater than 24.");
    scanner.expect(":");
    let minutes = http_date._parseInt(scanner, 2);
    if (minutes >= 60) scanner.error("minutes may not be greater than 60.");
    scanner.expect(":");
    let seconds = http_date._parseInt(scanner, 2);
    if (seconds >= 60) scanner.error("seconds may not be greater than 60.");
    return new core.DateTime.new(1, 1, 1, hours, minutes, seconds);
  };
  http_date._makeDateTime = function _makeDateTime(year, month, day, time) {
    let dateTime = new core.DateTime.utc(year, month, day, time.hour, time.minute, time.second);
    if (dateTime.month !== month) {
      dart.throw(new core.FormatException.new("invalid day '" + dart.str(day) + "' for month '" + dart.str(month) + "'."));
    }
    return dateTime;
  };
  dart.defineLazy(http_date, {
    /*http_date._weekdays*/get _weekdays() {
      return C[311] || CT.C311;
    },
    /*http_date._months*/get _months() {
      return C[312] || CT.C312;
    },
    /*http_date._shortWeekdayRegExp*/get _shortWeekdayRegExp() {
      return core.RegExp.new("Mon|Tue|Wed|Thu|Fri|Sat|Sun");
    },
    /*http_date._longWeekdayRegExp*/get _longWeekdayRegExp() {
      return core.RegExp.new("Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday");
    },
    /*http_date._monthRegExp*/get _monthRegExp() {
      return core.RegExp.new("Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec");
    },
    /*http_date._digitRegExp*/get _digitRegExp() {
      return core.RegExp.new("\\d+");
    }
  }, false);
  media_type.MediaType = class MediaType extends core.Object {
    get type() {
      return this[S$0.type$6];
    }
    set type(value) {
      super.type = value;
    }
    get subtype() {
      return this[S$0.subtype];
    }
    set subtype(value) {
      super.subtype = value;
    }
    get parameters() {
      return this[S$0.parameters$2];
    }
    set parameters(value) {
      super.parameters = value;
    }
    get mimeType() {
      return this.type + "/" + this.subtype;
    }
    static parse(mediaType) {
      return utils$4.wrapFormatException(media_type.MediaType, "media type", mediaType, dart.fn(() => {
        let scanner = new string_scanner.StringScanner.new(mediaType);
        scanner.scan(scan.whitespace);
        scanner.expect(scan.token);
        let type = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.expect("/");
        scanner.expect(scan.token);
        let subtype = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
        scanner.scan(scan.whitespace);
        let parameters = new (T$.IdentityMapOfString$String()).new();
        while (scanner.scan(";")) {
          scanner.scan(scan.whitespace);
          scanner.expect(scan.token);
          let attribute = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          scanner.expect("=");
          let value = null;
          if (scanner.scan(scan.token)) {
            value = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
          } else {
            value = scan.expectQuotedString(scanner);
          }
          scanner.scan(scan.whitespace);
          parameters[S$.$_set](attribute, value);
        }
        scanner.expectDone();
        return new media_type.MediaType.new(type, subtype, parameters);
      }, T$.VoidToMediaType()));
    }
    static ['_#parse#tearOff'](mediaType) {
      return media_type.MediaType.parse(mediaType);
    }
    static ['_#new#tearOff'](type, subtype, parameters = null) {
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    change(opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let subtype = opts && 'subtype' in opts ? opts.subtype : null;
      let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let clearParameters = opts && 'clearParameters' in opts ? opts.clearParameters : false;
      if (mimeType != null) {
        if (type != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [type] and [mimeType]."));
        } else if (subtype != null) {
          dart.throw(new core.ArgumentError.new("You may not pass both [subtype] and " + "[mimeType]."));
        }
        let segments = mimeType[S$.$split]("/");
        if (segments[S$.$length] !== 2) {
          dart.throw(new core.FormatException.new("Invalid mime type \"" + dart.str(mimeType) + "\"."));
        }
        type = segments[S$.$_get](0);
        subtype = segments[S$.$_get](1);
      }
      type == null ? type = this.type : null;
      subtype == null ? subtype = this.subtype : null;
      parameters == null ? parameters = new (T$.IdentityMapOfString$String()).new() : null;
      if (!clearParameters) {
        let newParameters = parameters;
        parameters = T$.LinkedHashMapOfString$String().from(this.parameters);
        parameters[S$.$addAll](newParameters);
      }
      return new media_type.MediaType.new(type, subtype, parameters);
    }
    toString() {
      let t280;
      let buffer = (t280 = new core.StringBuffer.new(), (() => {
        t280.write(this.type);
        t280.write("/");
        t280.write(this.subtype);
        return t280;
      })());
      this.parameters[S$.$forEach](dart.fn((attribute, value) => {
        let t280;
        buffer.write("; " + attribute + "=");
        if (scan.nonToken.hasMatch(value)) {
          t280 = buffer;
          (() => {
            t280.write("\"");
            t280.write(value[S$0.$replaceAllMapped](media_type._escapedChar, dart.fn(match => "\\" + dart.str(match._get(0)), T$.MatchToString())));
            t280.write("\"");
            return t280;
          })();
        } else {
          buffer.write(value);
        }
      }, T$.StringAndStringTovoid()));
      return buffer.toString();
    }
  };
  (media_type.MediaType.new = function(type, subtype, parameters = null) {
    this[S$0.type$6] = type[S$.$toLowerCase]();
    this[S$0.subtype] = subtype[S$.$toLowerCase]();
    this[S$0.parameters$2] = new (T$.UnmodifiableMapViewOfString$String()).new(parameters == null ? new (T$.IdentityMapOfString$String()).new() : new (T$.CaseInsensitiveMapOfString()).from(parameters));
    ;
  }).prototype = media_type.MediaType.prototype;
  dart.addTypeTests(media_type.MediaType);
  dart.addTypeCaches(media_type.MediaType);
  dart.setMethodSignature(media_type.MediaType, () => ({
    __proto__: dart.getMethods(media_type.MediaType.__proto__),
    change: dart.fnType(media_type.MediaType, [], {clearParameters: core.bool, mimeType: dart.nullable(core.String), parameters: dart.nullable(core.Map$(core.String, core.String)), subtype: dart.nullable(core.String), type: dart.nullable(core.String)}, {})
  }));
  dart.setStaticMethodSignature(media_type.MediaType, () => ['parse']);
  dart.setGetterSignature(media_type.MediaType, () => ({
    __proto__: dart.getGetters(media_type.MediaType.__proto__),
    mimeType: core.String
  }));
  dart.setLibraryUri(media_type.MediaType, I[181]);
  dart.setFieldSignature(media_type.MediaType, () => ({
    __proto__: dart.getFields(media_type.MediaType.__proto__),
    type: dart.finalFieldType(core.String),
    subtype: dart.finalFieldType(core.String),
    parameters: dart.finalFieldType(core.Map$(core.String, core.String))
  }));
  dart.defineExtensionMethods(media_type.MediaType, ['toString']);
  dart.defineLazy(media_type, {
    /*media_type._escapedChar*/get _escapedChar() {
      return core.RegExp.new("[\"\\x00-\\x1F\\x7F]");
    }
  }, false);
  full_metadata.FullMetadata = class FullMetadata extends core.Object {
    static ['_#new#tearOff'](_metadata) {
      return new full_metadata.FullMetadata.new(_metadata);
    }
    get bucket() {
      return T$.StringN().as(this[S$0._metadata$1][S$.$_get]("bucket"));
    }
    get cacheControl() {
      return T$.StringN().as(this[S$0._metadata$1][S$.$_get]("cacheControl"));
    }
    get contentDisposition() {
      return T$.StringN().as(this[S$0._metadata$1][S$.$_get]("contentDisposition"));
    }
    get contentEncoding() {
      return T$.StringN().as(this[S$0._metadata$1][S$.$_get]("contentEncoding"));
    }
    get contentLanguage() {
      return T$.StringN().as(this[S$0._metadata$1][S$.$_get]("contentLanguage"));
    }
    get contentType() {
      return T$.StringN().as(this[S$0._metadata$1][S$.$_get]("contentType"));
    }
    get customMetadata() {
      return this[S$0._metadata$1][S$.$_get]("customMetadata") == null ? null : T$.LinkedHashMapOfString$String().from(core.Map.as(this[S$0._metadata$1][S$.$_get]("customMetadata")));
    }
    get fullPath() {
      return core.String.as(this[S$0._metadata$1][S$.$_get]("fullPath"));
    }
    get generation() {
      return T$.StringN().as(this[S$0._metadata$1][S$.$_get]("generation"));
    }
    get metadataGeneration() {
      return T$.StringN().as(this[S$0._metadata$1][S$.$_get]("metadataGeneration"));
    }
    get md5Hash() {
      return T$.StringN().as(this[S$0._metadata$1][S$.$_get]("md5Hash"));
    }
    get metageneration() {
      return T$.StringN().as(this[S$0._metadata$1][S$.$_get]("metageneration"));
    }
    get name() {
      return core.String.as(this[S$0._metadata$1][S$.$_get]("name"));
    }
    get size() {
      return T$.intN().as(this[S$0._metadata$1][S$.$_get]("size"));
    }
    get timeCreated() {
      return this[S$0._metadata$1][S$.$_get]("creationTimeMillis") == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(this[S$0._metadata$1][S$.$_get]("creationTimeMillis")));
    }
    get updated() {
      return this[S$0._metadata$1][S$.$_get]("updatedTimeMillis") == null ? null : new core.DateTime.fromMillisecondsSinceEpoch(core.int.as(this[S$0._metadata$1][S$.$_get]("updatedTimeMillis")));
    }
  };
  (full_metadata.FullMetadata.new = function(_metadata) {
    this[S$0._metadata$1] = _metadata;
    ;
  }).prototype = full_metadata.FullMetadata.prototype;
  dart.addTypeTests(full_metadata.FullMetadata);
  dart.addTypeCaches(full_metadata.FullMetadata);
  dart.setGetterSignature(full_metadata.FullMetadata, () => ({
    __proto__: dart.getGetters(full_metadata.FullMetadata.__proto__),
    bucket: dart.nullable(core.String),
    cacheControl: dart.nullable(core.String),
    contentDisposition: dart.nullable(core.String),
    contentEncoding: dart.nullable(core.String),
    contentLanguage: dart.nullable(core.String),
    contentType: dart.nullable(core.String),
    customMetadata: dart.nullable(core.Map$(core.String, core.String)),
    fullPath: core.String,
    generation: dart.nullable(core.String),
    metadataGeneration: dart.nullable(core.String),
    md5Hash: dart.nullable(core.String),
    metageneration: dart.nullable(core.String),
    name: core.String,
    size: dart.nullable(core.int),
    timeCreated: dart.nullable(core.DateTime),
    updated: dart.nullable(core.DateTime)
  }));
  dart.setLibraryUri(full_metadata.FullMetadata, I[182]);
  dart.setFieldSignature(full_metadata.FullMetadata, () => ({
    __proto__: dart.getFields(full_metadata.FullMetadata.__proto__),
    [S$0._metadata$1]: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  list_options.ListOptions = class ListOptions extends core.Object {
    get maxResults() {
      return this[S$0.maxResults];
    }
    set maxResults(value) {
      super.maxResults = value;
    }
    get pageToken() {
      return this[S$0.pageToken];
    }
    set pageToken(value) {
      super.pageToken = value;
    }
    static ['_#new#tearOff'](opts) {
      let maxResults = opts && 'maxResults' in opts ? opts.maxResults : null;
      let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
      return new list_options.ListOptions.new({maxResults: maxResults, pageToken: pageToken});
    }
  };
  (list_options.ListOptions.new = function(opts) {
    let maxResults = opts && 'maxResults' in opts ? opts.maxResults : null;
    let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
    this[S$0.maxResults] = maxResults;
    this[S$0.pageToken] = pageToken;
    ;
  }).prototype = list_options.ListOptions.prototype;
  dart.addTypeTests(list_options.ListOptions);
  dart.addTypeCaches(list_options.ListOptions);
  dart.setLibraryUri(list_options.ListOptions, I[183]);
  dart.setFieldSignature(list_options.ListOptions, () => ({
    __proto__: dart.getFields(list_options.ListOptions.__proto__),
    maxResults: dart.finalFieldType(dart.nullable(core.int)),
    pageToken: dart.finalFieldType(dart.nullable(core.String))
  }));
  platform_interface_list_result.ListResultPlatform = class ListResultPlatform extends plugin_platform_interface.PlatformInterface {
    get storage() {
      return this[S$0.storage$5];
    }
    set storage(value) {
      super.storage = value;
    }
    get nextPageToken() {
      return this[S$0.nextPageToken];
    }
    set nextPageToken(value) {
      super.nextPageToken = value;
    }
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_list_result.ListResultPlatform._token);
    }
    get items() {
      dart.throw(new core.UnimplementedError.new("items is not implemented"));
    }
    get prefixes() {
      dart.throw(new core.UnimplementedError.new("prefixes is not implemented"));
    }
  };
  (platform_interface_list_result.ListResultPlatform.new = function(storage, nextPageToken) {
    this[S$0.storage$5] = storage;
    this[S$0.nextPageToken] = nextPageToken;
    platform_interface_list_result.ListResultPlatform.__proto__.new.call(this, {token: platform_interface_list_result.ListResultPlatform._token});
    ;
  }).prototype = platform_interface_list_result.ListResultPlatform.prototype;
  dart.addTypeTests(platform_interface_list_result.ListResultPlatform);
  dart.addTypeCaches(platform_interface_list_result.ListResultPlatform);
  dart.setStaticMethodSignature(platform_interface_list_result.ListResultPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_list_result.ListResultPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_list_result.ListResultPlatform.__proto__),
    items: core.List$(platform_interface_reference.ReferencePlatform),
    prefixes: core.List$(platform_interface_reference.ReferencePlatform)
  }));
  dart.setLibraryUri(platform_interface_list_result.ListResultPlatform, I[184]);
  dart.setFieldSignature(platform_interface_list_result.ListResultPlatform, () => ({
    __proto__: dart.getFields(platform_interface_list_result.ListResultPlatform.__proto__),
    storage: dart.finalFieldType(dart.nullable(platform_interface_firebase_storage.FirebaseStoragePlatform)),
    nextPageToken: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(platform_interface_list_result.ListResultPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_list_result.ListResultPlatform, {
    /*platform_interface_list_result.ListResultPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_task.TaskPlatform = class TaskPlatform extends plugin_platform_interface.PlatformInterface {
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_task.TaskPlatform._token);
    }
    get snapshotEvents() {
      dart.throw(new core.UnimplementedError.new("snapshotEvents is not implemented"));
    }
    get snapshot() {
      dart.throw(new core.UnimplementedError.new("snapshot is not implemented"));
    }
    get onComplete() {
      dart.throw(new core.UnimplementedError.new("onComplete is not implemented"));
    }
    pause() {
      dart.throw(new core.UnimplementedError.new("pause() is not implemented"));
    }
    resume() {
      dart.throw(new core.UnimplementedError.new("resume() is not implemented"));
    }
    cancel() {
      dart.throw(new core.UnimplementedError.new("cancel() is not implemented"));
    }
  };
  (platform_interface_task.TaskPlatform.new = function() {
    platform_interface_task.TaskPlatform.__proto__.new.call(this, {token: platform_interface_task.TaskPlatform._token});
    ;
  }).prototype = platform_interface_task.TaskPlatform.prototype;
  dart.addTypeTests(platform_interface_task.TaskPlatform);
  dart.addTypeCaches(platform_interface_task.TaskPlatform);
  dart.setMethodSignature(platform_interface_task.TaskPlatform, () => ({
    __proto__: dart.getMethods(platform_interface_task.TaskPlatform.__proto__),
    pause: dart.fnType(async.Future$(core.bool), []),
    resume: dart.fnType(async.Future$(core.bool), []),
    cancel: dart.fnType(async.Future$(core.bool), [])
  }));
  dart.setStaticMethodSignature(platform_interface_task.TaskPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_task.TaskPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_task.TaskPlatform.__proto__),
    snapshotEvents: async.Stream$(platform_interface_task_snapshot.TaskSnapshotPlatform),
    snapshot: platform_interface_task_snapshot.TaskSnapshotPlatform,
    onComplete: async.Future$(platform_interface_task_snapshot.TaskSnapshotPlatform)
  }));
  dart.setLibraryUri(platform_interface_task.TaskPlatform, I[185]);
  dart.setStaticFieldSignature(platform_interface_task.TaskPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_task.TaskPlatform, {
    /*platform_interface_task.TaskPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  platform_interface_task_snapshot.TaskSnapshotPlatform = class TaskSnapshotPlatform extends plugin_platform_interface.PlatformInterface {
    static verify(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, platform_interface_task_snapshot.TaskSnapshotPlatform._token);
    }
    get bytesTransferred() {
      return core.int.as(this[S$0._data$5][S$.$_get]("bytesTransferred"));
    }
    get metadata() {
      return this[S$0._data$5][S$.$_get]("metadata") == null ? null : new full_metadata.FullMetadata.new(T$.LinkedHashMapOfString$dynamic().from(core.Map.as(this[S$0._data$5][S$.$_get]("metadata"))));
    }
    get ref() {
      dart.throw(new core.UnimplementedError.new("ref is not implemented"));
    }
    get state() {
      return this[S$0._state];
    }
    get totalBytes() {
      return core.int.as(this[S$0._data$5][S$.$_get]("totalBytes"));
    }
  };
  (platform_interface_task_snapshot.TaskSnapshotPlatform.new = function(_state, _data) {
    this[S$0._state] = _state;
    this[S$0._data$5] = _data;
    platform_interface_task_snapshot.TaskSnapshotPlatform.__proto__.new.call(this, {token: platform_interface_task_snapshot.TaskSnapshotPlatform._token});
    ;
  }).prototype = platform_interface_task_snapshot.TaskSnapshotPlatform.prototype;
  dart.addTypeTests(platform_interface_task_snapshot.TaskSnapshotPlatform);
  dart.addTypeCaches(platform_interface_task_snapshot.TaskSnapshotPlatform);
  dart.setStaticMethodSignature(platform_interface_task_snapshot.TaskSnapshotPlatform, () => ['verify']);
  dart.setGetterSignature(platform_interface_task_snapshot.TaskSnapshotPlatform, () => ({
    __proto__: dart.getGetters(platform_interface_task_snapshot.TaskSnapshotPlatform.__proto__),
    bytesTransferred: core.int,
    metadata: dart.nullable(full_metadata.FullMetadata),
    ref: platform_interface_reference.ReferencePlatform,
    state: task_state.TaskState,
    totalBytes: core.int
  }));
  dart.setLibraryUri(platform_interface_task_snapshot.TaskSnapshotPlatform, I[186]);
  dart.setFieldSignature(platform_interface_task_snapshot.TaskSnapshotPlatform, () => ({
    __proto__: dart.getFields(platform_interface_task_snapshot.TaskSnapshotPlatform.__proto__),
    [S$0._state]: dart.finalFieldType(task_state.TaskState),
    [S$0._data$5]: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  dart.setStaticFieldSignature(platform_interface_task_snapshot.TaskSnapshotPlatform, () => ['_token']);
  dart.defineLazy(platform_interface_task_snapshot.TaskSnapshotPlatform, {
    /*platform_interface_task_snapshot.TaskSnapshotPlatform._token*/get _token() {
      return new core.Object.new();
    }
  }, false);
  put_string_format.PutStringFormat = class PutStringFormat extends core._Enum {
    [S$0._enumToString]() {
      return "PutStringFormat." + this[S$0._name];
    }
  };
  (put_string_format.PutStringFormat.new = function(index, name) {
    put_string_format.PutStringFormat.__proto__.new.call(this, index, name);
    ;
  }).prototype = put_string_format.PutStringFormat.prototype;
  dart.addTypeTests(put_string_format.PutStringFormat);
  dart.addTypeCaches(put_string_format.PutStringFormat);
  dart.setMethodSignature(put_string_format.PutStringFormat, () => ({
    __proto__: dart.getMethods(put_string_format.PutStringFormat.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(put_string_format.PutStringFormat, I[187]);
  dart.setStaticFieldSignature(put_string_format.PutStringFormat, () => ['values', 'raw', 'base64', 'base64Url', 'dataUrl']);
  dart.defineLazy(put_string_format.PutStringFormat, {
    /*put_string_format.PutStringFormat.values*/get values() {
      return C[313] || CT.C313;
    },
    /*put_string_format.PutStringFormat.raw*/get raw() {
      return C[265] || CT.C265;
    },
    /*put_string_format.PutStringFormat.base64*/get base64() {
      return C[314] || CT.C314;
    },
    /*put_string_format.PutStringFormat.base64Url*/get base64Url() {
      return C[315] || CT.C315;
    },
    /*put_string_format.PutStringFormat.dataUrl*/get dataUrl() {
      return C[316] || CT.C316;
    }
  }, false);
  settable_metadata.SettableMetadata = class SettableMetadata extends core.Object {
    get cacheControl() {
      return this[S$0.cacheControl];
    }
    set cacheControl(value) {
      super.cacheControl = value;
    }
    get contentDisposition() {
      return this[S$0.contentDisposition];
    }
    set contentDisposition(value) {
      super.contentDisposition = value;
    }
    get contentEncoding() {
      return this[S$0.contentEncoding];
    }
    set contentEncoding(value) {
      super.contentEncoding = value;
    }
    get contentLanguage() {
      return this[S$0.contentLanguage];
    }
    set contentLanguage(value) {
      super.contentLanguage = value;
    }
    get contentType() {
      return this[S$0.contentType];
    }
    set contentType(value) {
      super.contentType = value;
    }
    get customMetadata() {
      return this[S$0.customMetadata];
    }
    set customMetadata(value) {
      super.customMetadata = value;
    }
    static ['_#new#tearOff'](opts) {
      let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
      let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
      let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
      let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
      return new settable_metadata.SettableMetadata.new({cacheControl: cacheControl, contentDisposition: contentDisposition, contentEncoding: contentEncoding, contentLanguage: contentLanguage, contentType: contentType, customMetadata: customMetadata});
    }
    asMap() {
      return new (T$.IdentityMapOfString$dynamic()).from(["cacheControl", this.cacheControl, "contentDisposition", this.contentDisposition, "contentEncoding", this.contentEncoding, "contentLanguage", this.contentLanguage, "contentType", this.contentType, "customMetadata", this.customMetadata]);
    }
  };
  (settable_metadata.SettableMetadata.new = function(opts) {
    let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
    let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
    let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
    let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
    let contentType = opts && 'contentType' in opts ? opts.contentType : null;
    let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
    this[S$0.cacheControl] = cacheControl;
    this[S$0.contentDisposition] = contentDisposition;
    this[S$0.contentEncoding] = contentEncoding;
    this[S$0.contentLanguage] = contentLanguage;
    this[S$0.contentType] = contentType;
    this[S$0.customMetadata] = customMetadata;
    ;
  }).prototype = settable_metadata.SettableMetadata.prototype;
  dart.addTypeTests(settable_metadata.SettableMetadata);
  dart.addTypeCaches(settable_metadata.SettableMetadata);
  dart.setMethodSignature(settable_metadata.SettableMetadata, () => ({
    __proto__: dart.getMethods(settable_metadata.SettableMetadata.__proto__),
    asMap: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(settable_metadata.SettableMetadata, I[188]);
  dart.setFieldSignature(settable_metadata.SettableMetadata, () => ({
    __proto__: dart.getFields(settable_metadata.SettableMetadata.__proto__),
    cacheControl: dart.finalFieldType(dart.nullable(core.String)),
    contentDisposition: dart.finalFieldType(dart.nullable(core.String)),
    contentEncoding: dart.finalFieldType(dart.nullable(core.String)),
    contentLanguage: dart.finalFieldType(dart.nullable(core.String)),
    contentType: dart.finalFieldType(dart.nullable(core.String)),
    customMetadata: dart.finalFieldType(dart.nullable(core.Map$(core.String, core.String)))
  }));
  task_state.TaskState = class TaskState extends core._Enum {
    [S$0._enumToString]() {
      return "TaskState." + this[S$0._name];
    }
  };
  (task_state.TaskState.new = function(index, name) {
    task_state.TaskState.__proto__.new.call(this, index, name);
    ;
  }).prototype = task_state.TaskState.prototype;
  dart.addTypeTests(task_state.TaskState);
  dart.addTypeCaches(task_state.TaskState);
  dart.setMethodSignature(task_state.TaskState, () => ({
    __proto__: dart.getMethods(task_state.TaskState.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(task_state.TaskState, I[189]);
  dart.setStaticFieldSignature(task_state.TaskState, () => ['values', 'paused', 'running', 'success', 'canceled', 'error']);
  dart.defineLazy(task_state.TaskState, {
    /*task_state.TaskState.values*/get values() {
      return C[317] || CT.C317;
    },
    /*task_state.TaskState.paused*/get paused() {
      return C[318] || CT.C318;
    },
    /*task_state.TaskState.running*/get running() {
      return C[319] || CT.C319;
    },
    /*task_state.TaskState.success*/get success() {
      return C[320] || CT.C320;
    },
    /*task_state.TaskState.canceled*/get canceled() {
      return C[321] || CT.C321;
    },
    /*task_state.TaskState.error*/get error() {
      return C[322] || CT.C322;
    }
  }, false);
  http.head = function head(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(response$.Response, dart.fn(client => client.head(url, {headers: headers}), T$.ClientToFutureOfResponse()));
  };
  http.get = function get(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(response$.Response, dart.fn(client => client.get(url, {headers: headers}), T$.ClientToFutureOfResponse()));
  };
  http.post = function post(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.post(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.put = function put(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.put(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.patch = function patch(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.patch(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.delete = function $delete(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    let body = opts && 'body' in opts ? opts.body : null;
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    return http._withClient(response$.Response, dart.fn(client => client.delete(url, {headers: headers, body: body, encoding: encoding}), T$.ClientToFutureOfResponse()));
  };
  http.read = function read(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(core.String, dart.fn(client => client.read(url, {headers: headers}), T$.ClientToFutureOfString()));
  };
  http.readBytes = function readBytes(url, opts) {
    let headers = opts && 'headers' in opts ? opts.headers : null;
    return http._withClient(typed_data.Uint8List, dart.fn(client => client.readBytes(url, {headers: headers}), T$.ClientToFutureOfUint8List()));
  };
  http._withClient = function _withClient(T, fn) {
    return async.async(T, function* _withClient() {
      let client = client$.Client.new();
      try {
        return yield fn(client);
      } finally {
        client.close();
      }
    });
  };
  metadata$.fbFullMetadataToFullMetadata = function fbFullMetadataToFullMetadata(metadata) {
    let t284, t284$;
    return new full_metadata.FullMetadata.new(new (T$.IdentityMapOfString$dynamic()).from(["bucket", metadata.bucket, "cacheControl", metadata.cacheControl, "contentDisposition", metadata.contentDisposition, "contentEncoding", metadata.contentEncoding, "contentLanguage", metadata.contentLanguage, "contentType", metadata.contentType, "customMetadata", metadata.customMetadata, "fullPath", metadata.fullPath, "generation", metadata.generation, "md5Hash", metadata.md5Hash, "metageneration", metadata.metageneration, "name", metadata.name, "size", metadata.size, "creationTimeMillis", (t284 = metadata.timeCreated, t284 == null ? null : t284.millisecondsSinceEpoch), "updatedTimeMillis", (t284$ = metadata.updated, t284$ == null ? null : t284$.millisecondsSinceEpoch)]));
  };
  metadata$.settableMetadataToFbSettableMetadata = function settableMetadataToFbSettableMetadata(metadata) {
    return storage.SettableMetadata.new({cacheControl: metadata.cacheControl, contentDisposition: metadata.contentDisposition, contentEncoding: metadata.contentEncoding, contentLanguage: metadata.contentLanguage, contentType: metadata.contentType, customMetadata: metadata.customMetadata});
  };
  metadata$.settableMetadataToFbUploadMetadata = function settableMetadataToFbUploadMetadata(metadata, opts) {
    let md5Hash = opts && 'md5Hash' in opts ? opts.md5Hash : null;
    return storage.UploadMetadata.new({cacheControl: metadata.cacheControl, contentDisposition: metadata.contentDisposition, contentEncoding: metadata.contentEncoding, contentLanguage: metadata.contentLanguage, contentType: metadata.contentType, customMetadata: metadata.customMetadata, md5Hash: md5Hash});
  };
  metadata$.putStringFormatToString = function putStringFormatToString(format) {
    return metadata$._putStringFormatToFbStringFormat[S$.$_get](format);
  };
  dart.defineLazy(metadata$, {
    /*metadata$._putStringFormatToFbStringFormat*/get _putStringFormatToFbStringFormat() {
      return new (T$.LinkedMapOfPutStringFormat$String()).from([put_string_format.PutStringFormat.base64, dart.global.firebase_storage.StringFormat.BASE64, put_string_format.PutStringFormat.base64Url, dart.global.firebase_storage.StringFormat.BASE64URL, put_string_format.PutStringFormat.dataUrl, dart.global.firebase_storage.StringFormat.DATA_URL, put_string_format.PutStringFormat.raw, dart.global.firebase_storage.StringFormat.RAW]);
    },
    set _putStringFormatToFbStringFormat(value) {}
  }, false);
  task_web.TaskWeb = class TaskWeb extends platform_interface_task.TaskPlatform {
    static ['_#new#tearOff'](reference, task) {
      return new task_web.TaskWeb.new(reference, task);
    }
    get snapshotEvents() {
      return errors.guard(T$.StreamOfTaskSnapshotPlatform(), dart.fn(() => {
        let group = new (T$.StreamGroupOfTaskSnapshotPlatform()).broadcast();
        let onStateChangedStream = this[S$0._task].onStateChanged.map(platform_interface_task_snapshot.TaskSnapshotPlatform, dart.fn(snapshot => task.fbUploadTaskSnapshotToTaskSnapshot(this[S$0._reference], snapshot), T$.UploadTaskSnapshotToTaskSnapshotWeb()));
        group.add(onStateChangedStream);
        group.add(this.onComplete.asStream());
        return group.stream;
      }, T$.VoidToStreamOfTaskSnapshotPlatform()));
    }
    get onComplete() {
      return errors.guard(T$.FutureOfTaskSnapshotPlatform(), dart.fn(() => async.async(task_snapshot_web.TaskSnapshotWeb, (function*() {
        return task.fbUploadTaskSnapshotToTaskSnapshot(this[S$0._reference], yield this[S$0._task].future);
      }).bind(this)), T.VoidToFutureOfTaskSnapshotWeb()));
    }
    get snapshot() {
      return task.fbUploadTaskSnapshotToTaskSnapshot(this[S$0._reference], this[S$0._task].snapshot);
    }
    pause() {
      return async.async(core.bool, (function* pause() {
        if (this.snapshot.state === task_state.TaskState.paused) {
          return true;
        }
        let paused = this[S$0._task].pause();
        return this.snapshotEvents.takeWhile(dart.fn(snapshot => snapshot.state !== task_state.TaskState.paused, T.TaskSnapshotPlatformTobool())).last.then(core.bool, dart.fn(_ => paused, T.TaskSnapshotPlatformTobool()));
      }).bind(this));
    }
    resume() {
      return async.async(core.bool, (function* resume() {
        return this[S$0._task].resume();
      }).bind(this));
    }
    cancel() {
      return async.async(core.bool, (function* cancel() {
        if (this.snapshot.state === task_state.TaskState.canceled) {
          return true;
        }
        let canceled = this[S$0._task].cancel();
        return this.snapshotEvents.drain(dart.dynamic).then(core.bool, dart.fn(_ => canceled, T$.dynamicTobool()), {onError: dart.fn(_ => canceled, T$.dynamicTobool())});
      }).bind(this));
    }
  };
  (task_web.TaskWeb.new = function(reference, task) {
    this[S$0._reference] = reference;
    this[S$0._task] = task;
    task_web.TaskWeb.__proto__.new.call(this);
    ;
  }).prototype = task_web.TaskWeb.prototype;
  dart.addTypeTests(task_web.TaskWeb);
  dart.addTypeCaches(task_web.TaskWeb);
  dart.setLibraryUri(task_web.TaskWeb, I[190]);
  dart.setFieldSignature(task_web.TaskWeb, () => ({
    __proto__: dart.getFields(task_web.TaskWeb.__proto__),
    [S$0._reference]: dart.finalFieldType(platform_interface_reference.ReferencePlatform),
    [S$0._task]: dart.finalFieldType(storage.UploadTask)
  }));
  list.listOptionsToFbListOptions = function listOptionsToFbListOptions(options) {
    if (options == null) {
      return null;
    }
    return storage.ListOptions.new({maxResults: options.maxResults, pageToken: options.pageToken});
  };
  list.fbListResultToListResultWeb = function fbListResultToListResultWeb(storage, result) {
    return new list_result_web.ListResultWeb.new(storage, {nextPageToken: result.nextPageToken, items: result.items[S$.$map](core.String, dart.fn(item => item.fullPath, T.StorageReferenceToString()))[S$.$toList](), prefixes: result.prefixes[S$.$map](core.String, dart.fn(prefix => prefix.fullPath, T.StorageReferenceToString()))[S$.$toList]()});
  };
  metadata_cache.SettableMetadataCache = class SettableMetadataCache extends core.Object {
    store(incoming, opts) {
      let t284, t287, t287$, t287$0, t287$1, t287$2;
      let overwrite = opts && 'overwrite' in opts ? opts.overwrite : false;
      if (overwrite) {
        return this[S$0._cache$1] = (t284 = incoming, t284 == null ? new settable_metadata.SettableMetadata.new() : t284);
      }
      if (incoming == null) {
        return this[S$0._cache$1];
      }
      let newMetadata = (() => {
        let t284 = new (T$.IdentityMapOfString$String()).new();
        let t285 = incoming.customMetadata;
        if (t285 != null) t284[S$.$addAll](t285);
        let t286 = this[S$0._cache$1].customMetadata;
        if (t286 != null) t284[S$.$addAll](t286);
        return t284;
      })();
      return this[S$0._cache$1] = new settable_metadata.SettableMetadata.new({cacheControl: (t287 = this[S$0._cache$1].cacheControl, t287 == null ? incoming.cacheControl : t287), contentDisposition: (t287$ = this[S$0._cache$1].contentDisposition, t287$ == null ? incoming.contentDisposition : t287$), contentEncoding: (t287$0 = this[S$0._cache$1].contentEncoding, t287$0 == null ? incoming.contentEncoding : t287$0), contentLanguage: (t287$1 = this[S$0._cache$1].contentLanguage, t287$1 == null ? incoming.contentLanguage : t287$1), contentType: (t287$2 = this[S$0._cache$1].contentType, t287$2 == null ? incoming.contentType : t287$2), customMetadata: newMetadata[S$.$isEmpty] ? null : newMetadata});
    }
    static ['_#new#tearOff']() {
      return new metadata_cache.SettableMetadataCache.new();
    }
  };
  (metadata_cache.SettableMetadataCache.new = function() {
    this[S$0._cache$1] = new settable_metadata.SettableMetadata.new();
    ;
  }).prototype = metadata_cache.SettableMetadataCache.prototype;
  dart.addTypeTests(metadata_cache.SettableMetadataCache);
  dart.addTypeCaches(metadata_cache.SettableMetadataCache);
  dart.setMethodSignature(metadata_cache.SettableMetadataCache, () => ({
    __proto__: dart.getMethods(metadata_cache.SettableMetadataCache.__proto__),
    store: dart.fnType(settable_metadata.SettableMetadata, [dart.nullable(settable_metadata.SettableMetadata)], {overwrite: core.bool}, {})
  }));
  dart.setLibraryUri(metadata_cache.SettableMetadataCache, I[191]);
  dart.setFieldSignature(metadata_cache.SettableMetadataCache, () => ({
    __proto__: dart.getFields(metadata_cache.SettableMetadataCache.__proto__),
    [S$0._cache$1]: dart.fieldType(settable_metadata.SettableMetadata)
  }));
  method_channel_image_picker.MethodChannelImagePicker = class MethodChannelImagePicker extends image_picker_platform.ImagePickerPlatform {
    get channel() {
      return method_channel_image_picker._channel;
    }
    pickImage(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      return async.async(T.PickedFileN(), (function* pickImage() {
        let path = (yield this[S$0._getImagePath]({source: source, maxWidth: maxWidth, maxHeight: maxHeight, imageQuality: imageQuality, preferredCameraDevice: preferredCameraDevice}));
        return path != null ? new html$0.PickedFile.new(path) : null;
      }).bind(this));
    }
    pickMultiImage(opts) {
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      return async.async(T.ListNOfPickedFile(), (function* pickMultiImage() {
        let paths = (yield this[S$0._getMultiImagePath]({maxWidth: maxWidth, maxHeight: maxHeight, imageQuality: imageQuality}));
        if (paths == null) {
          return null;
        }
        return paths[S$.$map](html$0.PickedFile, dart.fn(path => new html$0.PickedFile.new(core.String.as(path)), T.dynamicToPickedFile()))[S$.$toList]();
      }).bind(this));
    }
    [S$0._getMultiImagePath](opts) {
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
      if (imageQuality != null && (dart.notNull(imageQuality) < 0 || dart.notNull(imageQuality) > 100)) {
        dart.throw(new core.ArgumentError.value(imageQuality, "imageQuality", "must be between 0 and 100"));
      }
      if (maxWidth != null && dart.notNull(maxWidth) < 0) {
        dart.throw(new core.ArgumentError.value(maxWidth, "maxWidth", "cannot be negative"));
      }
      if (maxHeight != null && dart.notNull(maxHeight) < 0) {
        dart.throw(new core.ArgumentError.value(maxHeight, "maxHeight", "cannot be negative"));
      }
      return method_channel_image_picker._channel.invokeMethod(T$.ListN(), "pickMultiImage", new (T$.IdentityMapOfString$dynamic()).from(["maxWidth", maxWidth, "maxHeight", maxHeight, "imageQuality", imageQuality, "requestFullMetadata", requestFullMetadata]));
    }
    [S$0._getImagePath](opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
      if (imageQuality != null && (dart.notNull(imageQuality) < 0 || dart.notNull(imageQuality) > 100)) {
        dart.throw(new core.ArgumentError.value(imageQuality, "imageQuality", "must be between 0 and 100"));
      }
      if (maxWidth != null && dart.notNull(maxWidth) < 0) {
        dart.throw(new core.ArgumentError.value(maxWidth, "maxWidth", "cannot be negative"));
      }
      if (maxHeight != null && dart.notNull(maxHeight) < 0) {
        dart.throw(new core.ArgumentError.value(maxHeight, "maxHeight", "cannot be negative"));
      }
      return method_channel_image_picker._channel.invokeMethod(core.String, "pickImage", new (T$.IdentityMapOfString$dynamic()).from(["source", source.index, "maxWidth", maxWidth, "maxHeight", maxHeight, "imageQuality", imageQuality, "cameraDevice", preferredCameraDevice.index, "requestFullMetadata", requestFullMetadata]));
    }
    pickVideo(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      let maxDuration = opts && 'maxDuration' in opts ? opts.maxDuration : null;
      return async.async(T.PickedFileN(), (function* pickVideo() {
        let path = (yield this[S$0._getVideoPath]({source: source, maxDuration: maxDuration, preferredCameraDevice: preferredCameraDevice}));
        return path != null ? new html$0.PickedFile.new(path) : null;
      }).bind(this));
    }
    [S$0._getVideoPath](opts) {
      let t287;
      let source = opts && 'source' in opts ? opts.source : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      let maxDuration = opts && 'maxDuration' in opts ? opts.maxDuration : null;
      return method_channel_image_picker._channel.invokeMethod(core.String, "pickVideo", new (T$.IdentityMapOfString$dynamic()).from(["source", source.index, "maxDuration", (t287 = maxDuration, t287 == null ? null : t287.inSeconds), "cameraDevice", preferredCameraDevice.index]));
    }
    retrieveLostData() {
      return async.async(lost_data.LostData, function* retrieveLostData() {
        let result = (yield method_channel_image_picker._channel.invokeMapMethod(core.String, dart.dynamic, "retrieve"));
        if (result == null) {
          return new lost_data.LostData.empty();
        }
        if (!(result[S$.$containsKey]("path") !== result[S$.$containsKey]("errorCode"))) dart.assertFailed(null, I[192], 158, 12, "result.containsKey('path') != result.containsKey('errorCode')");
        let type = T$.StringN().as(result[S$.$_get]("type"));
        if (!(type === "image" || type === "video")) dart.assertFailed(null, I[192], 161, 12, "type == kTypeImage || type == kTypeVideo");
        let retrieveType = null;
        if (type === "image") {
          retrieveType = retrieve_type.RetrieveType.image;
        } else if (type === "video") {
          retrieveType = retrieve_type.RetrieveType.video;
        }
        let exception = null;
        if (result[S$.$containsKey]("errorCode")) {
          exception = new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(result[S$.$_get]("errorCode"))), message: T$.StringN().as(result[S$.$_get]("errorMessage"))});
        }
        let path = T$.StringN().as(result[S$.$_get]("path"));
        return new lost_data.LostData.new({file: path != null ? new html$0.PickedFile.new(path) : null, exception: exception, type: retrieveType});
      });
    }
    getImage(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      return async.async(T$.XFileN(), (function* getImage() {
        let path = (yield this[S$0._getImagePath]({source: source, maxWidth: maxWidth, maxHeight: maxHeight, imageQuality: imageQuality, preferredCameraDevice: preferredCameraDevice}));
        return path != null ? new html$.XFile.new(path) : null;
      }).bind(this));
    }
    getImageFromSource(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let options = opts && 'options' in opts ? opts.options : C[63] || CT.C63;
      return async.async(T$.XFileN(), (function* getImageFromSource() {
        let path = (yield this[S$0._getImagePath]({source: source, maxHeight: options.maxHeight, maxWidth: options.maxWidth, imageQuality: options.imageQuality, preferredCameraDevice: options.preferredCameraDevice, requestFullMetadata: options.requestFullMetadata}));
        return path != null ? new html$.XFile.new(path) : null;
      }).bind(this));
    }
    getMultiImage(opts) {
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      return async.async(T.ListNOfXFile(), (function* getMultiImage() {
        let paths = (yield this[S$0._getMultiImagePath]({maxWidth: maxWidth, maxHeight: maxHeight, imageQuality: imageQuality}));
        if (paths == null) {
          return null;
        }
        return paths[S$.$map](html$.XFile, dart.fn(path => new html$.XFile.new(core.String.as(path)), T.dynamicToXFile()))[S$.$toList]();
      }).bind(this));
    }
    getMultiImageWithOptions(opts) {
      let options = opts && 'options' in opts ? opts.options : C[65] || CT.C65;
      return async.async(T$.ListOfXFile(), (function* getMultiImageWithOptions() {
        let paths = (yield this[S$0._getMultiImagePath]({maxWidth: options.imageOptions.maxWidth, maxHeight: options.imageOptions.maxHeight, imageQuality: options.imageOptions.imageQuality, requestFullMetadata: options.imageOptions.requestFullMetadata}));
        if (paths == null) {
          return T$.JSArrayOfXFile().of([]);
        }
        return paths[S$.$map](html$.XFile, dart.fn(path => new html$.XFile.new(core.String.as(path)), T.dynamicToXFile()))[S$.$toList]();
      }).bind(this));
    }
    getMedia(opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      return async.async(T$.ListOfXFile(), function* getMedia() {
        let t287;
        let imageOptions = options.imageOptions;
        let args = new (T$.IdentityMapOfString$dynamic()).from(["maxImageWidth", imageOptions.maxWidth, "maxImageHeight", imageOptions.maxHeight, "imageQuality", imageOptions.imageQuality, "allowMultiple", options.allowMultiple]);
        let paths = (yield method_channel_image_picker._channel.invokeMethod(T$.ListN(), "pickMedia", args).then(T.ListNOfXFile(), dart.fn(paths => {
          let t287;
          t287 = paths;
          return t287 == null ? null : t287[S$.$map](html$.XFile, dart.fn(path => new html$.XFile.new(core.String.as(path)), T.dynamicToXFile()))[S$.$toList]();
        }, T.ListNToListNOfXFile())));
        t287 = paths;
        return t287 == null ? T$.JSArrayOfXFile().of([]) : t287;
      });
    }
    getVideo(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      let maxDuration = opts && 'maxDuration' in opts ? opts.maxDuration : null;
      return async.async(T$.XFileN(), (function* getVideo() {
        let path = (yield this[S$0._getVideoPath]({source: source, maxDuration: maxDuration, preferredCameraDevice: preferredCameraDevice}));
        return path != null ? new html$.XFile.new(path) : null;
      }).bind(this));
    }
    getLostData() {
      return async.async(lost_data_response.LostDataResponse, function* getLostData() {
        let t287;
        let pickedFileList = null;
        let result = (yield method_channel_image_picker._channel.invokeMapMethod(core.String, dart.dynamic, "retrieve"));
        if (result == null) {
          return new lost_data_response.LostDataResponse.empty();
        }
        if (!(result[S$.$containsKey]("path") !== result[S$.$containsKey]("errorCode"))) dart.assertFailed(null, I[192], 304, 12, "result.containsKey('path') != result.containsKey('errorCode')");
        let type = T$.StringN().as(result[S$.$_get]("type"));
        if (!(type === "image" || type === "video" || type === "media")) dart.assertFailed(null, I[192], 308, 7, "type == kTypeImage || type == kTypeVideo || type == kTypeMedia");
        let retrieveType = null;
        switch (type) {
          case "image":
            {
              retrieveType = retrieve_type.RetrieveType.image;
              break;
            }
          case "video":
            {
              retrieveType = retrieve_type.RetrieveType.video;
              break;
            }
          case "media":
            {
              retrieveType = retrieve_type.RetrieveType.media;
              break;
            }
        }
        let exception = null;
        if (result[S$.$containsKey]("errorCode")) {
          exception = new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(result[S$.$_get]("errorCode"))), message: T$.StringN().as(result[S$.$_get]("errorMessage"))});
        }
        let path = T$.StringN().as(result[S$.$_get]("path"));
        let pathList = (t287 = T$.ListN().as(result[S$.$_get]("pathList")), t287 == null ? null : t287[S$.$cast](core.String));
        if (pathList != null) {
          pickedFileList = T$.JSArrayOfXFile().of([]);
          for (let path of pathList) {
            pickedFileList[S$.$add](new html$.XFile.new(path));
          }
        }
        return new lost_data_response.LostDataResponse.new({file: path != null ? new html$.XFile.new(path) : null, exception: exception, type: retrieveType, files: pickedFileList});
      });
    }
    static ['_#new#tearOff']() {
      return new method_channel_image_picker.MethodChannelImagePicker.new();
    }
  };
  (method_channel_image_picker.MethodChannelImagePicker.new = function() {
    method_channel_image_picker.MethodChannelImagePicker.__proto__.new.call(this);
    ;
  }).prototype = method_channel_image_picker.MethodChannelImagePicker.prototype;
  dart.addTypeTests(method_channel_image_picker.MethodChannelImagePicker);
  dart.addTypeCaches(method_channel_image_picker.MethodChannelImagePicker);
  dart.setMethodSignature(method_channel_image_picker.MethodChannelImagePicker, () => ({
    __proto__: dart.getMethods(method_channel_image_picker.MethodChannelImagePicker.__proto__),
    [S$0._getMultiImagePath]: dart.fnType(async.Future$(dart.nullable(core.List)), [], {imageQuality: dart.nullable(core.int), maxHeight: dart.nullable(core.double), maxWidth: dart.nullable(core.double), requestFullMetadata: core.bool}, {}),
    [S$0._getImagePath]: dart.fnType(async.Future$(dart.nullable(core.String)), [], {imageQuality: dart.nullable(core.int), maxHeight: dart.nullable(core.double), maxWidth: dart.nullable(core.double), preferredCameraDevice: camera_device.CameraDevice, requestFullMetadata: core.bool}, {source: image_source.ImageSource}),
    [S$0._getVideoPath]: dart.fnType(async.Future$(dart.nullable(core.String)), [], {maxDuration: dart.nullable(core.Duration), preferredCameraDevice: camera_device.CameraDevice}, {source: image_source.ImageSource})
  }));
  dart.setGetterSignature(method_channel_image_picker.MethodChannelImagePicker, () => ({
    __proto__: dart.getGetters(method_channel_image_picker.MethodChannelImagePicker.__proto__),
    channel: platform_channel.MethodChannel
  }));
  dart.setLibraryUri(method_channel_image_picker.MethodChannelImagePicker, I[193]);
  dart.defineLazy(method_channel_image_picker, {
    /*method_channel_image_picker._channel*/get _channel() {
      return C[323] || CT.C323;
    }
  }, false);
  camera_delegate.ImagePickerCameraDelegateOptions = class ImagePickerCameraDelegateOptions extends core.Object {
    get preferredCameraDevice() {
      return this[S$0.preferredCameraDevice];
    }
    set preferredCameraDevice(value) {
      super.preferredCameraDevice = value;
    }
    get maxVideoDuration() {
      return this[S$0.maxVideoDuration];
    }
    set maxVideoDuration(value) {
      super.maxVideoDuration = value;
    }
    static ['_#new#tearOff'](opts) {
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      let maxVideoDuration = opts && 'maxVideoDuration' in opts ? opts.maxVideoDuration : null;
      return new camera_delegate.ImagePickerCameraDelegateOptions.new({preferredCameraDevice: preferredCameraDevice, maxVideoDuration: maxVideoDuration});
    }
  };
  (camera_delegate.ImagePickerCameraDelegateOptions.new = function(opts) {
    let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
    let maxVideoDuration = opts && 'maxVideoDuration' in opts ? opts.maxVideoDuration : null;
    this[S$0.preferredCameraDevice] = preferredCameraDevice;
    this[S$0.maxVideoDuration] = maxVideoDuration;
    ;
  }).prototype = camera_delegate.ImagePickerCameraDelegateOptions.prototype;
  dart.addTypeTests(camera_delegate.ImagePickerCameraDelegateOptions);
  dart.addTypeCaches(camera_delegate.ImagePickerCameraDelegateOptions);
  dart.setLibraryUri(camera_delegate.ImagePickerCameraDelegateOptions, I[194]);
  dart.setFieldSignature(camera_delegate.ImagePickerCameraDelegateOptions, () => ({
    __proto__: dart.getFields(camera_delegate.ImagePickerCameraDelegateOptions.__proto__),
    preferredCameraDevice: dart.finalFieldType(camera_device.CameraDevice),
    maxVideoDuration: dart.finalFieldType(dart.nullable(core.Duration))
  }));
  camera_delegate.ImagePickerCameraDelegate = class ImagePickerCameraDelegate extends core.Object {};
  (camera_delegate.ImagePickerCameraDelegate.new = function() {
    ;
  }).prototype = camera_delegate.ImagePickerCameraDelegate.prototype;
  dart.addTypeTests(camera_delegate.ImagePickerCameraDelegate);
  dart.addTypeCaches(camera_delegate.ImagePickerCameraDelegate);
  dart.setLibraryUri(camera_delegate.ImagePickerCameraDelegate, I[194]);
  camera_device.CameraDevice = class CameraDevice extends core._Enum {
    [S$0._enumToString]() {
      return "CameraDevice." + this[S$0._name];
    }
  };
  (camera_device.CameraDevice.new = function(index, name) {
    camera_device.CameraDevice.__proto__.new.call(this, index, name);
    ;
  }).prototype = camera_device.CameraDevice.prototype;
  dart.addTypeTests(camera_device.CameraDevice);
  dart.addTypeCaches(camera_device.CameraDevice);
  dart.setMethodSignature(camera_device.CameraDevice, () => ({
    __proto__: dart.getMethods(camera_device.CameraDevice.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(camera_device.CameraDevice, I[195]);
  dart.setStaticFieldSignature(camera_device.CameraDevice, () => ['values', 'rear', 'front']);
  dart.defineLazy(camera_device.CameraDevice, {
    /*camera_device.CameraDevice.values*/get values() {
      return C[324] || CT.C324;
    },
    /*camera_device.CameraDevice.rear*/get rear() {
      return C[64] || CT.C64;
    },
    /*camera_device.CameraDevice.front*/get front() {
      return C[325] || CT.C325;
    }
  }, false);
  image_options.ImageOptions = class ImageOptions extends core.Object {
    get maxWidth() {
      return this[S$0.maxWidth];
    }
    set maxWidth(value) {
      super.maxWidth = value;
    }
    get maxHeight() {
      return this[S$0.maxHeight];
    }
    set maxHeight(value) {
      super.maxHeight = value;
    }
    get imageQuality() {
      return this[S$0.imageQuality];
    }
    set imageQuality(value) {
      super.imageQuality = value;
    }
    get requestFullMetadata() {
      return this[S$0.requestFullMetadata];
    }
    set requestFullMetadata(value) {
      super.requestFullMetadata = value;
    }
    static ['_#new#tearOff'](opts) {
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
      return new image_options.ImageOptions.new({maxHeight: maxHeight, maxWidth: maxWidth, imageQuality: imageQuality, requestFullMetadata: requestFullMetadata});
    }
    static ['_#createAndValidate#tearOff'](opts) {
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
      return new image_options.ImageOptions.createAndValidate({maxHeight: maxHeight, maxWidth: maxWidth, imageQuality: imageQuality, requestFullMetadata: requestFullMetadata});
    }
    static _validateOptions(opts) {
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      if (imageQuality != null && (dart.notNull(imageQuality) < 0 || dart.notNull(imageQuality) > 100)) {
        dart.throw(new core.ArgumentError.value(imageQuality, "imageQuality", "must be between 0 and 100"));
      }
      if (maxWidth != null && dart.notNull(maxWidth) < 0) {
        dart.throw(new core.ArgumentError.value(maxWidth, "maxWidth", "cannot be negative"));
      }
      if (maxHeight != null && dart.notNull(maxHeight) < 0) {
        dart.throw(new core.ArgumentError.value(maxHeight, "maxHeight", "cannot be negative"));
      }
    }
  };
  (image_options.ImageOptions.new = function(opts) {
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
    let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
    this[S$0.maxHeight] = maxHeight;
    this[S$0.maxWidth] = maxWidth;
    this[S$0.imageQuality] = imageQuality;
    this[S$0.requestFullMetadata] = requestFullMetadata;
    ;
  }).prototype = image_options.ImageOptions.prototype;
  (image_options.ImageOptions.createAndValidate = function(opts) {
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
    let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
    this[S$0.maxHeight] = maxHeight;
    this[S$0.maxWidth] = maxWidth;
    this[S$0.imageQuality] = imageQuality;
    this[S$0.requestFullMetadata] = requestFullMetadata;
    image_options.ImageOptions._validateOptions({maxWidth: this.maxWidth, maxHeight: this.maxHeight, imageQuality: this.imageQuality});
  }).prototype = image_options.ImageOptions.prototype;
  dart.addTypeTests(image_options.ImageOptions);
  dart.addTypeCaches(image_options.ImageOptions);
  dart.setStaticMethodSignature(image_options.ImageOptions, () => ['_validateOptions']);
  dart.setLibraryUri(image_options.ImageOptions, I[196]);
  dart.setFieldSignature(image_options.ImageOptions, () => ({
    __proto__: dart.getFields(image_options.ImageOptions.__proto__),
    maxWidth: dart.finalFieldType(dart.nullable(core.double)),
    maxHeight: dart.finalFieldType(dart.nullable(core.double)),
    imageQuality: dart.finalFieldType(dart.nullable(core.int)),
    requestFullMetadata: dart.finalFieldType(core.bool)
  }));
  image_options.ImagePickerOptions = class ImagePickerOptions extends image_options.ImageOptions {
    get preferredCameraDevice() {
      return this[S$0.preferredCameraDevice$1];
    }
    set preferredCameraDevice(value) {
      super.preferredCameraDevice = value;
    }
    static ['_#new#tearOff'](opts) {
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      return new image_options.ImagePickerOptions.new({maxHeight: maxHeight, maxWidth: maxWidth, imageQuality: imageQuality, requestFullMetadata: requestFullMetadata, preferredCameraDevice: preferredCameraDevice});
    }
    static ['_#createAndValidate#tearOff'](opts) {
      let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
      let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
      let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
      let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : null;
      let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
      return new image_options.ImagePickerOptions.createAndValidate({maxHeight: maxHeight, maxWidth: maxWidth, imageQuality: imageQuality, requestFullMetadata: requestFullMetadata, preferredCameraDevice: preferredCameraDevice});
    }
  };
  (image_options.ImagePickerOptions.new = function(opts) {
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
    let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
    let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
    this[S$0.preferredCameraDevice$1] = preferredCameraDevice;
    image_options.ImagePickerOptions.__proto__.new.call(this, {maxHeight: maxHeight, maxWidth: maxWidth, imageQuality: imageQuality, requestFullMetadata: requestFullMetadata});
    ;
  }).prototype = image_options.ImagePickerOptions.prototype;
  (image_options.ImagePickerOptions.createAndValidate = function(opts) {
    let maxHeight = opts && 'maxHeight' in opts ? opts.maxHeight : null;
    let maxWidth = opts && 'maxWidth' in opts ? opts.maxWidth : null;
    let imageQuality = opts && 'imageQuality' in opts ? opts.imageQuality : null;
    let requestFullMetadata = opts && 'requestFullMetadata' in opts ? opts.requestFullMetadata : true;
    let preferredCameraDevice = opts && 'preferredCameraDevice' in opts ? opts.preferredCameraDevice : C[64] || CT.C64;
    this[S$0.preferredCameraDevice$1] = preferredCameraDevice;
    image_options.ImagePickerOptions.__proto__.createAndValidate.call(this, {maxHeight: maxHeight, maxWidth: maxWidth, imageQuality: imageQuality, requestFullMetadata: requestFullMetadata});
    ;
  }).prototype = image_options.ImagePickerOptions.prototype;
  dart.addTypeTests(image_options.ImagePickerOptions);
  dart.addTypeCaches(image_options.ImagePickerOptions);
  dart.setLibraryUri(image_options.ImagePickerOptions, I[196]);
  dart.setFieldSignature(image_options.ImagePickerOptions, () => ({
    __proto__: dart.getFields(image_options.ImagePickerOptions.__proto__),
    preferredCameraDevice: dart.finalFieldType(camera_device.CameraDevice)
  }));
  image_source.ImageSource = class ImageSource extends core._Enum {
    [S$0._enumToString]() {
      return "ImageSource." + this[S$0._name];
    }
  };
  (image_source.ImageSource.new = function(index, name) {
    image_source.ImageSource.__proto__.new.call(this, index, name);
    ;
  }).prototype = image_source.ImageSource.prototype;
  dart.addTypeTests(image_source.ImageSource);
  dart.addTypeCaches(image_source.ImageSource);
  dart.setMethodSignature(image_source.ImageSource, () => ({
    __proto__: dart.getMethods(image_source.ImageSource.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(image_source.ImageSource, I[197]);
  dart.setStaticFieldSignature(image_source.ImageSource, () => ['values', 'camera', 'gallery']);
  dart.defineLazy(image_source.ImageSource, {
    /*image_source.ImageSource.values*/get values() {
      return C[326] || CT.C326;
    },
    /*image_source.ImageSource.camera*/get camera() {
      return C[327] || CT.C327;
    },
    /*image_source.ImageSource.gallery*/get gallery() {
      return C[328] || CT.C328;
    }
  }, false);
  lost_data_response.LostDataResponse = class LostDataResponse extends core.Object {
    get file() {
      return this[S$0.file];
    }
    set file(value) {
      super.file = value;
    }
    get exception() {
      return this[S$0.exception];
    }
    set exception(value) {
      super.exception = value;
    }
    get type() {
      return this[S$0.type$7];
    }
    set type(value) {
      super.type = value;
    }
    get files() {
      return this[S$0.files$1];
    }
    set files(value) {
      super.files = value;
    }
    static ['_#new#tearOff'](opts) {
      let file = opts && 'file' in opts ? opts.file : null;
      let exception = opts && 'exception' in opts ? opts.exception : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let files = opts && 'files' in opts ? opts.files : null;
      return new lost_data_response.LostDataResponse.new({file: file, exception: exception, type: type, files: files});
    }
    static ['_#empty#tearOff']() {
      return new lost_data_response.LostDataResponse.empty();
    }
    get isEmpty() {
      return this[S$0._empty];
    }
  };
  (lost_data_response.LostDataResponse.new = function(opts) {
    let file = opts && 'file' in opts ? opts.file : null;
    let exception = opts && 'exception' in opts ? opts.exception : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let files = opts && 'files' in opts ? opts.files : null;
    this[S$0._empty] = false;
    this[S$0.file] = file;
    this[S$0.exception] = exception;
    this[S$0.type$7] = type;
    this[S$0.files$1] = files;
    ;
  }).prototype = lost_data_response.LostDataResponse.prototype;
  (lost_data_response.LostDataResponse.empty = function() {
    this[S$0._empty] = false;
    this[S$0.file] = null;
    this[S$0.exception] = null;
    this[S$0.type$7] = null;
    this[S$0._empty] = true;
    this[S$0.files$1] = null;
    ;
  }).prototype = lost_data_response.LostDataResponse.prototype;
  dart.addTypeTests(lost_data_response.LostDataResponse);
  dart.addTypeCaches(lost_data_response.LostDataResponse);
  dart.setGetterSignature(lost_data_response.LostDataResponse, () => ({
    __proto__: dart.getGetters(lost_data_response.LostDataResponse.__proto__),
    isEmpty: core.bool
  }));
  dart.setLibraryUri(lost_data_response.LostDataResponse, I[198]);
  dart.setFieldSignature(lost_data_response.LostDataResponse, () => ({
    __proto__: dart.getFields(lost_data_response.LostDataResponse.__proto__),
    file: dart.finalFieldType(dart.nullable(html$.XFile)),
    exception: dart.finalFieldType(dart.nullable(message_codec.PlatformException)),
    type: dart.finalFieldType(dart.nullable(retrieve_type.RetrieveType)),
    [S$0._empty]: dart.fieldType(core.bool),
    files: dart.finalFieldType(dart.nullable(core.List$(html$.XFile)))
  }));
  media_options.MediaOptions = class MediaOptions extends core.Object {
    get imageOptions() {
      return this[S$0.imageOptions];
    }
    set imageOptions(value) {
      super.imageOptions = value;
    }
    get allowMultiple() {
      return this[S$0.allowMultiple];
    }
    set allowMultiple(value) {
      super.allowMultiple = value;
    }
    static ['_#new#tearOff'](opts) {
      let imageOptions = opts && 'imageOptions' in opts ? opts.imageOptions : C[66] || CT.C66;
      let allowMultiple = opts && 'allowMultiple' in opts ? opts.allowMultiple : null;
      return new media_options.MediaOptions.new({imageOptions: imageOptions, allowMultiple: allowMultiple});
    }
  };
  (media_options.MediaOptions.new = function(opts) {
    let imageOptions = opts && 'imageOptions' in opts ? opts.imageOptions : C[66] || CT.C66;
    let allowMultiple = opts && 'allowMultiple' in opts ? opts.allowMultiple : null;
    this[S$0.imageOptions] = imageOptions;
    this[S$0.allowMultiple] = allowMultiple;
    ;
  }).prototype = media_options.MediaOptions.prototype;
  dart.addTypeTests(media_options.MediaOptions);
  dart.addTypeCaches(media_options.MediaOptions);
  dart.setLibraryUri(media_options.MediaOptions, I[199]);
  dart.setFieldSignature(media_options.MediaOptions, () => ({
    __proto__: dart.getFields(media_options.MediaOptions.__proto__),
    imageOptions: dart.finalFieldType(image_options.ImageOptions),
    allowMultiple: dart.finalFieldType(core.bool)
  }));
  media_selection_type.MediaSelectionType = class MediaSelectionType extends core._Enum {
    [S$0._enumToString]() {
      return "MediaSelectionType." + this[S$0._name];
    }
  };
  (media_selection_type.MediaSelectionType.new = function(index, name) {
    media_selection_type.MediaSelectionType.__proto__.new.call(this, index, name);
    ;
  }).prototype = media_selection_type.MediaSelectionType.prototype;
  dart.addTypeTests(media_selection_type.MediaSelectionType);
  dart.addTypeCaches(media_selection_type.MediaSelectionType);
  dart.setMethodSignature(media_selection_type.MediaSelectionType, () => ({
    __proto__: dart.getMethods(media_selection_type.MediaSelectionType.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(media_selection_type.MediaSelectionType, I[200]);
  dart.setStaticFieldSignature(media_selection_type.MediaSelectionType, () => ['values', 'image', 'video']);
  dart.defineLazy(media_selection_type.MediaSelectionType, {
    /*media_selection_type.MediaSelectionType.values*/get values() {
      return C[329] || CT.C329;
    },
    /*media_selection_type.MediaSelectionType.image*/get image() {
      return C[330] || CT.C330;
    },
    /*media_selection_type.MediaSelectionType.video*/get video() {
      return C[331] || CT.C331;
    }
  }, false);
  multi_image_picker_options.MultiImagePickerOptions = class MultiImagePickerOptions extends core.Object {
    get imageOptions() {
      return this[S$0.imageOptions$1];
    }
    set imageOptions(value) {
      super.imageOptions = value;
    }
    static ['_#new#tearOff'](opts) {
      let imageOptions = opts && 'imageOptions' in opts ? opts.imageOptions : C[66] || CT.C66;
      return new multi_image_picker_options.MultiImagePickerOptions.new({imageOptions: imageOptions});
    }
  };
  (multi_image_picker_options.MultiImagePickerOptions.new = function(opts) {
    let imageOptions = opts && 'imageOptions' in opts ? opts.imageOptions : C[66] || CT.C66;
    this[S$0.imageOptions$1] = imageOptions;
    ;
  }).prototype = multi_image_picker_options.MultiImagePickerOptions.prototype;
  dart.addTypeTests(multi_image_picker_options.MultiImagePickerOptions);
  dart.addTypeCaches(multi_image_picker_options.MultiImagePickerOptions);
  dart.setLibraryUri(multi_image_picker_options.MultiImagePickerOptions, I[201]);
  dart.setFieldSignature(multi_image_picker_options.MultiImagePickerOptions, () => ({
    __proto__: dart.getFields(multi_image_picker_options.MultiImagePickerOptions.__proto__),
    imageOptions: dart.finalFieldType(image_options.ImageOptions)
  }));
  retrieve_type.RetrieveType = class RetrieveType extends core._Enum {
    [S$0._enumToString]() {
      return "RetrieveType." + this[S$0._name];
    }
  };
  (retrieve_type.RetrieveType.new = function(index, name) {
    retrieve_type.RetrieveType.__proto__.new.call(this, index, name);
    ;
  }).prototype = retrieve_type.RetrieveType.prototype;
  dart.addTypeTests(retrieve_type.RetrieveType);
  dart.addTypeCaches(retrieve_type.RetrieveType);
  dart.setMethodSignature(retrieve_type.RetrieveType, () => ({
    __proto__: dart.getMethods(retrieve_type.RetrieveType.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(retrieve_type.RetrieveType, I[202]);
  dart.setStaticFieldSignature(retrieve_type.RetrieveType, () => ['values', 'image', 'video', 'media']);
  dart.defineLazy(retrieve_type.RetrieveType, {
    /*retrieve_type.RetrieveType.values*/get values() {
      return C[332] || CT.C332;
    },
    /*retrieve_type.RetrieveType.image*/get image() {
      return C[333] || CT.C333;
    },
    /*retrieve_type.RetrieveType.video*/get video() {
      return C[334] || CT.C334;
    },
    /*retrieve_type.RetrieveType.media*/get media() {
      return C[335] || CT.C335;
    }
  }, false);
  bound_multipart_stream._MimeMultipart = class _MimeMultipart extends mime_shared.MimeMultipart {
    get headers() {
      return this[S$0.headers];
    }
    set headers(value) {
      super.headers = value;
    }
    static ['_#new#tearOff'](headers, _stream) {
      return new bound_multipart_stream._MimeMultipart.new(headers, _stream);
    }
    listen(onData, opts) {
      let onDone = opts && 'onDone' in opts ? opts.onDone : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let cancelOnError = opts && 'cancelOnError' in opts ? opts.cancelOnError : null;
      return this[S$0._stream].listen(onData, {onDone: onDone, onError: onError, cancelOnError: cancelOnError});
    }
  };
  (bound_multipart_stream._MimeMultipart.new = function(headers, _stream) {
    this[S$0.headers] = headers;
    this[S$0._stream] = _stream;
    bound_multipart_stream._MimeMultipart.__proto__.new.call(this);
    ;
  }).prototype = bound_multipart_stream._MimeMultipart.prototype;
  dart.addTypeTests(bound_multipart_stream._MimeMultipart);
  dart.addTypeCaches(bound_multipart_stream._MimeMultipart);
  dart.setMethodSignature(bound_multipart_stream._MimeMultipart, () => ({
    __proto__: dart.getMethods(bound_multipart_stream._MimeMultipart.__proto__),
    listen: dart.fnType(async.StreamSubscription$(core.List$(core.int)), [dart.nullable(dart.fnType(dart.void, [core.List$(core.int)]))], {cancelOnError: dart.nullable(core.bool), onDone: dart.nullable(dart.fnType(dart.void, [])), onError: dart.nullable(core.Function)}, {})
  }));
  dart.setLibraryUri(bound_multipart_stream._MimeMultipart, I[203]);
  dart.setFieldSignature(bound_multipart_stream._MimeMultipart, () => ({
    __proto__: dart.getFields(bound_multipart_stream._MimeMultipart.__proto__),
    headers: dart.finalFieldType(core.Map$(core.String, core.String)),
    [S$0._stream]: dart.finalFieldType(async.Stream$(core.List$(core.int)))
  }));
  bound_multipart_stream.BoundMultipartStream = class BoundMultipartStream extends core.Object {
    get stream() {
      return this[S$0._controller$1].stream;
    }
    get [S$0._subscription]() {
      let t295;
      t295 = this[S$0.__BoundMultipartStream__subscription];
      return t295 == null ? dart.throw(new _internal.LateError.fieldNI("_subscription")) : t295;
    }
    set [S$0._subscription](_subscription$35param) {
      this[S$0.__BoundMultipartStream__subscription] = _subscription$35param;
    }
    static ['_#new#tearOff'](_boundary, stream) {
      return new bound_multipart_stream.BoundMultipartStream.new(_boundary, stream);
    }
    [S$0._resumeStream]() {
      if (!(this[S$0._controllerState] === 2)) dart.assertFailed(null, I[204], 138, 12, "_controllerState == _controllerStatePaused");
      this[S$0._controllerState] = 1;
      this[S$0._tryPropagateControllerState]();
    }
    [S$0._pauseStream]() {
      this[S$0._controllerState] = 2;
      this[S$0._tryPropagateControllerState]();
    }
    [S$0._tryPropagateControllerState]() {
      if (this[S$0._multipartController] == null) {
        switch (this[S$0._controllerState]) {
          case 1:
            {
              if (this[S$0._subscription].isPaused) this[S$0._subscription].resume();
              break;
            }
          case 2:
            {
              if (!this[S$0._subscription].isPaused) this[S$0._subscription].pause();
              break;
            }
          case 3:
            {
              this[S$0._subscription].cancel();
              break;
            }
          default:
            {
              dart.throw(new core.StateError.new("This code should never be reached."));
            }
        }
      }
    }
    [S$0._parse]() {
      let t295, t295$;
      let boundaryPrefix = this[S$0._boundaryIndex];
      let contentStartIndex = this[S$0._state$1] === 10 && this[S$0._boundaryIndex] === 0 ? 0 : null;
      const reportData = () => {
        if (dart.nullCheck(contentStartIndex) < 0) {
          let contentLength = boundaryPrefix + this[S$0._index] - this[S$0._boundaryIndex];
          if (contentLength <= boundaryPrefix) {
            dart.nullCheck(this[S$0._multipartController]).add(this[S$0._boundary$1][S$0.$sublist](0, contentLength));
          } else {
            dart.nullCheck(this[S$0._multipartController]).add(this[S$0._boundary$1][S$0.$sublist](0, boundaryPrefix));
            dart.nullCheck(this[S$0._multipartController]).add(this[S$0._buffer][S$0.$sublist](0, contentLength - boundaryPrefix));
          }
        } else {
          let contentEndIndex = this[S$0._index] - this[S$0._boundaryIndex];
          dart.nullCheck(this[S$0._multipartController]).add(this[S$0._buffer][S$0.$sublist](contentStartIndex, contentEndIndex));
        }
      };
      dart.fn(reportData, T$.VoidTovoid());
      while (this[S$0._index] < this[S$0._buffer][S$.$length] && this[S$0._state$1] !== 15 && this[S$0._state$1] !== 14) {
        let byte = this[S$0._index] < 0 ? this[S$0._boundary$1][S$.$_get](boundaryPrefix + this[S$0._index]) : this[S$0._buffer][S$.$_get](this[S$0._index]);
        switch (this[S$0._state$1]) {
          case 0:
            {
              if (byte === this[S$0._boundary$1][S$.$_get](this[S$0._boundaryIndex])) {
                this[S$0._boundaryIndex] = this[S$0._boundaryIndex] + 1;
                if (this[S$0._boundaryIndex] === this[S$0._boundary$1][S$.$length]) {
                  this[S$0._state$1] = 1;
                  this[S$0._boundaryIndex] = 0;
                }
              } else {
                this[S$0._index] = this[S$0._index] - this[S$0._boundaryIndex];
                this[S$0._boundaryIndex] = 0;
              }
              break;
            }
          case 1:
            {
              if (byte === 13) {
                this[S$0._state$1] = 2;
              } else if (byte === 45) {
                this[S$0._state$1] = 11;
              } else {
                bound_multipart_stream._expectWhitespace(byte);
              }
              break;
            }
          case 2:
            {
              bound_multipart_stream._expectByteValue(byte, 10);
              t295 = this[S$0._multipartController];
              t295 == null ? null : t295.close();
              if (this[S$0._multipartController] != null) {
                this[S$0._multipartController] = null;
                this[S$0._tryPropagateControllerState]();
              }
              this[S$0._state$1] = 3;
              break;
            }
          case 3:
            {
              this[S$0._headers] = new (T$.IdentityMapOfString$String()).new();
              if (byte === 13) {
                this[S$0._state$1] = 9;
              } else {
                this[S$0._headerField][S$.$add](bound_multipart_stream._toLowerCase(byte));
                this[S$0._state$1] = 4;
              }
              break;
            }
          case 4:
            {
              if (byte === 58) {
                this[S$0._state$1] = 5;
              } else {
                if (!bound_multipart_stream._isTokenChar(byte)) {
                  dart.throw(C[337] || CT.C337);
                }
                this[S$0._headerField][S$.$add](bound_multipart_stream._toLowerCase(byte));
              }
              break;
            }
          case 5:
            {
              if (byte === 13) {
                this[S$0._state$1] = 7;
              } else if (byte !== 32 && byte !== 9) {
                this[S$0._headerValue][S$.$add](byte);
                this[S$0._state$1] = 6;
              }
              break;
            }
          case 6:
            {
              if (byte === 13) {
                this[S$0._state$1] = 7;
              } else {
                this[S$0._headerValue][S$.$add](byte);
              }
              break;
            }
          case 7:
            {
              bound_multipart_stream._expectByteValue(byte, 10);
              this[S$0._state$1] = 8;
              break;
            }
          case 8:
            {
              if (byte === 32 || byte === 9) {
                this[S$0._state$1] = 5;
              } else {
                let headerField = convert.utf8.decode(this[S$0._headerField]);
                let headerValue = convert.utf8.decode(this[S$0._headerValue]);
                dart.nullCheck(this[S$0._headers])[S$.$_set](headerField[S$.$toLowerCase](), headerValue);
                this[S$0._headerField][S$.$clear]();
                this[S$0._headerValue][S$.$clear]();
                if (byte === 13) {
                  this[S$0._state$1] = 9;
                } else {
                  this[S$0._headerField][S$.$add](bound_multipart_stream._toLowerCase(byte));
                  this[S$0._state$1] = 4;
                }
              }
              break;
            }
          case 9:
            {
              bound_multipart_stream._expectByteValue(byte, 10);
              this[S$0._multipartController] = T.StreamControllerOfListOfint().new({sync: true, onListen: dart.fn(() => {
                  if (this[S$0._subscription].isPaused) this[S$0._subscription].resume();
                }, T$.VoidTovoid()), onPause: dart.bind(this[S$0._subscription], 'pause'), onResume: dart.bind(this[S$0._subscription], 'resume')});
              this[S$0._controller$1].add(new bound_multipart_stream._MimeMultipart.new(dart.nullCheck(this[S$0._headers]), dart.nullCheck(this[S$0._multipartController]).stream));
              this[S$0._headers] = null;
              this[S$0._state$1] = 10;
              contentStartIndex = this[S$0._index] + 1;
              break;
            }
          case 10:
            {
              if (byte === this[S$0._boundary$1][S$.$_get](this[S$0._boundaryIndex])) {
                this[S$0._boundaryIndex] = this[S$0._boundaryIndex] + 1;
                if (this[S$0._boundaryIndex] === this[S$0._boundary$1][S$.$length]) {
                  if (contentStartIndex != null) {
                    this[S$0._index] = this[S$0._index] + 1;
                    reportData();
                    this[S$0._index] = this[S$0._index] - 1;
                  }
                  dart.nullCheck(this[S$0._multipartController]).close();
                  this[S$0._multipartController] = null;
                  this[S$0._tryPropagateControllerState]();
                  this[S$0._boundaryIndex] = 0;
                  this[S$0._state$1] = 1;
                }
              } else {
                this[S$0._index] = this[S$0._index] - this[S$0._boundaryIndex];
                contentStartIndex == null ? contentStartIndex = this[S$0._index] : null;
                this[S$0._boundaryIndex] = 0;
              }
              break;
            }
          case 11:
            {
              bound_multipart_stream._expectByteValue(byte, 45);
              this[S$0._state$1] = 12;
              break;
            }
          case 12:
            {
              if (byte === 13) {
                this[S$0._state$1] = 13;
              } else {
                bound_multipart_stream._expectWhitespace(byte);
              }
              break;
            }
          case 13:
            {
              bound_multipart_stream._expectByteValue(byte, 10);
              t295$ = this[S$0._multipartController];
              t295$ == null ? null : t295$.close();
              if (this[S$0._multipartController] != null) {
                this[S$0._multipartController] = null;
                this[S$0._tryPropagateControllerState]();
              }
              this[S$0._state$1] = 14;
              break;
            }
          default:
            {
              if (!false) dart.assertFailed(null, I[204], 367, 18, "false");
              break;
            }
        }
        this[S$0._index] = this[S$0._index] + 1;
      }
      if (this[S$0._state$1] === 10 && contentStartIndex != null) {
        reportData();
      }
      if (this[S$0._index] === this[S$0._buffer][S$.$length]) {
        this[S$0._buffer] = bound_multipart_stream._placeholderBuffer;
        this[S$0._index] = 0;
        this[S$0._subscription].resume();
      }
    }
  };
  (bound_multipart_stream.BoundMultipartStream.new = function(_boundary, stream) {
    let t295;
    this[S$0._headerField] = T.JSArrayOfint().of([]);
    this[S$0._headerValue] = T.JSArrayOfint().of([]);
    this[S$0._controllerState] = 0;
    this[S$0._controller$1] = T.StreamControllerOfMimeMultipart().new({sync: true});
    this[S$0.__BoundMultipartStream__subscription] = null;
    this[S$0._multipartController] = null;
    this[S$0._headers] = null;
    this[S$0._state$1] = 0;
    this[S$0._boundaryIndex] = 2;
    this[S$0._index] = 0;
    this[S$0._buffer] = bound_multipart_stream._placeholderBuffer;
    this[S$0._boundary$1] = _boundary;
    t295 = this[S$0._controller$1];
    (() => {
      t295.onPause = dart.bind(this, S$0._pauseStream);
      t295.onResume = dart.bind(this, S$0._resumeStream);
      t295.onCancel = dart.fn(() => {
        this[S$0._controllerState] = 3;
        this[S$0._tryPropagateControllerState]();
      }, T$.VoidToNull());
      t295.onListen = dart.fn(() => {
        this[S$0._controllerState] = 1;
        this[S$0._subscription] = stream.listen(dart.fn(data => {
          if (!this[S$0._buffer][S$0.$_equals](bound_multipart_stream._placeholderBuffer)) dart.assertFailed(null, I[204], 122, 18, "_buffer == _placeholderBuffer");
          this[S$0._subscription].pause();
          this[S$0._buffer] = data;
          this[S$0._index] = 0;
          this[S$0._parse]();
        }, T.ListOfintTovoid()), {onDone: dart.fn(() => {
            if (this[S$0._state$1] !== 14) {
              this[S$0._controller$1].addError(C[336] || CT.C336);
            }
            this[S$0._controller$1].close();
          }, T$.VoidTovoid()), onError: dart.bind(this[S$0._controller$1], 'addError')});
      }, T$.VoidTovoid());
      return t295;
    })();
  }).prototype = bound_multipart_stream.BoundMultipartStream.prototype;
  dart.addTypeTests(bound_multipart_stream.BoundMultipartStream);
  dart.addTypeCaches(bound_multipart_stream.BoundMultipartStream);
  dart.setMethodSignature(bound_multipart_stream.BoundMultipartStream, () => ({
    __proto__: dart.getMethods(bound_multipart_stream.BoundMultipartStream.__proto__),
    [S$0._resumeStream]: dart.fnType(dart.void, []),
    [S$0._pauseStream]: dart.fnType(dart.void, []),
    [S$0._tryPropagateControllerState]: dart.fnType(dart.void, []),
    [S$0._parse]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(bound_multipart_stream.BoundMultipartStream, () => ({
    __proto__: dart.getGetters(bound_multipart_stream.BoundMultipartStream.__proto__),
    stream: async.Stream$(mime_shared.MimeMultipart),
    [S$0._subscription]: async.StreamSubscription$(dart.void)
  }));
  dart.setSetterSignature(bound_multipart_stream.BoundMultipartStream, () => ({
    __proto__: dart.getSetters(bound_multipart_stream.BoundMultipartStream.__proto__),
    [S$0._subscription]: async.StreamSubscription$(dart.void)
  }));
  dart.setLibraryUri(bound_multipart_stream.BoundMultipartStream, I[203]);
  dart.setFieldSignature(bound_multipart_stream.BoundMultipartStream, () => ({
    __proto__: dart.getFields(bound_multipart_stream.BoundMultipartStream.__proto__),
    [S$0._boundary$1]: dart.finalFieldType(core.List$(core.int)),
    [S$0._headerField]: dart.finalFieldType(core.List$(core.int)),
    [S$0._headerValue]: dart.finalFieldType(core.List$(core.int)),
    [S$0._controllerState]: dart.fieldType(core.int),
    [S$0._controller$1]: dart.finalFieldType(async.StreamController$(mime_shared.MimeMultipart)),
    [S$0.__BoundMultipartStream__subscription]: dart.fieldType(dart.nullable(async.StreamSubscription$(dart.void))),
    [S$0._multipartController]: dart.fieldType(dart.nullable(async.StreamController$(core.List$(core.int)))),
    [S$0._headers]: dart.fieldType(dart.nullable(core.Map$(core.String, core.String))),
    [S$0._state$1]: dart.fieldType(core.int),
    [S$0._boundaryIndex]: dart.fieldType(core.int),
    [S$0._index]: dart.fieldType(core.int),
    [S$0._buffer]: dart.fieldType(core.List$(core.int))
  }));
  dart.setStaticFieldSignature(bound_multipart_stream.BoundMultipartStream, () => ['_startCode', '_boundaryEndingCode', '_boundaryEndCode', '_headerStartCode', '_headerFieldCode', '_headerValueStartCode', '_headerValueCode', '_headerValueFoldingOrEndingCode', '_headerValueFoldOrEndCode', '_headerEndingCode', '_contentCode', '_lastBoundaryDash2Code', '_lastBoundaryEndingCode', '_lastBoundaryEndCode', '_doneCode', '_failCode', '_controllerStateIdle', '_controllerStateActive', '_controllerStatePaused', '_controllerStateCanceled']);
  dart.defineLazy(bound_multipart_stream.BoundMultipartStream, {
    /*bound_multipart_stream.BoundMultipartStream._startCode*/get _startCode() {
      return 0;
    },
    /*bound_multipart_stream.BoundMultipartStream._boundaryEndingCode*/get _boundaryEndingCode() {
      return 1;
    },
    /*bound_multipart_stream.BoundMultipartStream._boundaryEndCode*/get _boundaryEndCode() {
      return 2;
    },
    /*bound_multipart_stream.BoundMultipartStream._headerStartCode*/get _headerStartCode() {
      return 3;
    },
    /*bound_multipart_stream.BoundMultipartStream._headerFieldCode*/get _headerFieldCode() {
      return 4;
    },
    /*bound_multipart_stream.BoundMultipartStream._headerValueStartCode*/get _headerValueStartCode() {
      return 5;
    },
    /*bound_multipart_stream.BoundMultipartStream._headerValueCode*/get _headerValueCode() {
      return 6;
    },
    /*bound_multipart_stream.BoundMultipartStream._headerValueFoldingOrEndingCode*/get _headerValueFoldingOrEndingCode() {
      return 7;
    },
    /*bound_multipart_stream.BoundMultipartStream._headerValueFoldOrEndCode*/get _headerValueFoldOrEndCode() {
      return 8;
    },
    /*bound_multipart_stream.BoundMultipartStream._headerEndingCode*/get _headerEndingCode() {
      return 9;
    },
    /*bound_multipart_stream.BoundMultipartStream._contentCode*/get _contentCode() {
      return 10;
    },
    /*bound_multipart_stream.BoundMultipartStream._lastBoundaryDash2Code*/get _lastBoundaryDash2Code() {
      return 11;
    },
    /*bound_multipart_stream.BoundMultipartStream._lastBoundaryEndingCode*/get _lastBoundaryEndingCode() {
      return 12;
    },
    /*bound_multipart_stream.BoundMultipartStream._lastBoundaryEndCode*/get _lastBoundaryEndCode() {
      return 13;
    },
    /*bound_multipart_stream.BoundMultipartStream._doneCode*/get _doneCode() {
      return 14;
    },
    /*bound_multipart_stream.BoundMultipartStream._failCode*/get _failCode() {
      return 15;
    },
    /*bound_multipart_stream.BoundMultipartStream._controllerStateIdle*/get _controllerStateIdle() {
      return 0;
    },
    /*bound_multipart_stream.BoundMultipartStream._controllerStateActive*/get _controllerStateActive() {
      return 1;
    },
    /*bound_multipart_stream.BoundMultipartStream._controllerStatePaused*/get _controllerStatePaused() {
      return 2;
    },
    /*bound_multipart_stream.BoundMultipartStream._controllerStateCanceled*/get _controllerStateCanceled() {
      return 3;
    }
  }, false);
  bound_multipart_stream._isTokenChar = function _isTokenChar(byte) {
    return byte > 31 && byte < 128 && !bound_multipart_stream._separators.contains(byte);
  };
  bound_multipart_stream._toLowerCase = function _toLowerCase(byte) {
    return 65 <= byte && byte <= 90 ? byte + 32 : byte;
  };
  bound_multipart_stream._expectByteValue = function _expectByteValue(val1, val2) {
    if (val1 !== val2) {
      dart.throw(C[338] || CT.C338);
    }
  };
  bound_multipart_stream._expectWhitespace = function _expectWhitespace(byte) {
    if (byte !== 32 && byte !== 9) {
      dart.throw(C[339] || CT.C339);
    }
  };
  dart.defineLazy(bound_multipart_stream, {
    /*bound_multipart_stream._separators*/get _separators() {
      return C[340] || CT.C340;
    },
    /*bound_multipart_stream._placeholderBuffer*/get _placeholderBuffer() {
      return C[341] || CT.C341;
    }
  }, false);
  dart.defineLazy(char_code, {
    /*char_code.ht*/get ht() {
      return 9;
    },
    /*char_code.lf*/get lf() {
      return 10;
    },
    /*char_code.cr*/get cr() {
      return 13;
    },
    /*char_code.sp*/get sp() {
      return 32;
    },
    /*char_code.dash*/get dash() {
      return 45;
    },
    /*char_code.colon*/get colon() {
      return 58;
    },
    /*char_code.upperA*/get upperA() {
      return 65;
    },
    /*char_code.upperZ*/get upperZ() {
      return 90;
    },
    /*char_code.lowerA*/get lowerA() {
      return 97;
    }
  }, false);
  dart.defineLazy(default_extension_map, {
    /*default_extension_map.defaultExtensionMap*/get defaultExtensionMap() {
      return C[342] || CT.C342;
    }
  }, false);
  magic_number.MagicNumber = class MagicNumber extends core.Object {
    get mimeType() {
      return this[S$0.mimeType];
    }
    set mimeType(value) {
      super.mimeType = value;
    }
    get numbers() {
      return this[S$0.numbers];
    }
    set numbers(value) {
      super.numbers = value;
    }
    get mask() {
      return this[S$0.mask];
    }
    set mask(value) {
      super.mask = value;
    }
    static ['_#new#tearOff'](mimeType, numbers, opts) {
      let mask = opts && 'mask' in opts ? opts.mask : null;
      return new magic_number.MagicNumber.new(mimeType, numbers, {mask: mask});
    }
    matches(header) {
      if (header[S$.$length] < this.numbers[S$.$length]) return false;
      for (let i = 0; i < this.numbers[S$.$length]; i = i + 1) {
        if (this.mask != null) {
          if ((dart.nullCheck(this.mask)[S$.$_get](i) & this.numbers[S$.$_get](i)) >>> 0 !== (dart.nullCheck(this.mask)[S$.$_get](i) & header[S$.$_get](i)) >>> 0) return false;
        } else {
          if (this.numbers[S$.$_get](i) !== header[S$.$_get](i)) return false;
        }
      }
      return true;
    }
  };
  (magic_number.MagicNumber.new = function(mimeType, numbers, opts) {
    let mask = opts && 'mask' in opts ? opts.mask : null;
    this[S$0.mimeType] = mimeType;
    this[S$0.numbers] = numbers;
    this[S$0.mask] = mask;
    ;
  }).prototype = magic_number.MagicNumber.prototype;
  dart.addTypeTests(magic_number.MagicNumber);
  dart.addTypeCaches(magic_number.MagicNumber);
  dart.setMethodSignature(magic_number.MagicNumber, () => ({
    __proto__: dart.getMethods(magic_number.MagicNumber.__proto__),
    matches: dart.fnType(core.bool, [core.List$(core.int)])
  }));
  dart.setLibraryUri(magic_number.MagicNumber, I[205]);
  dart.setFieldSignature(magic_number.MagicNumber, () => ({
    __proto__: dart.getFields(magic_number.MagicNumber.__proto__),
    mimeType: dart.finalFieldType(core.String),
    numbers: dart.finalFieldType(core.List$(core.int)),
    mask: dart.finalFieldType(dart.nullable(core.List$(core.int)))
  }));
  dart.defineLazy(magic_number, {
    /*magic_number.initialMagicNumbersMaxLength*/get initialMagicNumbersMaxLength() {
      return 12;
    },
    /*magic_number.initialMagicNumbers*/get initialMagicNumbers() {
      return C[343] || CT.C343;
    }
  }, false);
  convert_auth_provider.convertToOAuthProvider = function convertToOAuthProvider(authProvider) {
    if (microsoft_auth.MicrosoftAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (github_auth.GithubAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (apple_auth.AppleAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setScopes(authProvider.scopes);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    if (twitter_auth.TwitterAuthProvider.is(authProvider)) {
      let oAuthProvider = new oauth.OAuthProvider.new(authProvider.providerId);
      oAuthProvider.setCustomParameters(authProvider.parameters);
      return oAuthProvider;
    }
    return authProvider;
  };
  const multiFactor$ = Symbol("multiFactor");
  method_channel_user.MethodChannelUser = class MethodChannelUser extends platform_interface_user.UserPlatform {
    static ['_#new#tearOff'](auth, multiFactor, data) {
      return new method_channel_user.MethodChannelUser.new(auth, multiFactor, data);
    }
    get pigeonDefault() {
      return new messages$46pigeon.AuthPigeonFirebaseApp.new({appName: this.auth.app.name, tenantId: this.auth.tenantId});
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        try {
          yield this[S$0._api$3].delete(this.pigeonDefault);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdToken(forceRefresh) {
      return async.async(T$.StringN(), (function* getIdToken() {
        try {
          let data = (yield this[S$0._api$3].getIdToken(this.pigeonDefault, forceRefresh));
          return data.token;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getIdTokenResult(forceRefresh) {
      return async.async(id_token_result.IdTokenResult, (function* getIdTokenResult() {
        try {
          let data = (yield this[S$0._api$3].getIdToken(this.pigeonDefault, forceRefresh));
          return new id_token_result.IdTokenResult.new(data);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithCredential() {
        try {
          let result = (yield this[S$0._api$3].linkWithCredential(this.pigeonDefault, credential.asMap()));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    linkWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* linkWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let result = (yield this[S$0._api$3].linkWithProvider(this.pigeonDefault, new messages$46pigeon.PigeonSignInProvider.new({providerId: convertedProvider.providerId, scopes: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.scopes : null, customParameters: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.parameters : null})));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithCredential(credential) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithCredential() {
        try {
          let result = (yield this[S$0._api$3].reauthenticateWithCredential(this.pigeonDefault, credential.asMap()));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reauthenticateWithProvider(provider) {
      return async.async(platform_interface_user_credential.UserCredentialPlatform, (function* reauthenticateWithProvider() {
        try {
          let convertedProvider = convert_auth_provider.convertToOAuthProvider(provider);
          let result = (yield this[S$0._api$3].reauthenticateWithProvider(this.pigeonDefault, new messages$46pigeon.PigeonSignInProvider.new({providerId: convertedProvider.providerId, scopes: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.scopes : null, customParameters: oauth.OAuthProvider.is(convertedProvider) ? convertedProvider.parameters : null})));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          this.auth.currentUser = userCredential.user;
          return userCredential;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    reload() {
      return async.async(dart.void, (function* reload() {
        try {
          let result = (yield this[S$0._api$3].reload(this.pigeonDefault));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    sendEmailVerification(actionCodeSettings) {
      return async.async(dart.void, (function* sendEmailVerification() {
        try {
          yield this[S$0._api$3].sendEmailVerification(this.pigeonDefault, actionCodeSettings == null ? null : new messages$46pigeon.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    unlink(providerId) {
      return async.async(platform_interface_user.UserPlatform, (function* unlink() {
        try {
          let result = (yield this[S$0._api$3].unlink(this.pigeonDefault, providerId));
          let userCredential = new method_channel_user_credential.MethodChannelUserCredential.new(this.auth, result);
          let user = T.MethodChannelUserN().as(userCredential.user);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
          return dart.nullCheck(user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateEmail(newEmail) {
      return async.async(dart.void, (function* updateEmail() {
        try {
          let result = (yield this[S$0._api$3].updateEmail(this.pigeonDefault, newEmail));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePassword(newPassword) {
      return async.async(dart.void, (function* updatePassword() {
        try {
          let result = (yield this[S$0._api$3].updatePassword(this.pigeonDefault, newPassword));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updatePhoneNumber(phoneCredential) {
      return async.async(dart.void, (function* updatePhoneNumber() {
        try {
          let result = (yield this[S$0._api$3].updatePhoneNumber(this.pigeonDefault, phoneCredential.asMap()));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    updateProfile(profile) {
      return async.async(dart.void, (function* updateProfile() {
        try {
          let result = (yield this[S$0._api$3].updateProfile(this.pigeonDefault, new messages$46pigeon.PigeonUserProfile.new({displayName: profile[S$.$_get]("displayName"), photoUrl: profile[S$.$_get]("photoURL"), displayNameChanged: profile[S$.$containsKey]("displayName"), photoUrlChanged: profile[S$.$containsKey]("photoURL")})));
          let user = new method_channel_user.MethodChannelUser.new(this.auth, this[multiFactor$], result);
          this.auth.currentUser = user;
          this.auth.sendAuthChangesEvent(this.auth.app.name, user);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    verifyBeforeUpdateEmail(newEmail, actionCodeSettings = null) {
      return async.async(dart.void, (function* verifyBeforeUpdateEmail() {
        try {
          yield this[S$0._api$3].verifyBeforeUpdateEmail(this.pigeonDefault, newEmail, actionCodeSettings == null ? null : new messages$46pigeon.PigeonActionCodeSettings.new({url: actionCodeSettings.url, handleCodeInApp: actionCodeSettings.handleCodeInApp, iOSBundleId: actionCodeSettings.iOSBundleId, androidPackageName: actionCodeSettings.androidPackageName, androidInstallApp: actionCodeSettings.androidInstallApp, androidMinimumVersion: actionCodeSettings.androidMinimumVersion, dynamicLinkDomain: actionCodeSettings.dynamicLinkDomain}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$0.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    get [multiFactor$]() {
      return super.multiFactor;
    }
  };
  (method_channel_user.MethodChannelUser.new = function(auth, multiFactor, data) {
    this[S$0._api$3] = new messages$46pigeon.FirebaseAuthUserHostApi.new();
    method_channel_user.MethodChannelUser.__proto__.new.call(this, auth, multiFactor, data);
    ;
  }).prototype = method_channel_user.MethodChannelUser.prototype;
  dart.addTypeTests(method_channel_user.MethodChannelUser);
  dart.addTypeCaches(method_channel_user.MethodChannelUser);
  dart.setGetterSignature(method_channel_user.MethodChannelUser, () => ({
    __proto__: dart.getGetters(method_channel_user.MethodChannelUser.__proto__),
    pigeonDefault: messages$46pigeon.AuthPigeonFirebaseApp
  }));
  dart.setLibraryUri(method_channel_user.MethodChannelUser, I[206]);
  dart.setFieldSignature(method_channel_user.MethodChannelUser, () => ({
    __proto__: dart.getFields(method_channel_user.MethodChannelUser.__proto__),
    [S$0._api$3]: dart.finalFieldType(messages$46pigeon.FirebaseAuthUserHostApi)
  }));
  method_channel_user_credential.MethodChannelUserCredential = class MethodChannelUserCredential extends platform_interface_user_credential.UserCredentialPlatform {
    static ['_#new#tearOff'](auth, data) {
      return new method_channel_user_credential.MethodChannelUserCredential.new(auth, data);
    }
  };
  (method_channel_user_credential.MethodChannelUserCredential.new = function(auth, data) {
    let t310, t310$;
    method_channel_user_credential.MethodChannelUserCredential.__proto__.new.call(this, {auth: auth, additionalUserInfo: data.additionalUserInfo == null ? null : new additional_user_info.AdditionalUserInfo.new({isNewUser: dart.nullCheck(data.additionalUserInfo).isNewUser, profile: T$.LinkedHashMapOfString$dynamic().from((t310 = dart.nullCheck(data.additionalUserInfo).profile, t310 == null ? new _js_helper.LinkedMap.new() : t310)), providerId: dart.nullCheck(data.additionalUserInfo).providerId, username: dart.nullCheck(data.additionalUserInfo).username, authorizationCode: (t310$ = data.additionalUserInfo, t310$ == null ? null : t310$.authorizationCode)}), credential: data.credential == null ? null : new auth_credential.AuthCredential.new({providerId: dart.nullCheck(data.credential).providerId, signInMethod: dart.nullCheck(data.credential).signInMethod, token: dart.nullCheck(data.credential).nativeId, accessToken: dart.nullCheck(data.credential).accessToken}), user: data.user == null ? null : new method_channel_user.MethodChannelUser.new(auth, new method_channel_multi_factor.MethodChannelMultiFactor.new(auth), dart.nullCheck(data.user))});
    ;
  }).prototype = method_channel_user_credential.MethodChannelUserCredential.prototype;
  dart.addTypeTests(method_channel_user_credential.MethodChannelUserCredential);
  dart.addTypeCaches(method_channel_user_credential.MethodChannelUserCredential);
  dart.setLibraryUri(method_channel_user_credential.MethodChannelUserCredential, I[207]);
  exception$0.convertPlatformException = function convertPlatformException(exception, stackTrace, opts) {
    let fromPigeon = opts && 'fromPigeon' in opts ? opts.fromPigeon : true;
    if (!message_codec.PlatformException.is(exception)) {
      core.Error.throwWithStackTrace(exception, stackTrace);
    }
    core.Error.throwWithStackTrace(exception$0.platformExceptionToFirebaseAuthException(exception, {fromPigeon: fromPigeon}), stackTrace);
  };
  exception$0.platformExceptionToFirebaseAuthException = function platformExceptionToFirebaseAuthException(platformException, opts) {
    let t310, t310$, t310$0;
    let fromPigeon = opts && 'fromPigeon' in opts ? opts.fromPigeon : true;
    if (fromPigeon) {
      let code = platformException.code[S$.$replaceAll]("ERROR_", "")[S$.$toLowerCase]()[S$.$replaceAll]("_", "-");
      let customCode = exception$0._getCustomCode(T$.MapN().as(platformException.details), platformException.message);
      if (customCode != null) {
        code = customCode;
      }
      if (code[S$.$isNotEmpty]) {
        if (code === "second-factor-required") {
          return exception$0.parseMultiFactorError(platformException);
        }
      }
      let credential = null;
      let email = null;
      if (platformException.details != null) {
        if (dart.dsend(platformException.details, '_get', ["authCredential"]) != null && messages$46pigeon.PigeonAuthCredential.is(dart.dsend(platformException.details, '_get', ["authCredential"]))) {
          let pigeonAuthCredential = messages$46pigeon.PigeonAuthCredential.as(dart.dsend(platformException.details, '_get', ["authCredential"]));
          credential = new auth_credential.AuthCredential.new({providerId: pigeonAuthCredential.providerId, signInMethod: pigeonAuthCredential.signInMethod, token: pigeonAuthCredential.nativeId, accessToken: pigeonAuthCredential.accessToken});
        }
        if (dart.dsend(platformException.details, '_get', ["email"]) != null) {
          email = T$.StringN().as(dart.dsend(platformException.details, '_get', ["email"]));
        }
      }
      return new firebase_auth_exception.FirebaseAuthException.new({code: code, message: (t310 = platformException.message, t310 == null ? null : t310[S$.$split](": ")[S$0.$last]), credential: credential, email: email});
    }
    let details = platformException.details != null ? T$.LinkedHashMapOfString$dynamic().from(core.Map.as(platformException.details)) : null;
    let code = "unknown";
    let message = platformException.message;
    let email = null;
    let credential = null;
    if (details != null) {
      code = core.String.as((t310$ = details[S$.$_get]("code"), t310$ == null ? code : t310$));
      if (code === "second-factor-required") {
        return exception$0.parseMultiFactorError(platformException);
      }
      message = T$.StringN().as((t310$0 = details[S$.$_get]("message"), t310$0 == null ? message : t310$0));
      let additionalData = details[S$.$_get]("additionalData");
      if (additionalData != null) {
        if (dart.dsend(additionalData, '_get', ["authCredential"]) != null) {
          credential = new auth_credential.AuthCredential.new({providerId: core.String.as(dart.dsend(dart.dsend(additionalData, '_get', ["authCredential"]), '_get', ["providerId"])), signInMethod: core.String.as(dart.dsend(dart.dsend(additionalData, '_get', ["authCredential"]), '_get', ["signInMethod"])), token: T$.intN().as(dart.dsend(dart.dsend(additionalData, '_get', ["authCredential"]), '_get', ["token"]))});
        }
        if (dart.dsend(additionalData, '_get', ["email"]) != null) {
          email = T$.StringN().as(dart.dsend(additionalData, '_get', ["email"]));
        }
      }
      let customCode = exception$0._getCustomCode(T$.MapN().as(additionalData), message);
      if (customCode != null) {
        code = customCode;
      }
    }
    return new firebase_auth_exception.FirebaseAuthException.new({code: code, message: message, email: email, credential: credential});
  };
  exception$0._getCustomCode = function _getCustomCode(additionalData, message) {
    let t310, t310$, t310$0;
    let listOfRecognizedCode = T$.JSArrayOfString().of(["INVALID_LOGIN_CREDENTIALS", "BLOCKING_FUNCTION_ERROR_RESPONSE"]);
    for (let recognizedCode of listOfRecognizedCode) {
      if (dart.equals((t310 = additionalData, t310 == null ? null : t310[S$.$_get]("message")), recognizedCode) || dart.test((t310$0 = (t310$ = message, t310$ == null ? null : t310$[S$.$contains](recognizedCode)), t310$0 == null ? false : t310$0))) {
        return recognizedCode;
      }
    }
    return null;
  };
  exception$0.parseMultiFactorError = function parseMultiFactorError(exception) {
    let t310;
    let message = exception.message;
    let additionalData = T$.MapNOfObjectN$ObjectN().as(exception.details);
    if (additionalData == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "Can't parse multi factor error", message: message}));
    }
    let pigeonMultiFactorInfo = iterable_extensions['IterableNullableExtension|whereNotNull'](core.Object, (t310 = T$.ListNOfObjectN().as(additionalData[S$.$_get]("multiFactorHints")), t310 == null ? T$.JSArrayOfObjectN().of([]) : t310))[S$.$map](messages$46pigeon.PigeonMultiFactorInfo, C[388] || CT.C388)[S$.$toList]();
    let multiFactorInfo = pigeon_helper.multiFactorInfoPigeonToObject(pigeonMultiFactorInfo);
    let auth = method_channel_firebase_auth.MethodChannelFirebaseAuth.methodChannelFirebaseAuthInstances[S$.$_get](additionalData[S$.$_get]("appName"));
    if (auth == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "second-factor-required", message: message}));
    }
    let sessionId = T$.StringN().as(additionalData[S$.$_get]("multiFactorSessionId"));
    let resolverId = T$.StringN().as(additionalData[S$.$_get]("multiFactorResolverId"));
    if (sessionId == null || resolverId == null) {
      dart.throw(new firebase_auth_exception.FirebaseAuthException.new({code: "Can't parse multi factor error", message: message}));
    }
    let multiFactorResolver = new method_channel_multi_factor.MethodChannelMultiFactorResolver.new(multiFactorInfo, new platform_interface_multi_factor.MultiFactorSession.new(sessionId), resolverId, auth);
    return new firebase_auth_multi_factor_exception.FirebaseAuthMultiFactorExceptionPlatform.new({code: "second-factor-required", message: message, resolver: multiFactorResolver});
  };
  dart.defineLazy(exception$0, {
    /*exception$0.kMultiFactorError*/get kMultiFactorError() {
      return "second-factor-required";
    }
  }, false);
  pigeon_helper.multiFactorInfoPigeonToObject = function multiFactorInfoPigeonToObject(pigeonMultiFactorInfo) {
    return iterable_extensions['IterableNullableExtension|whereNotNull'](messages$46pigeon.PigeonMultiFactorInfo, pigeonMultiFactorInfo)[S$.$map](platform_interface_multi_factor.MultiFactorInfo, dart.fn(e => {
      let t310, t310$, t310$0;
      if (e.phoneNumber != null) {
        return new platform_interface_multi_factor.PhoneMultiFactorInfo.new({displayName: e.displayName, enrollmentTimestamp: e.enrollmentTimestamp, factorId: (t310 = e.factorId, t310 == null ? "phone" : t310), uid: e.uid, phoneNumber: dart.nullCheck(e.phoneNumber)});
      }
      if (e.factorId === "totp") {
        return new platform_interface_multi_factor.TotpMultiFactorInfo.new({displayName: e.displayName, enrollmentTimestamp: e.enrollmentTimestamp, factorId: (t310$ = e.factorId, t310$ == null ? "totp" : t310$), uid: e.uid});
      }
      return new platform_interface_multi_factor.MultiFactorInfo.new({displayName: e.displayName, enrollmentTimestamp: e.enrollmentTimestamp, factorId: (t310$0 = e.factorId, t310$0 == null ? "" : t310$0), uid: e.uid});
    }, T.PigeonMultiFactorInfoToMultiFactorInfo()))[S$.$toList]();
  };
  utils$2.bucketFromGoogleStorageUrl = function bucketFromGoogleStorageUrl(url) {
    if (!url[S$.$startsWith]("gs://")) dart.assertFailed(null, I[208], 8, 10, "url.startsWith('gs://')");
    let stopIndex = url[S$0.$indexOf]("/", 5);
    let stop = stopIndex === -1 ? url.length : stopIndex;
    return url[S$0.$substring](5, stop);
  };
  utils$2.pathFromGoogleStorageUrl = function pathFromGoogleStorageUrl(url) {
    if (!url[S$.$startsWith]("gs://")) dart.assertFailed(null, I[208], 18, 10, "url.startsWith('gs://')");
    let stopIndex = url[S$0.$indexOf]("/", 5);
    if (stopIndex === -1) return "/";
    return url[S$0.$substring](stopIndex + 1, url.length);
  };
  utils$2.partsFromHttpUrl = function partsFromHttpUrl(url) {
    if (!url[S$.$startsWith]("http")) dart.assertFailed(null, I[208], 38, 10, "url.startsWith('http')");
    let decodedUrl = utils$2._decodeHttpUrl(url);
    if (decodedUrl == null) {
      return null;
    }
    if (decodedUrl[S$.$contains]("firebasestorage.googleapis.com") || decodedUrl[S$.$contains]("localhost")) {
      let origin = null;
      if (decodedUrl[S$.$contains]("localhost")) {
        let uri = core.Uri.parse(url);
        origin = "^http?://" + uri.host + ":" + dart.str(uri.port);
      } else {
        origin = "^https?://" + "firebasestorage.googleapis.com";
      }
      let firebaseStorageRegExp = core.RegExp.new(origin + "(?::\\d+)?" + "/" + "v[A-Za-z0-9_]+" + "/b/" + "([A-Za-z0-9.\\-_]+)" + "/o" + "(/([^?#]*).*)?$", {caseSensitive: false});
      let match = firebaseStorageRegExp.firstMatch(decodedUrl);
      if (match == null) {
        return null;
      }
      return new (T$.IdentityMapOfString$StringN()).from(["bucket", match.group(1), "path", match.group(3)]);
    } else {
      let cloudStorageRegExp = core.RegExp.new("^https?://" + utils$2._cloudStorageHost + "(?::\\d+)?" + "/" + "([A-Za-z0-9.\\-_]+)" + "/" + "([^?#]*)*$", {caseSensitive: false});
      let match = cloudStorageRegExp.firstMatch(decodedUrl);
      if (match == null) {
        return null;
      }
      return new (T$.IdentityMapOfString$StringN()).from(["bucket", match.group(1), "path", match.group(2)]);
    }
  };
  utils$2._decodeHttpUrl = function _decodeHttpUrl(url) {
    try {
      return core.Uri.decodeFull(url);
    } catch (e) {
      let _ = dart.getThrown(e);
      if (core.Object.is(_)) {
        return null;
      } else
        throw e;
    }
  };
  dart.defineLazy(utils$2, {
    /*utils$2._firebaseStorageHost*/get _firebaseStorageHost() {
      return "firebasestorage.googleapis.com";
    },
    /*utils$2._cloudStorageHost*/get _cloudStorageHost() {
      return "(?:storage.googleapis.com|storage.cloud.google.com)";
    },
    /*utils$2._bucketDomain*/get _bucketDomain() {
      return "([A-Za-z0-9.\\-_]+)";
    },
    /*utils$2._version*/get _version() {
      return "v[A-Za-z0-9_]+";
    },
    /*utils$2._firebaseStoragePath*/get _firebaseStoragePath() {
      return "(/([^?#]*).*)?$";
    },
    /*utils$2._cloudStoragePath*/get _cloudStoragePath() {
      return "([^?#]*)*$";
    },
    /*utils$2._optionalPort*/get _optionalPort() {
      return "(?::\\d+)?";
    }
  }, false);
  data.GlobalOptions = class GlobalOptions extends core.Object {
    get rng() {
      return this[S$0.rng];
    }
    set rng(value) {
      super.rng = value;
    }
    static ['_#new#tearOff'](rng) {
      return new data.GlobalOptions.new(rng);
    }
  };
  (data.GlobalOptions.new = function(rng) {
    this[S$0.rng] = rng;
    ;
  }).prototype = data.GlobalOptions.prototype;
  dart.addTypeTests(data.GlobalOptions);
  dart.addTypeCaches(data.GlobalOptions);
  dart.setLibraryUri(data.GlobalOptions, I[209]);
  dart.setFieldSignature(data.GlobalOptions, () => ({
    __proto__: dart.getFields(data.GlobalOptions.__proto__),
    rng: dart.finalFieldType(dart.nullable(rng$.RNG))
  }));
  data.V1Options = class V1Options extends core.Object {
    get clockSeq() {
      return this[S$0.clockSeq];
    }
    set clockSeq(value) {
      super.clockSeq = value;
    }
    get mSecs() {
      return this[S$0.mSecs];
    }
    set mSecs(value) {
      super.mSecs = value;
    }
    get nSecs() {
      return this[S$0.nSecs];
    }
    set nSecs(value) {
      super.nSecs = value;
    }
    get node() {
      return this[S$0.node];
    }
    set node(value) {
      super.node = value;
    }
    get seedBytes() {
      return this[S$0.seedBytes];
    }
    set seedBytes(value) {
      super.seedBytes = value;
    }
    static ['_#new#tearOff'](clockSeq, mSecs, nSecs, node, seedBytes) {
      return new data.V1Options.new(clockSeq, mSecs, nSecs, node, seedBytes);
    }
  };
  (data.V1Options.new = function(clockSeq, mSecs, nSecs, node, seedBytes) {
    this[S$0.clockSeq] = clockSeq;
    this[S$0.mSecs] = mSecs;
    this[S$0.nSecs] = nSecs;
    this[S$0.node] = node;
    this[S$0.seedBytes] = seedBytes;
    ;
  }).prototype = data.V1Options.prototype;
  dart.addTypeTests(data.V1Options);
  dart.addTypeCaches(data.V1Options);
  dart.setLibraryUri(data.V1Options, I[209]);
  dart.setFieldSignature(data.V1Options, () => ({
    __proto__: dart.getFields(data.V1Options.__proto__),
    clockSeq: dart.finalFieldType(dart.nullable(core.int)),
    mSecs: dart.finalFieldType(dart.nullable(core.int)),
    nSecs: dart.finalFieldType(dart.nullable(core.int)),
    node: dart.finalFieldType(dart.nullable(core.List$(core.int))),
    seedBytes: dart.finalFieldType(dart.nullable(core.List$(core.int)))
  }));
  data.V4Options = class V4Options extends core.Object {
    get random() {
      return this[S$0.random];
    }
    set random(value) {
      super.random = value;
    }
    get rng() {
      return this[S$0.rng$1];
    }
    set rng(value) {
      super.rng = value;
    }
    static ['_#new#tearOff'](random, rng) {
      return new data.V4Options.new(random, rng);
    }
  };
  (data.V4Options.new = function(random, rng) {
    this[S$0.random] = random;
    this[S$0.rng$1] = rng;
    ;
  }).prototype = data.V4Options.prototype;
  dart.addTypeTests(data.V4Options);
  dart.addTypeCaches(data.V4Options);
  dart.setLibraryUri(data.V4Options, I[209]);
  dart.setFieldSignature(data.V4Options, () => ({
    __proto__: dart.getFields(data.V4Options.__proto__),
    random: dart.finalFieldType(dart.nullable(core.List$(core.int))),
    rng: dart.finalFieldType(dart.nullable(rng$.RNG))
  }));
  data.V5Options = class V5Options extends core.Object {
    get randomNamespace() {
      return this[S$0.randomNamespace];
    }
    set randomNamespace(value) {
      super.randomNamespace = value;
    }
    get v4options() {
      return this[S$0.v4options];
    }
    set v4options(value) {
      super.v4options = value;
    }
    static ['_#new#tearOff'](randomNamespace, v4options) {
      return new data.V5Options.new(randomNamespace, v4options);
    }
  };
  (data.V5Options.new = function(randomNamespace, v4options) {
    this[S$0.randomNamespace] = randomNamespace;
    this[S$0.v4options] = v4options;
    ;
  }).prototype = data.V5Options.prototype;
  dart.addTypeTests(data.V5Options);
  dart.addTypeCaches(data.V5Options);
  dart.setLibraryUri(data.V5Options, I[209]);
  dart.setFieldSignature(data.V5Options, () => ({
    __proto__: dart.getFields(data.V5Options.__proto__),
    randomNamespace: dart.finalFieldType(dart.nullable(core.bool)),
    v4options: dart.finalFieldType(dart.nullable(data.V4Options))
  }));
  data.V6Options = class V6Options extends core.Object {
    get clockSeq() {
      return this[S$0.clockSeq$1];
    }
    set clockSeq(value) {
      super.clockSeq = value;
    }
    get mSecs() {
      return this[S$0.mSecs$1];
    }
    set mSecs(value) {
      super.mSecs = value;
    }
    get nSecs() {
      return this[S$0.nSecs$1];
    }
    set nSecs(value) {
      super.nSecs = value;
    }
    get node() {
      return this[S$0.node$1];
    }
    set node(value) {
      super.node = value;
    }
    get seedBytes() {
      return this[S$0.seedBytes$1];
    }
    set seedBytes(value) {
      super.seedBytes = value;
    }
    static ['_#new#tearOff'](clockSeq, mSecs, nSecs, node, seedBytes) {
      return new data.V6Options.new(clockSeq, mSecs, nSecs, node, seedBytes);
    }
  };
  (data.V6Options.new = function(clockSeq, mSecs, nSecs, node, seedBytes) {
    this[S$0.clockSeq$1] = clockSeq;
    this[S$0.mSecs$1] = mSecs;
    this[S$0.nSecs$1] = nSecs;
    this[S$0.node$1] = node;
    this[S$0.seedBytes$1] = seedBytes;
    ;
  }).prototype = data.V6Options.prototype;
  dart.addTypeTests(data.V6Options);
  dart.addTypeCaches(data.V6Options);
  dart.setLibraryUri(data.V6Options, I[209]);
  dart.setFieldSignature(data.V6Options, () => ({
    __proto__: dart.getFields(data.V6Options.__proto__),
    clockSeq: dart.finalFieldType(dart.nullable(core.int)),
    mSecs: dart.finalFieldType(dart.nullable(core.int)),
    nSecs: dart.finalFieldType(dart.nullable(core.int)),
    node: dart.finalFieldType(dart.nullable(core.List$(core.int))),
    seedBytes: dart.finalFieldType(dart.nullable(core.List$(core.int)))
  }));
  data.V7Options = class V7Options extends core.Object {
    get time() {
      return this[S$0.time];
    }
    set time(value) {
      super.time = value;
    }
    get randomBytes() {
      return this[S$0.randomBytes];
    }
    set randomBytes(value) {
      super.randomBytes = value;
    }
    static ['_#new#tearOff'](time, randomBytes) {
      return new data.V7Options.new(time, randomBytes);
    }
  };
  (data.V7Options.new = function(time, randomBytes) {
    this[S$0.time] = time;
    this[S$0.randomBytes] = randomBytes;
    ;
  }).prototype = data.V7Options.prototype;
  dart.addTypeTests(data.V7Options);
  dart.addTypeCaches(data.V7Options);
  dart.setLibraryUri(data.V7Options, I[209]);
  dart.setFieldSignature(data.V7Options, () => ({
    __proto__: dart.getFields(data.V7Options.__proto__),
    time: dart.finalFieldType(dart.nullable(core.int)),
    randomBytes: dart.finalFieldType(dart.nullable(core.List$(core.int)))
  }));
  data.V8Options = class V8Options extends core.Object {
    get time() {
      return this[S$0.time$1];
    }
    set time(value) {
      super.time = value;
    }
    get randomBytes() {
      return this[S$0.randomBytes$1];
    }
    set randomBytes(value) {
      super.randomBytes = value;
    }
    static ['_#new#tearOff'](time, randomBytes) {
      return new data.V8Options.new(time, randomBytes);
    }
  };
  (data.V8Options.new = function(time, randomBytes) {
    this[S$0.time$1] = time;
    this[S$0.randomBytes$1] = randomBytes;
    ;
  }).prototype = data.V8Options.prototype;
  dart.addTypeTests(data.V8Options);
  dart.addTypeCaches(data.V8Options);
  dart.setLibraryUri(data.V8Options, I[209]);
  dart.setFieldSignature(data.V8Options, () => ({
    __proto__: dart.getFields(data.V8Options.__proto__),
    time: dart.finalFieldType(dart.nullable(core.DateTime)),
    randomBytes: dart.finalFieldType(dart.nullable(core.List$(core.int)))
  }));
  data.V1State = class V1State extends core.Object {
    static ['_#new#tearOff']() {
      return new data.V1State.new();
    }
  };
  (data.V1State.new = function() {
    ;
  }).prototype = data.V1State.prototype;
  dart.addTypeTests(data.V1State);
  dart.addTypeCaches(data.V1State);
  dart.setLibraryUri(data.V1State, I[209]);
  dart.setStaticFieldSignature(data.V1State, () => ['nodeId', 'clockSeq', 'mSecs', 'nSecs', 'initialized']);
  dart.defineLazy(data.V1State, {
    /*data.V1State.nodeId*/get nodeId() {
      return T.JSArrayOfint().of([]);
    },
    set nodeId(value) {},
    /*data.V1State.clockSeq*/get clockSeq() {
      return 0;
    },
    set clockSeq(value) {},
    /*data.V1State.mSecs*/get mSecs() {
      return 0;
    },
    set mSecs(value) {},
    /*data.V1State.nSecs*/get nSecs() {
      return 0;
    },
    set nSecs(value) {},
    /*data.V1State.initialized*/get initialized() {
      return false;
    },
    set initialized(value) {}
  }, false);
  data.V6State = class V6State extends core.Object {
    static ['_#new#tearOff']() {
      return new data.V6State.new();
    }
  };
  (data.V6State.new = function() {
    ;
  }).prototype = data.V6State.prototype;
  dart.addTypeTests(data.V6State);
  dart.addTypeCaches(data.V6State);
  dart.setLibraryUri(data.V6State, I[209]);
  dart.setStaticFieldSignature(data.V6State, () => ['nodeId', 'clockSeq', 'mSecs', 'nSecs', 'initialized']);
  dart.defineLazy(data.V6State, {
    /*data.V6State.nodeId*/get nodeId() {
      return T.JSArrayOfint().of([]);
    },
    set nodeId(value) {},
    /*data.V6State.clockSeq*/get clockSeq() {
      return null;
    },
    set clockSeq(value) {},
    /*data.V6State.mSecs*/get mSecs() {
      return 0;
    },
    set mSecs(value) {},
    /*data.V6State.nSecs*/get nSecs() {
      return 0;
    },
    set nSecs(value) {},
    /*data.V6State.initialized*/get initialized() {
      return false;
    },
    set initialized(value) {}
  }, false);
  rng$.RNG = class RNG extends core.Object {
    generate() {
      let uint8list = this.generateInternal();
      if (uint8list[S$.$length] !== 16) {
        dart.throw(core.Exception.new("The length of the Uint8list returned by the custom RNG must be 16."));
      } else {
        return uint8list;
      }
    }
  };
  (rng$.RNG.new = function() {
    ;
  }).prototype = rng$.RNG.prototype;
  dart.addTypeTests(rng$.RNG);
  dart.addTypeCaches(rng$.RNG);
  dart.setMethodSignature(rng$.RNG, () => ({
    __proto__: dart.getMethods(rng$.RNG.__proto__),
    generate: dart.fnType(typed_data.Uint8List, [])
  }));
  dart.setLibraryUri(rng$.RNG, I[210]);
  rng$.MathRNG = class MathRNG extends rng$.RNG {
    get seed() {
      return this[S$0.seed];
    }
    set seed(value) {
      super.seed = value;
    }
    static ['_#new#tearOff'](opts) {
      let seed = opts && 'seed' in opts ? opts.seed : -1;
      return new rng$.MathRNG.new({seed: seed});
    }
    generateInternal() {
      let b = _native_typed_data.NativeUint8List.new(16);
      let rand = this.seed === -1 ? rng$.MathRNG._random : math.Random.new(this.seed);
      for (let i = 0; i < 16; i = i + 1) {
        b[S$.$_set](i, rand.nextInt(256));
      }
      return b;
    }
  };
  (rng$.MathRNG.new = function(opts) {
    let seed = opts && 'seed' in opts ? opts.seed : -1;
    this[S$0.seed] = seed;
    rng$.MathRNG.__proto__.new.call(this);
    ;
  }).prototype = rng$.MathRNG.prototype;
  dart.addTypeTests(rng$.MathRNG);
  dart.addTypeCaches(rng$.MathRNG);
  dart.setMethodSignature(rng$.MathRNG, () => ({
    __proto__: dart.getMethods(rng$.MathRNG.__proto__),
    generateInternal: dart.fnType(typed_data.Uint8List, [])
  }));
  dart.setLibraryUri(rng$.MathRNG, I[210]);
  dart.setFieldSignature(rng$.MathRNG, () => ({
    __proto__: dart.getFields(rng$.MathRNG.__proto__),
    seed: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(rng$.MathRNG, () => ['_random']);
  dart.defineLazy(rng$.MathRNG, {
    /*rng$.MathRNG._random*/get _random() {
      return math.Random.new();
    }
  }, false);
  rng$.CryptoRNG = class CryptoRNG extends rng$.RNG {
    generateInternal() {
      let b = _native_typed_data.NativeUint8List.new(16);
      for (let i = 0; i < 16; i = i + 1) {
        b[S$.$_set](i, rng$.CryptoRNG._secureRandom.nextInt(256));
      }
      return b;
    }
    static ['_#new#tearOff']() {
      return new rng$.CryptoRNG.new();
    }
  };
  (rng$.CryptoRNG.new = function() {
    rng$.CryptoRNG.__proto__.new.call(this);
    ;
  }).prototype = rng$.CryptoRNG.prototype;
  dart.addTypeTests(rng$.CryptoRNG);
  dart.addTypeCaches(rng$.CryptoRNG);
  dart.setMethodSignature(rng$.CryptoRNG, () => ({
    __proto__: dart.getMethods(rng$.CryptoRNG.__proto__),
    generateInternal: dart.fnType(typed_data.Uint8List, [])
  }));
  dart.setLibraryUri(rng$.CryptoRNG, I[210]);
  dart.setStaticFieldSignature(rng$.CryptoRNG, () => ['_secureRandom']);
  dart.defineLazy(rng$.CryptoRNG, {
    /*rng$.CryptoRNG._secureRandom*/get _secureRandom() {
      return math.Random.secure();
    }
  }, false);
  rng$.LegacyRNG = class LegacyRNG extends rng$.RNG {
    get [S$0._rng$1]() {
      return this[S$0._rng];
    }
    set [S$0._rng$1](value) {
      super[S$0._rng$1] = value;
    }
    get [S$0._namedArgs$1]() {
      return this[S$0._namedArgs];
    }
    set [S$0._namedArgs$1](value) {
      super[S$0._namedArgs$1] = value;
    }
    get [S$0._positionalArgs$1]() {
      return this[S$0._positionalArgs];
    }
    set [S$0._positionalArgs$1](value) {
      super[S$0._positionalArgs$1] = value;
    }
    static ['_#new#tearOff'](_rng, _namedArgs, _positionalArgs) {
      return new rng$.LegacyRNG.new(_rng, _namedArgs, _positionalArgs);
    }
    generateInternal() {
      return typed_data.Uint8List.as(core.Function.apply(this[S$0._rng$1], this[S$0._positionalArgs$1], this[S$0._namedArgs$1]));
    }
  };
  (rng$.LegacyRNG.new = function(_rng, _namedArgs, _positionalArgs) {
    this[S$0._rng] = _rng;
    this[S$0._namedArgs] = _namedArgs;
    this[S$0._positionalArgs] = _positionalArgs;
    rng$.LegacyRNG.__proto__.new.call(this);
    ;
  }).prototype = rng$.LegacyRNG.prototype;
  dart.addTypeTests(rng$.LegacyRNG);
  dart.addTypeCaches(rng$.LegacyRNG);
  dart.setMethodSignature(rng$.LegacyRNG, () => ({
    __proto__: dart.getMethods(rng$.LegacyRNG.__proto__),
    generateInternal: dart.fnType(typed_data.Uint8List, [])
  }));
  dart.setLibraryUri(rng$.LegacyRNG, I[210]);
  dart.setFieldSignature(rng$.LegacyRNG, () => ({
    __proto__: dart.getFields(rng$.LegacyRNG.__proto__),
    [S$0._rng$1]: dart.finalFieldType(core.Function),
    [S$0._namedArgs$1]: dart.finalFieldType(core.Map$(core.Symbol, dart.dynamic)),
    [S$0._positionalArgs$1]: dart.finalFieldType(core.List)
  }));
  validation.UuidValidation = class UuidValidation extends core.Object {
    static isValidUUID(opts) {
      let fromString = opts && 'fromString' in opts ? opts.fromString : "";
      let fromByteList = opts && 'fromByteList' in opts ? opts.fromByteList : null;
      let validationMode = opts && 'validationMode' in opts ? opts.validationMode : C[266] || CT.C266;
      if (fromByteList != null) {
        fromString = parsing.UuidParsing.unparse(fromByteList);
      }
      if (fromString === enums.Namespace.NIL) {
        return true;
      }
      if (fromString.length !== 36) {
        return false;
      }
      switch (validationMode) {
        case C[266] || CT.C266:
          {
            {
              let pattern = "^[0-9a-f]{8}-[0-9a-f]{4}-[0-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$";
              let regex = core.RegExp.new(pattern, {caseSensitive: false, multiLine: true});
              let match = regex.hasMatch(fromString[S$.$toLowerCase]());
              return match;
            }
          }
        case C[389] || CT.C389:
          {
            {
              let pattern = "^[0-9a-f]{8}-[0-9a-f]{4}-[0-8][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$";
              let regex = core.RegExp.new(pattern, {caseSensitive: false, multiLine: true});
              let match = regex.hasMatch(fromString[S$.$toLowerCase]());
              return match;
            }
          }
        default:
          {
            {
              dart.throw(core.Exception.new("`" + dart.str(validationMode) + "` is an invalid ValidationMode."));
            }
          }
      }
    }
    static isValidOrThrow(opts) {
      let fromString = opts && 'fromString' in opts ? opts.fromString : "";
      let fromByteList = opts && 'fromByteList' in opts ? opts.fromByteList : null;
      let validationMode = opts && 'validationMode' in opts ? opts.validationMode : C[266] || CT.C266;
      let isValid = validation.UuidValidation.isValidUUID({fromString: fromString, fromByteList: fromByteList, validationMode: validationMode});
      if (!isValid) {
        if (validationMode !== enums.ValidationMode.nonStrict) {
          let isValidNonStrict = validation.UuidValidation.isValidUUID({fromString: fromString, fromByteList: fromByteList, validationMode: enums.ValidationMode.nonStrict});
          if (isValidNonStrict) {
            dart.throw(new core.FormatException.new("The provided UUID is not RFC4122 compliant. It seems you might be using a Microsoft GUID. Try setting `validationMode = ValidationMode.nonStrict`", fromString));
          }
        }
        dart.throw(new core.FormatException.new("The provided UUID is invalid.", fromString));
      }
    }
    static ['_#new#tearOff']() {
      return new validation.UuidValidation.new();
    }
  };
  (validation.UuidValidation.new = function() {
    ;
  }).prototype = validation.UuidValidation.prototype;
  dart.addTypeTests(validation.UuidValidation);
  dart.addTypeCaches(validation.UuidValidation);
  dart.setStaticMethodSignature(validation.UuidValidation, () => ['isValidUUID', 'isValidOrThrow']);
  dart.setLibraryUri(validation.UuidValidation, I[211]);
  enums.Namespace = class Namespace extends core.Object {
    static ['_#new#tearOff']() {
      return new enums.Namespace.new();
    }
  };
  (enums.Namespace.new = function() {
    ;
  }).prototype = enums.Namespace.prototype;
  dart.addTypeTests(enums.Namespace);
  dart.addTypeCaches(enums.Namespace);
  dart.setLibraryUri(enums.Namespace, I[212]);
  dart.setStaticFieldSignature(enums.Namespace, () => ['DNS', 'URL', 'OID', 'X500', 'NIL']);
  dart.defineLazy(enums.Namespace, {
    /*enums.Namespace.DNS*/get DNS() {
      return "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
    },
    /*enums.Namespace.URL*/get URL() {
      return "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
    },
    /*enums.Namespace.OID*/get OID() {
      return "6ba7b812-9dad-11d1-80b4-00c04fd430c8";
    },
    /*enums.Namespace.X500*/get X500() {
      return "6ba7b814-9dad-11d1-80b4-00c04fd430c8";
    },
    /*enums.Namespace.NIL*/get NIL() {
      return "00000000-0000-0000-0000-000000000000";
    }
  }, false);
  enums.ValidationMode = class ValidationMode extends core._Enum {
    [S$0._enumToString]() {
      return "ValidationMode." + this[S$0._name];
    }
  };
  (enums.ValidationMode.new = function(index, name) {
    enums.ValidationMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = enums.ValidationMode.prototype;
  dart.addTypeTests(enums.ValidationMode);
  dart.addTypeCaches(enums.ValidationMode);
  dart.setMethodSignature(enums.ValidationMode, () => ({
    __proto__: dart.getMethods(enums.ValidationMode.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(enums.ValidationMode, I[212]);
  dart.setStaticFieldSignature(enums.ValidationMode, () => ['values', 'nonStrict', 'strictRFC4122']);
  dart.defineLazy(enums.ValidationMode, {
    /*enums.ValidationMode.values*/get values() {
      return C[390] || CT.C390;
    },
    /*enums.ValidationMode.nonStrict*/get nonStrict() {
      return C[389] || CT.C389;
    },
    /*enums.ValidationMode.strictRFC4122*/get strictRFC4122() {
      return C[266] || CT.C266;
    }
  }, false);
  parsing.UuidParsing = class UuidParsing extends core.Object {
    static parseHexToBytes(hex) {
      if (hex.length[S$0.$modulo](2) !== 0) {
        dart.throw(new core.ArgumentError.new("Invalid hex string"));
      }
      if (hex[S$.$startsWith]("0x")) {
        hex = hex[S$0.$substring](2);
      }
      let bytes = _native_typed_data.NativeUint8List.new((hex.length / 2)[S$0.$truncate]());
      for (let i = 0; i < hex.length; i = i + 2) {
        bytes[S$.$_set]((i / 2)[S$0.$truncate](), core.int.parse(hex[S$0.$substring](i, i + 2), {radix: 16}));
      }
      return bytes;
    }
    static parse(uuid, opts) {
      let t313, t313$;
      let buffer = opts && 'buffer' in opts ? opts.buffer : null;
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      let validate = opts && 'validate' in opts ? opts.validate : true;
      let validationMode = opts && 'validationMode' in opts ? opts.validationMode : C[266] || CT.C266;
      if (validate) {
        validation.UuidValidation.isValidOrThrow({fromString: uuid, validationMode: validationMode});
      }
      let i = offset;
      let ii = 0;
      if (buffer == null) {
        if (offset !== 0) {
          dart.throw(new core.RangeError.new("non-zero offset without providing a buffer"));
        }
        buffer = _native_typed_data.NativeUint8List.new(16);
      } else {
        if (buffer[S$.$length] - offset < 16) {
          dart.throw(new core.RangeError.new("buffer too small: need 16: length=" + dart.str(buffer[S$.$length]) + (offset !== 0 ? ", offset=" + dart.str(offset) : "")));
        }
      }
      let regex = core.RegExp.new("[0-9a-f]{2}");
      for (let match of regex.allMatches(uuid[S$.$toLowerCase]())) {
        if (ii < 16) {
          let hex = uuid[S$.$toLowerCase]()[S$0.$substring](match.start, match.end);
          buffer[S$.$_set](i + (t313 = ii, ii = t313 + 1, t313), core.int.parse(hex, {radix: 16}));
        }
      }
      while (ii < 16) {
        buffer[S$.$_set](i + (t313$ = ii, ii = t313$ + 1, t313$), 0);
      }
      return buffer;
    }
    static parseAsByteList(uuid, opts) {
      let buffer = opts && 'buffer' in opts ? opts.buffer : null;
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      let validate = opts && 'validate' in opts ? opts.validate : true;
      let validationMode = opts && 'validationMode' in opts ? opts.validationMode : C[266] || CT.C266;
      return _native_typed_data.NativeUint8List.fromList(parsing.UuidParsing.parse(uuid, {buffer: buffer, offset: offset, validate: validate, validationMode: validationMode}));
    }
    static unparse(buffer, opts) {
      let t313, t313$, t313$0, t313$1, t313$2, t313$3, t313$4, t313$5, t313$6, t313$7, t313$8, t313$9, t313$10, t313$11, t313$12, t313$13;
      let offset = opts && 'offset' in opts ? opts.offset : 0;
      if (buffer[S$.$length] - offset < 16) {
        dart.throw(new core.RangeError.new("buffer too small: need 16: length=" + dart.str(buffer[S$.$length]) + (offset !== 0 ? ", offset=" + dart.str(offset) : "")));
      }
      let i = offset;
      return parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313 = i, i = t313 + 1, t313))) + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$ = i, i = t313$ + 1, t313$))) + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$0 = i, i = t313$0 + 1, t313$0))) + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$1 = i, i = t313$1 + 1, t313$1))) + "-" + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$2 = i, i = t313$2 + 1, t313$2))) + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$3 = i, i = t313$3 + 1, t313$3))) + "-" + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$4 = i, i = t313$4 + 1, t313$4))) + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$5 = i, i = t313$5 + 1, t313$5))) + "-" + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$6 = i, i = t313$6 + 1, t313$6))) + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$7 = i, i = t313$7 + 1, t313$7))) + "-" + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$8 = i, i = t313$8 + 1, t313$8))) + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$9 = i, i = t313$9 + 1, t313$9))) + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$10 = i, i = t313$10 + 1, t313$10))) + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$11 = i, i = t313$11 + 1, t313$11))) + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$12 = i, i = t313$12 + 1, t313$12))) + parsing.UuidParsing._byteToHex[S$.$_get](buffer[S$.$_get]((t313$13 = i, i = t313$13 + 1, t313$13)));
    }
    static ['_#new#tearOff']() {
      return new parsing.UuidParsing.new();
    }
  };
  (parsing.UuidParsing.new = function() {
    ;
  }).prototype = parsing.UuidParsing.prototype;
  dart.addTypeTests(parsing.UuidParsing);
  dart.addTypeCaches(parsing.UuidParsing);
  dart.setStaticMethodSignature(parsing.UuidParsing, () => ['parseHexToBytes', 'parse', 'parseAsByteList', 'unparse']);
  dart.setLibraryUri(parsing.UuidParsing, I[213]);
  dart.setStaticFieldSignature(parsing.UuidParsing, () => ['_byteToHex']);
  dart.defineLazy(parsing.UuidParsing, {
    /*parsing.UuidParsing._byteToHex*/get _byteToHex() {
      return T$.ListOfString().generate(256, dart.fn(i => i[S$0.$toRadixString](16)[S$0.$padLeft](2, "0"), T.intToString()));
    }
  }, false);
  uuid_value.UuidValue = class UuidValue extends core.Object {
    get uuid() {
      return this[S$0.uuid];
    }
    set uuid(value) {
      super.uuid = value;
    }
    static fromString(uuid) {
      return new uuid_value.UuidValue.new(uuid[S$.$toLowerCase]());
    }
    static ['_#fromString#tearOff'](uuid) {
      return uuid_value.UuidValue.fromString(uuid);
    }
    static fromByteList(byteList, opts) {
      let t313;
      let offset = opts && 'offset' in opts ? opts.offset : null;
      return new uuid_value.UuidValue.new(parsing.UuidParsing.unparse(byteList, {offset: (t313 = offset, t313 == null ? 0 : t313)}));
    }
    static ['_#fromByteList#tearOff'](byteList, opts) {
      let offset = opts && 'offset' in opts ? opts.offset : null;
      return uuid_value.UuidValue.fromByteList(byteList, {offset: offset});
    }
    static fromList(byteList, opts) {
      let t313;
      let offset = opts && 'offset' in opts ? opts.offset : null;
      return new uuid_value.UuidValue.new(parsing.UuidParsing.unparse(byteList, {offset: (t313 = offset, t313 == null ? 0 : t313)}));
    }
    static ['_#fromList#tearOff'](byteList, opts) {
      let offset = opts && 'offset' in opts ? opts.offset : null;
      return uuid_value.UuidValue.fromList(byteList, {offset: offset});
    }
    static withValidation(uuid, validationMode = C[266] || CT.C266) {
      let uuidValue = new uuid_value.UuidValue.new(uuid[S$.$toLowerCase]());
      uuidValue.validate(validationMode);
      return uuidValue;
    }
    static ['_#withValidation#tearOff'](uuid, validationMode = C[266] || CT.C266) {
      return uuid_value.UuidValue.withValidation(uuid, validationMode);
    }
    static ['_#new#tearOff'](uuid) {
      return new uuid_value.UuidValue.new(uuid);
    }
    validate(validationMode = C[266] || CT.C266) {
      validation.UuidValidation.isValidOrThrow({fromString: this.uuid, validationMode: validationMode});
    }
    toBytes(opts) {
      let validate = opts && 'validate' in opts ? opts.validate : false;
      return parsing.UuidParsing.parseAsByteList(this.uuid, {validate: validate});
    }
    toString() {
      return this.uuid;
    }
    equals(other) {
      return this.uuid === other.uuid;
    }
    _equals(other) {
      if (other == null) return false;
      return uuid_value.UuidValue.is(other) && this.uuid === other.uuid;
    }
    get hashCode() {
      return this.uuid[S$.$hashCode];
    }
    get version() {
      return core.int.parse(core.String.fromCharCode(this.uuid[S$0.$codeUnitAt](14)));
    }
    get time() {
      return -1;
    }
  };
  (uuid_value.UuidValue.new = function(uuid) {
    this[S$0.uuid] = uuid;
    ;
  }).prototype = uuid_value.UuidValue.prototype;
  dart.addTypeTests(uuid_value.UuidValue);
  dart.addTypeCaches(uuid_value.UuidValue);
  dart.setMethodSignature(uuid_value.UuidValue, () => ({
    __proto__: dart.getMethods(uuid_value.UuidValue.__proto__),
    validate: dart.fnType(dart.void, [], [enums.ValidationMode]),
    toBytes: dart.fnType(typed_data.Uint8List, [], {validate: core.bool}, {}),
    equals: dart.fnType(core.bool, [uuid_value.UuidValue])
  }));
  dart.setStaticMethodSignature(uuid_value.UuidValue, () => ['fromString', 'fromByteList', 'fromList', 'withValidation']);
  dart.setGetterSignature(uuid_value.UuidValue, () => ({
    __proto__: dart.getGetters(uuid_value.UuidValue.__proto__),
    version: core.int,
    time: core.int
  }));
  dart.setLibraryUri(uuid_value.UuidValue, I[214]);
  dart.setFieldSignature(uuid_value.UuidValue, () => ({
    __proto__: dart.getFields(uuid_value.UuidValue.__proto__),
    uuid: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(uuid_value.UuidValue, () => ['dns', 'url', 'oid', 'x500', 'nil']);
  dart.defineExtensionMethods(uuid_value.UuidValue, ['toString', '_equals']);
  dart.defineExtensionAccessors(uuid_value.UuidValue, ['hashCode']);
  dart.defineLazy(uuid_value.UuidValue, {
    /*uuid_value.UuidValue.dns*/get dns() {
      return C[391] || CT.C391;
    },
    /*uuid_value.UuidValue.url*/get url() {
      return C[392] || CT.C392;
    },
    /*uuid_value.UuidValue.oid*/get oid() {
      return C[393] || CT.C393;
    },
    /*uuid_value.UuidValue.x500*/get x500() {
      return C[394] || CT.C394;
    },
    /*uuid_value.UuidValue.nil*/get nil() {
      return C[395] || CT.C395;
    }
  }, false);
  v1.UuidV1 = class UuidV1 extends core.Object {
    get goptions() {
      return this[S$0.goptions$1];
    }
    set goptions(value) {
      super.goptions = value;
    }
    static ['_#new#tearOff'](opts) {
      let goptions = opts && 'goptions' in opts ? opts.goptions : null;
      return new v1.UuidV1.new({goptions: goptions});
    }
    [S$0._init]() {
      let t314, t313, t313$;
      if (data.V1State.initialized) return;
      let seedBytes = (t313$ = (t313 = this.goptions, t313 == null ? null : (t314 = t313.rng, t314 == null ? null : t314.generate())), t313$ == null ? new rng$.MathRNG.new().generate() : t313$);
      let nodeId = T.JSArrayOfint().of([(seedBytes[S$.$_get](0) | 1) >>> 0, seedBytes[S$.$_get](1), seedBytes[S$.$_get](2), seedBytes[S$.$_get](3), seedBytes[S$.$_get](4), seedBytes[S$.$_get](5)]);
      data.V1State.nodeId = nodeId;
      let clockSeq = (seedBytes[S$.$_get](6) << 8 | seedBytes[S$.$_get](7)) & 262143;
      data.V1State.clockSeq = clockSeq;
      data.V1State.initialized = true;
    }
    generate(opts) {
      let t313, t313$, t313$0, t313$1, t313$2, t313$3, t313$4, t313$5, t313$6, t313$7, t313$8, t313$9, t313$10, t313$11, t313$12, t313$13, t313$14, t313$15, t313$16, t313$17, t313$18, t313$19;
      let options = opts && 'options' in opts ? opts.options : null;
      this[S$0._init]();
      let i = 0;
      let buf = _native_typed_data.NativeUint8List.new(16);
      let clockSeq = (t313$0 = (t313$ = (t313 = options, t313 == null ? null : t313.clockSeq), t313$ == null ? data.V1State.clockSeq : t313$), t313$0 == null ? 0 : t313$0);
      let mSecs = (t313$2 = (t313$1 = options, t313$1 == null ? null : t313$1.mSecs), t313$2 == null ? new core.DateTime.now().microsecondsSinceEpoch : t313$2);
      let nSecs = (t313$4 = (t313$3 = options, t313$3 == null ? null : t313$3.nSecs), t313$4 == null ? data.V1State.nSecs + 1 : t313$4);
      let dt = mSecs - data.V1State.mSecs + (nSecs - data.V1State.nSecs) / 10000;
      if (dt < 0 && (t313$5 = options, t313$5 == null ? null : t313$5.clockSeq) == null) {
        clockSeq = clockSeq + 1 & 16383;
      }
      if ((dt < 0 || mSecs > data.V1State.mSecs) && (t313$6 = options, t313$6 == null ? null : t313$6.nSecs) == null) {
        nSecs = 0;
      }
      if (nSecs >= 10000) {
        dart.throw(core.Exception.new("uuid.v1(): Can't create more than 10M uuids/sec"));
      }
      data.V1State.mSecs = mSecs;
      data.V1State.nSecs = nSecs;
      data.V1State.clockSeq = clockSeq;
      mSecs = mSecs + 12219292800000;
      let tl = ((mSecs & 268435455) * 10000 + nSecs)[S$0.$modulo](4294967296);
      buf[S$.$_set]((t313$7 = i, i = t313$7 + 1, t313$7), tl[S$0.$rightShift](24) & 255);
      buf[S$.$_set]((t313$8 = i, i = t313$8 + 1, t313$8), tl >> 16 & 255);
      buf[S$.$_set]((t313$9 = i, i = t313$9 + 1, t313$9), tl >> 8 & 255);
      buf[S$.$_set]((t313$10 = i, i = t313$10 + 1, t313$10), tl & 255);
      let tmh = (mSecs / 4294967296 * 10000)[S$0.$floor]() & 268435455;
      buf[S$.$_set]((t313$11 = i, i = t313$11 + 1, t313$11), tmh >> 8 & 255);
      buf[S$.$_set]((t313$12 = i, i = t313$12 + 1, t313$12), tmh & 255);
      buf[S$.$_set]((t313$13 = i, i = t313$13 + 1, t313$13), tmh[S$0.$rightShift](24) & 255);
      buf[S$.$_set]((t313$14 = i, i = t313$14 + 1, t313$14), tmh >> 16 & 255);
      buf[S$.$_set]((t313$15 = i, i = t313$15 + 1, t313$15), (clockSeq & 16128) >> 8);
      buf[S$.$_set]((t313$16 = i, i = t313$16 + 1, t313$16), clockSeq & 255);
      buf[S$.$_set](6, buf[S$.$_get](6) & 15 | 16);
      buf[S$.$_set](8, (buf[S$.$_get](8) | 128) >>> 0);
      let node = (t313$19 = (t313$18 = (t313$17 = options, t313$17 == null ? null : t313$17.node), t313$18 == null ? data.V1State.nodeId : t313$18), t313$19 == null ? T.JSArrayOfint().of([0, 0, 0, 0, 0, 0]) : t313$19);
      for (let n = 0; n < 6; n = n + 1) {
        buf[S$.$_set](i + n, node[S$.$_get](n));
      }
      return parsing.UuidParsing.unparse(buf);
    }
  };
  (v1.UuidV1.new = function(opts) {
    let goptions = opts && 'goptions' in opts ? opts.goptions : null;
    this[S$0.goptions$1] = goptions;
    ;
  }).prototype = v1.UuidV1.prototype;
  dart.addTypeTests(v1.UuidV1);
  dart.addTypeCaches(v1.UuidV1);
  dart.setMethodSignature(v1.UuidV1, () => ({
    __proto__: dart.getMethods(v1.UuidV1.__proto__),
    [S$0._init]: dart.fnType(dart.void, []),
    generate: dart.fnType(core.String, [], {options: dart.nullable(data.V1Options)}, {})
  }));
  dart.setLibraryUri(v1.UuidV1, I[215]);
  dart.setFieldSignature(v1.UuidV1, () => ({
    __proto__: dart.getFields(v1.UuidV1.__proto__),
    goptions: dart.finalFieldType(dart.nullable(data.GlobalOptions))
  }));
  v4.UuidV4 = class UuidV4 extends core.Object {
    get goptions() {
      return this[S$0.goptions$2];
    }
    set goptions(value) {
      super.goptions = value;
    }
    static ['_#new#tearOff'](opts) {
      let goptions = opts && 'goptions' in opts ? opts.goptions : null;
      return new v4.UuidV4.new({goptions: goptions});
    }
    generate(opts) {
      let t314, t313, t315, t314$, t313$, t313$0, t313$1, t313$2;
      let options = opts && 'options' in opts ? opts.options : null;
      let rng = (t313$0 = (t313$ = (t313 = options, t313 == null ? null : (t314 = t313.rng, t314 == null ? null : t314.generate())), t313$ == null ? (t314$ = this.goptions, t314$ == null ? null : (t315 = t314$.rng, t315 == null ? null : t315.generate())) : t313$), t313$0 == null ? new rng$.MathRNG.new().generate() : t313$0);
      let rnds = (t313$2 = (t313$1 = options, t313$1 == null ? null : t313$1.random), t313$2 == null ? rng : t313$2);
      rnds[S$.$_set](6, rnds[S$.$_get](6) & 15 | 64);
      rnds[S$.$_set](8, rnds[S$.$_get](8) & 63 | 128);
      return parsing.UuidParsing.unparse(rnds);
    }
  };
  (v4.UuidV4.new = function(opts) {
    let goptions = opts && 'goptions' in opts ? opts.goptions : null;
    this[S$0.goptions$2] = goptions;
    ;
  }).prototype = v4.UuidV4.prototype;
  dart.addTypeTests(v4.UuidV4);
  dart.addTypeCaches(v4.UuidV4);
  dart.setMethodSignature(v4.UuidV4, () => ({
    __proto__: dart.getMethods(v4.UuidV4.__proto__),
    generate: dart.fnType(core.String, [], {options: dart.nullable(data.V4Options)}, {})
  }));
  dart.setLibraryUri(v4.UuidV4, I[216]);
  dart.setFieldSignature(v4.UuidV4, () => ({
    __proto__: dart.getFields(v4.UuidV4.__proto__),
    goptions: dart.finalFieldType(dart.nullable(data.GlobalOptions))
  }));
  v5.UuidV5 = class UuidV5 extends core.Object {
    get goptions() {
      return this[S$0.goptions$3];
    }
    set goptions(value) {
      super.goptions = value;
    }
    static ['_#new#tearOff'](opts) {
      let goptions = opts && 'goptions' in opts ? opts.goptions : null;
      return new v5.UuidV5.new({goptions: goptions});
    }
    generate(namespace, name, opts) {
      let t313, t313$, t313$0;
      let options = opts && 'options' in opts ? opts.options : null;
      let useRandom = (t313$ = (t313 = options, t313 == null ? null : t313.randomNamespace), t313$ == null ? true : t313$);
      let blankNS = useRandom ? new v4.UuidV4.new({goptions: this.goptions}).generate({options: (t313$0 = options, t313$0 == null ? null : t313$0.v4options)}) : enums.Namespace.NIL;
      namespace = namespace != null ? namespace : blankNS;
      name = name != null ? name : "";
      let bytes = parsing.UuidParsing.parse(namespace);
      let nameBytes = T.JSArrayOfint().of([]);
      for (let singleChar of name[S$0.$codeUnits]) {
        nameBytes[S$.$add](singleChar);
      }
      let hashBytes = sha1.sha1.convert((() => {
        let t313 = T$.ListOfint().of(bytes);
        t313[S$.$addAll](nameBytes);
        return t313;
      })()).bytes;
      hashBytes[S$.$_set](6, hashBytes[S$.$_get](6) & 15 | 80);
      hashBytes[S$.$_set](8, hashBytes[S$.$_get](8) & 63 | 128);
      return parsing.UuidParsing.unparse(hashBytes[S$0.$sublist](0, 16));
    }
  };
  (v5.UuidV5.new = function(opts) {
    let goptions = opts && 'goptions' in opts ? opts.goptions : null;
    this[S$0.goptions$3] = goptions;
    ;
  }).prototype = v5.UuidV5.prototype;
  dart.addTypeTests(v5.UuidV5);
  dart.addTypeCaches(v5.UuidV5);
  dart.setMethodSignature(v5.UuidV5, () => ({
    __proto__: dart.getMethods(v5.UuidV5.__proto__),
    generate: dart.fnType(core.String, [dart.nullable(core.String), dart.nullable(core.String)], {options: dart.nullable(data.V5Options)}, {})
  }));
  dart.setLibraryUri(v5.UuidV5, I[217]);
  dart.setFieldSignature(v5.UuidV5, () => ({
    __proto__: dart.getFields(v5.UuidV5.__proto__),
    goptions: dart.finalFieldType(dart.nullable(data.GlobalOptions))
  }));
  dart.setStaticFieldSignature(v5.UuidV5, () => ['NAMESPACE_DNS', 'NAMESPACE_URL', 'NAMESPACE_OID', 'NAMESPACE_X500', 'NAMESPACE_NIL']);
  dart.defineLazy(v5.UuidV5, {
    /*v5.UuidV5.NAMESPACE_DNS*/get NAMESPACE_DNS() {
      return "6ba7b810-9dad-11d1-80b4-00c04fd430c8";
    },
    /*v5.UuidV5.NAMESPACE_URL*/get NAMESPACE_URL() {
      return "6ba7b811-9dad-11d1-80b4-00c04fd430c8";
    },
    /*v5.UuidV5.NAMESPACE_OID*/get NAMESPACE_OID() {
      return "6ba7b812-9dad-11d1-80b4-00c04fd430c8";
    },
    /*v5.UuidV5.NAMESPACE_X500*/get NAMESPACE_X500() {
      return "6ba7b814-9dad-11d1-80b4-00c04fd430c8";
    },
    /*v5.UuidV5.NAMESPACE_NIL*/get NAMESPACE_NIL() {
      return "00000000-0000-0000-0000-000000000000";
    }
  }, false);
  v6.UuidV6 = class UuidV6 extends core.Object {
    get goptions() {
      return this[S$0.goptions$4];
    }
    set goptions(value) {
      super.goptions = value;
    }
    static ['_#new#tearOff'](opts) {
      let goptions = opts && 'goptions' in opts ? opts.goptions : null;
      return new v6.UuidV6.new({goptions: goptions});
    }
    [S._init$1]() {
      let t315, t314, t314$;
      if (data.V6State.initialized) return;
      let seedBytes = (t314$ = (t314 = this.goptions, t314 == null ? null : (t315 = t314.rng, t315 == null ? null : t315.generate())), t314$ == null ? new rng$.MathRNG.new().generate() : t314$);
      let nodeId = T.JSArrayOfint().of([(seedBytes[S$.$_get](0) | 1) >>> 0, seedBytes[S$.$_get](1), seedBytes[S$.$_get](2), seedBytes[S$.$_get](3), seedBytes[S$.$_get](4), seedBytes[S$.$_get](5)]);
      data.V6State.nodeId = nodeId;
      let clockSeq = (seedBytes[S$.$_get](6) << 8 | seedBytes[S$.$_get](7)) & 262143;
      data.V6State.clockSeq = clockSeq;
      data.V6State.initialized = true;
    }
    generate(opts) {
      let t314, t314$, t314$0, t314$1, t314$2, t314$3, t314$4, t314$5, t314$6, t314$7, t314$8, t314$9, t314$10, t314$11, t314$12, t314$13;
      let options = opts && 'options' in opts ? opts.options : null;
      this[S._init$1]();
      let buf = _native_typed_data.NativeUint8List.new(16);
      let clockSeq = (t314$0 = (t314$ = (t314 = options, t314 == null ? null : t314.clockSeq), t314$ == null ? data.V6State.clockSeq : t314$), t314$0 == null ? 0 : t314$0);
      let mSecs = (t314$2 = (t314$1 = options, t314$1 == null ? null : t314$1.mSecs), t314$2 == null ? new core.DateTime.now().millisecondsSinceEpoch : t314$2);
      let nSecs = (t314$4 = (t314$3 = options, t314$3 == null ? null : t314$3.nSecs), t314$4 == null ? data.V6State.nSecs + 1 : t314$4);
      let dt = mSecs - data.V6State.mSecs + (nSecs - data.V6State.nSecs) / 10000;
      if (dt < 0 && (t314$5 = options, t314$5 == null ? null : t314$5.clockSeq) == null) {
        clockSeq = clockSeq + 1 & 16383;
      }
      if ((dt < 0 || mSecs > data.V6State.mSecs) && (t314$6 = options, t314$6 == null ? null : t314$6.nSecs) == null) {
        nSecs = 0;
      }
      if (nSecs >= 10000) {
        dart.throw(core.Exception.new("uuid.v6(): Can't create more than 10M uuids/sec"));
      }
      data.V6State.mSecs = mSecs;
      data.V6State.nSecs = nSecs;
      data.V6State.clockSeq = clockSeq;
      mSecs = mSecs + 12219292800000;
      let uuidTime = mSecs * 10000 + nSecs;
      let high32a = uuidTime[S$0.$rightShift](28);
      let high32b = uuidTime << 4 >>> 0;
      let low = uuidTime & 4095 | 24576;
      let clock = clockSeq & 16383 | 32768;
      t314$7 = buf;
      (() => {
        t314$7[S.$buffer][S.$asByteData]()[S.$setUint32](0, high32a);
        return t314$7;
      })();
      t314$8 = buf;
      (() => {
        t314$8[S.$buffer][S.$asByteData]()[S.$setUint32](4, high32b);
        return t314$8;
      })();
      t314$9 = buf;
      (() => {
        t314$9[S.$buffer][S.$asByteData]()[S.$setUint16](6, low);
        return t314$9;
      })();
      t314$10 = buf;
      (() => {
        t314$10[S.$buffer][S.$asByteData]()[S.$setUint16](8, clock);
        return t314$10;
      })();
      let node = (t314$13 = (t314$12 = (t314$11 = options, t314$11 == null ? null : t314$11.node), t314$12 == null ? data.V6State.nodeId : t314$12), t314$13 == null ? T.JSArrayOfint().of([0, 0, 0, 0, 0, 0, 0, 0, 0, 0]) : t314$13);
      buf[S.$setAll](10, node);
      return parsing.UuidParsing.unparse(buf);
    }
  };
  (v6.UuidV6.new = function(opts) {
    let goptions = opts && 'goptions' in opts ? opts.goptions : null;
    this[S$0.goptions$4] = goptions;
    ;
  }).prototype = v6.UuidV6.prototype;
  dart.addTypeTests(v6.UuidV6);
  dart.addTypeCaches(v6.UuidV6);
  dart.setMethodSignature(v6.UuidV6, () => ({
    __proto__: dart.getMethods(v6.UuidV6.__proto__),
    [S._init$1]: dart.fnType(dart.void, []),
    generate: dart.fnType(core.String, [], {options: dart.nullable(data.V6Options)}, {})
  }));
  dart.setLibraryUri(v6.UuidV6, I[218]);
  dart.setFieldSignature(v6.UuidV6, () => ({
    __proto__: dart.getFields(v6.UuidV6.__proto__),
    goptions: dart.finalFieldType(dart.nullable(data.GlobalOptions))
  }));
  v7.UuidV7 = class UuidV7 extends core.Object {
    get goptions() {
      return this[S.goptions$5];
    }
    set goptions(value) {
      super.goptions = value;
    }
    static ['_#new#tearOff'](opts) {
      let goptions = opts && 'goptions' in opts ? opts.goptions : null;
      return new v7.UuidV7.new({goptions: goptions});
    }
    generate(opts) {
      let t314, t314$, t314$0, t314$1, t314$2, t314$3;
      let options = opts && 'options' in opts ? opts.options : null;
      let buf = _native_typed_data.NativeUint8List.new(16);
      let time = (t314$ = (t314 = options, t314 == null ? null : t314.time), t314$ == null ? new core.DateTime.now().toUtc().millisecondsSinceEpoch : t314$);
      let timeList32 = (t314$0 = _native_typed_data.NativeUint8List.new(8), (() => {
        t314$0[S.$buffer][S.$asUint32List]()[S$.$_set](0, time[S$0.$rightShift](16));
        return t314$0;
      })());
      let timeList16 = (t314$1 = _native_typed_data.NativeUint8List.new(8), (() => {
        t314$1[S.$buffer][S.$asUint16List]()[S$.$_set](0, time);
        return t314$1;
      })());
      let endIndex32 = timeList32[S$.$length] - 1;
      let endIndex16 = timeList16[S$.$length] - 1;
      while (endIndex32 >= 0 && timeList32[S$.$_get](endIndex32) === 0) {
        endIndex32 = endIndex32 - 1;
      }
      while (endIndex16 >= 0 && timeList16[S$.$_get](endIndex16) === 0) {
        endIndex16 = endIndex16 - 1;
      }
      timeList32 = timeList32[S$0.$sublist](0, endIndex32 + 1);
      timeList16 = timeList16[S$0.$sublist](0, endIndex16 + 1);
      buf[S.$setAll](0, timeList32[S$0.$reversed]);
      buf[S.$setAll](4, timeList16[S$0.$reversed]);
      let randomBytes = (t314$3 = (t314$2 = options, t314$2 == null ? null : t314$2.randomBytes), t314$3 == null ? this[S._randomData]() : t314$3);
      buf[S$0.$setRange](6, 16, randomBytes);
      buf[S$0.$setRange](6, 7, T.JSArrayOfint().of([buf[S.$getRange](6, 7)[S$0.$last] & 15 | 112]));
      buf[S$0.$setRange](8, 9, T.JSArrayOfint().of([buf[S.$getRange](8, 9)[S$0.$last] & 63 | 128]));
      return parsing.UuidParsing.unparse(buf);
    }
    [S._randomData]() {
      let t315, t314, t314$;
      let seedBytes = (t314$ = (t314 = this.goptions, t314 == null ? null : (t315 = t314.rng, t315 == null ? null : t315.generate())), t314$ == null ? new rng$.MathRNG.new().generate() : t314$);
      let randomData = T.JSArrayOfint().of([seedBytes[S$.$_get](0), seedBytes[S$.$_get](1), seedBytes[S$.$_get](2), seedBytes[S$.$_get](3), seedBytes[S$.$_get](4), seedBytes[S$.$_get](5), seedBytes[S$.$_get](6), seedBytes[S$.$_get](7), seedBytes[S$.$_get](8), seedBytes[S$.$_get](9)]);
      return randomData;
    }
  };
  (v7.UuidV7.new = function(opts) {
    let goptions = opts && 'goptions' in opts ? opts.goptions : null;
    this[S.goptions$5] = goptions;
    ;
  }).prototype = v7.UuidV7.prototype;
  dart.addTypeTests(v7.UuidV7);
  dart.addTypeCaches(v7.UuidV7);
  dart.setMethodSignature(v7.UuidV7, () => ({
    __proto__: dart.getMethods(v7.UuidV7.__proto__),
    generate: dart.fnType(core.String, [], {options: dart.nullable(data.V7Options)}, {}),
    [S._randomData]: dart.fnType(core.List$(core.int), [])
  }));
  dart.setLibraryUri(v7.UuidV7, I[219]);
  dart.setFieldSignature(v7.UuidV7, () => ({
    __proto__: dart.getFields(v7.UuidV7.__proto__),
    goptions: dart.finalFieldType(dart.nullable(data.GlobalOptions))
  }));
  v8.UuidV8 = class UuidV8 extends core.Object {
    get goptions() {
      return this[S.goptions$6];
    }
    set goptions(value) {
      super.goptions = value;
    }
    static ['_#new#tearOff'](opts) {
      let goptions = opts && 'goptions' in opts ? opts.goptions : null;
      return new v8.UuidV8.new({goptions: goptions});
    }
    generate(opts) {
      let t314, t314$, t314$0, t314$1;
      let options = opts && 'options' in opts ? opts.options : null;
      let buf = _native_typed_data.NativeUint8List.new(16);
      let time = (t314$ = (t314 = options, t314 == null ? null : t314.time), t314$ == null ? new core.DateTime.now().toUtc() : t314$);
      buf[S$0.$setRange](0, 2, parsing.UuidParsing.parseHexToBytes(sprintf.sprintf.call("0x%04i", T.JSArrayOfint().of([time.year]))));
      buf[S$0.$setRange](2, 3, parsing.UuidParsing.parseHexToBytes(sprintf.sprintf.call("0x%02i", T.JSArrayOfint().of([time.month]))));
      buf[S$0.$setRange](3, 4, parsing.UuidParsing.parseHexToBytes(sprintf.sprintf.call("0x%02i", T.JSArrayOfint().of([time.day]))));
      buf[S$0.$setRange](4, 5, parsing.UuidParsing.parseHexToBytes(sprintf.sprintf.call("0x%02i", T.JSArrayOfint().of([time.hour]))));
      buf[S$0.$setRange](5, 6, parsing.UuidParsing.parseHexToBytes(sprintf.sprintf.call("0x%02i", T.JSArrayOfint().of([time.minute]))));
      let randomBytes = (t314$1 = (t314$0 = options, t314$0 == null ? null : t314$0.randomBytes), t314$1 == null ? this[S._randomData$1]() : t314$1);
      buf[S$0.$setRange](6, 16, randomBytes);
      buf[S$0.$setRange](6, 7, T.JSArrayOfint().of([buf[S.$getRange](6, 7)[S$0.$last] & 15 | 128]));
      buf[S$0.$setRange](8, 9, T.JSArrayOfint().of([buf[S.$getRange](8, 9)[S$0.$last] & 63 | 128]));
      buf[S$0.$setRange](7, 8, parsing.UuidParsing.parseHexToBytes(sprintf.sprintf.call("0x%02i", T.JSArrayOfint().of([time.second]))));
      let milliBytes = parsing.UuidParsing.parseHexToBytes(sprintf.sprintf.call("0x%04i", T.JSArrayOfint().of([time.millisecond])));
      milliBytes[S$.$_set](0, milliBytes[S$.$_get](0) & 15 | buf[S.$getRange](8, 9)[S$0.$last] & 240);
      buf[S$0.$setRange](8, 10, milliBytes);
      return parsing.UuidParsing.unparse(buf);
    }
    [S._randomData$1]() {
      let t315, t314, t314$;
      let seedBytes = (t314$ = (t314 = this.goptions, t314 == null ? null : (t315 = t314.rng, t315 == null ? null : t315.generate())), t314$ == null ? new rng$.MathRNG.new().generate() : t314$);
      let randomData = T.JSArrayOfint().of([seedBytes[S$.$_get](0), seedBytes[S$.$_get](1), seedBytes[S$.$_get](2), seedBytes[S$.$_get](3), seedBytes[S$.$_get](4), seedBytes[S$.$_get](5), seedBytes[S$.$_get](6), seedBytes[S$.$_get](7), seedBytes[S$.$_get](8), seedBytes[S$.$_get](9)]);
      return randomData;
    }
  };
  (v8.UuidV8.new = function(opts) {
    let goptions = opts && 'goptions' in opts ? opts.goptions : null;
    this[S.goptions$6] = goptions;
    ;
  }).prototype = v8.UuidV8.prototype;
  dart.addTypeTests(v8.UuidV8);
  dart.addTypeCaches(v8.UuidV8);
  dart.setMethodSignature(v8.UuidV8, () => ({
    __proto__: dart.getMethods(v8.UuidV8.__proto__),
    generate: dart.fnType(core.String, [], {options: dart.nullable(data.V8Options)}, {}),
    [S._randomData$1]: dart.fnType(core.List$(core.int), [])
  }));
  dart.setLibraryUri(v8.UuidV8, I[220]);
  dart.setFieldSignature(v8.UuidV8, () => ({
    __proto__: dart.getFields(v8.UuidV8.__proto__),
    goptions: dart.finalFieldType(dart.nullable(data.GlobalOptions))
  }));
  post$.Post = class Post extends core.Object {
    get description() {
      return this[S.description];
    }
    set description(value) {
      super.description = value;
    }
    get uid() {
      return this[S.uid$5];
    }
    set uid(value) {
      super.uid = value;
    }
    get username() {
      return this[S.username$3];
    }
    set username(value) {
      super.username = value;
    }
    get likes() {
      return this[S.likes];
    }
    set likes(value) {
      super.likes = value;
    }
    get postId() {
      return this[S.postId];
    }
    set postId(value) {
      super.postId = value;
    }
    get datePublished() {
      return this[S.datePublished];
    }
    set datePublished(value) {
      super.datePublished = value;
    }
    get postUrl() {
      return this[S.postUrl];
    }
    set postUrl(value) {
      super.postUrl = value;
    }
    get profImage() {
      return this[S.profImage];
    }
    set profImage(value) {
      super.profImage = value;
    }
    static ['_#new#tearOff'](opts) {
      let description = opts && 'description' in opts ? opts.description : null;
      let uid = opts && 'uid' in opts ? opts.uid : null;
      let username = opts && 'username' in opts ? opts.username : null;
      let likes = opts && 'likes' in opts ? opts.likes : null;
      let postId = opts && 'postId' in opts ? opts.postId : null;
      let datePublished = opts && 'datePublished' in opts ? opts.datePublished : null;
      let postUrl = opts && 'postUrl' in opts ? opts.postUrl : null;
      let profImage = opts && 'profImage' in opts ? opts.profImage : null;
      return new post$.Post.new({description: description, uid: uid, username: username, likes: likes, postId: postId, datePublished: datePublished, postUrl: postUrl, profImage: profImage});
    }
    static fromSnap(snap) {
      let snapshot = T$.MapOfString$dynamic().as(snap.data());
      return new post$.Post.new({description: core.String.as(snapshot[S$.$_get]("description")), uid: core.String.as(snapshot[S$.$_get]("uid")), likes: snapshot[S$.$_get]("likes"), postId: core.String.as(snapshot[S$.$_get]("postId")), datePublished: core.DateTime.as(snapshot[S$.$_get]("datePublished")), username: core.String.as(snapshot[S$.$_get]("username")), postUrl: core.String.as(snapshot[S$.$_get]("postUrl")), profImage: core.String.as(snapshot[S$.$_get]("profImage"))});
    }
    toJson() {
      return new (T$.IdentityMapOfString$dynamic()).from(["description", this.description, "uid", this.uid, "likes", this.likes, "username", this.username, "postId", this.postId, "datePublished", this.datePublished, "postUrl", this.postUrl, "profImage", this.profImage]);
    }
  };
  (post$.Post.new = function(opts) {
    let description = opts && 'description' in opts ? opts.description : null;
    let uid = opts && 'uid' in opts ? opts.uid : null;
    let username = opts && 'username' in opts ? opts.username : null;
    let likes = opts && 'likes' in opts ? opts.likes : null;
    let postId = opts && 'postId' in opts ? opts.postId : null;
    let datePublished = opts && 'datePublished' in opts ? opts.datePublished : null;
    let postUrl = opts && 'postUrl' in opts ? opts.postUrl : null;
    let profImage = opts && 'profImage' in opts ? opts.profImage : null;
    this[S.description] = description;
    this[S.uid$5] = uid;
    this[S.username$3] = username;
    this[S.likes] = likes;
    this[S.postId] = postId;
    this[S.datePublished] = datePublished;
    this[S.postUrl] = postUrl;
    this[S.profImage] = profImage;
    ;
  }).prototype = post$.Post.prototype;
  dart.addTypeTests(post$.Post);
  dart.addTypeCaches(post$.Post);
  dart.setMethodSignature(post$.Post, () => ({
    __proto__: dart.getMethods(post$.Post.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setStaticMethodSignature(post$.Post, () => ['fromSnap']);
  dart.setLibraryUri(post$.Post, I[221]);
  dart.setFieldSignature(post$.Post, () => ({
    __proto__: dart.getFields(post$.Post.__proto__),
    description: dart.finalFieldType(core.String),
    uid: dart.finalFieldType(core.String),
    username: dart.finalFieldType(core.String),
    likes: dart.finalFieldType(dart.dynamic),
    postId: dart.finalFieldType(core.String),
    datePublished: dart.finalFieldType(core.DateTime),
    postUrl: dart.finalFieldType(core.String),
    profImage: dart.finalFieldType(core.String)
  }));
  comments_screen.CommentsScreen = class CommentsScreen extends framework.StatefulWidget {
    get postId() {
      return this[S.postId$1];
    }
    set postId(value) {
      super.postId = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let postId = opts && 'postId' in opts ? opts.postId : null;
      return new comments_screen.CommentsScreen.new({key: key, postId: postId});
    }
    createState() {
      return new comments_screen._CommentsScreenState.new();
    }
  };
  (comments_screen.CommentsScreen.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let postId = opts && 'postId' in opts ? opts.postId : null;
    this[S.postId$1] = postId;
    comments_screen.CommentsScreen.__proto__.new.call(this, {key: key});
    ;
  }).prototype = comments_screen.CommentsScreen.prototype;
  dart.addTypeTests(comments_screen.CommentsScreen);
  dart.addTypeCaches(comments_screen.CommentsScreen);
  dart.setMethodSignature(comments_screen.CommentsScreen, () => ({
    __proto__: dart.getMethods(comments_screen.CommentsScreen.__proto__),
    createState: dart.fnType(comments_screen._CommentsScreenState, [])
  }));
  dart.setLibraryUri(comments_screen.CommentsScreen, I[222]);
  dart.setFieldSignature(comments_screen.CommentsScreen, () => ({
    __proto__: dart.getFields(comments_screen.CommentsScreen.__proto__),
    postId: dart.finalFieldType(dart.dynamic)
  }));
  comments_screen._CommentsScreenState = class _CommentsScreenState extends framework.State$(comments_screen.CommentsScreen) {
    postComment(uid, name, profilePic) {
      return async.async(dart.void, (function* postComment() {
        try {
          let res = (yield new firestore_methods.FireStoreMethods.new().postComment(core.String.as(this.widget.postId), this.commentEditingController.text, uid, name, profilePic));
          if (res !== "success") {
            if (this.context.mounted) utils.showSnackBar(this.context, res);
          }
          this.setState(dart.fn(() => {
            this.commentEditingController.text = "";
          }, T$.VoidTovoid()));
        } catch (e) {
          let err = dart.getThrown(e);
          if (core.Object.is(err)) {
            utils.showSnackBar(this.context, err[S$.$toString]());
          } else
            throw e;
        }
      }).bind(this));
    }
    build(context) {
      let user = provider$.Provider.of(user_provider.UserProvider, context).getUser;
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: colors$0.mobileBackgroundColor, title: C[396] || CT.C396, centerTitle: false}), body: new (T$.StreamBuilderOfQuerySnapshotOfMapOfString$dynamic()).new({stream: cloud_firestore.FirebaseFirestore.instance.collection("posts").doc(T$.StringN().as(this.widget.postId)).collection("comments").snapshots(), builder: dart.fn((context, snapshot) => {
            if (snapshot.connectionState === async$.ConnectionState.waiting) {
              return C[2] || CT.C2;
            }
            return new scroll_view.ListView.builder({itemCount: dart.nullCheck(snapshot.data).docs[S$.$length], itemBuilder: dart.fn((ctx, index) => new comment_card.CommentCard.new({snap: dart.nullCheck(snapshot.data).docs[S$.$_get](index)}), T.BuildContextAndintToCommentCard())});
          }, T$.BuildContextAndAsyncSnapshotOfQuerySnapshotOfMapOfString$dynamicToWidget())}), bottomNavigationBar: new safe_area.SafeArea.new({child: new container.Container.new({height: 56, margin: new edge_insets.EdgeInsets.only({bottom: media_query.MediaQuery.of(context).viewInsets.bottom}), padding: C[397] || CT.C397, child: new basic.Row.new({children: T$.JSArrayOfWidget().of([new circle_avatar.CircleAvatar.new({backgroundImage: new _network_image_web.NetworkImage.new(user.photoUrl), radius: 18}), new basic.Expanded.new({child: new basic.Padding.new({padding: C[397] || CT.C397, child: new text_field.TextField.new({controller: this.commentEditingController, decoration: new input_decorator.InputDecoration.new({hintText: "Comment as " + user.username, border: input_border.InputBorder.none})})})}), new ink_well.InkWell.new({onTap: dart.fn(() => this.postComment(user.uid, user.username, user.photoUrl), T$.VoidTovoid()), child: new container.Container.new({padding: C[398] || CT.C398, child: C[399] || CT.C399})})])})})})});
    }
    static ['_#new#tearOff']() {
      return new comments_screen._CommentsScreenState.new();
    }
  };
  (comments_screen._CommentsScreenState.new = function() {
    this.commentEditingController = new editable_text.TextEditingController.new();
    comments_screen._CommentsScreenState.__proto__.new.call(this);
    ;
  }).prototype = comments_screen._CommentsScreenState.prototype;
  dart.addTypeTests(comments_screen._CommentsScreenState);
  dart.addTypeCaches(comments_screen._CommentsScreenState);
  dart.setMethodSignature(comments_screen._CommentsScreenState, () => ({
    __proto__: dart.getMethods(comments_screen._CommentsScreenState.__proto__),
    postComment: dart.fnType(dart.void, [core.String, core.String, core.String]),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(comments_screen._CommentsScreenState, I[222]);
  dart.setFieldSignature(comments_screen._CommentsScreenState, () => ({
    __proto__: dart.getFields(comments_screen._CommentsScreenState.__proto__),
    commentEditingController: dart.finalFieldType(editable_text.TextEditingController)
  }));
  like_animation.LikeAnimation = class LikeAnimation extends framework.StatefulWidget {
    get child() {
      return this[S.child];
    }
    set child(value) {
      super.child = value;
    }
    get isAnimating() {
      return this[S.isAnimating];
    }
    set isAnimating(value) {
      super.isAnimating = value;
    }
    get duration() {
      return this[S.duration];
    }
    set duration(value) {
      super.duration = value;
    }
    get onEnd() {
      return this[S.onEnd];
    }
    set onEnd(value) {
      super.onEnd = value;
    }
    get smallLike() {
      return this[S.smallLike];
    }
    set smallLike(value) {
      super.smallLike = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let isAnimating = opts && 'isAnimating' in opts ? opts.isAnimating : null;
      let duration = opts && 'duration' in opts ? opts.duration : C[401] || CT.C401;
      let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
      let smallLike = opts && 'smallLike' in opts ? opts.smallLike : false;
      return new like_animation.LikeAnimation.new({key: key, child: child, isAnimating: isAnimating, duration: duration, onEnd: onEnd, smallLike: smallLike});
    }
    createState() {
      return new like_animation._LikeAnimationState.new();
    }
  };
  (like_animation.LikeAnimation.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let isAnimating = opts && 'isAnimating' in opts ? opts.isAnimating : null;
    let duration = opts && 'duration' in opts ? opts.duration : C[401] || CT.C401;
    let onEnd = opts && 'onEnd' in opts ? opts.onEnd : null;
    let smallLike = opts && 'smallLike' in opts ? opts.smallLike : false;
    this[S.child] = child;
    this[S.isAnimating] = isAnimating;
    this[S.duration] = duration;
    this[S.onEnd] = onEnd;
    this[S.smallLike] = smallLike;
    like_animation.LikeAnimation.__proto__.new.call(this, {key: key});
    ;
  }).prototype = like_animation.LikeAnimation.prototype;
  dart.addTypeTests(like_animation.LikeAnimation);
  dart.addTypeCaches(like_animation.LikeAnimation);
  dart.setMethodSignature(like_animation.LikeAnimation, () => ({
    __proto__: dart.getMethods(like_animation.LikeAnimation.__proto__),
    createState: dart.fnType(framework.State$(like_animation.LikeAnimation), [])
  }));
  dart.setLibraryUri(like_animation.LikeAnimation, I[223]);
  dart.setFieldSignature(like_animation.LikeAnimation, () => ({
    __proto__: dart.getFields(like_animation.LikeAnimation.__proto__),
    child: dart.finalFieldType(framework.Widget),
    isAnimating: dart.finalFieldType(core.bool),
    duration: dart.finalFieldType(core.Duration),
    onEnd: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, []))),
    smallLike: dart.finalFieldType(core.bool)
  }));
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(like_animation.LikeAnimation) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(like_animation.LikeAnimation)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(like_animation.LikeAnimation));
  like_animation._LikeAnimationState = class _LikeAnimationState extends State_SingleTickerProviderStateMixin$36 {
    get controller() {
      let t315;
      t315 = this[S.___LikeAnimationState_controller];
      return t315 == null ? dart.throw(new _internal.LateError.fieldNI("controller")) : t315;
    }
    set controller(controller$35param) {
      this[S.___LikeAnimationState_controller] = controller$35param;
    }
    get scale() {
      let t315;
      t315 = this[S.___LikeAnimationState_scale];
      return t315 == null ? dart.throw(new _internal.LateError.fieldNI("scale")) : t315;
    }
    set scale(scale$35param) {
      this[S.___LikeAnimationState_scale] = scale$35param;
    }
    initState() {
      super.initState();
      this.controller = new animation_controller.AnimationController.new({vsync: this, duration: new core.Duration.new({milliseconds: (this.widget.duration.inMilliseconds / 2)[S$0.$truncate]()})});
      this.scale = new (T.TweenOfdouble()).new({begin: 1, end: 1.2}).animate(this.controller);
    }
    didUpdateWidget(oldWidget) {
      like_animation.LikeAnimation.as(oldWidget);
      super.didUpdateWidget(oldWidget);
      if (this.widget.isAnimating !== oldWidget.isAnimating) {
        this.startAnimation();
      }
    }
    startAnimation() {
      return async.async(dart.dynamic, (function* startAnimation() {
        if (this.widget.isAnimating || this.widget.smallLike) {
          yield this.controller.forward();
          yield this.controller.reverse();
          yield async.Future.delayed(C[274] || CT.C274);
          if (this.widget.onEnd != null) {
            dart.nullCheck(this.widget.onEnd)();
          }
        }
      }).bind(this));
    }
    dispose() {
      super.dispose();
      this.controller.dispose();
    }
    build(context) {
      return new transitions.ScaleTransition.new({scale: this.scale, child: this.widget.child});
    }
    static ['_#new#tearOff']() {
      return new like_animation._LikeAnimationState.new();
    }
  };
  (like_animation._LikeAnimationState.new = function() {
    this[S.___LikeAnimationState_controller] = null;
    this[S.___LikeAnimationState_scale] = null;
    like_animation._LikeAnimationState.__proto__.new.call(this);
    ;
  }).prototype = like_animation._LikeAnimationState.prototype;
  dart.addTypeTests(like_animation._LikeAnimationState);
  dart.addTypeCaches(like_animation._LikeAnimationState);
  dart.setMethodSignature(like_animation._LikeAnimationState, () => ({
    __proto__: dart.getMethods(like_animation._LikeAnimationState.__proto__),
    startAnimation: dart.fnType(dart.dynamic, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(like_animation._LikeAnimationState, () => ({
    __proto__: dart.getGetters(like_animation._LikeAnimationState.__proto__),
    controller: animation_controller.AnimationController,
    scale: animation.Animation$(core.double)
  }));
  dart.setSetterSignature(like_animation._LikeAnimationState, () => ({
    __proto__: dart.getSetters(like_animation._LikeAnimationState.__proto__),
    controller: animation_controller.AnimationController,
    scale: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(like_animation._LikeAnimationState, I[223]);
  dart.setFieldSignature(like_animation._LikeAnimationState, () => ({
    __proto__: dart.getFields(like_animation._LikeAnimationState.__proto__),
    [S.___LikeAnimationState_controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [S.___LikeAnimationState_scale]: dart.fieldType(dart.nullable(animation.Animation$(core.double)))
  }));
  quilted.QuiltedGridTile = class QuiltedGridTile extends core.Object {
    get mainAxisCount() {
      return this[S.mainAxisCount];
    }
    set mainAxisCount(value) {
      super.mainAxisCount = value;
    }
    get crossAxisCount() {
      return this[S.crossAxisCount];
    }
    set crossAxisCount(value) {
      super.crossAxisCount = value;
    }
    static ['_#new#tearOff'](mainAxisCount, crossAxisCount) {
      return new quilted.QuiltedGridTile.new(mainAxisCount, crossAxisCount);
    }
    toString() {
      return "QuiltedGridTile(" + dart.str(this.mainAxisCount) + ", " + dart.str(this.crossAxisCount) + ")";
    }
  };
  (quilted.QuiltedGridTile.new = function(mainAxisCount, crossAxisCount) {
    this[S.mainAxisCount] = mainAxisCount;
    this[S.crossAxisCount] = crossAxisCount;
    if (!(mainAxisCount > 0)) dart.assertFailed(null, I[224], 14, 16, "mainAxisCount > 0");
    if (!(crossAxisCount > 0)) dart.assertFailed(null, I[224], 15, 16, "crossAxisCount > 0");
    ;
  }).prototype = quilted.QuiltedGridTile.prototype;
  dart.addTypeTests(quilted.QuiltedGridTile);
  dart.addTypeCaches(quilted.QuiltedGridTile);
  dart.setLibraryUri(quilted.QuiltedGridTile, I[225]);
  dart.setFieldSignature(quilted.QuiltedGridTile, () => ({
    __proto__: dart.getFields(quilted.QuiltedGridTile.__proto__),
    mainAxisCount: dart.finalFieldType(core.int),
    crossAxisCount: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(quilted.QuiltedGridTile, ['toString']);
  quilted.SliverQuiltedGridDelegate = class SliverQuiltedGridDelegate extends sliver_grid.SliverGridDelegate {
    get crossAxisCount() {
      return this[S.crossAxisCount$1];
    }
    set crossAxisCount(value) {
      super.crossAxisCount = value;
    }
    get repeatPattern() {
      return this[S.repeatPattern];
    }
    set repeatPattern(value) {
      super.repeatPattern = value;
    }
    get mainAxisSpacing() {
      return this[S.mainAxisSpacing];
    }
    set mainAxisSpacing(value) {
      super.mainAxisSpacing = value;
    }
    get crossAxisSpacing() {
      return this[S.crossAxisSpacing];
    }
    set crossAxisSpacing(value) {
      super.crossAxisSpacing = value;
    }
    static ['_#new#tearOff'](opts) {
      let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
      let pattern = opts && 'pattern' in opts ? opts.pattern : null;
      let repeatPattern = opts && 'repeatPattern' in opts ? opts.repeatPattern : C[402] || CT.C402;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      return new quilted.SliverQuiltedGridDelegate.new({crossAxisCount: crossAxisCount, pattern: pattern, repeatPattern: repeatPattern, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing});
    }
    getLayout(constraints) {
      let crossAxisExtent = constraints.crossAxisExtent;
      let cellExtent = (crossAxisExtent + this.crossAxisSpacing) / this.crossAxisCount - this.crossAxisSpacing;
      return new quilted._SliverQuiltedGridLayout.new({cellExtent: cellExtent, crossAxisExtent: crossAxisExtent, crossAxisSpacing: this.crossAxisSpacing, mainAxisSpacing: this.mainAxisSpacing, pattern: this[S._pattern], reverseCrossAxis: basic_types.axisDirectionIsReversed(constraints.crossAxisDirection)});
    }
    shouldRelayout(oldDelegate) {
      quilted.SliverQuiltedGridDelegate.as(oldDelegate);
      return oldDelegate.crossAxisCount !== this.crossAxisCount || oldDelegate.mainAxisSpacing !== this.mainAxisSpacing || oldDelegate.crossAxisSpacing !== this.crossAxisSpacing;
    }
  };
  (quilted.SliverQuiltedGridDelegate.new = function(opts) {
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    let pattern = opts && 'pattern' in opts ? opts.pattern : null;
    let repeatPattern = opts && 'repeatPattern' in opts ? opts.repeatPattern : C[402] || CT.C402;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    this[S.crossAxisCount$1] = crossAxisCount;
    this[S.repeatPattern] = repeatPattern;
    this[S.mainAxisSpacing] = mainAxisSpacing;
    this[S.crossAxisSpacing] = crossAxisSpacing;
    if (!(crossAxisCount > 0)) dart.assertFailed(null, I[224], 38, 16, "crossAxisCount > 0");
    if (!(mainAxisSpacing >= 0)) dart.assertFailed(null, I[224], 39, 16, "mainAxisSpacing >= 0");
    if (!(crossAxisSpacing >= 0)) dart.assertFailed(null, I[224], 40, 16, "crossAxisSpacing >= 0");
    if (!pattern[S$.$isNotEmpty]) dart.assertFailed(null, I[224], 41, 16, "pattern.isNotEmpty");
    this[S._pattern] = quilted['_extension#0|toPattern'](pattern, crossAxisCount, repeatPattern);
    quilted.SliverQuiltedGridDelegate.__proto__.new.call(this);
    ;
  }).prototype = quilted.SliverQuiltedGridDelegate.prototype;
  dart.addTypeTests(quilted.SliverQuiltedGridDelegate);
  dart.addTypeCaches(quilted.SliverQuiltedGridDelegate);
  dart.setMethodSignature(quilted.SliverQuiltedGridDelegate, () => ({
    __proto__: dart.getMethods(quilted.SliverQuiltedGridDelegate.__proto__),
    getLayout: dart.fnType(quilted._SliverQuiltedGridLayout, [sliver$.SliverConstraints]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(quilted.SliverQuiltedGridDelegate, I[225]);
  dart.setFieldSignature(quilted.SliverQuiltedGridDelegate, () => ({
    __proto__: dart.getFields(quilted.SliverQuiltedGridDelegate.__proto__),
    crossAxisCount: dart.finalFieldType(core.int),
    repeatPattern: dart.finalFieldType(quilted.QuiltedGridRepeatPattern),
    mainAxisSpacing: dart.finalFieldType(core.double),
    crossAxisSpacing: dart.finalFieldType(core.double),
    [S._pattern]: dart.finalFieldType(quilted._QuiltedTilePattern)
  }));
  quilted._QuiltedTilePattern = class _QuiltedTilePattern extends core.Object {
    get tiles() {
      return this[S.tiles];
    }
    set tiles(value) {
      super.tiles = value;
    }
    get tileCount() {
      return this[S.tileCount];
    }
    set tileCount(value) {
      super.tileCount = value;
    }
    get crossAxisIndexes() {
      return this[S.crossAxisIndexes];
    }
    set crossAxisIndexes(value) {
      super.crossAxisIndexes = value;
    }
    get mainAxisIndexes() {
      return this[S.mainAxisIndexes];
    }
    set mainAxisIndexes(value) {
      super.mainAxisIndexes = value;
    }
    get maxMainAxisCellCounts() {
      return this[S.maxMainAxisCellCounts];
    }
    set maxMainAxisCellCounts(value) {
      super.maxMainAxisCellCounts = value;
    }
    get minTileIndexes() {
      return this[S.minTileIndexes];
    }
    set minTileIndexes(value) {
      super.minTileIndexes = value;
    }
    get maxTileIndexes() {
      return this[S.maxTileIndexes];
    }
    set maxTileIndexes(value) {
      super.maxTileIndexes = value;
    }
    get mainAxisCellCount() {
      return this[S.mainAxisCellCount];
    }
    set mainAxisCellCount(value) {
      super.mainAxisCellCount = value;
    }
    static ['_#new#tearOff'](opts) {
      let tiles = opts && 'tiles' in opts ? opts.tiles : null;
      let crossAxisIndexes = opts && 'crossAxisIndexes' in opts ? opts.crossAxisIndexes : null;
      let mainAxisIndexes = opts && 'mainAxisIndexes' in opts ? opts.mainAxisIndexes : null;
      let maxMainAxisCellCounts = opts && 'maxMainAxisCellCounts' in opts ? opts.maxMainAxisCellCounts : null;
      let minTileIndexes = opts && 'minTileIndexes' in opts ? opts.minTileIndexes : null;
      let maxTileIndexes = opts && 'maxTileIndexes' in opts ? opts.maxTileIndexes : null;
      let mainAxisCellCount = opts && 'mainAxisCellCount' in opts ? opts.mainAxisCellCount : null;
      return new quilted._QuiltedTilePattern.new({tiles: tiles, crossAxisIndexes: crossAxisIndexes, mainAxisIndexes: mainAxisIndexes, maxMainAxisCellCounts: maxMainAxisCellCounts, minTileIndexes: minTileIndexes, maxTileIndexes: maxTileIndexes, mainAxisCellCount: mainAxisCellCount});
    }
    crossAxisIndexOf(index) {
      return this.crossAxisIndexes[S$.$_get](index[S$0.$modulo](this.tileCount));
    }
    mainAxisIndexOf(index) {
      return this.mainAxisIndexes[S$.$_get](index[S$0.$modulo](this.tileCount));
    }
    maxMainAxisCellCountOf(count) {
      return this.maxMainAxisCellCounts[S$.$_get](count[S$0.$modulo](this.tileCount));
    }
    getMinTileIndexForMainAxisIndex(mainAxisIndex) {
      return this.minTileIndexes[S$.$_get](mainAxisIndex[S$0.$modulo](this.mainAxisCellCount));
    }
    getMaxTileIndexForMainAxisIndex(mainAxisIndex) {
      return this.maxTileIndexes[S$.$_get](mainAxisIndex[S$0.$modulo](this.mainAxisCellCount));
    }
    tileOf(index) {
      return this.tiles[S$.$_get](index[S$0.$modulo](this.tileCount));
    }
  };
  (quilted._QuiltedTilePattern.new = function(opts) {
    let tiles = opts && 'tiles' in opts ? opts.tiles : null;
    let crossAxisIndexes = opts && 'crossAxisIndexes' in opts ? opts.crossAxisIndexes : null;
    let mainAxisIndexes = opts && 'mainAxisIndexes' in opts ? opts.mainAxisIndexes : null;
    let maxMainAxisCellCounts = opts && 'maxMainAxisCellCounts' in opts ? opts.maxMainAxisCellCounts : null;
    let minTileIndexes = opts && 'minTileIndexes' in opts ? opts.minTileIndexes : null;
    let maxTileIndexes = opts && 'maxTileIndexes' in opts ? opts.maxTileIndexes : null;
    let mainAxisCellCount = opts && 'mainAxisCellCount' in opts ? opts.mainAxisCellCount : null;
    this[S.tiles] = tiles;
    this[S.crossAxisIndexes] = crossAxisIndexes;
    this[S.mainAxisIndexes] = mainAxisIndexes;
    this[S.maxMainAxisCellCounts] = maxMainAxisCellCounts;
    this[S.minTileIndexes] = minTileIndexes;
    this[S.maxTileIndexes] = maxTileIndexes;
    this[S.mainAxisCellCount] = mainAxisCellCount;
    this[S.tileCount] = tiles[S$.$length];
    ;
  }).prototype = quilted._QuiltedTilePattern.prototype;
  dart.addTypeTests(quilted._QuiltedTilePattern);
  dart.addTypeCaches(quilted._QuiltedTilePattern);
  dart.setMethodSignature(quilted._QuiltedTilePattern, () => ({
    __proto__: dart.getMethods(quilted._QuiltedTilePattern.__proto__),
    crossAxisIndexOf: dart.fnType(core.int, [core.int]),
    mainAxisIndexOf: dart.fnType(core.int, [core.int]),
    maxMainAxisCellCountOf: dart.fnType(core.int, [core.int]),
    getMinTileIndexForMainAxisIndex: dart.fnType(core.int, [core.int]),
    getMaxTileIndexForMainAxisIndex: dart.fnType(core.int, [core.int]),
    tileOf: dart.fnType(quilted.QuiltedGridTile, [core.int])
  }));
  dart.setLibraryUri(quilted._QuiltedTilePattern, I[225]);
  dart.setFieldSignature(quilted._QuiltedTilePattern, () => ({
    __proto__: dart.getFields(quilted._QuiltedTilePattern.__proto__),
    tiles: dart.finalFieldType(core.List$(quilted.QuiltedGridTile)),
    tileCount: dart.finalFieldType(core.int),
    crossAxisIndexes: dart.finalFieldType(core.List$(core.int)),
    mainAxisIndexes: dart.finalFieldType(core.List$(core.int)),
    maxMainAxisCellCounts: dart.finalFieldType(core.List$(core.int)),
    minTileIndexes: dart.finalFieldType(core.List$(core.int)),
    maxTileIndexes: dart.finalFieldType(core.List$(core.int)),
    mainAxisCellCount: dart.finalFieldType(core.int)
  }));
  quilted._SliverQuiltedGridLayout = class _SliverQuiltedGridLayout extends sliver_grid.SliverGridLayout {
    get crossAxisExtent() {
      return this[S.crossAxisExtent];
    }
    set crossAxisExtent(value) {
      super.crossAxisExtent = value;
    }
    get mainAxisSpacing() {
      return this[S.mainAxisSpacing$1];
    }
    set mainAxisSpacing(value) {
      super.mainAxisSpacing = value;
    }
    get crossAxisSpacing() {
      return this[S.crossAxisSpacing$1];
    }
    set crossAxisSpacing(value) {
      super.crossAxisSpacing = value;
    }
    get mainAxisStride() {
      return this[S.mainAxisStride];
    }
    set mainAxisStride(value) {
      super.mainAxisStride = value;
    }
    get crossAxisStride() {
      return this[S.crossAxisStride];
    }
    set crossAxisStride(value) {
      super.crossAxisStride = value;
    }
    get pattern() {
      return this[S.pattern];
    }
    set pattern(value) {
      super.pattern = value;
    }
    get reverseCrossAxis() {
      return this[S.reverseCrossAxis];
    }
    set reverseCrossAxis(value) {
      super.reverseCrossAxis = value;
    }
    static ['_#new#tearOff'](opts) {
      let cellExtent = opts && 'cellExtent' in opts ? opts.cellExtent : null;
      let crossAxisExtent = opts && 'crossAxisExtent' in opts ? opts.crossAxisExtent : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : null;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : null;
      let pattern = opts && 'pattern' in opts ? opts.pattern : null;
      let reverseCrossAxis = opts && 'reverseCrossAxis' in opts ? opts.reverseCrossAxis : null;
      return new quilted._SliverQuiltedGridLayout.new({cellExtent: cellExtent, crossAxisExtent: crossAxisExtent, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, pattern: pattern, reverseCrossAxis: reverseCrossAxis});
    }
    computeMaxScrollOffset(childCount) {
      if (childCount === 0) {
        return 0;
      }
      let mainAxisCellCountBeforeLastPattern = (childCount / this.pattern.tileCount)[S$0.$truncate]() * this.pattern.mainAxisCellCount;
      let remainingChildCount = childCount[S$0.$modulo](this.pattern.tileCount);
      let remainingMainAxisCellCount = remainingChildCount === 0 ? 0 : this.pattern.maxMainAxisCellCountOf(remainingChildCount - 1);
      let nbCellsInMainAxis = mainAxisCellCountBeforeLastPattern + remainingMainAxisCellCount;
      return nbCellsInMainAxis * this.mainAxisStride - this.mainAxisSpacing;
    }
    getGeometryForChildIndex(index) {
      let mainAxisCellCountBeforeLastPattern = (index / this.pattern.tileCount)[S$0.$truncate]() * this.pattern.mainAxisCellCount;
      let mainAxisIndex = mainAxisCellCountBeforeLastPattern + this.pattern.mainAxisIndexOf(index);
      let crossAxisIndex = this.pattern.crossAxisIndexOf(index);
      let tile = this.pattern.tileOf(index);
      let crossAxisExtent = tile.crossAxisCount * this.crossAxisStride - this.crossAxisSpacing;
      return new sliver_grid.SliverGridGeometry.new({scrollOffset: mainAxisIndex * this.mainAxisStride, crossAxisOffset: this[S._getOffsetFromStartInCrossAxis](crossAxisIndex * this.crossAxisStride, crossAxisExtent), mainAxisExtent: tile.mainAxisCount * this.mainAxisStride - this.mainAxisSpacing, crossAxisExtent: crossAxisExtent});
    }
    [S._getOffsetFromStartInCrossAxis](crossAxisStart, childCrossAxisExtent) {
      if (this.reverseCrossAxis) return this.crossAxisExtent - crossAxisStart - childCrossAxisExtent;
      return crossAxisStart;
    }
    getMinChildIndexForScrollOffset(scrollOffset) {
      let mainAxisIndex = (scrollOffset / this.mainAxisStride)[S$0.$truncate]();
      let a = (mainAxisIndex / this.pattern.mainAxisCellCount)[S$0.$truncate]() * this.pattern.tileCount;
      let result = a + this.pattern.getMinTileIndexForMainAxisIndex(mainAxisIndex);
      return result;
    }
    getMaxChildIndexForScrollOffset(scrollOffset) {
      let mainAxisIndex = (scrollOffset / this.mainAxisStride)[S$0.$truncate]();
      let a = (mainAxisIndex / this.pattern.mainAxisCellCount)[S$0.$truncate]() * this.pattern.tileCount;
      let result = a + this.pattern.getMaxTileIndexForMainAxisIndex(mainAxisIndex);
      return result;
    }
  };
  (quilted._SliverQuiltedGridLayout.new = function(opts) {
    let cellExtent = opts && 'cellExtent' in opts ? opts.cellExtent : null;
    let crossAxisExtent = opts && 'crossAxisExtent' in opts ? opts.crossAxisExtent : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : null;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : null;
    let pattern = opts && 'pattern' in opts ? opts.pattern : null;
    let reverseCrossAxis = opts && 'reverseCrossAxis' in opts ? opts.reverseCrossAxis : null;
    this[S.crossAxisExtent] = crossAxisExtent;
    this[S.mainAxisSpacing$1] = mainAxisSpacing;
    this[S.crossAxisSpacing$1] = crossAxisSpacing;
    this[S.pattern] = pattern;
    this[S.reverseCrossAxis] = reverseCrossAxis;
    if (!(cellExtent > 0)) dart.assertFailed(null, I[224], 142, 16, "cellExtent > 0");
    if (!(mainAxisSpacing >= 0)) dart.assertFailed(null, I[224], 143, 16, "mainAxisSpacing >= 0");
    if (!(crossAxisSpacing >= 0)) dart.assertFailed(null, I[224], 144, 16, "crossAxisSpacing >= 0");
    this[S.mainAxisStride] = cellExtent + mainAxisSpacing;
    this[S.crossAxisStride] = cellExtent + crossAxisSpacing;
    quilted._SliverQuiltedGridLayout.__proto__.new.call(this);
    ;
  }).prototype = quilted._SliverQuiltedGridLayout.prototype;
  dart.addTypeTests(quilted._SliverQuiltedGridLayout);
  dart.addTypeCaches(quilted._SliverQuiltedGridLayout);
  dart.setMethodSignature(quilted._SliverQuiltedGridLayout, () => ({
    __proto__: dart.getMethods(quilted._SliverQuiltedGridLayout.__proto__),
    computeMaxScrollOffset: dart.fnType(core.double, [core.int]),
    getGeometryForChildIndex: dart.fnType(sliver_grid.SliverGridGeometry, [core.int]),
    [S._getOffsetFromStartInCrossAxis]: dart.fnType(core.double, [core.double, core.double]),
    getMinChildIndexForScrollOffset: dart.fnType(core.int, [core.double]),
    getMaxChildIndexForScrollOffset: dart.fnType(core.int, [core.double])
  }));
  dart.setLibraryUri(quilted._SliverQuiltedGridLayout, I[225]);
  dart.setFieldSignature(quilted._SliverQuiltedGridLayout, () => ({
    __proto__: dart.getFields(quilted._SliverQuiltedGridLayout.__proto__),
    crossAxisExtent: dart.finalFieldType(core.double),
    mainAxisSpacing: dart.finalFieldType(core.double),
    crossAxisSpacing: dart.finalFieldType(core.double),
    mainAxisStride: dart.finalFieldType(core.double),
    crossAxisStride: dart.finalFieldType(core.double),
    pattern: dart.finalFieldType(quilted._QuiltedTilePattern),
    reverseCrossAxis: dart.finalFieldType(core.bool)
  }));
  quilted.QuiltedGridRepeatPattern = class QuiltedGridRepeatPattern extends core.Object {};
  (quilted.QuiltedGridRepeatPattern.new = function() {
    ;
  }).prototype = quilted.QuiltedGridRepeatPattern.prototype;
  dart.addTypeTests(quilted.QuiltedGridRepeatPattern);
  dart.addTypeCaches(quilted.QuiltedGridRepeatPattern);
  dart.setLibraryUri(quilted.QuiltedGridRepeatPattern, I[225]);
  dart.setStaticFieldSignature(quilted.QuiltedGridRepeatPattern, () => ['same', 'inverted', 'mirrored']);
  dart.defineLazy(quilted.QuiltedGridRepeatPattern, {
    /*quilted.QuiltedGridRepeatPattern.same*/get same() {
      return C[402] || CT.C402;
    },
    /*quilted.QuiltedGridRepeatPattern.inverted*/get inverted() {
      return C[403] || CT.C403;
    },
    /*quilted.QuiltedGridRepeatPattern.mirrored*/get mirrored() {
      return C[404] || CT.C404;
    }
  }, false);
  quilted._QuiltedGridRepeatSamePattern = class _QuiltedGridRepeatSamePattern extends quilted.QuiltedGridRepeatPattern {
    static ['_#new#tearOff']() {
      return new quilted._QuiltedGridRepeatSamePattern.new();
    }
    repeatedIndexes(indexes, crossAxisCount) {
      return T.JSArrayOfint().of([]);
    }
    repeatedTileCount(tileCount) {
      return 0;
    }
  };
  (quilted._QuiltedGridRepeatSamePattern.new = function() {
    quilted._QuiltedGridRepeatSamePattern.__proto__.new.call(this);
    ;
  }).prototype = quilted._QuiltedGridRepeatSamePattern.prototype;
  dart.addTypeTests(quilted._QuiltedGridRepeatSamePattern);
  dart.addTypeCaches(quilted._QuiltedGridRepeatSamePattern);
  dart.setMethodSignature(quilted._QuiltedGridRepeatSamePattern, () => ({
    __proto__: dart.getMethods(quilted._QuiltedGridRepeatSamePattern.__proto__),
    repeatedIndexes: dart.fnType(core.List$(core.int), [core.List$(core.int), core.int]),
    repeatedTileCount: dart.fnType(core.int, [core.int])
  }));
  dart.setLibraryUri(quilted._QuiltedGridRepeatSamePattern, I[225]);
  quilted._QuiltedGridRepeatInvertedPattern = class _QuiltedGridRepeatInvertedPattern extends quilted.QuiltedGridRepeatPattern {
    static ['_#new#tearOff']() {
      return new quilted._QuiltedGridRepeatInvertedPattern.new();
    }
    repeatedIndexes(indexes, crossAxisCount) {
      let result = T.JSArrayOfint().of([]);
      let added = T.LinkedHashSetOfint().new();
      for (let i = indexes[S$.$length] - 1; i >= 0; i = i - 1) {
        let index = indexes[S$.$_get](i);
        if (index !== -1 && !added.contains(index)) {
          result[S$.$add](index);
          added.add(index);
        }
      }
      return result;
    }
    repeatedTileCount(tileCount) {
      return tileCount;
    }
  };
  (quilted._QuiltedGridRepeatInvertedPattern.new = function() {
    quilted._QuiltedGridRepeatInvertedPattern.__proto__.new.call(this);
    ;
  }).prototype = quilted._QuiltedGridRepeatInvertedPattern.prototype;
  dart.addTypeTests(quilted._QuiltedGridRepeatInvertedPattern);
  dart.addTypeCaches(quilted._QuiltedGridRepeatInvertedPattern);
  dart.setMethodSignature(quilted._QuiltedGridRepeatInvertedPattern, () => ({
    __proto__: dart.getMethods(quilted._QuiltedGridRepeatInvertedPattern.__proto__),
    repeatedIndexes: dart.fnType(core.List$(core.int), [core.List$(core.int), core.int]),
    repeatedTileCount: dart.fnType(core.int, [core.int])
  }));
  dart.setLibraryUri(quilted._QuiltedGridRepeatInvertedPattern, I[225]);
  quilted._QuiltedGridRepeatMirroredPattern = class _QuiltedGridRepeatMirroredPattern extends quilted.QuiltedGridRepeatPattern {
    static ['_#new#tearOff']() {
      return new quilted._QuiltedGridRepeatMirroredPattern.new();
    }
    repeatedIndexes(indexes, crossAxisCount) {
      let result = T.JSArrayOfint().of([]);
      let added = T.LinkedHashSetOfint().new();
      let mainAxisCount = (indexes[S$.$length] / crossAxisCount)[S$0.$truncate]();
      for (let i = mainAxisCount - 1; i >= 0; i = i - 1) {
        for (let j = 0; j < crossAxisCount; j = j + 1) {
          let index = indexes[S$.$_get](i * crossAxisCount + j);
          if (index !== -1 && !added.contains(index)) {
            result[S$.$add](index);
            added.add(index);
          }
        }
      }
      return result;
    }
    repeatedTileCount(tileCount) {
      return tileCount;
    }
  };
  (quilted._QuiltedGridRepeatMirroredPattern.new = function() {
    quilted._QuiltedGridRepeatMirroredPattern.__proto__.new.call(this);
    ;
  }).prototype = quilted._QuiltedGridRepeatMirroredPattern.prototype;
  dart.addTypeTests(quilted._QuiltedGridRepeatMirroredPattern);
  dart.addTypeCaches(quilted._QuiltedGridRepeatMirroredPattern);
  dart.setMethodSignature(quilted._QuiltedGridRepeatMirroredPattern, () => ({
    __proto__: dart.getMethods(quilted._QuiltedGridRepeatMirroredPattern.__proto__),
    repeatedIndexes: dart.fnType(core.List$(core.int), [core.List$(core.int), core.int]),
    repeatedTileCount: dart.fnType(core.int, [core.int])
  }));
  dart.setLibraryUri(quilted._QuiltedGridRepeatMirroredPattern, I[225]);
  quilted['_extension#0|toPattern'] = function _extension$350$124toPattern($this, crossAxisCount, repeatPattern) {
    let tileCount = $this[S$.$length] + repeatPattern.repeatedTileCount($this[S$.$length]);
    let minTileIndexes = T.JSArrayOfint().of([]);
    let maxTileIndexes = T.JSArrayOfint().of([]);
    let maxMainAxisCellCounts = T$.ListOfint().filled(tileCount, 0);
    let mainAxisIndexes = T$.ListOfint().filled(tileCount, 0);
    let crossAxisIndexes = T$.ListOfint().filled(tileCount, 0);
    let indexes = new (T.IdentityMapOfint$int()).new();
    let offsets = T$.ListOfint().generate(crossAxisCount, dart.fn(index => 0, T.intToint()));
    function position(tiles, indexes, start) {
      let t316;
      for (let i = 0; i < tiles[S$.$length]; i = i + 1) {
        let tile = tiles[S$.$_get](i);
        let fullIndex = start + i;
        let crossAxisIndex = extensions['ListNumExtensions|findSmallestIndexWithMinimumValue'](offsets);
        let mainAxisIndex = offsets[S$.$_get](crossAxisIndex);
        mainAxisIndexes[S$.$_set](fullIndex, mainAxisIndex);
        crossAxisIndexes[S$.$_set](fullIndex, crossAxisIndex);
        let tileCrossAxisCount = tile.crossAxisCount;
        let tileMainAxisCount = tile.mainAxisCount;
        for (let j = 0; j < tileCrossAxisCount; j = j + 1) {
          t316 = crossAxisIndex + j;
          offsets[S$.$_set](t316, offsets[S$.$_get](t316) + tileMainAxisCount);
          if (indexes != null) {
            for (let k = 0; k < tileMainAxisCount; k = k + 1) {
              let cellIndex = crossAxisIndex + j + (mainAxisIndex + k) * crossAxisCount;
              indexes[S$.$_set](cellIndex, i);
            }
          }
        }
        for (let j = 0; j < tileMainAxisCount; j = j + 1) {
          let index = mainAxisIndex + j;
          if (minTileIndexes[S$.$length] === index) {
            minTileIndexes[S$.$add](fullIndex);
          } else {
            minTileIndexes[S$.$_set](index, math.min(core.int, minTileIndexes[S$.$_get](index), fullIndex));
          }
          if (maxTileIndexes[S$.$length] === index) {
            maxTileIndexes[S$.$add](fullIndex);
          } else {
            maxTileIndexes[S$.$_set](index, math.max(core.int, maxTileIndexes[S$.$_get](index), fullIndex));
          }
        }
        maxMainAxisCellCounts[S$.$_set](fullIndex, offsets[S.$reduce](C[405] || CT.C405));
      }
    }
    dart.fn(position, T.ListOfQuiltedGridTileAndMapNOfint$intAndintTovoid());
    position($this, indexes, 0);
    let indexList = T$.ListOfint().filled(indexes[S$.$length], -1);
    for (let index of indexes[S$.$keys]) {
      indexList[S$.$_set](index, dart.nullCheck(indexes[S$.$_get](index)));
    }
    let repeatedIndexes = repeatPattern.repeatedIndexes(indexList, crossAxisCount);
    let tiles = $this[S$.$toList]();
    if (repeatedIndexes[S$.$isNotEmpty]) {
      let repeatedTiles = repeatedIndexes[S$.$map](quilted.QuiltedGridTile, dart.fn(index => $this[S$.$_get](index), T.intToQuiltedGridTile()))[S$.$toList]();
      position(repeatedTiles, null, $this[S$.$length]);
      tiles[S$.$addAll](repeatedTiles);
    }
    return new quilted._QuiltedTilePattern.new({tiles: tiles, mainAxisIndexes: mainAxisIndexes, crossAxisIndexes: crossAxisIndexes, maxMainAxisCellCounts: maxMainAxisCellCounts, minTileIndexes: minTileIndexes, maxTileIndexes: maxTileIndexes, mainAxisCellCount: offsets[S.$reduce](C[405] || CT.C405)});
  };
  quilted['_extension#0|get#toPattern'] = function _extension$350$124get$35toPattern($this) {
    return dart.fn((crossAxisCount, repeatPattern) => quilted['_extension#0|toPattern']($this, crossAxisCount, repeatPattern), T.intAndQuiltedGridRepeatPatternTo_QuiltedTilePattern());
  };
  staired.StairedGridTile = class StairedGridTile extends core.Object {
    get crossAxisRatio() {
      return this[S.crossAxisRatio];
    }
    set crossAxisRatio(value) {
      super.crossAxisRatio = value;
    }
    get aspectRatio() {
      return this[S.aspectRatio];
    }
    set aspectRatio(value) {
      super.aspectRatio = value;
    }
    static ['_#new#tearOff'](crossAxisRatio, aspectRatio) {
      return new staired.StairedGridTile.new(crossAxisRatio, aspectRatio);
    }
    toString() {
      return "StairedGridTile(" + dart.str(this.crossAxisRatio) + ", " + dart.str(this.aspectRatio) + ")";
    }
  };
  (staired.StairedGridTile.new = function(crossAxisRatio, aspectRatio) {
    this[S.crossAxisRatio] = crossAxisRatio;
    this[S.aspectRatio] = aspectRatio;
    if (!(crossAxisRatio > 0 && crossAxisRatio <= 1)) dart.assertFailed(null, I[226], 13, 16, "crossAxisRatio > 0 && crossAxisRatio <= 1");
    if (!(aspectRatio > 0)) dart.assertFailed(null, I[226], 14, 16, "aspectRatio > 0");
    ;
  }).prototype = staired.StairedGridTile.prototype;
  dart.addTypeTests(staired.StairedGridTile);
  dart.addTypeCaches(staired.StairedGridTile);
  dart.setLibraryUri(staired.StairedGridTile, I[227]);
  dart.setFieldSignature(staired.StairedGridTile, () => ({
    __proto__: dart.getFields(staired.StairedGridTile.__proto__),
    crossAxisRatio: dart.finalFieldType(core.double),
    aspectRatio: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(staired.StairedGridTile, ['toString']);
  const _is_SliverPatternGridDelegate_default = Symbol('_is_SliverPatternGridDelegate_default');
  sliver_patterned_grid_delegate.SliverPatternGridDelegate$ = dart.generic(T => {
    class SliverPatternGridDelegate extends sliver_grid.SliverGridDelegate {
      get mainAxisSpacing() {
        return this[S.mainAxisSpacing$2];
      }
      set mainAxisSpacing(value) {
        super.mainAxisSpacing = value;
      }
      get crossAxisSpacing() {
        return this[S.crossAxisSpacing$2];
      }
      set crossAxisSpacing(value) {
        super.crossAxisSpacing = value;
      }
      get pattern() {
        return this[S.pattern$1];
      }
      set pattern(value) {
        super.pattern = value;
      }
      get tileCount() {
        return this[S.tileCount$1];
      }
      set tileCount(value) {
        super.tileCount = value;
      }
      get crossAxisCount() {
        return this[S.crossAxisCount$2];
      }
      set crossAxisCount(value) {
        super.crossAxisCount = value;
      }
      get maxCrossAxisExtent() {
        return this[S.maxCrossAxisExtent];
      }
      set maxCrossAxisExtent(value) {
        super.maxCrossAxisExtent = value;
      }
      getLayout(constraints) {
        let t317;
        let crossAxisCount = (t317 = this.crossAxisCount, t317 == null ? (constraints.crossAxisExtent / (dart.nullCheck(this.maxCrossAxisExtent) + this.crossAxisSpacing))[S.$ceil]() : t317);
        let geometries = this.getGeometries(constraints, crossAxisCount);
        return new sliver_patterned_grid_delegate._SliverPatternGridLayout.new({mainAxisSpacing: this.mainAxisSpacing, crossAxisExtent: constraints.crossAxisExtent, reverseCrossAxis: basic_types.axisDirectionIsReversed(constraints.crossAxisDirection), tiles: geometries.tiles, bounds: geometries.bounds});
      }
      shouldRelayout(oldDelegate) {
        sliver_patterned_grid_delegate.SliverPatternGridDelegate.as(oldDelegate);
        return !oldDelegate.pattern[S$0.$_equals](this.pattern) || oldDelegate.mainAxisSpacing !== this.mainAxisSpacing || oldDelegate.crossAxisSpacing !== this.crossAxisSpacing;
      }
    }
    (SliverPatternGridDelegate.__ = function(opts) {
      let pattern = opts && 'pattern' in opts ? opts.pattern : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
      let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
      this[S.pattern$1] = pattern;
      this[S.mainAxisSpacing$2] = mainAxisSpacing;
      this[S.crossAxisSpacing$2] = crossAxisSpacing;
      this[S.crossAxisCount$2] = crossAxisCount;
      this[S.maxCrossAxisExtent] = maxCrossAxisExtent;
      if (!(mainAxisSpacing >= 0)) dart.assertFailed(null, I[228], 30, 16, "mainAxisSpacing >= 0");
      if (!(crossAxisSpacing >= 0)) dart.assertFailed(null, I[228], 31, 16, "crossAxisSpacing >= 0");
      if (!(crossAxisCount == null || dart.notNull(crossAxisCount) > 0)) dart.assertFailed(null, I[228], 32, 16, "crossAxisCount == null || crossAxisCount > 0");
      if (!(maxCrossAxisExtent == null || dart.notNull(maxCrossAxisExtent) > 0)) dart.assertFailed(null, I[228], 33, 16, "maxCrossAxisExtent == null || maxCrossAxisExtent > 0");
      if (!(crossAxisCount != null || maxCrossAxisExtent != null)) dart.assertFailed(null, I[228], 34, 16, "crossAxisCount != null || maxCrossAxisExtent != null");
      this[S.tileCount$1] = pattern[S$.$length];
      SliverPatternGridDelegate.__proto__.new.call(this);
      ;
    }).prototype = SliverPatternGridDelegate.prototype;
    (SliverPatternGridDelegate.count = function(opts) {
      let pattern = opts && 'pattern' in opts ? opts.pattern : null;
      let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      SliverPatternGridDelegate.__.call(this, {pattern: pattern, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, crossAxisCount: crossAxisCount});
    }).prototype = SliverPatternGridDelegate.prototype;
    (SliverPatternGridDelegate.extent = function(opts) {
      let pattern = opts && 'pattern' in opts ? opts.pattern : null;
      let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      SliverPatternGridDelegate.__.call(this, {pattern: pattern, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, maxCrossAxisExtent: maxCrossAxisExtent});
    }).prototype = SliverPatternGridDelegate.prototype;
    dart.addTypeTests(SliverPatternGridDelegate);
    SliverPatternGridDelegate.prototype[_is_SliverPatternGridDelegate_default] = true;
    dart.addTypeCaches(SliverPatternGridDelegate);
    dart.setMethodSignature(SliverPatternGridDelegate, () => ({
      __proto__: dart.getMethods(SliverPatternGridDelegate.__proto__),
      getLayout: dart.fnType(sliver_patterned_grid_delegate._SliverPatternGridLayout, [sliver$.SliverConstraints]),
      shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
    }));
    dart.setLibraryUri(SliverPatternGridDelegate, I[229]);
    dart.setFieldSignature(SliverPatternGridDelegate, () => ({
      __proto__: dart.getFields(SliverPatternGridDelegate.__proto__),
      mainAxisSpacing: dart.finalFieldType(core.double),
      crossAxisSpacing: dart.finalFieldType(core.double),
      pattern: dart.finalFieldType(core.List$(T)),
      tileCount: dart.finalFieldType(core.int),
      crossAxisCount: dart.finalFieldType(dart.nullable(core.int)),
      maxCrossAxisExtent: dart.finalFieldType(dart.nullable(core.double))
    }));
    return SliverPatternGridDelegate;
  });
  sliver_patterned_grid_delegate.SliverPatternGridDelegate = sliver_patterned_grid_delegate.SliverPatternGridDelegate$();
  dart.addTypeTests(sliver_patterned_grid_delegate.SliverPatternGridDelegate, _is_SliverPatternGridDelegate_default);
  staired.SliverStairedGridDelegate = class SliverStairedGridDelegate extends sliver_patterned_grid_delegate.SliverPatternGridDelegate$(staired.StairedGridTile) {
    get tileBottomSpace() {
      return this[S.tileBottomSpace];
    }
    set tileBottomSpace(value) {
      super.tileBottomSpace = value;
    }
    get startCrossAxisDirectionReversed() {
      return this[S.startCrossAxisDirectionReversed];
    }
    set startCrossAxisDirectionReversed(value) {
      super.startCrossAxisDirectionReversed = value;
    }
    static ['_#new#tearOff'](opts) {
      let pattern = opts && 'pattern' in opts ? opts.pattern : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let tileBottomSpace = opts && 'tileBottomSpace' in opts ? opts.tileBottomSpace : 0;
      let startCrossAxisDirectionReversed = opts && 'startCrossAxisDirectionReversed' in opts ? opts.startCrossAxisDirectionReversed : false;
      return new staired.SliverStairedGridDelegate.new({pattern: pattern, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, tileBottomSpace: tileBottomSpace, startCrossAxisDirectionReversed: startCrossAxisDirectionReversed});
    }
    getGeometries(constraints, crossAxisCount) {
      let maxCrossAxisExtent = constraints.crossAxisExtent;
      let geometries = T.ListOfSliverGridGeometry().filled(this.pattern[S$.$length], constants.kZeroGeometry);
      let i = 0;
      let mainAxisOffset = 0;
      let crossAxisOffset = this.startCrossAxisDirectionReversed ? maxCrossAxisExtent : 0;
      let reversed = this.startCrossAxisDirectionReversed;
      while (i < this.tileCount) {
        let startIndex = i;
        let crossAxisRatioSum = 0;
        while (crossAxisRatioSum < 1 && i < this.tileCount) {
          crossAxisRatioSum = crossAxisRatioSum + this.pattern[S$.$_get](i).crossAxisRatio;
          i = i + 1;
        }
        if (crossAxisRatioSum > 1) {
          i = i - 1;
        }
        let tileBottomSpaceSum = this.tileBottomSpace * (i - startIndex);
        let isHorizontal = constraints.axis === basic_types.Axis.horizontal;
        let usableCrossAxisExtent = ((startIndex === 0 ? maxCrossAxisExtent : maxCrossAxisExtent - this.crossAxisSpacing) - (i - startIndex - 1) * this.crossAxisSpacing - (i === this.tileCount ? this.crossAxisSpacing : 0) - (isHorizontal ? tileBottomSpaceSum : 0))[S.$clamp](0, maxCrossAxisExtent);
        let targetMainAxisOffset = 0;
        for (let j = startIndex; j < i; j = j + 1) {
          let tile = this.pattern[S$.$_get](j);
          let crossAxisExtent = usableCrossAxisExtent * tile.crossAxisRatio + (isHorizontal ? this.tileBottomSpace : 0);
          let mainAxisExtent = crossAxisExtent / tile.aspectRatio + (isHorizontal ? 0 : this.tileBottomSpace);
          crossAxisOffset = reversed ? crossAxisOffset - crossAxisExtent : crossAxisOffset;
          let tileRect = new sliver_grid.SliverGridGeometry.new({scrollOffset: mainAxisOffset, crossAxisOffset: crossAxisOffset, mainAxisExtent: mainAxisExtent, crossAxisExtent: crossAxisExtent});
          let endMainAxisOffset = mainAxisOffset + mainAxisExtent;
          crossAxisOffset = reversed ? crossAxisOffset - this.crossAxisSpacing : crossAxisOffset + crossAxisExtent + this.crossAxisSpacing;
          mainAxisOffset = mainAxisOffset + this.mainAxisSpacing;
          geometries[S$.$_set](j, tileRect);
          if (endMainAxisOffset > targetMainAxisOffset) {
            targetMainAxisOffset = endMainAxisOffset;
          }
        }
        mainAxisOffset = targetMainAxisOffset + this.mainAxisSpacing;
        reversed = !reversed;
        crossAxisOffset = reversed ? maxCrossAxisExtent - this.crossAxisSpacing : this.crossAxisSpacing;
      }
      return new sliver_patterned_grid_delegate.SliverPatternGridGeometries.new({tiles: geometries, bounds: geometries});
    }
    shouldRelayout(oldDelegate) {
      staired.SliverStairedGridDelegate.as(oldDelegate);
      return super.shouldRelayout(oldDelegate) || oldDelegate.tileBottomSpace !== this.tileBottomSpace || oldDelegate.startCrossAxisDirectionReversed !== this.startCrossAxisDirectionReversed;
    }
  };
  (staired.SliverStairedGridDelegate.new = function(opts) {
    let pattern = opts && 'pattern' in opts ? opts.pattern : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let tileBottomSpace = opts && 'tileBottomSpace' in opts ? opts.tileBottomSpace : 0;
    let startCrossAxisDirectionReversed = opts && 'startCrossAxisDirectionReversed' in opts ? opts.startCrossAxisDirectionReversed : false;
    this[S.tileBottomSpace] = tileBottomSpace;
    this[S.startCrossAxisDirectionReversed] = startCrossAxisDirectionReversed;
    if (!(tileBottomSpace >= 0)) dart.assertFailed(null, I[226], 45, 16, "tileBottomSpace >= 0");
    staired.SliverStairedGridDelegate.__proto__.count.call(this, {pattern: pattern, crossAxisCount: 1, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing});
    ;
  }).prototype = staired.SliverStairedGridDelegate.prototype;
  dart.addTypeTests(staired.SliverStairedGridDelegate);
  dart.addTypeCaches(staired.SliverStairedGridDelegate);
  dart.setMethodSignature(staired.SliverStairedGridDelegate, () => ({
    __proto__: dart.getMethods(staired.SliverStairedGridDelegate.__proto__),
    getGeometries: dart.fnType(sliver_patterned_grid_delegate.SliverPatternGridGeometries, [sliver$.SliverConstraints, core.int])
  }));
  dart.setLibraryUri(staired.SliverStairedGridDelegate, I[227]);
  dart.setFieldSignature(staired.SliverStairedGridDelegate, () => ({
    __proto__: dart.getFields(staired.SliverStairedGridDelegate.__proto__),
    tileBottomSpace: dart.finalFieldType(core.double),
    startCrossAxisDirectionReversed: dart.finalFieldType(core.bool)
  }));
  woven.WovenGridTile = class WovenGridTile extends core.Object {
    get aspectRatio() {
      return this[S.aspectRatio$1];
    }
    set aspectRatio(value) {
      super.aspectRatio = value;
    }
    get crossAxisRatio() {
      return this[S.crossAxisRatio$1];
    }
    set crossAxisRatio(value) {
      super.crossAxisRatio = value;
    }
    get alignment() {
      return this[S.alignment];
    }
    set alignment(value) {
      super.alignment = value;
    }
    static ['_#new#tearOff'](aspectRatio, opts) {
      let crossAxisRatio = opts && 'crossAxisRatio' in opts ? opts.crossAxisRatio : 1;
      let alignment = opts && 'alignment' in opts ? opts.alignment : C[407] || CT.C407;
      return new woven.WovenGridTile.new(aspectRatio, {crossAxisRatio: crossAxisRatio, alignment: alignment});
    }
    toString() {
      return "WovenGridTile(" + dart.str(this.aspectRatio) + (this.crossAxisRatio > 1 ? ", " + dart.str(this.crossAxisRatio) : "") + (!this.alignment._equals(alignment.AlignmentDirectional.center) ? ", " + dart.str(this.alignment) : "") + ")";
    }
  };
  (woven.WovenGridTile.new = function(aspectRatio, opts) {
    let crossAxisRatio = opts && 'crossAxisRatio' in opts ? opts.crossAxisRatio : 1;
    let alignment = opts && 'alignment' in opts ? opts.alignment : C[407] || CT.C407;
    this[S.aspectRatio$1] = aspectRatio;
    this[S.crossAxisRatio$1] = crossAxisRatio;
    this[S.alignment] = alignment;
    if (!(aspectRatio > 0)) dart.assertFailed(null, I[230], 16, 16, "aspectRatio > 0");
    if (!(crossAxisRatio > 0 && crossAxisRatio <= 1)) dart.assertFailed(null, I[230], 17, 16, "crossAxisRatio > 0 && crossAxisRatio <= 1");
    ;
  }).prototype = woven.WovenGridTile.prototype;
  dart.addTypeTests(woven.WovenGridTile);
  dart.addTypeCaches(woven.WovenGridTile);
  dart.setLibraryUri(woven.WovenGridTile, I[231]);
  dart.setFieldSignature(woven.WovenGridTile, () => ({
    __proto__: dart.getFields(woven.WovenGridTile.__proto__),
    aspectRatio: dart.finalFieldType(core.double),
    crossAxisRatio: dart.finalFieldType(core.double),
    alignment: dart.finalFieldType(alignment.AlignmentDirectional)
  }));
  dart.defineExtensionMethods(woven.WovenGridTile, ['toString']);
  woven.SliverWovenGridDelegate = class SliverWovenGridDelegate extends sliver_patterned_grid_delegate.SliverPatternGridDelegate$(woven.WovenGridTile) {
    get tileBottomSpace() {
      return this[S.tileBottomSpace$1];
    }
    set tileBottomSpace(value) {
      super.tileBottomSpace = value;
    }
    static ['_#count#tearOff'](opts) {
      let pattern = opts && 'pattern' in opts ? opts.pattern : null;
      let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let tileBottomSpace = opts && 'tileBottomSpace' in opts ? opts.tileBottomSpace : 0;
      return new woven.SliverWovenGridDelegate.count({pattern: pattern, crossAxisCount: crossAxisCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, tileBottomSpace: tileBottomSpace});
    }
    static ['_#extent#tearOff'](opts) {
      let pattern = opts && 'pattern' in opts ? opts.pattern : null;
      let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let tileBottomSpace = opts && 'tileBottomSpace' in opts ? opts.tileBottomSpace : 0;
      return new woven.SliverWovenGridDelegate.extent({pattern: pattern, maxCrossAxisExtent: maxCrossAxisExtent, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, tileBottomSpace: tileBottomSpace});
    }
    getGeometries(constraints, crossAxisCount) {
      let isHorizontal = constraints.axis === basic_types.Axis.horizontal;
      let usableCrossAxisExtent = isHorizontal ? constraints.crossAxisExtent - crossAxisCount * this.tileBottomSpace : constraints.crossAxisExtent;
      let crossAxisExtent = (usableCrossAxisExtent + this.crossAxisSpacing) / crossAxisCount - this.crossAxisSpacing;
      let crossAxisStride = crossAxisExtent + this.crossAxisSpacing;
      let patternCount = this.pattern[S$.$length];
      let maxMainAxisExtentRatio = this.pattern[S$.$map](core.double, dart.fn(t => t.crossAxisRatio / t.aspectRatio, T.WovenGridTileTodouble()))[S.$reduce](C[408] || CT.C408);
      let mainAxisExtent = crossAxisExtent * maxMainAxisExtentRatio + (isHorizontal ? 0 : this.tileBottomSpace);
      let count = crossAxisCount * 2;
      let tiles = T.ListOfSliverGridGeometry().filled(count, constants.kZeroGeometry);
      let bounds = T.ListOfSliverGridGeometry().filled(count, constants.kZeroGeometry);
      for (let i = 0; i < count; i = i + 1) {
        let startScrollOffset = i < crossAxisCount ? 0 : mainAxisExtent + this.mainAxisSpacing;
        let tilePatternIndex = i < crossAxisCount ? i[S$0.$modulo](patternCount) : (count - 1 - i[S$0.$modulo](crossAxisCount))[S$0.$modulo](patternCount);
        let tilePattern = this.pattern[S$.$_get](tilePatternIndex);
        let tileCrossAxisExtent = crossAxisExtent * tilePattern.crossAxisRatio + (isHorizontal ? this.tileBottomSpace : 0);
        let tileMainAxisExtent = tileCrossAxisExtent / tilePattern.aspectRatio + (isHorizontal ? 0 : this.tileBottomSpace);
        let effectiveTextDirection = i < crossAxisCount ? ui.TextDirection.ltr : ui.TextDirection.rtl;
        let effectiveAlignment = tilePattern.alignment.resolve(effectiveTextDirection);
        let rect = effectiveAlignment.inscribe(new ui.Size.new(tileCrossAxisExtent, tileMainAxisExtent), new ui.Rect.fromLTWH(0, 0, crossAxisExtent, mainAxisExtent));
        let startCrossAxisOffset = i[S$0.$modulo](crossAxisCount) * crossAxisStride;
        tiles[S$.$_set](i, new sliver_grid.SliverGridGeometry.new({scrollOffset: startScrollOffset + rect.top, crossAxisOffset: startCrossAxisOffset + rect.left, mainAxisExtent: tileMainAxisExtent, crossAxisExtent: tileCrossAxisExtent}));
        bounds[S$.$_set](i, new sliver_grid.SliverGridGeometry.new({scrollOffset: startScrollOffset, crossAxisOffset: startCrossAxisOffset, mainAxisExtent: mainAxisExtent, crossAxisExtent: crossAxisExtent}));
      }
      return new sliver_patterned_grid_delegate.SliverPatternGridGeometries.new({tiles: tiles, bounds: bounds});
    }
    shouldRelayout(oldDelegate) {
      woven.SliverWovenGridDelegate.as(oldDelegate);
      return super.shouldRelayout(oldDelegate) || oldDelegate.tileBottomSpace !== this.tileBottomSpace || oldDelegate.crossAxisCount != this.crossAxisCount;
    }
  };
  (woven.SliverWovenGridDelegate.count = function(opts) {
    let pattern = opts && 'pattern' in opts ? opts.pattern : null;
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let tileBottomSpace = opts && 'tileBottomSpace' in opts ? opts.tileBottomSpace : 0;
    this[S.tileBottomSpace$1] = tileBottomSpace;
    if (!(pattern[S$.$length] <= crossAxisCount)) dart.assertFailed(null, I[230], 47, 16, "pattern.length <= crossAxisCount");
    woven.SliverWovenGridDelegate.__proto__.count.call(this, {pattern: pattern, crossAxisCount: crossAxisCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing});
    ;
  }).prototype = woven.SliverWovenGridDelegate.prototype;
  (woven.SliverWovenGridDelegate.extent = function(opts) {
    let pattern = opts && 'pattern' in opts ? opts.pattern : null;
    let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let tileBottomSpace = opts && 'tileBottomSpace' in opts ? opts.tileBottomSpace : 0;
    this[S.tileBottomSpace$1] = tileBottomSpace;
    woven.SliverWovenGridDelegate.__proto__.extent.call(this, {pattern: pattern, maxCrossAxisExtent: maxCrossAxisExtent, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing});
    ;
  }).prototype = woven.SliverWovenGridDelegate.prototype;
  dart.addTypeTests(woven.SliverWovenGridDelegate);
  dart.addTypeCaches(woven.SliverWovenGridDelegate);
  dart.setMethodSignature(woven.SliverWovenGridDelegate, () => ({
    __proto__: dart.getMethods(woven.SliverWovenGridDelegate.__proto__),
    getGeometries: dart.fnType(sliver_patterned_grid_delegate.SliverPatternGridGeometries, [sliver$.SliverConstraints, core.int])
  }));
  dart.setLibraryUri(woven.SliverWovenGridDelegate, I[231]);
  dart.setFieldSignature(woven.SliverWovenGridDelegate, () => ({
    __proto__: dart.getFields(woven.SliverWovenGridDelegate.__proto__),
    tileBottomSpace: dart.finalFieldType(core.double)
  }));
  sliver_masonry_grid.SliverMasonryGridParentData = class SliverMasonryGridParentData extends sliver_multi_box_adaptor.SliverMultiBoxAdaptorParentData {
    get crossAxisIndex() {
      return this[S.crossAxisIndex];
    }
    set crossAxisIndex(value) {
      this[S.crossAxisIndex] = value;
    }
    get lastMainAxisExtent() {
      return this[S.lastMainAxisExtent];
    }
    set lastMainAxisExtent(value) {
      this[S.lastMainAxisExtent] = value;
    }
    toString() {
      return "crossAxisIndex=" + dart.str(this.crossAxisIndex) + "; " + super.toString();
    }
    static ['_#new#tearOff']() {
      return new sliver_masonry_grid.SliverMasonryGridParentData.new();
    }
  };
  (sliver_masonry_grid.SliverMasonryGridParentData.new = function() {
    this[S.crossAxisIndex] = null;
    this[S.lastMainAxisExtent] = null;
    sliver_masonry_grid.SliverMasonryGridParentData.__proto__.new.call(this);
    ;
  }).prototype = sliver_masonry_grid.SliverMasonryGridParentData.prototype;
  dart.addTypeTests(sliver_masonry_grid.SliverMasonryGridParentData);
  dart.addTypeCaches(sliver_masonry_grid.SliverMasonryGridParentData);
  dart.setLibraryUri(sliver_masonry_grid.SliverMasonryGridParentData, I[232]);
  dart.setFieldSignature(sliver_masonry_grid.SliverMasonryGridParentData, () => ({
    __proto__: dart.getFields(sliver_masonry_grid.SliverMasonryGridParentData.__proto__),
    crossAxisIndex: dart.fieldType(dart.nullable(core.int)),
    lastMainAxisExtent: dart.fieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(sliver_masonry_grid.SliverMasonryGridParentData, ['toString']);
  sliver_masonry_grid.RenderSliverMasonryGrid = class RenderSliverMasonryGrid extends sliver_multi_box_adaptor.RenderSliverMultiBoxAdaptor {
    static ['_#new#tearOff'](opts) {
      let childManager = opts && 'childManager' in opts ? opts.childManager : null;
      let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : null;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : null;
      return new sliver_masonry_grid.RenderSliverMasonryGrid.new({childManager: childManager, gridDelegate: gridDelegate, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing});
    }
    get gridDelegate() {
      return this[S._gridDelegate];
    }
    set gridDelegate(value) {
      if (this[S._gridDelegate][S$0.$_equals](value)) {
        return;
      }
      if (!value[S$.$runtimeType]._equals(this[S._gridDelegate][S$.$runtimeType]) || value.shouldRelayout(this[S._gridDelegate])) {
        this.markNeedsLayout();
      }
      this[S._gridDelegate] = value;
    }
    get mainAxisSpacing() {
      return this[S._mainAxisSpacing];
    }
    set mainAxisSpacing(value) {
      if (this[S._mainAxisSpacing] === value) {
        return;
      }
      this[S._mainAxisSpacing] = value;
      this.markNeedsLayout();
    }
    get crossAxisSpacing() {
      return this[S._crossAxisSpacing];
    }
    set crossAxisSpacing(value) {
      if (this[S._crossAxisSpacing] === value) {
        return;
      }
      this[S._crossAxisSpacing] = value;
      this.markNeedsLayout();
    }
    setupParentData(child) {
      object.RenderObject.as(child);
      if (!sliver_masonry_grid.SliverMasonryGridParentData.is(child.parentData)) child.parentData = new sliver_masonry_grid.SliverMasonryGridParentData.new();
    }
    [S._getParentData](child) {
      return sliver_masonry_grid.SliverMasonryGridParentData.as(child.parentData);
    }
    childCrossAxisPosition(child) {
      let t317;
      box.RenderBox.as(child);
      let crossAxisIndex = dart.nullCheck(this[S._childCrossAxisIndex](child));
      return (t317 = crossAxisIndex, this[S._getCrossAxisIndex](t317)) * this[S._stride];
    }
    [S._childCrossAxisIndex](child) {
      return this[S._getParentData](child).crossAxisIndex;
    }
    addInitialChild(opts) {
      let index = opts && 'index' in opts ? opts.index : 0;
      let layoutOffset = opts && 'layoutOffset' in opts ? opts.layoutOffset : 0;
      let hasFirstChild = super.addInitialChild({index: index, layoutOffset: layoutOffset});
      if (hasFirstChild) {
        let parentData = this[S._getParentData](dart.nullCheck(this.firstChild));
        sliver_masonry_grid['_extension#0|applyZero'](parentData);
      }
      return hasFirstChild;
    }
    collectGarbage(leadingGarbage, trailingGarbage) {
      let count = leadingGarbage;
      let child = dart.nullCheck(this.firstChild);
      while (count > 0 && child != null) {
        let crossAxisIndex = this[S._childCrossAxisIndex](child);
        if (crossAxisIndex != null) {
          this[S._previousCrossAxisIndexes][S$.$add](crossAxisIndex);
          this[S._previousMainAxisExtents][S$.$add](this.paintExtentOf(child));
        }
        child = this.childAfter(child);
        count = count - 1;
      }
      super.collectGarbage(leadingGarbage, trailingGarbage);
    }
    insertAndLayoutLeadingChild(childConstraints, opts) {
      let parentUsesSize = opts && 'parentUsesSize' in opts ? opts.parentUsesSize : false;
      let child = super.insertAndLayoutLeadingChild(childConstraints, {parentUsesSize: parentUsesSize});
      if (child != null) {
        let parentData = this[S._getParentData](child);
        parentData.crossAxisIndex = this[S._previousCrossAxisIndexes][S$.$isNotEmpty] ? this[S._previousCrossAxisIndexes][S$0.$removeLast]() : 0;
        parentData.lastMainAxisExtent = this[S._previousMainAxisExtents][S$.$isNotEmpty] ? this[S._previousMainAxisExtents][S$0.$removeLast]() : 0;
      }
      return child;
    }
    performLayout() {
      this.childManager.didStartLayout();
      this.childManager.setDidUnderflow(false);
      let crossAxisCount = this[S._gridDelegate].getCrossAxisCount(this.constraints, this.crossAxisSpacing);
      this[S._getCrossAxisIndex] = basic_types.axisDirectionIsReversed(this.constraints.crossAxisDirection) ? dart.fn(index => crossAxisCount - index - 1, T.intToint()) : dart.fn(index => index, T.intToint());
      this[S._stride] = (this.constraints.crossAxisExtent + this.crossAxisSpacing) / crossAxisCount;
      let childCrossAxisExtent = this[S._stride] - this.crossAxisSpacing;
      let childConstraints = this.constraints.asBoxConstraints({crossAxisExtent: childCrossAxisExtent});
      let scrollOffset = this.constraints.scrollOffset + this.constraints.cacheOrigin;
      if (!(scrollOffset >= 0)) dart.assertFailed(null, I[233], 205, 12, "scrollOffset >= 0.0");
      let remainingExtent = this.constraints.remainingCacheExtent;
      if (!(remainingExtent >= 0)) dart.assertFailed(null, I[233], 207, 12, "remainingExtent >= 0.0");
      let targetEndScrollOffset = scrollOffset + remainingExtent;
      let leadingGarbage = 0;
      let trailingGarbage = 0;
      let reachedEnd = false;
      let scrollOffsets = T.ListOfdouble().filled(crossAxisCount, 0);
      const positionChild = child => {
        let crossAxisIndex = extensions['ListNumExtensions|findSmallestIndexWithMinimumValue'](scrollOffsets);
        let childParentData = this[S._getParentData](child);
        childParentData.layoutOffset = scrollOffsets[S$.$_get](crossAxisIndex);
        childParentData.crossAxisIndex = crossAxisIndex;
        scrollOffsets[S$.$_set](crossAxisIndex, dart.nullCheck(this.childScrollOffset(child)) + this.paintExtentOf(child) + this.mainAxisSpacing);
        return scrollOffsets[S$.$_get](crossAxisIndex);
      };
      dart.fn(positionChild, T.RenderBoxTodouble());
      if (this[S._lastCrossAxisCount] != null && this[S._lastCrossAxisCount] !== crossAxisCount) {
        this[S._previousCrossAxisIndexes][S$.$clear]();
        this[S._previousMainAxisExtents][S$.$clear]();
        if (this.firstChild != null) {
          let firstIndex = this.indexOf(dart.nullCheck(this.firstChild));
          if (firstIndex !== 0) {
            let lastIndex = this.indexOf(dart.nullCheck(this.lastChild));
            this.collectGarbage(0, lastIndex - firstIndex + 1);
            scrollOffsets[S.$fillRange](0, crossAxisCount, 0);
            this.addInitialChild();
            let child = this.firstChild;
            dart.nullCheck(child).layout(childConstraints, {parentUsesSize: true});
            let index = this.indexOf(dart.nullCheck(this.firstChild));
            let newPositionOfLastFirstChild = 0;
            while (child != null && index <= this[S._lastFirstVisibleChildIndex]) {
              positionChild(child);
              newPositionOfLastFirstChild = dart.nullCheck(this.childScrollOffset(child));
              child = this.insertAndLayoutChild(childConstraints, {after: child, parentUsesSize: true});
              index = index + 1;
            }
            let scrollOffsetCorrection = newPositionOfLastFirstChild - scrollOffset;
            if (scrollOffsetCorrection !== 0) {
              this.geometry = new sliver$.SliverGeometry.new({scrollOffsetCorrection: scrollOffsetCorrection});
              return;
            }
          }
        }
      }
      this[S._lastCrossAxisCount] = crossAxisCount;
      if (this.firstChild == null) {
        if (!this.addInitialChild()) {
          this.geometry = sliver$.SliverGeometry.zero;
          this.childManager.didFinishLayout();
          return;
        }
      }
      let leadingChildWithLayout = null;
      let trailingChildWithLayout = null;
      let earliestUsefulChild = this.firstChild;
      if (this.childScrollOffset(dart.nullCheck(this.firstChild)) == null) {
        let leadingChildrenWithoutLayoutOffset = 0;
        while (earliestUsefulChild != null && this.childScrollOffset(earliestUsefulChild) == null) {
          earliestUsefulChild = this.childAfter(earliestUsefulChild);
          leadingChildrenWithoutLayoutOffset = leadingChildrenWithoutLayoutOffset + 1;
        }
        this.collectGarbage(leadingChildrenWithoutLayoutOffset, 0);
        if (this.firstChild == null) {
          if (!this.addInitialChild()) {
            this.geometry = sliver$.SliverGeometry.zero;
            this.childManager.didFinishLayout();
            return;
          }
        }
      }
      scrollOffsets[S.$fillRange](0, crossAxisCount, 1 / 0);
      const computeFirstChildParentData = () => {
        let t317;
        let firstChildParentData = this[S._getParentData](dart.nullCheck(this.firstChild));
        let mainAxisExtent = dart.nullCheck(firstChildParentData.lastMainAxisExtent) + this.mainAxisSpacing;
        let crossAxisIndex = dart.nullCheck(firstChildParentData.crossAxisIndex);
        let offset = scrollOffsets[S$.$_get](crossAxisIndex) - mainAxisExtent;
        for (let i = 0; i < crossAxisCount; i = i + 1) {
          if (i === crossAxisIndex) {
            continue;
          }
          let otherOffset = scrollOffsets[S$.$_get](i);
          if ((offset - otherOffset)[S.$abs]() < 1e-10) {
            offset = otherOffset;
            break;
          }
        }
        t317 = new sliver_masonry_grid.SliverMasonryGridParentData.new();
        return (() => {
          t317.layoutOffset = offset;
          t317.crossAxisIndex = crossAxisIndex;
          return t317;
        })();
      };
      dart.fn(computeFirstChildParentData, T.VoidToSliverMasonryGridParentData());
      let child = this.firstChild;
      if (child != null && this.indexOf(child) === 0) {
        let firstChildParentData = this[S._getParentData](child);
        firstChildParentData.crossAxisIndex = 0;
      }
      while (child != null && scrollOffsets[S.$any](dart.fn(x => x[S.$isInfinite], T.doubleTobool()))) {
        let index = this[S._childCrossAxisIndex](child);
        if (index != null) {
          let scrollOffset = dart.nullCheck(this.childScrollOffset(child));
          if (scrollOffsets[S$.$_get](index) === 1 / 0) {
            scrollOffsets[S$.$_set](index, scrollOffset);
          }
        }
        child = this.childAfter(child);
      }
      earliestUsefulChild = this.firstChild;
      while (scrollOffsets[S.$any](dart.fn(x => x > scrollOffset, T.doubleTobool()))) {
        earliestUsefulChild = this.insertAndLayoutLeadingChild(childConstraints, {parentUsesSize: true});
        if (earliestUsefulChild == null) {
          let childParentData = this[S._getParentData](dart.nullCheck(this.firstChild));
          childParentData.layoutOffset = 0;
          if (scrollOffset === 0) {
            dart.nullCheck(this.firstChild).layout(childConstraints, {parentUsesSize: true});
            earliestUsefulChild = this.firstChild;
            leadingChildWithLayout = earliestUsefulChild;
            trailingChildWithLayout == null ? trailingChildWithLayout = earliestUsefulChild : null;
            break;
          } else {
            this.geometry = new sliver$.SliverGeometry.new({scrollOffsetCorrection: -scrollOffset});
            return;
          }
        }
        let earliestScrollOffset = scrollOffsets[S.$reduce](C[409] || CT.C409);
        if (earliestScrollOffset < -1e-10) {
          this.geometry = new sliver$.SliverGeometry.new({scrollOffsetCorrection: -earliestScrollOffset});
          let childParentData = this[S._getParentData](dart.nullCheck(this.firstChild));
          let compute = computeFirstChildParentData();
          sliver_masonry_grid['_extension#0|apply'](childParentData, compute);
          childParentData.layoutOffset = 0;
          return;
        }
        let firstChildParentData = computeFirstChildParentData();
        let childParentData = this[S._getParentData](earliestUsefulChild);
        sliver_masonry_grid['_extension#0|apply'](childParentData, firstChildParentData);
        scrollOffsets[S$.$_set](dart.nullCheck(firstChildParentData.crossAxisIndex), dart.nullCheck(firstChildParentData.layoutOffset));
        if (!dart.equals(earliestUsefulChild, this.firstChild)) dart.assertFailed(null, I[233], 445, 14, "earliestUsefulChild == firstChild");
        leadingChildWithLayout = earliestUsefulChild;
        trailingChildWithLayout == null ? trailingChildWithLayout = earliestUsefulChild : null;
      }
      if (!(dart.nullCheck(this.childScrollOffset(dart.nullCheck(this.firstChild))) > -1e-10)) dart.assertFailed(null, I[233], 450, 12, "childScrollOffset(firstChild!)! > -precisionErrorTolerance");
      if (scrollOffset < 1e-10) {
        while (this.indexOf(dart.nullCheck(this.firstChild)) > 0) {
          let childParentData = this[S._getParentData](dart.nullCheck(this.firstChild));
          earliestUsefulChild = this.insertAndLayoutLeadingChild(childConstraints, {parentUsesSize: true});
          if (!(earliestUsefulChild != null)) dart.assertFailed(null, I[233], 466, 16, "earliestUsefulChild != null");
          let firstChildParentData = computeFirstChildParentData();
          sliver_masonry_grid['_extension#0|apply'](childParentData, firstChildParentData);
          let firstChildScrollOffset = dart.nullCheck(firstChildParentData.layoutOffset);
          if (firstChildScrollOffset < -1e-10) {
            this.geometry = new sliver$.SliverGeometry.new({scrollOffsetCorrection: -firstChildScrollOffset});
            return;
          }
        }
      }
      if (!dart.equals(earliestUsefulChild, this.firstChild)) dart.assertFailed(null, I[233], 488, 12, "earliestUsefulChild == firstChild");
      if (!(dart.nullCheck(this.childScrollOffset(dart.nullCheck(earliestUsefulChild))) <= scrollOffset)) dart.assertFailed(null, I[233], 489, 12, "childScrollOffset(earliestUsefulChild!)! <= scrollOffset");
      if (leadingChildWithLayout == null) {
        dart.nullCheck(earliestUsefulChild).layout(childConstraints, {parentUsesSize: true});
        leadingChildWithLayout = earliestUsefulChild;
        trailingChildWithLayout = earliestUsefulChild;
      }
      let leadingScrollOffset = scrollOffsets[S.$reduce](C[409] || CT.C409);
      let inLayoutRange = true;
      child = earliestUsefulChild;
      let index = this.indexOf(dart.nullCheck(child));
      scrollOffsets[S$.$_set](dart.nullCheck(this[S._childCrossAxisIndex](child)), dart.nullCheck(this.childScrollOffset(child)) + this.paintExtentOf(child) + this.mainAxisSpacing);
      for (let i = 0; i < scrollOffsets[S$.$length]; i = i + 1) {
        if (scrollOffsets[S$.$_get](i) === 1 / 0) {
          scrollOffsets[S$.$_set](i, 0);
        }
      }
      let foundFirstVisibleChild = scrollOffsets[S.$any](dart.fn(scrollOffset => scrollOffset >= this.constraints.scrollOffset, T.doubleTobool()));
      this[S._lastFirstVisibleChildIndex] = this.indexOf(dart.nullCheck(this.firstChild));
      const advance = () => {
        if (!(child != null)) dart.assertFailed(null, I[233], 528, 14, "child != null");
        if (dart.equals(child, trailingChildWithLayout)) {
          inLayoutRange = false;
        }
        child = this.childAfter(dart.nullCheck(child));
        if (child == null) {
          inLayoutRange = false;
        }
        index = index + 1;
        if (!inLayoutRange) {
          if (child == null || this.indexOf(dart.nullCheck(child)) !== index) {
            child = this.insertAndLayoutChild(childConstraints, {after: trailingChildWithLayout, parentUsesSize: true});
            if (child == null) {
              return false;
            }
          } else {
            dart.nullCheck(child).layout(childConstraints, {parentUsesSize: true});
          }
          trailingChildWithLayout = child;
        }
        if (!(child != null)) dart.assertFailed(null, I[233], 555, 14, "child != null");
        positionChild(dart.nullCheck(child));
        if (!foundFirstVisibleChild && scrollOffsets[S.$any](dart.fn(scrollOffset => scrollOffset >= this.constraints.scrollOffset, T.doubleTobool()))) {
          foundFirstVisibleChild = true;
          this[S._lastFirstVisibleChildIndex] = this.indexOf(dart.nullCheck(child));
        }
        if (!(this.indexOf(dart.nullCheck(child)) === index)) dart.assertFailed(null, I[233], 564, 14, "indexOf(child!) == index");
        return true;
      };
      dart.fn(advance, T$.VoidTobool());
      while (scrollOffsets[S.$every](dart.fn(offset => offset - this.mainAxisSpacing < scrollOffset, T.doubleTobool()))) {
        leadingGarbage = leadingGarbage + 1;
        if (!advance()) {
          if (!(leadingGarbage === this.childCount)) dart.assertFailed(null, I[233], 573, 16, "leadingGarbage == childCount");
          if (!(child == null)) dart.assertFailed(null, I[233], 574, 16, "child == null");
          this.collectGarbage(leadingGarbage - 1, 0);
          if (!dart.equals(this.firstChild, this.lastChild)) dart.assertFailed(null, I[233], 577, 16, "firstChild == lastChild");
          let extent = scrollOffsets[S.$reduce](C[408] || CT.C408) - this.mainAxisSpacing;
          this.geometry = new sliver$.SliverGeometry.new({scrollExtent: extent, maxPaintExtent: extent});
          return;
        }
      }
      while (scrollOffsets[S.$any](dart.fn(offset => offset - this.mainAxisSpacing < targetEndScrollOffset, T.doubleTobool()))) {
        if (!advance()) {
          reachedEnd = true;
          break;
        }
      }
      if (child != null) {
        child = this.childAfter(dart.nullCheck(child));
        while (child != null) {
          trailingGarbage = trailingGarbage + 1;
          child = this.childAfter(dart.nullCheck(child));
        }
      }
      this.collectGarbage(leadingGarbage, trailingGarbage);
      if (!this.debugAssertChildListIsNonEmptyAndContiguous()) dart.assertFailed(null, I[233], 610, 12, "debugAssertChildListIsNonEmptyAndContiguous()");
      let endScrollOffset = scrollOffsets[S.$reduce](C[408] || CT.C408) - this.mainAxisSpacing;
      let estimatedMaxScrollOffset = null;
      if (reachedEnd) {
        estimatedMaxScrollOffset = endScrollOffset;
      } else {
        estimatedMaxScrollOffset = this.childManager.estimateMaxScrollOffset(this.constraints, {firstIndex: this.indexOf(dart.nullCheck(this.firstChild)), lastIndex: this.indexOf(dart.nullCheck(this.lastChild)), leadingScrollOffset: leadingScrollOffset, trailingScrollOffset: endScrollOffset});
        if (!(estimatedMaxScrollOffset >= endScrollOffset - leadingScrollOffset)) dart.assertFailed(null, I[233], 624, 9, "estimatedMaxScrollOffset >= endScrollOffset - leadingScrollOffset");
      }
      let paintExtent = this.calculatePaintOffset(this.constraints, {from: leadingScrollOffset, to: endScrollOffset});
      let cacheExtent = this.calculateCacheOffset(this.constraints, {from: leadingScrollOffset, to: endScrollOffset});
      let targetEndScrollOffsetForPaint = this.constraints.scrollOffset + this.constraints.remainingPaintExtent;
      this.geometry = new sliver$.SliverGeometry.new({scrollExtent: estimatedMaxScrollOffset, paintExtent: paintExtent, cacheExtent: cacheExtent, maxPaintExtent: estimatedMaxScrollOffset, hasVisualOverflow: endScrollOffset > targetEndScrollOffsetForPaint || this.constraints.scrollOffset > 0});
      if (estimatedMaxScrollOffset === endScrollOffset) this.childManager.setDidUnderflow(true);
      this.childManager.didFinishLayout();
    }
  };
  (sliver_masonry_grid.RenderSliverMasonryGrid.new = function(opts) {
    let childManager = opts && 'childManager' in opts ? opts.childManager : null;
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : null;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : null;
    this[S._stride] = 0;
    this[S._getCrossAxisIndex] = dart.fn(index => index, T.intToint());
    this[S._previousCrossAxisIndexes] = T.JSArrayOfint().of([]);
    this[S._previousMainAxisExtents] = T.JSArrayOfdouble().of([]);
    this[S._lastFirstVisibleChildIndex] = 0;
    this[S._lastCrossAxisCount] = null;
    if (!(mainAxisSpacing >= 0)) dart.assertFailed(null, I[233], 42, 16, "mainAxisSpacing >= 0");
    if (!(crossAxisSpacing >= 0)) dart.assertFailed(null, I[233], 43, 16, "crossAxisSpacing >= 0");
    this[S._gridDelegate] = gridDelegate;
    this[S._mainAxisSpacing] = mainAxisSpacing;
    this[S._crossAxisSpacing] = crossAxisSpacing;
    sliver_masonry_grid.RenderSliverMasonryGrid.__proto__.new.call(this, {childManager: childManager});
    ;
  }).prototype = sliver_masonry_grid.RenderSliverMasonryGrid.prototype;
  dart.addTypeTests(sliver_masonry_grid.RenderSliverMasonryGrid);
  dart.addTypeCaches(sliver_masonry_grid.RenderSliverMasonryGrid);
  dart.setMethodSignature(sliver_masonry_grid.RenderSliverMasonryGrid, () => ({
    __proto__: dart.getMethods(sliver_masonry_grid.RenderSliverMasonryGrid.__proto__),
    [S._getParentData]: dart.fnType(sliver_masonry_grid.SliverMasonryGridParentData, [object.RenderObject]),
    [S._childCrossAxisIndex]: dart.fnType(dart.nullable(core.int), [box.RenderBox]),
    performLayout: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(sliver_masonry_grid.RenderSliverMasonryGrid, () => ({
    __proto__: dart.getGetters(sliver_masonry_grid.RenderSliverMasonryGrid.__proto__),
    gridDelegate: sliver_simple_grid_delegate.SliverSimpleGridDelegate,
    mainAxisSpacing: core.double,
    crossAxisSpacing: core.double
  }));
  dart.setSetterSignature(sliver_masonry_grid.RenderSliverMasonryGrid, () => ({
    __proto__: dart.getSetters(sliver_masonry_grid.RenderSliverMasonryGrid.__proto__),
    gridDelegate: sliver_simple_grid_delegate.SliverSimpleGridDelegate,
    mainAxisSpacing: core.double,
    crossAxisSpacing: core.double
  }));
  dart.setLibraryUri(sliver_masonry_grid.RenderSliverMasonryGrid, I[232]);
  dart.setFieldSignature(sliver_masonry_grid.RenderSliverMasonryGrid, () => ({
    __proto__: dart.getFields(sliver_masonry_grid.RenderSliverMasonryGrid.__proto__),
    [S._gridDelegate]: dart.fieldType(sliver_simple_grid_delegate.SliverSimpleGridDelegate),
    [S._mainAxisSpacing]: dart.fieldType(core.double),
    [S._crossAxisSpacing]: dart.fieldType(core.double),
    [S._stride]: dart.fieldType(core.double),
    [S._getCrossAxisIndex]: dart.fieldType(dart.fnType(core.int, [core.int])),
    [S._previousCrossAxisIndexes]: dart.finalFieldType(core.List$(core.int)),
    [S._previousMainAxisExtents]: dart.finalFieldType(core.List$(core.double)),
    [S._lastFirstVisibleChildIndex]: dart.fieldType(core.int),
    [S._lastCrossAxisCount]: dart.fieldType(dart.nullable(core.int))
  }));
  sliver_masonry_grid['_extension#0|applyZero'] = function _extension$350$124applyZero($this) {
    $this.layoutOffset = 0;
    $this.crossAxisIndex = 0;
  };
  sliver_masonry_grid['_extension#0|get#applyZero'] = function _extension$350$124get$35applyZero($this) {
    return dart.fn(() => sliver_masonry_grid['_extension#0|applyZero']($this), T$.VoidTovoid());
  };
  sliver_masonry_grid['_extension#0|apply'] = function _extension$350$124apply($this, parentData) {
    $this.layoutOffset = parentData.layoutOffset;
    $this.crossAxisIndex = parentData.crossAxisIndex;
  };
  sliver_masonry_grid['_extension#0|get#apply'] = function _extension$350$124get$35apply($this) {
    return dart.fn(parentData => sliver_masonry_grid['_extension#0|apply']($this, parentData), T.SliverMasonryGridParentDataTovoid());
  };
  sliver_simple_grid_delegate.SliverSimpleGridDelegate = class SliverSimpleGridDelegate extends core.Object {};
  (sliver_simple_grid_delegate.SliverSimpleGridDelegate.new = function() {
    ;
  }).prototype = sliver_simple_grid_delegate.SliverSimpleGridDelegate.prototype;
  dart.addTypeTests(sliver_simple_grid_delegate.SliverSimpleGridDelegate);
  dart.addTypeCaches(sliver_simple_grid_delegate.SliverSimpleGridDelegate);
  dart.setLibraryUri(sliver_simple_grid_delegate.SliverSimpleGridDelegate, I[234]);
  sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount = class SliverSimpleGridDelegateWithFixedCrossAxisCount extends sliver_simple_grid_delegate.SliverSimpleGridDelegate {
    get crossAxisCount() {
      return this[S.crossAxisCount$3];
    }
    set crossAxisCount(value) {
      super.crossAxisCount = value;
    }
    static ['_#new#tearOff'](opts) {
      let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
      return new sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount.new({crossAxisCount: crossAxisCount});
    }
    getCrossAxisCount(constraints, crossAxisSpacing) {
      return this.crossAxisCount;
    }
    shouldRelayout(oldDelegate) {
      sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount.as(oldDelegate);
      return oldDelegate.crossAxisCount !== this.crossAxisCount;
    }
  };
  (sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount.new = function(opts) {
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    this[S.crossAxisCount$3] = crossAxisCount;
    if (!(crossAxisCount > 0)) dart.assertFailed(null, I[235], 47, 15, "crossAxisCount > 0");
    sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount.__proto__.new.call(this);
    ;
  }).prototype = sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount.prototype;
  dart.addTypeTests(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount);
  dart.addTypeCaches(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount);
  dart.setMethodSignature(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount, () => ({
    __proto__: dart.getMethods(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount.__proto__),
    getCrossAxisCount: dart.fnType(core.int, [sliver$.SliverConstraints, core.double]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount, I[234]);
  dart.setFieldSignature(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount, () => ({
    __proto__: dart.getFields(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount.__proto__),
    crossAxisCount: dart.finalFieldType(core.int)
  }));
  sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent = class SliverSimpleGridDelegateWithMaxCrossAxisExtent extends sliver_simple_grid_delegate.SliverSimpleGridDelegate {
    get maxCrossAxisExtent() {
      return this[S.maxCrossAxisExtent$1];
    }
    set maxCrossAxisExtent(value) {
      super.maxCrossAxisExtent = value;
    }
    static ['_#new#tearOff'](opts) {
      let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
      return new sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent.new({maxCrossAxisExtent: maxCrossAxisExtent});
    }
    getCrossAxisCount(constraints, crossAxisSpacing) {
      return (constraints.crossAxisExtent / (this.maxCrossAxisExtent + crossAxisSpacing))[S.$ceil]();
    }
    shouldRelayout(oldDelegate) {
      sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent.as(oldDelegate);
      return oldDelegate.maxCrossAxisExtent !== this.maxCrossAxisExtent;
    }
  };
  (sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent.new = function(opts) {
    let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
    this[S.maxCrossAxisExtent$1] = maxCrossAxisExtent;
    if (!(maxCrossAxisExtent > 0)) dart.assertFailed(null, I[235], 99, 15, "maxCrossAxisExtent > 0");
    sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent.__proto__.new.call(this);
    ;
  }).prototype = sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent.prototype;
  dart.addTypeTests(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent);
  dart.addTypeCaches(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent);
  dart.setMethodSignature(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent, () => ({
    __proto__: dart.getMethods(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent.__proto__),
    getCrossAxisCount: dart.fnType(core.int, [sliver$.SliverConstraints, core.double]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent, I[234]);
  dart.setFieldSignature(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent, () => ({
    __proto__: dart.getFields(sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent.__proto__),
    maxCrossAxisExtent: dart.finalFieldType(core.double)
  }));
  aligned_grid_view.AlignedGridView = class AlignedGridView extends scroll_view.BoxScrollView {
    get gridDelegate() {
      return this[S.gridDelegate];
    }
    set gridDelegate(value) {
      super.gridDelegate = value;
    }
    get mainAxisSpacing() {
      return this[S.mainAxisSpacing$3];
    }
    set mainAxisSpacing(value) {
      super.mainAxisSpacing = value;
    }
    get crossAxisSpacing() {
      return this[S.crossAxisSpacing$3];
    }
    set crossAxisSpacing(value) {
      super.crossAxisSpacing = value;
    }
    get itemBuilder() {
      return this[S.itemBuilder];
    }
    set itemBuilder(value) {
      super.itemBuilder = value;
    }
    get itemCount() {
      return this[S.itemCount];
    }
    set itemCount(value) {
      super.itemCount = value;
    }
    get addAutomaticKeepAlives() {
      return this[S.addAutomaticKeepAlives];
    }
    set addAutomaticKeepAlives(value) {
      super.addAutomaticKeepAlives = value;
    }
    get addRepaintBoundaries() {
      return this[S.addRepaintBoundaries];
    }
    set addRepaintBoundaries(value) {
      super.addRepaintBoundaries = value;
    }
    static ['_#custom#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
      let reverse = opts && 'reverse' in opts ? opts.reverse : false;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
      let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
      let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
      let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
      let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
      return new aligned_grid_view.AlignedGridView.custom({key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, gridDelegate: gridDelegate, itemBuilder: itemBuilder, itemCount: itemCount, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    }
    static ['_#count#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
      let reverse = opts && 'reverse' in opts ? opts.reverse : false;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
      let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
      let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
      let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
      let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
      let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
      return new aligned_grid_view.AlignedGridView.count({key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, crossAxisCount: crossAxisCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, itemBuilder: itemBuilder, itemCount: itemCount, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    }
    static ['_#extent#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
      let reverse = opts && 'reverse' in opts ? opts.reverse : false;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
      let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
      let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
      let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
      let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
      let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
      return new aligned_grid_view.AlignedGridView.extent({key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, maxCrossAxisExtent: maxCrossAxisExtent, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, itemBuilder: itemBuilder, itemCount: itemCount, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    }
    buildChildLayout(context) {
      return new sliver_aligned_grid.SliverAlignedGrid.new({itemBuilder: this.itemBuilder, itemCount: this.itemCount, gridDelegate: this.gridDelegate, mainAxisSpacing: this.mainAxisSpacing, crossAxisSpacing: this.crossAxisSpacing, addAutomaticKeepAlives: this.addAutomaticKeepAlives, addRepaintBoundaries: this.addRepaintBoundaries});
    }
  };
  (aligned_grid_view.AlignedGridView.custom = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
    let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
    this[S.gridDelegate] = gridDelegate;
    this[S.itemBuilder] = itemBuilder;
    this[S.itemCount] = itemCount;
    this[S.addAutomaticKeepAlives] = addAutomaticKeepAlives;
    this[S.addRepaintBoundaries] = addRepaintBoundaries;
    this[S.mainAxisSpacing$3] = mainAxisSpacing;
    this[S.crossAxisSpacing$3] = crossAxisSpacing;
    aligned_grid_view.AlignedGridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    ;
  }).prototype = aligned_grid_view.AlignedGridView.prototype;
  (aligned_grid_view.AlignedGridView.count = function(opts) {
    let t321;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
    let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
    this[S.mainAxisSpacing$3] = mainAxisSpacing;
    this[S.crossAxisSpacing$3] = crossAxisSpacing;
    this[S.itemBuilder] = itemBuilder;
    this[S.itemCount] = itemCount;
    this[S.addAutomaticKeepAlives] = addAutomaticKeepAlives;
    this[S.addRepaintBoundaries] = addRepaintBoundaries;
    this[S.gridDelegate] = new sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount.new({crossAxisCount: crossAxisCount});
    aligned_grid_view.AlignedGridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: (t321 = semanticChildCount, t321 == null ? itemCount : t321), dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    ;
  }).prototype = aligned_grid_view.AlignedGridView.prototype;
  (aligned_grid_view.AlignedGridView.extent = function(opts) {
    let t321;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
    let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
    this[S.mainAxisSpacing$3] = mainAxisSpacing;
    this[S.crossAxisSpacing$3] = crossAxisSpacing;
    this[S.itemBuilder] = itemBuilder;
    this[S.itemCount] = itemCount;
    this[S.addAutomaticKeepAlives] = addAutomaticKeepAlives;
    this[S.addRepaintBoundaries] = addRepaintBoundaries;
    this[S.gridDelegate] = new sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent.new({maxCrossAxisExtent: maxCrossAxisExtent});
    aligned_grid_view.AlignedGridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: (t321 = semanticChildCount, t321 == null ? itemCount : t321), dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    ;
  }).prototype = aligned_grid_view.AlignedGridView.prototype;
  dart.addTypeTests(aligned_grid_view.AlignedGridView);
  dart.addTypeCaches(aligned_grid_view.AlignedGridView);
  dart.setMethodSignature(aligned_grid_view.AlignedGridView, () => ({
    __proto__: dart.getMethods(aligned_grid_view.AlignedGridView.__proto__),
    buildChildLayout: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(aligned_grid_view.AlignedGridView, I[236]);
  dart.setFieldSignature(aligned_grid_view.AlignedGridView, () => ({
    __proto__: dart.getFields(aligned_grid_view.AlignedGridView.__proto__),
    gridDelegate: dart.finalFieldType(sliver_simple_grid_delegate.SliverSimpleGridDelegate),
    mainAxisSpacing: dart.finalFieldType(core.double),
    crossAxisSpacing: dart.finalFieldType(core.double),
    itemBuilder: dart.finalFieldType(dart.fnType(dart.nullable(framework.Widget), [framework.BuildContext, core.int])),
    itemCount: dart.finalFieldType(dart.nullable(core.int)),
    addAutomaticKeepAlives: dart.finalFieldType(core.bool),
    addRepaintBoundaries: dart.finalFieldType(core.bool)
  }));
  masonry_grid_view.MasonryGridView = class MasonryGridView extends scroll_view.BoxScrollView {
    get gridDelegate() {
      return this[S.gridDelegate$1];
    }
    set gridDelegate(value) {
      super.gridDelegate = value;
    }
    get mainAxisSpacing() {
      return this[S.mainAxisSpacing$4];
    }
    set mainAxisSpacing(value) {
      super.mainAxisSpacing = value;
    }
    get crossAxisSpacing() {
      return this[S.crossAxisSpacing$4];
    }
    set crossAxisSpacing(value) {
      super.crossAxisSpacing = value;
    }
    get childrenDelegate() {
      return this[S.childrenDelegate];
    }
    set childrenDelegate(value) {
      super.childrenDelegate = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
      let reverse = opts && 'reverse' in opts ? opts.reverse : false;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
      let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
      let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
      let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
      let children = opts && 'children' in opts ? opts.children : C[415] || CT.C415;
      let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
      let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      return new masonry_grid_view.MasonryGridView.new({key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, gridDelegate: gridDelegate, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes, cacheExtent: cacheExtent, children: children, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, clipBehavior: clipBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId});
    }
    static ['_#builder#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
      let reverse = opts && 'reverse' in opts ? opts.reverse : false;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
      let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
      let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
      let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
      let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
      let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
      return new masonry_grid_view.MasonryGridView.builder({key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, gridDelegate: gridDelegate, itemBuilder: itemBuilder, itemCount: itemCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    }
    static ['_#custom#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
      let reverse = opts && 'reverse' in opts ? opts.reverse : false;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
      let childrenDelegate = opts && 'childrenDelegate' in opts ? opts.childrenDelegate : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
      let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
      let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
      return new masonry_grid_view.MasonryGridView.custom({key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, gridDelegate: gridDelegate, childrenDelegate: childrenDelegate, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    }
    static ['_#count#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
      let reverse = opts && 'reverse' in opts ? opts.reverse : false;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
      let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
      let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
      let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
      let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
      let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
      let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
      return new masonry_grid_view.MasonryGridView.count({key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, crossAxisCount: crossAxisCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, itemBuilder: itemBuilder, itemCount: itemCount, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    }
    static ['_#extent#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
      let reverse = opts && 'reverse' in opts ? opts.reverse : false;
      let controller = opts && 'controller' in opts ? opts.controller : null;
      let primary = opts && 'primary' in opts ? opts.primary : null;
      let physics = opts && 'physics' in opts ? opts.physics : null;
      let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
      let padding = opts && 'padding' in opts ? opts.padding : null;
      let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
      let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
      let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
      let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
      let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
      let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
      let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
      let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
      let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
      let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
      return new masonry_grid_view.MasonryGridView.extent({key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, maxCrossAxisExtent: maxCrossAxisExtent, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, itemBuilder: itemBuilder, itemCount: itemCount, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    }
    buildChildLayout(context) {
      return new sliver_masonry_grid$.SliverMasonryGrid.new({delegate: this.childrenDelegate, gridDelegate: this.gridDelegate, mainAxisSpacing: this.mainAxisSpacing, crossAxisSpacing: this.crossAxisSpacing});
    }
  };
  (masonry_grid_view.MasonryGridView.new = function(opts) {
    let t321;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let children = opts && 'children' in opts ? opts.children : C[415] || CT.C415;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
    let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    this[S.gridDelegate$1] = gridDelegate;
    this[S.mainAxisSpacing$4] = mainAxisSpacing;
    this[S.crossAxisSpacing$4] = crossAxisSpacing;
    this[S.childrenDelegate] = new sliver.SliverChildListDelegate.new(children, {addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes});
    masonry_grid_view.MasonryGridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: (t321 = semanticChildCount, t321 == null ? children[S$.$length] : t321), dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    ;
  }).prototype = masonry_grid_view.MasonryGridView.prototype;
  (masonry_grid_view.MasonryGridView.builder = function(opts) {
    let t321;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
    let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
    this[S.gridDelegate$1] = gridDelegate;
    this[S.mainAxisSpacing$4] = mainAxisSpacing;
    this[S.crossAxisSpacing$4] = crossAxisSpacing;
    this[S.childrenDelegate] = new sliver.SliverChildBuilderDelegate.new(itemBuilder, {childCount: itemCount, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes});
    masonry_grid_view.MasonryGridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: (t321 = semanticChildCount, t321 == null ? itemCount : t321), dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    ;
  }).prototype = masonry_grid_view.MasonryGridView.prototype;
  (masonry_grid_view.MasonryGridView.custom = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    let childrenDelegate = opts && 'childrenDelegate' in opts ? opts.childrenDelegate : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
    let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
    this[S.gridDelegate$1] = gridDelegate;
    this[S.childrenDelegate] = childrenDelegate;
    this[S.mainAxisSpacing$4] = mainAxisSpacing;
    this[S.crossAxisSpacing$4] = crossAxisSpacing;
    masonry_grid_view.MasonryGridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: semanticChildCount, dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    ;
  }).prototype = masonry_grid_view.MasonryGridView.prototype;
  (masonry_grid_view.MasonryGridView.count = function(opts) {
    let t321;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
    let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
    this[S.mainAxisSpacing$4] = mainAxisSpacing;
    this[S.crossAxisSpacing$4] = crossAxisSpacing;
    this[S.gridDelegate$1] = new sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount.new({crossAxisCount: crossAxisCount});
    this[S.childrenDelegate] = new sliver.SliverChildBuilderDelegate.new(itemBuilder, {childCount: itemCount, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes});
    masonry_grid_view.MasonryGridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: (t321 = semanticChildCount, t321 == null ? itemCount : t321), dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    ;
  }).prototype = masonry_grid_view.MasonryGridView.prototype;
  (masonry_grid_view.MasonryGridView.extent = function(opts) {
    let t321;
    let key = opts && 'key' in opts ? opts.key : null;
    let scrollDirection = opts && 'scrollDirection' in opts ? opts.scrollDirection : C[411] || CT.C411;
    let reverse = opts && 'reverse' in opts ? opts.reverse : false;
    let controller = opts && 'controller' in opts ? opts.controller : null;
    let primary = opts && 'primary' in opts ? opts.primary : null;
    let physics = opts && 'physics' in opts ? opts.physics : null;
    let shrinkWrap = opts && 'shrinkWrap' in opts ? opts.shrinkWrap : false;
    let padding = opts && 'padding' in opts ? opts.padding : null;
    let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    let addSemanticIndexes = opts && 'addSemanticIndexes' in opts ? opts.addSemanticIndexes : true;
    let cacheExtent = opts && 'cacheExtent' in opts ? opts.cacheExtent : null;
    let semanticChildCount = opts && 'semanticChildCount' in opts ? opts.semanticChildCount : null;
    let dragStartBehavior = opts && 'dragStartBehavior' in opts ? opts.dragStartBehavior : C[412] || CT.C412;
    let keyboardDismissBehavior = opts && 'keyboardDismissBehavior' in opts ? opts.keyboardDismissBehavior : C[413] || CT.C413;
    let restorationId = opts && 'restorationId' in opts ? opts.restorationId : null;
    let clipBehavior = opts && 'clipBehavior' in opts ? opts.clipBehavior : C[414] || CT.C414;
    this[S.mainAxisSpacing$4] = mainAxisSpacing;
    this[S.crossAxisSpacing$4] = crossAxisSpacing;
    this[S.gridDelegate$1] = new sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent.new({maxCrossAxisExtent: maxCrossAxisExtent});
    this[S.childrenDelegate] = new sliver.SliverChildBuilderDelegate.new(itemBuilder, {childCount: itemCount, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries, addSemanticIndexes: addSemanticIndexes});
    masonry_grid_view.MasonryGridView.__proto__.new.call(this, {key: key, scrollDirection: scrollDirection, reverse: reverse, controller: controller, primary: primary, physics: physics, shrinkWrap: shrinkWrap, padding: padding, cacheExtent: cacheExtent, semanticChildCount: (t321 = semanticChildCount, t321 == null ? itemCount : t321), dragStartBehavior: dragStartBehavior, keyboardDismissBehavior: keyboardDismissBehavior, restorationId: restorationId, clipBehavior: clipBehavior});
    ;
  }).prototype = masonry_grid_view.MasonryGridView.prototype;
  dart.addTypeTests(masonry_grid_view.MasonryGridView);
  dart.addTypeCaches(masonry_grid_view.MasonryGridView);
  dart.setMethodSignature(masonry_grid_view.MasonryGridView, () => ({
    __proto__: dart.getMethods(masonry_grid_view.MasonryGridView.__proto__),
    buildChildLayout: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(masonry_grid_view.MasonryGridView, I[237]);
  dart.setFieldSignature(masonry_grid_view.MasonryGridView, () => ({
    __proto__: dart.getFields(masonry_grid_view.MasonryGridView.__proto__),
    gridDelegate: dart.finalFieldType(sliver_simple_grid_delegate.SliverSimpleGridDelegate),
    mainAxisSpacing: dart.finalFieldType(core.double),
    crossAxisSpacing: dart.finalFieldType(core.double),
    childrenDelegate: dart.finalFieldType(sliver.SliverChildDelegate)
  }));
  sliver_aligned_grid.SliverAlignedGrid = class SliverAlignedGrid extends framework.StatelessWidget {
    get mainAxisSpacing() {
      return this[S.mainAxisSpacing$5];
    }
    set mainAxisSpacing(value) {
      super.mainAxisSpacing = value;
    }
    get crossAxisSpacing() {
      return this[S.crossAxisSpacing$5];
    }
    set crossAxisSpacing(value) {
      super.crossAxisSpacing = value;
    }
    get gridDelegate() {
      return this[S.gridDelegate$2];
    }
    set gridDelegate(value) {
      super.gridDelegate = value;
    }
    get itemBuilder() {
      return this[S.itemBuilder$1];
    }
    set itemBuilder(value) {
      super.itemBuilder = value;
    }
    get itemCount() {
      return this[S.itemCount$1];
    }
    set itemCount(value) {
      super.itemCount = value;
    }
    get addAutomaticKeepAlives() {
      return this[S.addAutomaticKeepAlives$1];
    }
    set addAutomaticKeepAlives(value) {
      super.addAutomaticKeepAlives = value;
    }
    get addRepaintBoundaries() {
      return this[S.addRepaintBoundaries$1];
    }
    set addRepaintBoundaries(value) {
      super.addRepaintBoundaries = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
      let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
      let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
      return new sliver_aligned_grid.SliverAlignedGrid.new({key: key, itemBuilder: itemBuilder, itemCount: itemCount, gridDelegate: gridDelegate, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries});
    }
    static ['_#count#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
      let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
      let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
      return new sliver_aligned_grid.SliverAlignedGrid.count({key: key, itemBuilder: itemBuilder, itemCount: itemCount, crossAxisCount: crossAxisCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries});
    }
    static ['_#extent#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
      let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
      let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
      return new sliver_aligned_grid.SliverAlignedGrid.extent({key: key, itemBuilder: itemBuilder, itemCount: itemCount, maxCrossAxisExtent: maxCrossAxisExtent, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries});
    }
    build(context) {
      let localItemCount = this.itemCount;
      return new sliver_layout_builder.SliverLayoutBuilder.new({builder: dart.fn((context, constraints) => {
          let crossAxisCount = this.gridDelegate.getCrossAxisCount(constraints, this.crossAxisSpacing);
          let listItemCount = localItemCount == null ? null : ((dart.notNull(localItemCount) + crossAxisCount - 1) / crossAxisCount)[S$0.$truncate]() * 2 - 1;
          return new sliver.SliverList.new({delegate: new sliver.SliverChildBuilderDelegate.new(dart.fn((context, index) => {
              if (index[S$0.$isOdd]) {
                return new sliver_aligned_grid._Gap.new({mainAxisExtent: this.mainAxisSpacing});
              }
              let startIndex = (index / 2)[S$0.$truncate]() * crossAxisCount;
              let children = (() => {
                let t321 = T.JSArrayOfWidgetN().of([]);
                for (let i = 0; i < crossAxisCount; i = i + 1)
                  t321.push(this[S._buildItem](context, startIndex + i, this.itemCount));
                return t321;
              })()[S$.$whereType](framework.Widget);
              if (children[S$.$isEmpty]) {
                return null;
              }
              return new uniform_track.UniformTrack.new({direction: constraints.crossAxisDirection, division: crossAxisCount, spacing: this.crossAxisSpacing, children: (() => {
                  let t322 = T.ListOfWidget().of(children);
                  return t322;
                })()});
            }, T.BuildContextAndintToWidgetN()), {childCount: listItemCount})});
        }, T.BuildContextAndSliverConstraintsToSliverList())});
    }
    [S._buildItem](context, index, childCount) {
      let t324, t323;
      if (index < 0 || childCount != null && index >= dart.notNull(childCount)) {
        return null;
      }
      t323 = context;
      t324 = index;
      return this.itemBuilder(t323, t324);
    }
  };
  (sliver_aligned_grid.SliverAlignedGrid.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    this[S.itemBuilder$1] = itemBuilder;
    this[S.itemCount$1] = itemCount;
    this[S.gridDelegate$2] = gridDelegate;
    this[S.mainAxisSpacing$5] = mainAxisSpacing;
    this[S.crossAxisSpacing$5] = crossAxisSpacing;
    this[S.addAutomaticKeepAlives$1] = addAutomaticKeepAlives;
    this[S.addRepaintBoundaries$1] = addRepaintBoundaries;
    sliver_aligned_grid.SliverAlignedGrid.__proto__.new.call(this, {key: key});
    ;
  }).prototype = sliver_aligned_grid.SliverAlignedGrid.prototype;
  (sliver_aligned_grid.SliverAlignedGrid.count = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    sliver_aligned_grid.SliverAlignedGrid.new.call(this, {key: key, itemBuilder: itemBuilder, itemCount: itemCount, gridDelegate: new sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount.new({crossAxisCount: crossAxisCount}), mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries});
  }).prototype = sliver_aligned_grid.SliverAlignedGrid.prototype;
  (sliver_aligned_grid.SliverAlignedGrid.extent = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let itemCount = opts && 'itemCount' in opts ? opts.itemCount : null;
    let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let addAutomaticKeepAlives = opts && 'addAutomaticKeepAlives' in opts ? opts.addAutomaticKeepAlives : true;
    let addRepaintBoundaries = opts && 'addRepaintBoundaries' in opts ? opts.addRepaintBoundaries : true;
    sliver_aligned_grid.SliverAlignedGrid.new.call(this, {key: key, itemBuilder: itemBuilder, itemCount: itemCount, gridDelegate: new sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent.new({maxCrossAxisExtent: maxCrossAxisExtent}), mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, addAutomaticKeepAlives: addAutomaticKeepAlives, addRepaintBoundaries: addRepaintBoundaries});
  }).prototype = sliver_aligned_grid.SliverAlignedGrid.prototype;
  dart.addTypeTests(sliver_aligned_grid.SliverAlignedGrid);
  dart.addTypeCaches(sliver_aligned_grid.SliverAlignedGrid);
  dart.setMethodSignature(sliver_aligned_grid.SliverAlignedGrid, () => ({
    __proto__: dart.getMethods(sliver_aligned_grid.SliverAlignedGrid.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [S._buildItem]: dart.fnType(dart.nullable(framework.Widget), [framework.BuildContext, core.int, dart.nullable(core.int)])
  }));
  dart.setLibraryUri(sliver_aligned_grid.SliverAlignedGrid, I[238]);
  dart.setFieldSignature(sliver_aligned_grid.SliverAlignedGrid, () => ({
    __proto__: dart.getFields(sliver_aligned_grid.SliverAlignedGrid.__proto__),
    mainAxisSpacing: dart.finalFieldType(core.double),
    crossAxisSpacing: dart.finalFieldType(core.double),
    gridDelegate: dart.finalFieldType(sliver_simple_grid_delegate.SliverSimpleGridDelegate),
    itemBuilder: dart.finalFieldType(dart.fnType(dart.nullable(framework.Widget), [framework.BuildContext, core.int])),
    itemCount: dart.finalFieldType(dart.nullable(core.int)),
    addAutomaticKeepAlives: dart.finalFieldType(core.bool),
    addRepaintBoundaries: dart.finalFieldType(core.bool)
  }));
  sliver_aligned_grid._Gap = class _Gap extends framework.StatelessWidget {
    get mainAxisExtent() {
      return this[S.mainAxisExtent];
    }
    set mainAxisExtent(value) {
      super.mainAxisExtent = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let mainAxisExtent = opts && 'mainAxisExtent' in opts ? opts.mainAxisExtent : null;
      return new sliver_aligned_grid._Gap.new({key: key, mainAxisExtent: mainAxisExtent});
    }
    build(context) {
      let axis = basic_types.axisDirectionToAxis(scrollable.Scrollable.of(context).axisDirection);
      return axis === basic_types.Axis.vertical ? new basic.SizedBox.new({height: this.mainAxisExtent}) : new basic.SizedBox.new({width: this.mainAxisExtent});
    }
  };
  (sliver_aligned_grid._Gap.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let mainAxisExtent = opts && 'mainAxisExtent' in opts ? opts.mainAxisExtent : null;
    this[S.mainAxisExtent] = mainAxisExtent;
    sliver_aligned_grid._Gap.__proto__.new.call(this, {key: key});
    ;
  }).prototype = sliver_aligned_grid._Gap.prototype;
  dart.addTypeTests(sliver_aligned_grid._Gap);
  dart.addTypeCaches(sliver_aligned_grid._Gap);
  dart.setMethodSignature(sliver_aligned_grid._Gap, () => ({
    __proto__: dart.getMethods(sliver_aligned_grid._Gap.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_aligned_grid._Gap, I[238]);
  dart.setFieldSignature(sliver_aligned_grid._Gap, () => ({
    __proto__: dart.getFields(sliver_aligned_grid._Gap.__proto__),
    mainAxisExtent: dart.finalFieldType(core.double)
  }));
  sliver_masonry_grid$.SliverMasonryGrid = class SliverMasonryGrid extends sliver.SliverMultiBoxAdaptorWidget {
    get gridDelegate() {
      return this[S.gridDelegate$3];
    }
    set gridDelegate(value) {
      super.gridDelegate = value;
    }
    get mainAxisSpacing() {
      return this[S.mainAxisSpacing$6];
    }
    set mainAxisSpacing(value) {
      super.mainAxisSpacing = value;
    }
    get crossAxisSpacing() {
      return this[S.crossAxisSpacing$6];
    }
    set crossAxisSpacing(value) {
      super.crossAxisSpacing = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      return new sliver_masonry_grid$.SliverMasonryGrid.new({key: key, delegate: delegate, gridDelegate: gridDelegate, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing});
    }
    static ['_#count#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let childCount = opts && 'childCount' in opts ? opts.childCount : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      return new sliver_masonry_grid$.SliverMasonryGrid.count({key: key, crossAxisCount: crossAxisCount, itemBuilder: itemBuilder, childCount: childCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing});
    }
    static ['_#extent#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
      let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
      let childCount = opts && 'childCount' in opts ? opts.childCount : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      return new sliver_masonry_grid$.SliverMasonryGrid.extent({key: key, maxCrossAxisExtent: maxCrossAxisExtent, itemBuilder: itemBuilder, childCount: childCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing});
    }
    createRenderObject(context) {
      let element = sliver.SliverMultiBoxAdaptorElement.as(context);
      return new sliver_masonry_grid.RenderSliverMasonryGrid.new({childManager: element, gridDelegate: this.gridDelegate, mainAxisSpacing: this.mainAxisSpacing, crossAxisSpacing: this.crossAxisSpacing});
    }
    updateRenderObject(context, renderObject) {
      let t323;
      sliver_masonry_grid.RenderSliverMasonryGrid.as(renderObject);
      t323 = renderObject;
      (() => {
        t323.gridDelegate = this.gridDelegate;
        t323.mainAxisSpacing = this.mainAxisSpacing;
        t323.crossAxisSpacing = this.crossAxisSpacing;
        return t323;
      })();
    }
  };
  (sliver_masonry_grid$.SliverMasonryGrid.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let gridDelegate = opts && 'gridDelegate' in opts ? opts.gridDelegate : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    this[S.gridDelegate$3] = gridDelegate;
    this[S.mainAxisSpacing$6] = mainAxisSpacing;
    this[S.crossAxisSpacing$6] = crossAxisSpacing;
    if (!(mainAxisSpacing >= 0)) dart.assertFailed(null, I[239], 26, 16, "mainAxisSpacing >= 0");
    if (!(crossAxisSpacing >= 0)) dart.assertFailed(null, I[239], 27, 16, "crossAxisSpacing >= 0");
    sliver_masonry_grid$.SliverMasonryGrid.__proto__.new.call(this, {key: key, delegate: delegate});
    ;
  }).prototype = sliver_masonry_grid$.SliverMasonryGrid.prototype;
  (sliver_masonry_grid$.SliverMasonryGrid.count = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let childCount = opts && 'childCount' in opts ? opts.childCount : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    sliver_masonry_grid$.SliverMasonryGrid.new.call(this, {key: key, delegate: new sliver.SliverChildBuilderDelegate.new(itemBuilder, {childCount: childCount}), gridDelegate: new sliver_simple_grid_delegate.SliverSimpleGridDelegateWithFixedCrossAxisCount.new({crossAxisCount: crossAxisCount}), mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing});
  }).prototype = sliver_masonry_grid$.SliverMasonryGrid.prototype;
  (sliver_masonry_grid$.SliverMasonryGrid.extent = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
    let itemBuilder = opts && 'itemBuilder' in opts ? opts.itemBuilder : null;
    let childCount = opts && 'childCount' in opts ? opts.childCount : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    sliver_masonry_grid$.SliverMasonryGrid.new.call(this, {key: key, delegate: new sliver.SliverChildBuilderDelegate.new(itemBuilder, {childCount: childCount}), gridDelegate: new sliver_simple_grid_delegate.SliverSimpleGridDelegateWithMaxCrossAxisExtent.new({maxCrossAxisExtent: maxCrossAxisExtent}), mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing});
  }).prototype = sliver_masonry_grid$.SliverMasonryGrid.prototype;
  dart.addTypeTests(sliver_masonry_grid$.SliverMasonryGrid);
  dart.addTypeCaches(sliver_masonry_grid$.SliverMasonryGrid);
  dart.setMethodSignature(sliver_masonry_grid$.SliverMasonryGrid, () => ({
    __proto__: dart.getMethods(sliver_masonry_grid$.SliverMasonryGrid.__proto__),
    createRenderObject: dart.fnType(sliver_masonry_grid.RenderSliverMasonryGrid, [framework.BuildContext])
  }));
  dart.setLibraryUri(sliver_masonry_grid$.SliverMasonryGrid, I[240]);
  dart.setFieldSignature(sliver_masonry_grid$.SliverMasonryGrid, () => ({
    __proto__: dart.getFields(sliver_masonry_grid$.SliverMasonryGrid.__proto__),
    gridDelegate: dart.finalFieldType(sliver_simple_grid_delegate.SliverSimpleGridDelegate),
    mainAxisSpacing: dart.finalFieldType(core.double),
    crossAxisSpacing: dart.finalFieldType(core.double)
  }));
  staggered_grid.StaggeredGrid = class StaggeredGrid extends framework.MultiChildRenderObjectWidget {
    get delegate() {
      return this[S.delegate];
    }
    set delegate(value) {
      super.delegate = value;
    }
    get mainAxisSpacing() {
      return this[S.mainAxisSpacing$7];
    }
    set mainAxisSpacing(value) {
      super.mainAxisSpacing = value;
    }
    get crossAxisSpacing() {
      return this[S.crossAxisSpacing$7];
    }
    set crossAxisSpacing(value) {
      super.crossAxisSpacing = value;
    }
    get axisDirection() {
      return this[S.axisDirection];
    }
    set axisDirection(value) {
      super.axisDirection = value;
    }
    static ['_#custom#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
      let children = opts && 'children' in opts ? opts.children : C[415] || CT.C415;
      return new staggered_grid.StaggeredGrid.custom({key: key, delegate: delegate, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, axisDirection: axisDirection, children: children});
    }
    static ['_#count#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
      let children = opts && 'children' in opts ? opts.children : C[415] || CT.C415;
      return new staggered_grid.StaggeredGrid.count({key: key, crossAxisCount: crossAxisCount, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, axisDirection: axisDirection, children: children});
    }
    static ['_#extent#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
      let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
      let children = opts && 'children' in opts ? opts.children : C[415] || CT.C415;
      return new staggered_grid.StaggeredGrid.extent({key: key, maxCrossAxisExtent: maxCrossAxisExtent, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, axisDirection: axisDirection, children: children});
    }
    createRenderObject(context) {
      let t324, t323, t323$;
      return new staggered_grid$.RenderStaggeredGrid.new({delegate: this.delegate, mainAxisSpacing: this.mainAxisSpacing, crossAxisSpacing: this.crossAxisSpacing, axisDirection: (t323$ = (t323 = this.axisDirection, t323 == null ? (t324 = scrollable.Scrollable.maybeOf(context), t324 == null ? null : t324.axisDirection) : t323), t323$ == null ? basic_types.AxisDirection.down : t323$), textDirection: basic.Directionality.of(context)});
    }
    updateRenderObject(context, renderObject) {
      let t325, t324, t324$, t323;
      staggered_grid$.RenderStaggeredGrid.as(renderObject);
      t323 = renderObject;
      (() => {
        t323.delegate = this.delegate;
        t323.mainAxisSpacing = this.mainAxisSpacing;
        t323.crossAxisSpacing = this.crossAxisSpacing;
        t323.axisDirection = (t324$ = (t324 = this.axisDirection, t324 == null ? (t325 = scrollable.Scrollable.maybeOf(context), t325 == null ? null : t325.axisDirection) : t324), t324$ == null ? basic_types.AxisDirection.down : t324$);
        t323.textDirection = basic.Directionality.of(context);
        return t323;
      })();
    }
  };
  (staggered_grid.StaggeredGrid.custom = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    let children = opts && 'children' in opts ? opts.children : C[415] || CT.C415;
    this[S.delegate] = delegate;
    this[S.mainAxisSpacing$7] = mainAxisSpacing;
    this[S.crossAxisSpacing$7] = crossAxisSpacing;
    this[S.axisDirection] = axisDirection;
    if (!(mainAxisSpacing >= 0)) dart.assertFailed(null, I[241], 18, 16, "mainAxisSpacing >= 0");
    if (!(crossAxisSpacing >= 0)) dart.assertFailed(null, I[241], 19, 16, "crossAxisSpacing >= 0");
    staggered_grid.StaggeredGrid.__proto__.new.call(this, {key: key, children: children});
    ;
  }).prototype = staggered_grid.StaggeredGrid.prototype;
  (staggered_grid.StaggeredGrid.count = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    let children = opts && 'children' in opts ? opts.children : C[415] || CT.C415;
    staggered_grid.StaggeredGrid.custom.call(this, {key: key, delegate: new staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount.new({crossAxisCount: crossAxisCount}), mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, axisDirection: axisDirection, children: children});
  }).prototype = staggered_grid.StaggeredGrid.prototype;
  (staggered_grid.StaggeredGrid.extent = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : 0;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : 0;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    let children = opts && 'children' in opts ? opts.children : C[415] || CT.C415;
    staggered_grid.StaggeredGrid.custom.call(this, {key: key, delegate: new staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent.new({maxCrossAxisExtent: maxCrossAxisExtent}), mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, axisDirection: axisDirection, children: children});
  }).prototype = staggered_grid.StaggeredGrid.prototype;
  dart.addTypeTests(staggered_grid.StaggeredGrid);
  dart.addTypeCaches(staggered_grid.StaggeredGrid);
  dart.setMethodSignature(staggered_grid.StaggeredGrid, () => ({
    __proto__: dart.getMethods(staggered_grid.StaggeredGrid.__proto__),
    createRenderObject: dart.fnType(staggered_grid$.RenderStaggeredGrid, [framework.BuildContext])
  }));
  dart.setLibraryUri(staggered_grid.StaggeredGrid, I[242]);
  dart.setFieldSignature(staggered_grid.StaggeredGrid, () => ({
    __proto__: dart.getFields(staggered_grid.StaggeredGrid.__proto__),
    delegate: dart.finalFieldType(staggered_grid$.StaggeredGridDelegate),
    mainAxisSpacing: dart.finalFieldType(core.double),
    crossAxisSpacing: dart.finalFieldType(core.double),
    axisDirection: dart.finalFieldType(dart.nullable(basic_types.AxisDirection))
  }));
  staggered_grid$.StaggeredGridParentData = class StaggeredGridParentData extends box.ContainerBoxParentData$(box.RenderBox) {
    get crossAxisCellCount() {
      return this[S.crossAxisCellCount$1];
    }
    set crossAxisCellCount(value) {
      this[S.crossAxisCellCount$1] = value;
    }
    get mainAxisCellCount() {
      return this[S.mainAxisCellCount$2];
    }
    set mainAxisCellCount(value) {
      this[S.mainAxisCellCount$2] = value;
    }
    get mainAxisExtent() {
      return this[S.mainAxisExtent$2];
    }
    set mainAxisExtent(value) {
      this[S.mainAxisExtent$2] = value;
    }
    toString() {
      return "crossAxisCellCount=" + dart.str(this.crossAxisCellCount) + "; mainAxisCellCount=" + dart.str(this.mainAxisCellCount) + "; mainAxisExtent=" + dart.str(this.mainAxisExtent);
    }
    static ['_#new#tearOff']() {
      return new staggered_grid$.StaggeredGridParentData.new();
    }
  };
  (staggered_grid$.StaggeredGridParentData.new = function() {
    this[S.crossAxisCellCount$1] = null;
    this[S.mainAxisCellCount$2] = null;
    this[S.mainAxisExtent$2] = null;
    this[S._realMainAxisExtent] = null;
    staggered_grid$.StaggeredGridParentData.__proto__.new.call(this);
    ;
  }).prototype = staggered_grid$.StaggeredGridParentData.prototype;
  dart.addTypeTests(staggered_grid$.StaggeredGridParentData);
  dart.addTypeCaches(staggered_grid$.StaggeredGridParentData);
  dart.setLibraryUri(staggered_grid$.StaggeredGridParentData, I[244]);
  dart.setFieldSignature(staggered_grid$.StaggeredGridParentData, () => ({
    __proto__: dart.getFields(staggered_grid$.StaggeredGridParentData.__proto__),
    crossAxisCellCount: dart.fieldType(dart.nullable(core.int)),
    mainAxisCellCount: dart.fieldType(dart.nullable(core.num)),
    mainAxisExtent: dart.fieldType(dart.nullable(core.double)),
    [S._realMainAxisExtent]: dart.fieldType(dart.nullable(core.double))
  }));
  dart.defineExtensionMethods(staggered_grid$.StaggeredGridParentData, ['toString']);
  staggered_grid_tile.StaggeredGridTile = class StaggeredGridTile extends framework.ParentDataWidget$(staggered_grid$.StaggeredGridParentData) {
    get crossAxisCellCount() {
      return this[S.crossAxisCellCount];
    }
    set crossAxisCellCount(value) {
      super.crossAxisCellCount = value;
    }
    get mainAxisCellCount() {
      return this[S.mainAxisCellCount$1];
    }
    set mainAxisCellCount(value) {
      super.mainAxisCellCount = value;
    }
    get mainAxisExtent() {
      return this[S.mainAxisExtent$1];
    }
    set mainAxisExtent(value) {
      super.mainAxisExtent = value;
    }
    static ['_#_#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let crossAxisCellCount = opts && 'crossAxisCellCount' in opts ? opts.crossAxisCellCount : null;
      let mainAxisCellCount = opts && 'mainAxisCellCount' in opts ? opts.mainAxisCellCount : null;
      let mainAxisExtent = opts && 'mainAxisExtent' in opts ? opts.mainAxisExtent : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new staggered_grid_tile.StaggeredGridTile.__({key: key, crossAxisCellCount: crossAxisCellCount, mainAxisCellCount: mainAxisCellCount, mainAxisExtent: mainAxisExtent, child: child});
    }
    static ['_#count#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let crossAxisCellCount = opts && 'crossAxisCellCount' in opts ? opts.crossAxisCellCount : null;
      let mainAxisCellCount = opts && 'mainAxisCellCount' in opts ? opts.mainAxisCellCount : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new staggered_grid_tile.StaggeredGridTile.count({key: key, crossAxisCellCount: crossAxisCellCount, mainAxisCellCount: mainAxisCellCount, child: child});
    }
    static ['_#extent#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let crossAxisCellCount = opts && 'crossAxisCellCount' in opts ? opts.crossAxisCellCount : null;
      let mainAxisExtent = opts && 'mainAxisExtent' in opts ? opts.mainAxisExtent : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new staggered_grid_tile.StaggeredGridTile.extent({key: key, crossAxisCellCount: crossAxisCellCount, mainAxisExtent: mainAxisExtent, child: child});
    }
    static ['_#fit#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let crossAxisCellCount = opts && 'crossAxisCellCount' in opts ? opts.crossAxisCellCount : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new staggered_grid_tile.StaggeredGridTile.fit({key: key, crossAxisCellCount: crossAxisCellCount, child: child});
    }
    applyParentData(renderObject) {
      let parentData = renderObject.parentData;
      if (staggered_grid$.StaggeredGridParentData.is(parentData)) {
        let needsLayout = false;
        if (parentData.crossAxisCellCount !== this.crossAxisCellCount) {
          parentData.crossAxisCellCount = this.crossAxisCellCount;
          needsLayout = true;
        }
        if (parentData.mainAxisCellCount != this.mainAxisCellCount) {
          parentData.mainAxisCellCount = this.mainAxisCellCount;
          needsLayout = true;
        }
        if (parentData.mainAxisExtent != this.mainAxisExtent) {
          parentData.mainAxisExtent = this.mainAxisExtent;
          needsLayout = true;
        }
        if (needsLayout) {
          let targetParent = renderObject.parent;
          if (staggered_grid$.RenderStaggeredGrid.is(targetParent)) {
            targetParent.markNeedsLayout();
          }
        }
      }
    }
    get debugTypicalAncestorWidgetClass() {
      return dart.wrapType(staggered_grid.StaggeredGrid);
    }
  };
  (staggered_grid_tile.StaggeredGridTile.__ = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let crossAxisCellCount = opts && 'crossAxisCellCount' in opts ? opts.crossAxisCellCount : null;
    let mainAxisCellCount = opts && 'mainAxisCellCount' in opts ? opts.mainAxisCellCount : null;
    let mainAxisExtent = opts && 'mainAxisExtent' in opts ? opts.mainAxisExtent : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[S.crossAxisCellCount] = crossAxisCellCount;
    this[S.mainAxisCellCount$1] = mainAxisCellCount;
    this[S.mainAxisExtent$1] = mainAxisExtent;
    if (!(crossAxisCellCount > 0)) dart.assertFailed(null, I[243], 13, 16, "crossAxisCellCount > 0");
    if (!(mainAxisCellCount == null || dart.notNull(mainAxisCellCount) > 0)) dart.assertFailed(null, I[243], 14, 16, "mainAxisCellCount == null || mainAxisCellCount > 0");
    if (!(mainAxisExtent == null || dart.notNull(mainAxisExtent) > 0)) dart.assertFailed(null, I[243], 15, 16, "mainAxisExtent == null || mainAxisExtent > 0");
    staggered_grid_tile.StaggeredGridTile.__proto__.new.call(this, {key: key, child: child});
    ;
  }).prototype = staggered_grid_tile.StaggeredGridTile.prototype;
  (staggered_grid_tile.StaggeredGridTile.count = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let crossAxisCellCount = opts && 'crossAxisCellCount' in opts ? opts.crossAxisCellCount : null;
    let mainAxisCellCount = opts && 'mainAxisCellCount' in opts ? opts.mainAxisCellCount : null;
    let child = opts && 'child' in opts ? opts.child : null;
    staggered_grid_tile.StaggeredGridTile.__.call(this, {key: key, crossAxisCellCount: crossAxisCellCount, mainAxisCellCount: mainAxisCellCount, mainAxisExtent: null, child: child});
  }).prototype = staggered_grid_tile.StaggeredGridTile.prototype;
  (staggered_grid_tile.StaggeredGridTile.extent = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let crossAxisCellCount = opts && 'crossAxisCellCount' in opts ? opts.crossAxisCellCount : null;
    let mainAxisExtent = opts && 'mainAxisExtent' in opts ? opts.mainAxisExtent : null;
    let child = opts && 'child' in opts ? opts.child : null;
    staggered_grid_tile.StaggeredGridTile.__.call(this, {key: key, crossAxisCellCount: crossAxisCellCount, mainAxisCellCount: null, mainAxisExtent: mainAxisExtent, child: child});
  }).prototype = staggered_grid_tile.StaggeredGridTile.prototype;
  (staggered_grid_tile.StaggeredGridTile.fit = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let crossAxisCellCount = opts && 'crossAxisCellCount' in opts ? opts.crossAxisCellCount : null;
    let child = opts && 'child' in opts ? opts.child : null;
    staggered_grid_tile.StaggeredGridTile.__.call(this, {key: key, crossAxisCellCount: crossAxisCellCount, mainAxisCellCount: null, mainAxisExtent: null, child: child});
  }).prototype = staggered_grid_tile.StaggeredGridTile.prototype;
  dart.addTypeTests(staggered_grid_tile.StaggeredGridTile);
  dart.addTypeCaches(staggered_grid_tile.StaggeredGridTile);
  dart.setMethodSignature(staggered_grid_tile.StaggeredGridTile, () => ({
    __proto__: dart.getMethods(staggered_grid_tile.StaggeredGridTile.__proto__),
    applyParentData: dart.fnType(dart.void, [object.RenderObject])
  }));
  dart.setGetterSignature(staggered_grid_tile.StaggeredGridTile, () => ({
    __proto__: dart.getGetters(staggered_grid_tile.StaggeredGridTile.__proto__),
    debugTypicalAncestorWidgetClass: core.Type
  }));
  dart.setLibraryUri(staggered_grid_tile.StaggeredGridTile, I[245]);
  dart.setFieldSignature(staggered_grid_tile.StaggeredGridTile, () => ({
    __proto__: dart.getFields(staggered_grid_tile.StaggeredGridTile.__proto__),
    crossAxisCellCount: dart.finalFieldType(core.int),
    mainAxisCellCount: dart.finalFieldType(dart.nullable(core.num)),
    mainAxisExtent: dart.finalFieldType(dart.nullable(core.double))
  }));
  method_channel_field_value.FieldValueType = class FieldValueType extends core._Enum {
    [S$0._enumToString]() {
      return "FieldValueType." + this[S$0._name];
    }
  };
  (method_channel_field_value.FieldValueType.new = function(index, name) {
    method_channel_field_value.FieldValueType.__proto__.new.call(this, index, name);
    ;
  }).prototype = method_channel_field_value.FieldValueType.prototype;
  dart.addTypeTests(method_channel_field_value.FieldValueType);
  dart.addTypeCaches(method_channel_field_value.FieldValueType);
  dart.setMethodSignature(method_channel_field_value.FieldValueType, () => ({
    __proto__: dart.getMethods(method_channel_field_value.FieldValueType.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(method_channel_field_value.FieldValueType, I[246]);
  dart.setStaticFieldSignature(method_channel_field_value.FieldValueType, () => ['values', 'arrayUnion', 'arrayRemove', 'delete', 'serverTimestamp', 'incrementDouble', 'incrementInteger']);
  dart.defineLazy(method_channel_field_value.FieldValueType, {
    /*method_channel_field_value.FieldValueType.values*/get values() {
      return C[416] || CT.C416;
    },
    /*method_channel_field_value.FieldValueType.arrayUnion*/get arrayUnion() {
      return C[223] || CT.C223;
    },
    /*method_channel_field_value.FieldValueType.arrayRemove*/get arrayRemove() {
      return C[224] || CT.C224;
    },
    /*method_channel_field_value.FieldValueType.delete*/get delete() {
      return C[225] || CT.C225;
    },
    /*method_channel_field_value.FieldValueType.serverTimestamp*/get serverTimestamp() {
      return C[226] || CT.C226;
    },
    /*method_channel_field_value.FieldValueType.incrementDouble*/get incrementDouble() {
      return C[227] || CT.C227;
    },
    /*method_channel_field_value.FieldValueType.incrementInteger*/get incrementInteger() {
      return C[228] || CT.C228;
    }
  }, false);
  method_channel_field_value.MethodChannelFieldValue = class MethodChannelFieldValue extends core.Object {
    get type() {
      return this[S.type$8];
    }
    set type(value) {
      super.type = value;
    }
    get value() {
      return this[S.value$3];
    }
    set value(value) {
      super.value = value;
    }
    static ['_#new#tearOff'](type, value) {
      return new method_channel_field_value.MethodChannelFieldValue.new(type, value);
    }
    _equals(other) {
      if (other == null) return false;
      return method_channel_field_value.MethodChannelFieldValue.is(other) && other.type === this.type && (C[73] || CT.C73).equals(other.value, this.value);
    }
    get hashCode() {
      return core.Object.hash(this.type, this.value);
    }
  };
  (method_channel_field_value.MethodChannelFieldValue.new = function(type, value) {
    this[S.type$8] = type;
    this[S.value$3] = value;
    ;
  }).prototype = method_channel_field_value.MethodChannelFieldValue.prototype;
  dart.addTypeTests(method_channel_field_value.MethodChannelFieldValue);
  dart.addTypeCaches(method_channel_field_value.MethodChannelFieldValue);
  dart.setLibraryUri(method_channel_field_value.MethodChannelFieldValue, I[246]);
  dart.setFieldSignature(method_channel_field_value.MethodChannelFieldValue, () => ({
    __proto__: dart.getFields(method_channel_field_value.MethodChannelFieldValue.__proto__),
    type: dart.finalFieldType(method_channel_field_value.FieldValueType),
    value: dart.finalFieldType(dart.dynamic)
  }));
  dart.defineExtensionMethods(method_channel_field_value.MethodChannelFieldValue, ['_equals']);
  dart.defineExtensionAccessors(method_channel_field_value.MethodChannelFieldValue, ['hashCode']);
  method_channel_query.MethodChannelQuery = class MethodChannelQuery extends platform_interface_query.QueryPlatform {
    get isCollectionGroupQuery() {
      return this[S.isCollectionGroupQuery$1];
    }
    set isCollectionGroupQuery(value) {
      super.isCollectionGroupQuery = value;
    }
    get pigeonApp() {
      return this[S.pigeonApp];
    }
    set pigeonApp(value) {
      super.pigeonApp = value;
    }
    static ['_#new#tearOff'](_firestore, path, pigeonApp, opts) {
      let parameters = opts && 'parameters' in opts ? opts.parameters : null;
      let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
      return new method_channel_query.MethodChannelQuery.new(_firestore, path, pigeonApp, {parameters: parameters, isCollectionGroupQuery: isCollectionGroupQuery});
    }
    get path() {
      return this[S._pointer$5].path;
    }
    get [S._pigeonParameters]() {
      return new messages$46pigeon$0.PigeonQueryParameters.new({where: T.ListNOfListNOfObjectN().as(this.parameters[S$.$_get]("where")), orderBy: T.ListNOfListNOfObjectN().as(this.parameters[S$.$_get]("orderBy")), limit: T$.intN().as(this.parameters[S$.$_get]("limit")), limitToLast: T$.intN().as(this.parameters[S$.$_get]("limitToLast")), startAt: T$.ListNOfObjectN().as(this.parameters[S$.$_get]("startAt")), startAfter: T$.ListNOfObjectN().as(this.parameters[S$.$_get]("startAfter")), endAt: T$.ListNOfObjectN().as(this.parameters[S$.$_get]("endAt")), endBefore: T$.ListNOfObjectN().as(this.parameters[S$.$_get]("endBefore")), filters: T.MapNOfStringN$ObjectN().as(this.parameters[S$.$_get]("filters"))});
    }
    [S._copyWithParameters$1](parameters) {
      let t325;
      return new method_channel_query.MethodChannelQuery.new(this.firestore, this[S._pointer$5].path, this.pigeonApp, {isCollectionGroupQuery: this.isCollectionGroupQuery, parameters: T$.MapOfString$dynamic().unmodifiable((t325 = T$.LinkedHashMapOfString$dynamic().from(this.parameters), (() => {
          t325[S$.$addAll](parameters);
          return t325;
        })()))});
    }
    endAtDocument(orders, values) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", values, "endBefore", null]));
    }
    endAt(fields) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["endAt", fields, "endBefore", null]));
    }
    endBeforeDocument(orders, values) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "endAt", null, "endBefore", values]));
    }
    endBefore(fields) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["endAt", null, "endBefore", fields]));
    }
    get(options = C[52] || CT.C52) {
      return async.async(platform_interface_query_snapshot.QuerySnapshotPlatform, (function* get() {
        try {
          let result = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.queryGet(this.pigeonApp, this[S._pointer$5].path, this.isCollectionGroupQuery, this[S._pigeonParameters], new messages$46pigeon$0.PigeonGetOptions.new({source: options.source, serverTimestampBehavior: options.serverTimestampBehavior})));
          return new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(this.firestore, result);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    limit(limit) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["limit", limit, "limitToLast", null]));
    }
    limitToLast(limit) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["limit", null, "limitToLast", limit]));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : C[53] || CT.C53;
      let controller = null;
      function controller$35get() {
        let t327;
        t327 = controller;
        return t327 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t327;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let snapshotStreamSubscription = null;
      controller$35set(T.StreamControllerOfQuerySnapshotPlatform().broadcast({onListen: dart.fn(() => async.async(dart.void, (function*() {
          let observerId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.querySnapshot(this.pigeonApp, this[S._pointer$5].path, this.isCollectionGroupQuery, this[S._pigeonParameters], new messages$46pigeon$0.PigeonGetOptions.new({source: messages$46pigeon$0.Source.serverAndCache, serverTimestampBehavior: serverTimestampBehavior}), includeMetadataChanges));
          snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](method_channel_firestore.MethodChannelFirebaseFirestore.querySnapshotChannel(observerId), {onError: C[307] || CT.C307}).listen(dart.fn(snapshot => {
            let snapshotList = T$.ListOfObjectN().as(snapshot);
            let documents = core.List.as(dart.nullCheck(snapshotList[S$.$_get](0)))[S$.$map](messages$46pigeon$0.PigeonDocumentSnapshot, dart.fn(e => messages$46pigeon$0.PigeonDocumentSnapshot.decode(core.Object.as(e)), T.dynamicToPigeonDocumentSnapshot()))[S$.$toList]()[S$.$cast](messages$46pigeon$0.PigeonDocumentSnapshot);
            let changes = core.List.as(dart.nullCheck(snapshotList[S$.$_get](1)))[S$.$map](messages$46pigeon$0.PigeonDocumentChange, dart.fn(e => messages$46pigeon$0.PigeonDocumentChange.decode(core.Object.as(e)), T.dynamicToPigeonDocumentChange()))[S$.$toList]()[S$.$cast](messages$46pigeon$0.PigeonDocumentChange);
            let result = messages$46pigeon$0.PigeonQuerySnapshot.decode(T$.JSArrayOfObjectN().of([documents, changes, snapshotList[S$.$_get](2)]));
            controller$35get().add(new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(this.firestore, result));
          }, T$.dynamicTovoid()), {onError: dart.bind(controller$35get(), 'addError')});
        }).bind(this)), T$.VoidToFutureOfvoid()), onCancel: dart.fn(() => {
          let t329;
          t329 = snapshotStreamSubscription;
          t329 == null ? null : t329.cancel();
        }, T$.VoidTovoid())}));
      return controller$35get().stream;
    }
    orderBy(orders) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders]));
    }
    startAfterDocument(orders, values) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", null, "startAfter", values]));
    }
    startAfter(fields) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["startAt", null, "startAfter", fields]));
    }
    startAtDocument(orders, values) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["orderBy", orders, "startAt", values, "startAfter", null]));
    }
    startAt(fields) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["startAt", fields, "startAfter", null]));
    }
    where(conditions) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["where", conditions]));
    }
    whereFilter(filter) {
      return this[S._copyWithParameters$1](new (T$.IdentityMapOfString$dynamic()).from(["filters", filter.toJson()]));
    }
    count() {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this, this[S._pigeonParameters], this[S._pointer$5].path, this.pigeonApp, T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.count})]), this.isCollectionGroupQuery);
    }
    aggregate(aggregateField1, aggregateField2 = null, aggregateField3 = null, aggregateField4 = null, aggregateField5 = null, aggregateField6 = null, aggregateField7 = null, aggregateField8 = null, aggregateField9 = null, aggregateField10 = null, aggregateField11 = null, aggregateField12 = null, aggregateField13 = null, aggregateField14 = null, aggregateField15 = null, aggregateField16 = null, aggregateField17 = null, aggregateField18 = null, aggregateField19 = null, aggregateField20 = null, aggregateField21 = null, aggregateField22 = null, aggregateField23 = null, aggregateField24 = null, aggregateField25 = null, aggregateField26 = null, aggregateField27 = null, aggregateField28 = null, aggregateField29 = null, aggregateField30 = null) {
      let fields = T$.JSArrayOfAggregateFieldN().of([aggregateField1, aggregateField2, aggregateField3, aggregateField4, aggregateField5, aggregateField6, aggregateField7, aggregateField8, aggregateField9, aggregateField10, aggregateField11, aggregateField12, aggregateField13, aggregateField14, aggregateField15, aggregateField16, aggregateField17, aggregateField18, aggregateField19, aggregateField20, aggregateField21, aggregateField22, aggregateField23, aggregateField24, aggregateField25, aggregateField26, aggregateField27, aggregateField28, aggregateField29, aggregateField30])[S$.$whereType](platform_interface_query.AggregateField);
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this, this[S._pigeonParameters], this[S._pointer$5].path, this.pigeonApp, fields[S$.$map](messages$46pigeon$0.AggregateQuery, dart.fn(e => {
        if (platform_interface_query.count.is(e)) {
          return new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.count});
        } else if (platform_interface_query.sum.is(e)) {
          return new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.sum, field: e.field});
        } else if (platform_interface_query.average.is(e)) {
          return new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.average, field: e.field});
        } else {
          dart.throw(new core.ArgumentError.new("Unsupported aggregate method " + dart.str(e[S$.$runtimeType])));
        }
      }, T$.AggregateFieldToAggregateQuery()))[S$.$toList](), this.isCollectionGroupQuery);
    }
    sum(field) {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this, this[S._pigeonParameters], this[S._pointer$5].path, this.pigeonApp, T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.sum, field: field})]), this.isCollectionGroupQuery);
    }
    average(field) {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this, this[S._pigeonParameters], this[S._pointer$5].path, this.pigeonApp, T$.JSArrayOfAggregateQuery().of([new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.average, field: field})]), this.isCollectionGroupQuery);
    }
    _equals(other) {
      if (other == null) return false;
      return this[S$.$runtimeType]._equals(other[S$.$runtimeType]) && method_channel_query.MethodChannelQuery.is(other) && other.firestore._equals(this.firestore) && other[S._pointer$5]._equals(this[S._pointer$5]) && other.isCollectionGroupQuery === this.isCollectionGroupQuery && (C[73] || CT.C73).equals(other.parameters, this.parameters);
    }
    get hashCode() {
      return core.Object.hash(this[S$.$runtimeType], this.firestore, this[S._pointer$5], this.isCollectionGroupQuery, (C[73] || CT.C73).hash(this.parameters));
    }
  };
  (method_channel_query.MethodChannelQuery.new = function(_firestore, path, pigeonApp, opts) {
    let parameters = opts && 'parameters' in opts ? opts.parameters : null;
    let isCollectionGroupQuery = opts && 'isCollectionGroupQuery' in opts ? opts.isCollectionGroupQuery : false;
    this[S.pigeonApp] = pigeonApp;
    this[S.isCollectionGroupQuery$1] = isCollectionGroupQuery;
    this[S._pointer$5] = new pointer.Pointer.new(path);
    method_channel_query.MethodChannelQuery.__proto__.new.call(this, _firestore, parameters);
    ;
  }).prototype = method_channel_query.MethodChannelQuery.prototype;
  dart.addTypeTests(method_channel_query.MethodChannelQuery);
  dart.addTypeCaches(method_channel_query.MethodChannelQuery);
  dart.setMethodSignature(method_channel_query.MethodChannelQuery, () => ({
    __proto__: dart.getMethods(method_channel_query.MethodChannelQuery.__proto__),
    [S._copyWithParameters$1]: dart.fnType(method_channel_query.MethodChannelQuery, [core.Map$(core.String, dart.dynamic)]),
    snapshots: dart.fnType(async.Stream$(platform_interface_query_snapshot.QuerySnapshotPlatform), [], {includeMetadataChanges: core.bool, serverTimestampBehavior: messages$46pigeon$0.ServerTimestampBehavior}, {}),
    where: dart.fnType(platform_interface_query.QueryPlatform, [core.Iterable$(core.List)])
  }));
  dart.setGetterSignature(method_channel_query.MethodChannelQuery, () => ({
    __proto__: dart.getGetters(method_channel_query.MethodChannelQuery.__proto__),
    path: core.String,
    [S._pigeonParameters]: messages$46pigeon$0.PigeonQueryParameters
  }));
  dart.setLibraryUri(method_channel_query.MethodChannelQuery, I[247]);
  dart.setFieldSignature(method_channel_query.MethodChannelQuery, () => ({
    __proto__: dart.getFields(method_channel_query.MethodChannelQuery.__proto__),
    isCollectionGroupQuery: dart.finalFieldType(core.bool),
    [S._pointer$5]: dart.finalFieldType(pointer.Pointer),
    pigeonApp: dart.finalFieldType(messages$46pigeon$0.FirestorePigeonFirebaseApp)
  }));
  dart.defineExtensionMethods(method_channel_query.MethodChannelQuery, ['_equals']);
  dart.defineExtensionAccessors(method_channel_query.MethodChannelQuery, ['hashCode']);
  method_channel_load_bundle_task.MethodChannelLoadBundleTask = class MethodChannelLoadBundleTask extends platform_interface_load_bundle_task.LoadBundleTaskPlatform {
    static ['_#new#tearOff'](opts) {
      let task = opts && 'task' in opts ? opts.task : null;
      return new method_channel_load_bundle_task.MethodChannelLoadBundleTask.new({task: task});
    }
    get stream() {
      let t330;
      t330 = this[S.__MethodChannelLoadBundleTask_stream];
      return t330 == null ? dart.throw(new _internal.LateError.fieldNI("stream")) : t330;
    }
    set stream(stream$35param) {
      if (this[S.__MethodChannelLoadBundleTask_stream] == null)
        this[S.__MethodChannelLoadBundleTask_stream] = stream$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("stream"));
    }
  };
  (method_channel_load_bundle_task.MethodChannelLoadBundleTask.new = function(opts) {
    let task = opts && 'task' in opts ? opts.task : null;
    this[S.__MethodChannelLoadBundleTask_stream] = null;
    method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__.new.call(this);
    function mapNativeStream() {
      return new (T._AsyncStarImplOfLoadBundleTaskSnapshotPlatform()).new(function* mapNativeStream(stream) {
        let t330, t330$;
        let observerId = (yield task);
        let nativePlatformStream = method_channel_firestore.MethodChannelFirebaseFirestore.loadBundleChannel(dart.nullCheck(observerId)).receiveBroadcastStream();
        try {
          let iter = async.StreamIterator.new(nativePlatformStream);
          try {
            while (yield iter.moveNext()) {
              let snapshot = iter.current;
              {
                let taskState = load_bundle_task_state$.convertToTaskState(core.String.as(dart.dsend(snapshot, '_get', ["taskState"])));
                if (stream.add(new platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform.new(taskState, T$.LinkedHashMapOfString$dynamic().from(core.Map.as(snapshot))))) return;
                yield;
                if (taskState === load_bundle_task_state.LoadBundleTaskState.success) {
                  return;
                }
              }
            }
          } finally {
            yield iter.cancel();
          }
        } catch (e) {
          let exception = dart.getThrown(e);
          if (core.Object.is(exception)) {
            if (!core.Exception.is(exception) || !message_codec.PlatformException.is(exception)) {
              dart.rethrow(e);
            }
            let details = exception.details != null ? T$.LinkedHashMapOfString$String().from(core.Map.as(exception.details)) : null;
            dart.throw(new firebase_core_platform_interface.FirebaseException.new({plugin: "cloud_firestore", code: "load-bundle-error", message: (t330$ = (t330 = details, t330 == null ? null : t330[S$.$_get]("message")), t330$ == null ? "" : t330$)}));
          } else
            throw e;
        }
      }).stream;
    }
    dart.fn(mapNativeStream, T.VoidToStreamOfLoadBundleTaskSnapshotPlatform());
    this.stream = mapNativeStream().asBroadcastStream({onListen: dart.fn(sub => sub.resume(), T.StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid()), onCancel: dart.fn(sub => sub.pause(), T.StreamSubscriptionOfLoadBundleTaskSnapshotPlatformTovoid())});
  }).prototype = method_channel_load_bundle_task.MethodChannelLoadBundleTask.prototype;
  dart.addTypeTests(method_channel_load_bundle_task.MethodChannelLoadBundleTask);
  dart.addTypeCaches(method_channel_load_bundle_task.MethodChannelLoadBundleTask);
  dart.setGetterSignature(method_channel_load_bundle_task.MethodChannelLoadBundleTask, () => ({
    __proto__: dart.getGetters(method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setSetterSignature(method_channel_load_bundle_task.MethodChannelLoadBundleTask, () => ({
    __proto__: dart.getSetters(method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__),
    stream: async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)
  }));
  dart.setLibraryUri(method_channel_load_bundle_task.MethodChannelLoadBundleTask, I[248]);
  dart.setFieldSignature(method_channel_load_bundle_task.MethodChannelLoadBundleTask, () => ({
    __proto__: dart.getFields(method_channel_load_bundle_task.MethodChannelLoadBundleTask.__proto__),
    [S.__MethodChannelLoadBundleTask_stream]: dart.fieldType(dart.nullable(async.Stream$(platform_interface_load_bundle_task_snapshot.LoadBundleTaskSnapshotPlatform)))
  }));
  method_channel_query_snapshot.MethodChannelQuerySnapshot = class MethodChannelQuerySnapshot extends platform_interface_query_snapshot.QuerySnapshotPlatform {
    static ['_#new#tearOff'](firestore, data) {
      return new method_channel_query_snapshot.MethodChannelQuerySnapshot.new(firestore, data);
    }
  };
  (method_channel_query_snapshot.MethodChannelQuerySnapshot.new = function(firestore, data) {
    method_channel_query_snapshot.MethodChannelQuerySnapshot.__proto__.new.call(this, iterable_extensions['IterableNullableExtension|whereNotNull'](platform_interface_document_snapshot.DocumentSnapshotPlatform, data.documents[S$.$map](T.DocumentSnapshotPlatformN(), dart.fn(document => {
      if (document == null) {
        return null;
      }
      return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(firestore, document.path, document.data, document.metadata);
    }, T.PigeonDocumentSnapshotNToDocumentSnapshotPlatformN())))[S$.$toList](), iterable_extensions['IterableNullableExtension|whereNotNull'](method_channel_document_change.MethodChannelDocumentChange, data.documentChanges[S$.$map](T.MethodChannelDocumentChangeN(), dart.fn(documentChange => {
      if (documentChange == null) {
        return null;
      }
      return new method_channel_document_change.MethodChannelDocumentChange.new(firestore, documentChange);
    }, T.PigeonDocumentChangeNToMethodChannelDocumentChangeN())))[S$.$toList](), new snapshot_metadata.SnapshotMetadataPlatform.new(data.metadata.hasPendingWrites, data.metadata.isFromCache));
    ;
  }).prototype = method_channel_query_snapshot.MethodChannelQuerySnapshot.prototype;
  dart.addTypeTests(method_channel_query_snapshot.MethodChannelQuerySnapshot);
  dart.addTypeCaches(method_channel_query_snapshot.MethodChannelQuerySnapshot);
  dart.setLibraryUri(method_channel_query_snapshot.MethodChannelQuerySnapshot, I[249]);
  method_channel_collection_reference.MethodChannelCollectionReference = class MethodChannelCollectionReference extends method_channel_query.MethodChannelQuery {
    get [S._pointer$7]() {
      return this[S._pointer$6];
    }
    set [S._pointer$7](value) {
      super[S._pointer$7] = value;
    }
    static ['_#new#tearOff'](firestore, path, pigeonApp) {
      return new method_channel_collection_reference.MethodChannelCollectionReference.new(firestore, path, pigeonApp);
    }
    get id() {
      return this[S._pointer$7].id;
    }
    get parent() {
      let parentPath = this[S._pointer$7].parentPath();
      return parentPath == null ? null : new method_channel_document_reference.MethodChannelDocumentReference.new(this.firestore, parentPath, this.pigeonApp);
    }
    get path() {
      return this[S._pointer$7].path;
    }
    doc(path = null) {
      let documentPath = null;
      if (path != null) {
        documentPath = this[S._pointer$7].documentPath(path);
      } else {
        let autoId = auto_id_generator.AutoIdGenerator.autoId();
        documentPath = this[S._pointer$7].documentPath(autoId);
      }
      return new method_channel_document_reference.MethodChannelDocumentReference.new(this.firestore, documentPath, this.pigeonApp);
    }
    get [S$._pointer$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[417] || CT.C417)));
    }
  };
  (method_channel_collection_reference.MethodChannelCollectionReference.new = function(firestore, path, pigeonApp) {
    this[S._pointer$6] = new pointer.Pointer.new(path);
    method_channel_collection_reference.MethodChannelCollectionReference.__proto__.new.call(this, firestore, path, pigeonApp);
    ;
  }).prototype = method_channel_collection_reference.MethodChannelCollectionReference.prototype;
  dart.addTypeTests(method_channel_collection_reference.MethodChannelCollectionReference);
  dart.addTypeCaches(method_channel_collection_reference.MethodChannelCollectionReference);
  method_channel_collection_reference.MethodChannelCollectionReference[dart.implements] = () => [platform_interface_collection_reference.CollectionReferencePlatform];
  dart.setMethodSignature(method_channel_collection_reference.MethodChannelCollectionReference, () => ({
    __proto__: dart.getMethods(method_channel_collection_reference.MethodChannelCollectionReference.__proto__),
    doc: dart.fnType(platform_interface_document_reference.DocumentReferencePlatform, [], [dart.nullable(core.String)])
  }));
  dart.setGetterSignature(method_channel_collection_reference.MethodChannelCollectionReference, () => ({
    __proto__: dart.getGetters(method_channel_collection_reference.MethodChannelCollectionReference.__proto__),
    id: core.String,
    parent: dart.nullable(platform_interface_document_reference.DocumentReferencePlatform),
    [S$._pointer$1]: pointer.Pointer
  }));
  dart.setLibraryUri(method_channel_collection_reference.MethodChannelCollectionReference, I[250]);
  dart.setFieldSignature(method_channel_collection_reference.MethodChannelCollectionReference, () => ({
    __proto__: dart.getFields(method_channel_collection_reference.MethodChannelCollectionReference.__proto__),
    [S._pointer$7]: dart.finalFieldType(pointer.Pointer)
  }));
  method_channel_document_reference.MethodChannelDocumentReference = class MethodChannelDocumentReference extends platform_interface_document_reference.DocumentReferencePlatform {
    get pigeonApp() {
      return this[S.pigeonApp$1];
    }
    set pigeonApp(value) {
      super.pigeonApp = value;
    }
    get [S._pointer$8]() {
      let t330;
      t330 = this[S.__MethodChannelDocumentReference__pointer];
      return t330 == null ? dart.throw(new _internal.LateError.fieldNI("_pointer")) : t330;
    }
    set [S._pointer$8](_pointer$35param) {
      this[S.__MethodChannelDocumentReference__pointer] = _pointer$35param;
    }
    static ['_#new#tearOff'](firestore, path, pigeonApp) {
      return new method_channel_document_reference.MethodChannelDocumentReference.new(firestore, path, pigeonApp);
    }
    set(data, options = null) {
      return async.async(dart.void, (function* set() {
        let t330, t331, t330$;
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.documentReferenceSet(this.pigeonApp, new messages$46pigeon$0.DocumentReferenceRequest.new({path: this[S._pointer$8].path, data: data, option: new messages$46pigeon$0.PigeonDocumentOption.new({merge: (t330 = options, t330 == null ? null : t330.merge), mergeFields: (t330$ = options, t330$ == null ? null : (t331 = t330$.mergeFields, t331 == null ? null : t331[S$.$map](T$.ListOfString(), dart.fn(e => e.components, T.FieldPathToListOfString()))[S$.$toList]()))})}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    update(data) {
      return async.async(dart.void, (function* update() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.documentReferenceUpdate(this.pigeonApp, new messages$46pigeon$0.DocumentReferenceRequest.new({path: this[S._pointer$8].path, data: data}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    get(options = C[52] || CT.C52) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function* get() {
        try {
          let result = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.documentReferenceGet(this.pigeonApp, new messages$46pigeon$0.DocumentReferenceRequest.new({path: this[S._pointer$8].path, source: options.source, serverTimestampBehavior: options.serverTimestampBehavior})));
          return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(this.firestore, this[S._pointer$8].path, result.data, result.metadata);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.documentReferenceDelete(this.pigeonApp, new messages$46pigeon$0.DocumentReferenceRequest.new({path: this[S._pointer$8].path}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    snapshots(opts) {
      let includeMetadataChanges = opts && 'includeMetadataChanges' in opts ? opts.includeMetadataChanges : false;
      let serverTimestampBehavior = opts && 'serverTimestampBehavior' in opts ? opts.serverTimestampBehavior : C[53] || CT.C53;
      let controller = null;
      function controller$35get() {
        let t335;
        t335 = controller;
        return t335 == null ? dart.throw(new _internal.LateError.localNI("controller")) : t335;
      }
      function controller$35set(controller$35param) {
        return controller = controller$35param;
      }
      let snapshotStreamSubscription = null;
      controller$35set(T.StreamControllerOfDocumentSnapshotPlatform().broadcast({onListen: dart.fn(() => async.async(dart.void, (function*() {
          let observerId = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.documentReferenceSnapshot(this.pigeonApp, new messages$46pigeon$0.DocumentReferenceRequest.new({path: this[S._pointer$8].path, serverTimestampBehavior: serverTimestampBehavior}), includeMetadataChanges));
          snapshotStreamSubscription = exception$['EventChannelExtension|receiveGuardedBroadcastStream'](method_channel_firestore.MethodChannelFirebaseFirestore.documentSnapshotChannel(observerId), {onError: C[307] || CT.C307}).listen(dart.fn(snapshot => {
            let result = messages$46pigeon$0.PigeonDocumentSnapshot.decode(core.Object.as(snapshot));
            controller$35get().add(new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(this.firestore, result.path, result.data, result.metadata));
          }, T$.dynamicTovoid()), {onError: dart.bind(controller$35get(), 'addError')});
        }).bind(this)), T$.VoidToFutureOfvoid()), onCancel: dart.fn(() => {
          let t337;
          t337 = snapshotStreamSubscription;
          t337 == null ? null : t337.cancel();
        }, T$.VoidTovoid())}));
      return controller$35get().stream;
    }
  };
  (method_channel_document_reference.MethodChannelDocumentReference.new = function(firestore, path, pigeonApp) {
    this[S.__MethodChannelDocumentReference__pointer] = null;
    this[S.pigeonApp$1] = pigeonApp;
    method_channel_document_reference.MethodChannelDocumentReference.__proto__.new.call(this, firestore, path);
    this[S._pointer$8] = new pointer.Pointer.new(path);
  }).prototype = method_channel_document_reference.MethodChannelDocumentReference.prototype;
  dart.addTypeTests(method_channel_document_reference.MethodChannelDocumentReference);
  dart.addTypeCaches(method_channel_document_reference.MethodChannelDocumentReference);
  dart.setMethodSignature(method_channel_document_reference.MethodChannelDocumentReference, () => ({
    __proto__: dart.getMethods(method_channel_document_reference.MethodChannelDocumentReference.__proto__),
    snapshots: dart.fnType(async.Stream$(platform_interface_document_snapshot.DocumentSnapshotPlatform), [], {includeMetadataChanges: core.bool, serverTimestampBehavior: messages$46pigeon$0.ServerTimestampBehavior}, {})
  }));
  dart.setGetterSignature(method_channel_document_reference.MethodChannelDocumentReference, () => ({
    __proto__: dart.getGetters(method_channel_document_reference.MethodChannelDocumentReference.__proto__),
    [S._pointer$8]: pointer.Pointer
  }));
  dart.setSetterSignature(method_channel_document_reference.MethodChannelDocumentReference, () => ({
    __proto__: dart.getSetters(method_channel_document_reference.MethodChannelDocumentReference.__proto__),
    [S._pointer$8]: pointer.Pointer
  }));
  dart.setLibraryUri(method_channel_document_reference.MethodChannelDocumentReference, I[251]);
  dart.setFieldSignature(method_channel_document_reference.MethodChannelDocumentReference, () => ({
    __proto__: dart.getFields(method_channel_document_reference.MethodChannelDocumentReference.__proto__),
    [S.__MethodChannelDocumentReference__pointer]: dart.fieldType(dart.nullable(pointer.Pointer)),
    pigeonApp: dart.finalFieldType(messages$46pigeon$0.FirestorePigeonFirebaseApp)
  }));
  method_channel_transaction.MethodChannelTransaction = class MethodChannelTransaction extends platform_interface_transaction.TransactionPlatform {
    get appName() {
      return this[S.appName$2];
    }
    set appName(value) {
      super.appName = value;
    }
    get databaseURL() {
      return this[S.databaseURL$4];
    }
    set databaseURL(value) {
      super.databaseURL = value;
    }
    get pigeonApp() {
      return this[S.pigeonApp$2];
    }
    set pigeonApp(value) {
      this[S.pigeonApp$2] = value;
    }
    get [S._transactionId]() {
      let t337;
      t337 = this[S.__MethodChannelTransaction__transactionId];
      return t337 == null ? dart.throw(new _internal.LateError.fieldNI("_transactionId")) : t337;
    }
    set [S._transactionId](_transactionId$35param) {
      this[S.__MethodChannelTransaction__transactionId] = _transactionId$35param;
    }
    get [S._firestore$5]() {
      let t337;
      t337 = this[S.__MethodChannelTransaction__firestore];
      return t337 == null ? dart.throw(new _internal.LateError.fieldNI("_firestore")) : t337;
    }
    set [S._firestore$5](_firestore$35param) {
      this[S.__MethodChannelTransaction__firestore] = _firestore$35param;
    }
    static ['_#new#tearOff'](transactionId, appName, pigeonApp, databaseURL) {
      return new method_channel_transaction.MethodChannelTransaction.new(transactionId, appName, pigeonApp, databaseURL);
    }
    get commands() {
      return this[S._commands];
    }
    get(documentPath) {
      return async.async(platform_interface_document_snapshot.DocumentSnapshotPlatform, (function* get() {
        if (!this[S._commands][S$.$isEmpty]) dart.assertFailed("Transactions require all reads to be executed before all writes.", I[252], 47, 12, "_commands.isEmpty");
        try {
          let result = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.transactionGet(this.pigeonApp, this[S._transactionId], documentPath));
          return new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(this[S._firestore$5], documentPath, result.data, result.metadata);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    delete(documentPath) {
      this[S._commands][S$.$add](new messages$46pigeon$0.PigeonTransactionCommand.new({type: messages$46pigeon$0.PigeonTransactionType.deleteType, path: documentPath}));
      return this;
    }
    update(documentPath, data) {
      this[S._commands][S$.$add](new messages$46pigeon$0.PigeonTransactionCommand.new({type: messages$46pigeon$0.PigeonTransactionType.update, path: documentPath, data: data}));
      return this;
    }
    set(documentPath, data, options = null) {
      let t338, t339, t338$;
      this[S._commands][S$.$add](new messages$46pigeon$0.PigeonTransactionCommand.new({type: messages$46pigeon$0.PigeonTransactionType.set, path: documentPath, data: data, option: new messages$46pigeon$0.PigeonDocumentOption.new({merge: (t338 = options, t338 == null ? null : t338.merge), mergeFields: (t338$ = options, t338$ == null ? null : (t339 = t338$.mergeFields, t339 == null ? null : t339[S$.$map](T$.ListOfString(), dart.fn(e => e.components, T.FieldPathToListOfString()))[S$.$toList]()))})}));
      return this;
    }
  };
  (method_channel_transaction.MethodChannelTransaction.new = function(transactionId, appName, pigeonApp, databaseURL) {
    this[S.__MethodChannelTransaction__transactionId] = null;
    this[S.__MethodChannelTransaction__firestore] = null;
    this[S._commands] = T.JSArrayOfPigeonTransactionCommand().of([]);
    this[S.appName$2] = appName;
    this[S.pigeonApp$2] = pigeonApp;
    this[S.databaseURL$4] = databaseURL;
    this[S.__MethodChannelTransaction__transactionId] = transactionId;
    method_channel_transaction.MethodChannelTransaction.__proto__.new.call(this);
    this[S._firestore$5] = platform_interface_firestore.FirebaseFirestorePlatform.instanceFor({app: firebase_core.Firebase.app(this.appName), databaseURL: this.databaseURL});
  }).prototype = method_channel_transaction.MethodChannelTransaction.prototype;
  dart.addTypeTests(method_channel_transaction.MethodChannelTransaction);
  dart.addTypeCaches(method_channel_transaction.MethodChannelTransaction);
  dart.setMethodSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getMethods(method_channel_transaction.MethodChannelTransaction.__proto__),
    delete: dart.fnType(method_channel_transaction.MethodChannelTransaction, [core.String]),
    update: dart.fnType(method_channel_transaction.MethodChannelTransaction, [core.String, core.Map$(core.String, dart.dynamic)]),
    set: dart.fnType(method_channel_transaction.MethodChannelTransaction, [core.String, core.Map$(core.String, dart.dynamic)], [dart.nullable(set_options.SetOptions)])
  }));
  dart.setGetterSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getGetters(method_channel_transaction.MethodChannelTransaction.__proto__),
    [S._transactionId]: core.String,
    [S._firestore$5]: platform_interface_firestore.FirebaseFirestorePlatform
  }));
  dart.setSetterSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getSetters(method_channel_transaction.MethodChannelTransaction.__proto__),
    [S._transactionId]: core.String,
    [S._firestore$5]: platform_interface_firestore.FirebaseFirestorePlatform
  }));
  dart.setLibraryUri(method_channel_transaction.MethodChannelTransaction, I[253]);
  dart.setFieldSignature(method_channel_transaction.MethodChannelTransaction, () => ({
    __proto__: dart.getFields(method_channel_transaction.MethodChannelTransaction.__proto__),
    appName: dart.finalFieldType(core.String),
    databaseURL: dart.finalFieldType(core.String),
    [S.__MethodChannelTransaction__transactionId]: dart.fieldType(dart.nullable(core.String)),
    [S.__MethodChannelTransaction__firestore]: dart.fieldType(dart.nullable(platform_interface_firestore.FirebaseFirestorePlatform)),
    pigeonApp: dart.fieldType(messages$46pigeon$0.FirestorePigeonFirebaseApp),
    [S._commands]: dart.fieldType(core.List$(messages$46pigeon$0.PigeonTransactionCommand))
  }));
  method_channel_write_batch.MethodChannelWriteBatch = class MethodChannelWriteBatch extends platform_interface_write_batch.WriteBatchPlatform {
    get pigeonApp() {
      return this[S.pigeonApp$3];
    }
    set pigeonApp(value) {
      super.pigeonApp = value;
    }
    static ['_#new#tearOff'](pigeonApp) {
      return new method_channel_write_batch.MethodChannelWriteBatch.new(pigeonApp);
    }
    commit() {
      return async.async(dart.void, (function* commit() {
        this[S._assertNotCommitted]();
        this[S._committed] = true;
        if (this[S._writes][S$.$isEmpty]) {
          return;
        }
        try {
          yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.writeBatchCommit(this.pigeonApp, this[S._writes]);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    delete(documentPath) {
      this[S._assertNotCommitted]();
      this[S._writes][S$.$add](new messages$46pigeon$0.PigeonTransactionCommand.new({path: documentPath, type: messages$46pigeon$0.PigeonTransactionType.deleteType}));
    }
    set(documentPath, data, options = null) {
      let t339, t340, t339$;
      this[S._assertNotCommitted]();
      this[S._writes][S$.$add](new messages$46pigeon$0.PigeonTransactionCommand.new({path: documentPath, type: messages$46pigeon$0.PigeonTransactionType.set, data: data, option: new messages$46pigeon$0.PigeonDocumentOption.new({merge: (t339 = options, t339 == null ? null : t339.merge), mergeFields: (t339$ = options, t339$ == null ? null : (t340 = t339$.mergeFields, t340 == null ? null : t340[S$.$map](T$.ListOfString(), dart.fn(e => e.components, T.FieldPathToListOfString()))[S$.$toList]()))})}));
    }
    update(documentPath, data) {
      this[S._assertNotCommitted]();
      this[S._writes][S$.$add](new messages$46pigeon$0.PigeonTransactionCommand.new({path: documentPath, type: messages$46pigeon$0.PigeonTransactionType.update, data: data}));
    }
    [S._assertNotCommitted]() {
      if (this[S._committed]) {
        dart.throw(new core.StateError.new("This batch has already been committed and can no longer be changed."));
      }
    }
  };
  (method_channel_write_batch.MethodChannelWriteBatch.new = function(pigeonApp) {
    this[S._writes] = T.JSArrayOfPigeonTransactionCommand().of([]);
    this[S._committed] = false;
    this[S.pigeonApp$3] = pigeonApp;
    method_channel_write_batch.MethodChannelWriteBatch.__proto__.new.call(this);
    ;
  }).prototype = method_channel_write_batch.MethodChannelWriteBatch.prototype;
  dart.addTypeTests(method_channel_write_batch.MethodChannelWriteBatch);
  dart.addTypeCaches(method_channel_write_batch.MethodChannelWriteBatch);
  dart.setMethodSignature(method_channel_write_batch.MethodChannelWriteBatch, () => ({
    __proto__: dart.getMethods(method_channel_write_batch.MethodChannelWriteBatch.__proto__),
    [S._assertNotCommitted]: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(method_channel_write_batch.MethodChannelWriteBatch, I[254]);
  dart.setFieldSignature(method_channel_write_batch.MethodChannelWriteBatch, () => ({
    __proto__: dart.getFields(method_channel_write_batch.MethodChannelWriteBatch.__proto__),
    pigeonApp: dart.finalFieldType(messages$46pigeon$0.FirestorePigeonFirebaseApp),
    [S._writes]: dart.fieldType(core.List$(messages$46pigeon$0.PigeonTransactionCommand)),
    [S._committed]: dart.fieldType(core.bool)
  }));
  exception.convertPlatformException = function convertPlatformException$(exception, stackTrace) {
    exception$.convertPlatformExceptionToFirebaseException(exception, stackTrace, {plugin: "cloud_firestore"});
  };
  utils$3.filePathsToPlatformFiles = function filePathsToPlatformFiles(filePaths, withReadStream, withData) {
    return async.Future.wait(platform_file.PlatformFile, filePaths[S$.$where](dart.fn(filePath => filePath[S$.$isNotEmpty], T$.StringTobool()))[S$.$map](T.FutureOfPlatformFile(), dart.fn(filePath => async.async(platform_file.PlatformFile, function*() {
      let file = io.File.new(filePath);
      if (withReadStream) {
        return utils$3.createPlatformFile(file, null, file.openRead());
      }
      if (!withData) {
        return utils$3.createPlatformFile(file, null, null);
      }
      let bytes = (yield file.readAsBytes());
      return utils$3.createPlatformFile(file, bytes, null);
    }), T.StringToFutureOfPlatformFile()))[S$.$toList]());
  };
  utils$3.createPlatformFile = function createPlatformFile(file, bytes, readStream) {
    return async.async(platform_file.PlatformFile, function* createPlatformFile() {
      return new platform_file.PlatformFile.new({bytes: bytes, name: path.basename(file.path), path: file.path, readStream: readStream, size: file.existsSync() ? file.lengthSync() : 0});
    });
  };
  utils$3.runExecutableWithArguments = function runExecutableWithArguments(executable, $arguments) {
    return async.async(T$.StringN(), function* runExecutableWithArguments() {
      let t339;
      let processResult = (yield io.Process.run(executable, $arguments));
      let path = (t339 = processResult.stdout, t339 == null ? null : dart.toString(t339)[S$0.$trim]());
      if (processResult.exitCode !== 0 || path == null || path[S$.$isEmpty]) {
        return null;
      }
      return path;
    });
  };
  utils$3.isExecutableOnPath = function isExecutableOnPath(executable) {
    return async.async(core.String, function* isExecutableOnPath() {
      let path = (yield utils$3.runExecutableWithArguments("which", T$.JSArrayOfString().of([executable])));
      if (path == null) {
        dart.throw(core.Exception.new("Couldn't find the executable " + executable + " in the path."));
      }
      return path;
    });
  };
  dialog_handler.DialogHandler = class DialogHandler extends core.Object {
    static new(pathToExecutable) {
      pathToExecutable = pathToExecutable[S$.$toLowerCase]();
      if (pathToExecutable[S$0.$endsWith]("kdialog")) {
        return new kdialog_handler.KDialogHandler.new();
      } else if (pathToExecutable[S$0.$endsWith]("qarma") || pathToExecutable[S$0.$endsWith]("zenity")) {
        return new qarma_and_zenity_handler.QarmaAndZenityHandler.new();
      }
      dart.throw(new core.UnimplementedError.new("DialogHandler for executable " + pathToExecutable + " has not been implemented"));
    }
    static ['_#new#tearOff'](pathToExecutable) {
      return dialog_handler.DialogHandler.new(pathToExecutable);
    }
  };
  (dialog_handler.DialogHandler[dart.mixinNew] = function() {
  }).prototype = dialog_handler.DialogHandler.prototype;
  dart.addTypeTests(dialog_handler.DialogHandler);
  dart.addTypeCaches(dialog_handler.DialogHandler);
  dart.setStaticMethodSignature(dialog_handler.DialogHandler, () => ['new']);
  dart.setLibraryUri(dialog_handler.DialogHandler, I[255]);
  scan.parseList = function parseList(T, scanner, parseElement) {
    let result = _interceptors.JSArray$(T).of([]);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
    }
    result[S$.$add](parseElement());
    scanner.scan(scan.whitespace);
    while (scanner.scan(",")) {
      scanner.scan(scan.whitespace);
      if (scanner.matches(",") || scanner.isDone) continue;
      result[S$.$add](parseElement());
      scanner.scan(scan.whitespace);
    }
    return result;
  };
  scan.expectQuotedString = function expectQuotedString(scanner, opts) {
    let name = opts && 'name' in opts ? opts.name : "quoted string";
    scanner.expect(scan._quotedString, {name: name});
    let string = dart.nullCheck(dart.nullCheck(scanner.lastMatch)._get(0));
    return string[S$0.$substring](1, string.length - 1)[S$0.$replaceAllMapped](scan._quotedPair, dart.fn(match => dart.nullCheck(match._get(1)), T$.MatchToString()));
  };
  dart.defineLazy(scan, {
    /*scan.token*/get token() {
      return core.RegExp.new("[^()<>@,;:\"\\\\/[\\]?={} \\t\\x00-\\x1F\\x7F]+");
    },
    /*scan._lws*/get _lws() {
      return core.RegExp.new("(?:\\r\\n)?[ \\t]+");
    },
    /*scan._quotedString*/get _quotedString() {
      return core.RegExp.new("\"(?:[^\"\\x00-\\x1F\\x7F]|\\\\.)*\"");
    },
    /*scan._quotedPair*/get _quotedPair() {
      return core.RegExp.new("\\\\(.)");
    },
    /*scan.nonToken*/get nonToken() {
      return core.RegExp.new("[()<>@,;:\"\\\\/\\[\\]?={} \\t\\x00-\\x1F\\x7F]");
    },
    /*scan.whitespace*/get whitespace() {
      return core.RegExp.new("(?:" + scan._lws.pattern + ")*");
    }
  }, false);
  utils$4.wrapFormatException = function wrapFormatException(T, name, value, body) {
    try {
      return body();
    } catch (e) {
      let ex = dart.getThrown(e);
      if (span_exception.SourceSpanFormatException.is(ex)) {
        let error = ex;
        dart.throw(new span_exception.SourceSpanFormatException.new("Invalid " + name + ": " + error.message, error.span, error.source));
      } else if (core.FormatException.is(ex)) {
        let error = ex;
        dart.throw(new core.FormatException.new("Invalid " + name + " \"" + value + "\": " + error.message, error.source, error.offset));
      } else
        throw e;
    }
  };
  decoder.ChunkedCodingDecoder = class ChunkedCodingDecoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new decoder.ChunkedCodingDecoder.__();
    }
    convert(input) {
      T$.ListOfint().as(input);
      let sink = new decoder._Sink.new(T.StreamControllerOfListOfint().new());
      let output = sink[S._decode](input, 0, input[S$.$length]);
      if (sink[S._state$2][S$0.$_equals](decoder._State.end)) return output;
      dart.throw(new core.FormatException.new("Input ended unexpectedly.", input, input[S$.$length]));
    }
    startChunkedConversion(sink) {
      T.SinkOfListOfint().as(sink);
      return new decoder._Sink.new(sink);
    }
  };
  (decoder.ChunkedCodingDecoder.__ = function() {
    decoder.ChunkedCodingDecoder.__proto__.new.call(this);
    ;
  }).prototype = decoder.ChunkedCodingDecoder.prototype;
  dart.addTypeTests(decoder.ChunkedCodingDecoder);
  dart.addTypeCaches(decoder.ChunkedCodingDecoder);
  dart.setMethodSignature(decoder.ChunkedCodingDecoder, () => ({
    __proto__: dart.getMethods(decoder.ChunkedCodingDecoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(decoder.ChunkedCodingDecoder, I[256]);
  decoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    get [S._size]() {
      let t341;
      t341 = this[S.___Sink__size];
      return t341 == null ? dart.throw(new _internal.LateError.fieldNI("_size")) : t341;
    }
    set [S._size](_size$35param) {
      this[S.___Sink__size] = _size$35param;
    }
    static ['_#new#tearOff'](_sink) {
      return new decoder._Sink.new(_sink);
    }
    add(chunk) {
      T$.ListOfint().as(chunk);
      return this.addSlice(chunk, 0, chunk[S$.$length], false);
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[S$.$length]);
      let output = this[S._decode](chunk, start, end);
      if (output[S$.$isNotEmpty]) this[S._sink].add(output);
      if (isLast) this[S._close](chunk, end);
    }
    close() {
      return this[S._close]();
    }
    [S._close](chunk = null, index = null) {
      if (!this[S._state$2][S$0.$_equals](decoder._State.end)) {
        dart.throw(new core.FormatException.new("Input ended unexpectedly.", chunk, index));
      }
      this[S._sink].close();
    }
    [S._decode](bytes, start, end) {
      function assertCurrentChar(char, name) {
        if (bytes[S$.$_get](start) !== char) {
          dart.throw(new core.FormatException.new("Expected " + name + ".", bytes, start));
        }
      }
      dart.fn(assertCurrentChar, T.intAndStringTovoid());
      let buffer = new typed_buffer.Uint8Buffer.new();
      while (start !== end) {
        switch (this[S._state$2]) {
          case C[418] || CT.C418:
            {
              this[S._size] = this[S._digitForByte](bytes, start);
              this[S._state$2] = decoder._State.size;
              start = start + 1;
              break;
            }
          case C[419] || CT.C419:
            {
              if (bytes[S$.$_get](start) === 13) {
                this[S._state$2] = decoder._State.sizeBeforeLF;
              } else {
                this[S._size] = (this[S._size] << 4 >>> 0) + this[S._digitForByte](bytes, start);
              }
              start = start + 1;
              break;
            }
          case C[420] || CT.C420:
            {
              assertCurrentChar(10, "LF");
              this[S._state$2] = this[S._size] === 0 ? decoder._State.endBeforeCR : decoder._State.body;
              start = start + 1;
              break;
            }
          case C[421] || CT.C421:
            {
              let chunkEnd = math.min(core.int, end, start + this[S._size]);
              buffer.addAll(bytes, start, chunkEnd);
              this[S._size] = this[S._size] - (chunkEnd - start);
              start = chunkEnd;
              if (this[S._size] === 0) this[S._state$2] = decoder._State.bodyBeforeCR;
              break;
            }
          case C[422] || CT.C422:
            {
              assertCurrentChar(13, "CR");
              this[S._state$2] = decoder._State.bodyBeforeLF;
              start = start + 1;
              break;
            }
          case C[423] || CT.C423:
            {
              assertCurrentChar(10, "LF");
              this[S._state$2] = decoder._State.boundary;
              start = start + 1;
              break;
            }
          case C[424] || CT.C424:
            {
              assertCurrentChar(13, "CR");
              this[S._state$2] = decoder._State.endBeforeLF;
              start = start + 1;
              break;
            }
          case C[425] || CT.C425:
            {
              assertCurrentChar(10, "LF");
              this[S._state$2] = decoder._State.end;
              start = start + 1;
              break;
            }
          case C[426] || CT.C426:
            {
              dart.throw(new core.FormatException.new("Expected no more data.", bytes, start));
            }
        }
      }
      return buffer.buffer[S.$asUint8List](0, buffer.length);
    }
    [S._digitForByte](bytes, index) {
      let byte = bytes[S$.$_get](index);
      let digit = (48 ^ byte) >>> 0;
      if (digit <= 9) {
        if (digit >= 0) return digit;
      } else {
        let letter = (32 | byte) >>> 0;
        if (97 <= letter && letter <= 102) return letter - 97 + 10;
      }
      dart.throw(new core.FormatException.new("Invalid hexadecimal byte 0x" + byte[S$0.$toRadixString](16)[S.$toUpperCase]() + ".", bytes, index));
    }
  };
  (decoder._Sink.new = function(_sink) {
    this[S._state$2] = decoder._State.boundary;
    this[S.___Sink__size] = null;
    this[S._sink] = _sink;
    decoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = decoder._Sink.prototype;
  dart.addTypeTests(decoder._Sink);
  dart.addTypeCaches(decoder._Sink);
  dart.setMethodSignature(decoder._Sink, () => ({
    __proto__: dart.getMethods(decoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, []),
    [S._close]: dart.fnType(dart.void, [], [dart.nullable(core.List$(core.int)), dart.nullable(core.int)]),
    [S._decode]: dart.fnType(typed_data.Uint8List, [core.List$(core.int), core.int, core.int]),
    [S._digitForByte]: dart.fnType(core.int, [core.List$(core.int), core.int])
  }));
  dart.setGetterSignature(decoder._Sink, () => ({
    __proto__: dart.getGetters(decoder._Sink.__proto__),
    [S._size]: core.int
  }));
  dart.setSetterSignature(decoder._Sink, () => ({
    __proto__: dart.getSetters(decoder._Sink.__proto__),
    [S._size]: core.int
  }));
  dart.setLibraryUri(decoder._Sink, I[256]);
  dart.setFieldSignature(decoder._Sink, () => ({
    __proto__: dart.getFields(decoder._Sink.__proto__),
    [S._sink]: dart.finalFieldType(core.Sink$(core.List$(core.int))),
    [S._state$2]: dart.fieldType(decoder._State),
    [S.___Sink__size]: dart.fieldType(dart.nullable(core.int))
  }));
  decoder._State = class _State extends core.Object {
    get [S._name$2]() {
      return this[S._name$1];
    }
    set [S._name$2](value) {
      super[S._name$2] = value;
    }
    static ['_#_#tearOff'](_name) {
      return new decoder._State.__(_name);
    }
    toString() {
      return this[S._name$2];
    }
  };
  (decoder._State.__ = function(_name) {
    this[S._name$1] = _name;
    ;
  }).prototype = decoder._State.prototype;
  dart.addTypeTests(decoder._State);
  dart.addTypeCaches(decoder._State);
  dart.setLibraryUri(decoder._State, I[256]);
  dart.setFieldSignature(decoder._State, () => ({
    __proto__: dart.getFields(decoder._State.__proto__),
    [S._name$2]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(decoder._State, () => ['boundary', 'size', 'sizeBeforeLF', 'body', 'bodyBeforeCR', 'bodyBeforeLF', 'endBeforeCR', 'endBeforeLF', 'end']);
  dart.defineExtensionMethods(decoder._State, ['toString']);
  dart.defineLazy(decoder._State, {
    /*decoder._State.boundary*/get boundary() {
      return C[418] || CT.C418;
    },
    /*decoder._State.size*/get size() {
      return C[419] || CT.C419;
    },
    /*decoder._State.sizeBeforeLF*/get sizeBeforeLF() {
      return C[420] || CT.C420;
    },
    /*decoder._State.body*/get body() {
      return C[421] || CT.C421;
    },
    /*decoder._State.bodyBeforeCR*/get bodyBeforeCR() {
      return C[422] || CT.C422;
    },
    /*decoder._State.bodyBeforeLF*/get bodyBeforeLF() {
      return C[423] || CT.C423;
    },
    /*decoder._State.endBeforeCR*/get endBeforeCR() {
      return C[424] || CT.C424;
    },
    /*decoder._State.endBeforeLF*/get endBeforeLF() {
      return C[425] || CT.C425;
    },
    /*decoder._State.end*/get end() {
      return C[426] || CT.C426;
    }
  }, false);
  dart.defineLazy(decoder, {
    /*decoder.chunkedCodingDecoder*/get chunkedCodingDecoder() {
      return C[427] || CT.C427;
    }
  }, false);
  encoder.ChunkedCodingEncoder = class ChunkedCodingEncoder extends convert.Converter$(core.List$(core.int), core.List$(core.int)) {
    static ['_#_#tearOff']() {
      return new encoder.ChunkedCodingEncoder.__();
    }
    convert(input) {
      T$.ListOfint().as(input);
      return encoder._convert(input, 0, input[S$.$length], {isLast: true});
    }
    startChunkedConversion(sink) {
      T.SinkOfListOfint().as(sink);
      return new encoder._Sink.new(sink);
    }
  };
  (encoder.ChunkedCodingEncoder.__ = function() {
    encoder.ChunkedCodingEncoder.__proto__.new.call(this);
    ;
  }).prototype = encoder.ChunkedCodingEncoder.prototype;
  dart.addTypeTests(encoder.ChunkedCodingEncoder);
  dart.addTypeCaches(encoder.ChunkedCodingEncoder);
  dart.setMethodSignature(encoder.ChunkedCodingEncoder, () => ({
    __proto__: dart.getMethods(encoder.ChunkedCodingEncoder.__proto__),
    convert: dart.fnType(core.List$(core.int), [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(encoder.ChunkedCodingEncoder, I[257]);
  encoder._Sink = class _Sink extends convert.ByteConversionSinkBase {
    static ['_#new#tearOff'](_sink) {
      return new encoder._Sink.new(_sink);
    }
    add(chunk) {
      T$.ListOfint().as(chunk);
      this[S._sink$1].add(encoder._convert(chunk, 0, chunk[S$.$length]));
    }
    addSlice(chunk, start, end, isLast) {
      core.RangeError.checkValidRange(start, end, chunk[S$.$length]);
      this[S._sink$1].add(encoder._convert(chunk, start, end, {isLast: isLast}));
      if (isLast) this[S._sink$1].close();
    }
    close() {
      this[S._sink$1].add(encoder._doneChunk);
      this[S._sink$1].close();
    }
  };
  (encoder._Sink.new = function(_sink) {
    this[S._sink$1] = _sink;
    encoder._Sink.__proto__.new.call(this);
    ;
  }).prototype = encoder._Sink.prototype;
  dart.addTypeTests(encoder._Sink);
  dart.addTypeCaches(encoder._Sink);
  dart.setMethodSignature(encoder._Sink, () => ({
    __proto__: dart.getMethods(encoder._Sink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(encoder._Sink, I[257]);
  dart.setFieldSignature(encoder._Sink, () => ({
    __proto__: dart.getFields(encoder._Sink.__proto__),
    [S._sink$1]: dart.finalFieldType(core.Sink$(core.List$(core.int)))
  }));
  encoder._convert = function _convert(bytes, start, end, opts) {
    let t341, t341$, t341$0, t341$1;
    let isLast = opts && 'isLast' in opts ? opts.isLast : false;
    if (end === start) return isLast ? encoder._doneChunk : C[341] || CT.C341;
    let size = end - start;
    let sizeInHex = size[S$0.$toRadixString](16);
    let footerSize = isLast ? encoder._doneChunk[S$.$length] : 0;
    let list = _native_typed_data.NativeUint8List.new(sizeInHex.length + 4 + size + footerSize);
    list[S$0.$setRange](0, sizeInHex.length, sizeInHex[S$0.$codeUnits]);
    let cursor = sizeInHex.length;
    list[S$.$_set]((t341 = cursor, cursor = t341 + 1, t341), 13);
    list[S$.$_set]((t341$ = cursor, cursor = t341$ + 1, t341$), 10);
    list[S$0.$setRange](cursor, cursor + end - start, bytes, start);
    cursor = cursor + (end - start);
    list[S$.$_set]((t341$0 = cursor, cursor = t341$0 + 1, t341$0), 13);
    list[S$.$_set]((t341$1 = cursor, cursor = t341$1 + 1, t341$1), 10);
    if (isLast) {
      list[S$0.$setRange](list[S$.$length] - footerSize, list[S$.$length], encoder._doneChunk);
    }
    return list;
  };
  dart.defineLazy(encoder, {
    /*encoder.chunkedCodingEncoder*/get chunkedCodingEncoder() {
      return C[428] || CT.C428;
    },
    /*encoder._doneChunk*/get _doneChunk() {
      return _native_typed_data.NativeUint8List.fromList(T.JSArrayOfint().of([48, 13, 10, 13, 10]));
    }
  }, false);
  method_channel_firebase_storage.MethodChannelFirebaseStorage = class MethodChannelFirebaseStorage extends platform_interface_firebase_storage.FirebaseStoragePlatform {
    get maxOperationRetryTime() {
      return this[S.maxOperationRetryTime];
    }
    set maxOperationRetryTime(value) {
      this[S.maxOperationRetryTime] = value;
    }
    get maxUploadRetryTime() {
      return this[S.maxUploadRetryTime];
    }
    set maxUploadRetryTime(value) {
      this[S.maxUploadRetryTime] = value;
    }
    get maxDownloadRetryTime() {
      return this[S.maxDownloadRetryTime];
    }
    set maxDownloadRetryTime(value) {
      this[S.maxDownloadRetryTime] = value;
    }
    static ['_#new#tearOff'](opts) {
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return new method_channel_firebase_storage.MethodChannelFirebaseStorage.new({app: app, bucket: bucket});
    }
    static ['_#_#tearOff']() {
      return new method_channel_firebase_storage.MethodChannelFirebaseStorage.__();
    }
    static storageTaskChannel(id) {
      return new platform_channel.EventChannel.new(method_channel_firebase_storage.MethodChannelFirebaseStorage.storageMethodChannelName + "/" + "taskEvent" + "/" + id);
    }
    get pigeonFirebaseApp() {
      return new messages$46pigeon$1.PigeonStorageFirebaseApp.new({appName: this.app.name, bucket: this.bucket});
    }
    static _getInstanceKey(appName, bucket) {
      return appName + "|" + bucket;
    }
    static get instance() {
      return new method_channel_firebase_storage.MethodChannelFirebaseStorage.__();
    }
    static getPigeonReference(bucket, fullPath, name) {
      return new messages$46pigeon$1.PigeonStorageReference.new({bucket: bucket, fullPath: fullPath, name: name});
    }
    getPigeonFirebaseApp(appName) {
      return new messages$46pigeon$1.PigeonStorageFirebaseApp.new({appName: appName, bucket: this.bucket});
    }
    static getPigeonSettableMetaData(metaData) {
      if (metaData == null) {
        return new messages$46pigeon$1.PigeonSettableMetadata.new();
      }
      return new messages$46pigeon$1.PigeonSettableMetadata.new({cacheControl: metaData.cacheControl, contentDisposition: metaData.contentDisposition, contentEncoding: metaData.contentEncoding, contentLanguage: metaData.contentLanguage, contentType: metaData.contentType, customMetadata: metaData.customMetadata});
    }
    static get nextMethodChannelHandleId() {
      let t341;
      t341 = method_channel_firebase_storage.MethodChannelFirebaseStorage._methodChannelHandleId;
      method_channel_firebase_storage.MethodChannelFirebaseStorage._methodChannelHandleId = t341 + 1;
      return t341;
    }
    delegateFor(opts) {
      let t344, t343, t342, t341;
      let app = opts && 'app' in opts ? opts.app : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      let key = method_channel_firebase_storage.MethodChannelFirebaseStorage._getInstanceKey(app.name, bucket);
      t341 = method_channel_firebase_storage.MethodChannelFirebaseStorage._methodChannelFirebaseStorageInstances;
      t342 = key;
      t343 = t341[S$.$_get](t342);
      return t343 == null ? (t344 = new method_channel_firebase_storage.MethodChannelFirebaseStorage.new({app: app, bucket: bucket}), t341[S$.$_set](t342, t344), t344) : t343;
    }
    ref(path) {
      return new method_channel_reference.MethodChannelReference.new(this, path);
    }
    useStorageEmulator(host, port) {
      return async.async(dart.void, (function* useStorageEmulator() {
        this.emulatorHost = host;
        this.emulatorPort = port;
        try {
          return yield method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.useStorageEmulator(this.pigeonFirebaseApp, host, port);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let s = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, s);
          } else
            throw e$;
        }
      }).bind(this));
    }
    setMaxOperationRetryTime(time) {
      this.maxOperationRetryTime = time;
      method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.setMaxOperationRetryTime(this.pigeonFirebaseApp, time);
    }
    setMaxUploadRetryTime(time) {
      this.maxUploadRetryTime = time;
      method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.setMaxUploadRetryTime(this.pigeonFirebaseApp, time);
    }
    setMaxDownloadRetryTime(time) {
      this.maxDownloadRetryTime = time;
      method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.setMaxDownloadRetryTime(this.pigeonFirebaseApp, time);
    }
  };
  (method_channel_firebase_storage.MethodChannelFirebaseStorage.new = function(opts) {
    let app = opts && 'app' in opts ? opts.app : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    this[S.maxOperationRetryTime] = (C[139] || CT.C139).inMilliseconds;
    this[S.maxUploadRetryTime] = (C[138] || CT.C138).inMilliseconds;
    this[S.maxDownloadRetryTime] = (C[138] || CT.C138).inMilliseconds;
    method_channel_firebase_storage.MethodChannelFirebaseStorage.__proto__.new.call(this, {appInstance: app, bucket: bucket});
    ;
  }).prototype = method_channel_firebase_storage.MethodChannelFirebaseStorage.prototype;
  (method_channel_firebase_storage.MethodChannelFirebaseStorage.__ = function() {
    this[S.maxOperationRetryTime] = (C[139] || CT.C139).inMilliseconds;
    this[S.maxUploadRetryTime] = (C[138] || CT.C138).inMilliseconds;
    this[S.maxDownloadRetryTime] = (C[138] || CT.C138).inMilliseconds;
    method_channel_firebase_storage.MethodChannelFirebaseStorage.__proto__.new.call(this, {appInstance: null, bucket: ""});
    ;
  }).prototype = method_channel_firebase_storage.MethodChannelFirebaseStorage.prototype;
  dart.addTypeTests(method_channel_firebase_storage.MethodChannelFirebaseStorage);
  dart.addTypeCaches(method_channel_firebase_storage.MethodChannelFirebaseStorage);
  dart.setMethodSignature(method_channel_firebase_storage.MethodChannelFirebaseStorage, () => ({
    __proto__: dart.getMethods(method_channel_firebase_storage.MethodChannelFirebaseStorage.__proto__),
    getPigeonFirebaseApp: dart.fnType(messages$46pigeon$1.PigeonStorageFirebaseApp, [core.String])
  }));
  dart.setStaticMethodSignature(method_channel_firebase_storage.MethodChannelFirebaseStorage, () => ['storageTaskChannel', '_getInstanceKey', 'getPigeonReference', 'getPigeonSettableMetaData']);
  dart.setGetterSignature(method_channel_firebase_storage.MethodChannelFirebaseStorage, () => ({
    __proto__: dart.getGetters(method_channel_firebase_storage.MethodChannelFirebaseStorage.__proto__),
    pigeonFirebaseApp: messages$46pigeon$1.PigeonStorageFirebaseApp
  }));
  dart.setStaticGetterSignature(method_channel_firebase_storage.MethodChannelFirebaseStorage, () => ['instance', 'nextMethodChannelHandleId']);
  dart.setLibraryUri(method_channel_firebase_storage.MethodChannelFirebaseStorage, I[258]);
  dart.setFieldSignature(method_channel_firebase_storage.MethodChannelFirebaseStorage, () => ({
    __proto__: dart.getFields(method_channel_firebase_storage.MethodChannelFirebaseStorage.__proto__),
    maxOperationRetryTime: dart.fieldType(core.int),
    maxUploadRetryTime: dart.fieldType(core.int),
    maxDownloadRetryTime: dart.fieldType(core.int)
  }));
  dart.setStaticFieldSignature(method_channel_firebase_storage.MethodChannelFirebaseStorage, () => ['storageMethodChannelName', 'storageTaskEventName', 'pigeonChannel', 'channel', '_methodChannelFirebaseStorageInstances', '_methodChannelHandleId']);
  dart.defineLazy(method_channel_firebase_storage.MethodChannelFirebaseStorage, {
    /*method_channel_firebase_storage.MethodChannelFirebaseStorage.storageMethodChannelName*/get storageMethodChannelName() {
      return "plugins.flutter.io/firebase_storage";
    },
    /*method_channel_firebase_storage.MethodChannelFirebaseStorage.storageTaskEventName*/get storageTaskEventName() {
      return "taskEvent";
    },
    /*method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel*/get pigeonChannel() {
      return new messages$46pigeon$1.FirebaseStorageHostApi.new();
    },
    /*method_channel_firebase_storage.MethodChannelFirebaseStorage.channel*/get channel() {
      return C[429] || CT.C429;
    },
    /*method_channel_firebase_storage.MethodChannelFirebaseStorage._methodChannelFirebaseStorageInstances*/get _methodChannelFirebaseStorageInstances() {
      return new (T.IdentityMapOfString$MethodChannelFirebaseStorage()).new();
    },
    set _methodChannelFirebaseStorageInstances(value) {},
    /*method_channel_firebase_storage.MethodChannelFirebaseStorage._methodChannelHandleId*/get _methodChannelHandleId() {
      return 0;
    },
    set _methodChannelHandleId(value) {}
  }, false);
  pointer$.Pointer = class Pointer extends core.Object {
    static ['_#new#tearOff'](path) {
      return new pointer$.Pointer.new(path);
    }
    get isRoot() {
      return this.path === "/";
    }
    get path() {
      return this[S._path$3];
    }
    get name() {
      return this.path[S$.$split]("/")[S$0.$last];
    }
    get parent() {
      if (this.isRoot) {
        return null;
      }
      let chunks = this.path[S$.$split]("/");
      chunks[S$0.$removeLast]();
      return chunks[S$.$join]("/");
    }
    child(childPath) {
      let childPointer = new pointer$.Pointer.new(childPath);
      if (this.isRoot) {
        return childPointer.path;
      }
      return this.path + "/" + childPointer.path;
    }
  };
  (pointer$.Pointer.new = function(path) {
    let t342;
    this[S._path$3] = (t342 = path, t342 == null ? "/" : t342);
    if (this[S._path$3][S$.$isEmpty]) {
      this[S._path$3] = "/";
    } else {
      let _parsedPath = this[S._path$3];
      if (this[S._path$3].length > 1 && this[S._path$3][S$0.$endsWith]("/")) {
        _parsedPath = _parsedPath[S$0.$substring](0, _parsedPath.length - 1);
      }
      if (this[S._path$3][S$.$startsWith]("/") && this[S._path$3].length > 1) {
        _parsedPath = _parsedPath[S$0.$substring](1, _parsedPath.length);
      }
      this[S._path$3] = _parsedPath;
    }
  }).prototype = pointer$.Pointer.prototype;
  dart.addTypeTests(pointer$.Pointer);
  dart.addTypeCaches(pointer$.Pointer);
  dart.setMethodSignature(pointer$.Pointer, () => ({
    __proto__: dart.getMethods(pointer$.Pointer.__proto__),
    child: dart.fnType(core.String, [core.String])
  }));
  dart.setGetterSignature(pointer$.Pointer, () => ({
    __proto__: dart.getGetters(pointer$.Pointer.__proto__),
    isRoot: core.bool,
    path: core.String,
    name: core.String,
    parent: dart.nullable(core.String)
  }));
  dart.setLibraryUri(pointer$.Pointer, I[259]);
  dart.setFieldSignature(pointer$.Pointer, () => ({
    __proto__: dart.getFields(pointer$.Pointer.__proto__),
    [S._path$3]: dart.fieldType(core.String)
  }));
  client$.Client = class Client extends core.Object {
    static new() {
      let t342;
      t342 = client$.zoneClient;
      return t342 == null ? browser_client.createClient() : t342;
    }
    static ['_#new#tearOff']() {
      return client$.Client.new();
    }
  };
  (client$.Client[dart.mixinNew] = function() {
  }).prototype = client$.Client.prototype;
  dart.addTypeTests(client$.Client);
  dart.addTypeCaches(client$.Client);
  dart.setStaticMethodSignature(client$.Client, () => ['new']);
  dart.setLibraryUri(client$.Client, I[260]);
  client$.runWithClient = function runWithClient(R, body, clientFactory, opts) {
    let zoneSpecification = opts && 'zoneSpecification' in opts ? opts.zoneSpecification : null;
    return async.runZoned(R, body, {zoneValues: new (T.LinkedMapOfObjectN$ObjectN()).from([C[430] || CT.C430, async.Zone.current.bindCallback(client$.Client, clientFactory)]), zoneSpecification: zoneSpecification});
  };
  dart.copyProperties(client$, {
    get zoneClient() {
      let client = async.Zone.current._get(C[430] || CT.C430);
      return client == null ? null : T.VoidToClient().as(client)();
    }
  });
  exception$1.ClientException = class ClientException extends core.Object {
    get message() {
      return this[S.message$2];
    }
    set message(value) {
      super.message = value;
    }
    get uri() {
      return this[S.uri];
    }
    set uri(value) {
      super.uri = value;
    }
    static ['_#new#tearOff'](message, uri = null) {
      return new exception$1.ClientException.new(message, uri);
    }
    toString() {
      return this.message;
    }
  };
  (exception$1.ClientException.new = function(message, uri = null) {
    this[S.message$2] = message;
    this[S.uri] = uri;
    ;
  }).prototype = exception$1.ClientException.prototype;
  dart.addTypeTests(exception$1.ClientException);
  dart.addTypeCaches(exception$1.ClientException);
  exception$1.ClientException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(exception$1.ClientException, I[261]);
  dart.setFieldSignature(exception$1.ClientException, () => ({
    __proto__: dart.getFields(exception$1.ClientException.__proto__),
    message: dart.finalFieldType(core.String),
    uri: dart.finalFieldType(dart.nullable(core.Uri))
  }));
  dart.defineExtensionMethods(exception$1.ClientException, ['toString']);
  base_request.BaseRequest = class BaseRequest extends core.Object {
    get method() {
      return this[S.method];
    }
    set method(value) {
      super.method = value;
    }
    get url() {
      return this[S.url$2];
    }
    set url(value) {
      super.url = value;
    }
    get headers() {
      return this[S.headers$1];
    }
    set headers(value) {
      super.headers = value;
    }
    get contentLength() {
      return this[S._contentLength];
    }
    set contentLength(value) {
      if (value != null && dart.notNull(value) < 0) {
        dart.throw(new core.ArgumentError.new("Invalid content length " + dart.str(value) + "."));
      }
      this[S._checkFinalized$1]();
      this[S._contentLength] = value;
    }
    get persistentConnection() {
      return this[S._persistentConnection];
    }
    set persistentConnection(value) {
      this[S._checkFinalized$1]();
      this[S._persistentConnection] = value;
    }
    get followRedirects() {
      return this[S._followRedirects];
    }
    set followRedirects(value) {
      this[S._checkFinalized$1]();
      this[S._followRedirects] = value;
    }
    get maxRedirects() {
      return this[S._maxRedirects];
    }
    set maxRedirects(value) {
      this[S._checkFinalized$1]();
      this[S._maxRedirects] = value;
    }
    get finalized() {
      return this[S._finalized];
    }
    static _validateMethod(method) {
      if (!base_request.BaseRequest._tokenRE.hasMatch(method)) {
        dart.throw(new core.ArgumentError.value(method, "method", "Not a valid method"));
      }
      return method;
    }
    finalize() {
      if (this.finalized) dart.throw(new core.StateError.new("Can't finalize a finalized Request."));
      this[S._finalized] = true;
      return C[431] || CT.C431;
    }
    send() {
      return async.async(streamed_response.StreamedResponse, (function* send() {
        let client = client$.Client.new();
        try {
          let response = (yield client.send(this));
          let stream = utils$5.onDone(T$.ListOfint(), response.stream, dart.bind(client, 'close'));
          return new streamed_response.StreamedResponse.new(new byte_stream.ByteStream.new(stream), response.statusCode, {contentLength: response.contentLength, request: response.request, headers: response.headers, isRedirect: response.isRedirect, persistentConnection: response.persistentConnection, reasonPhrase: response.reasonPhrase});
        } catch (e) {
          let _ = dart.getThrown(e);
          if (core.Object.is(_)) {
            client.close();
            dart.rethrow(e);
          } else
            throw e;
        }
      }).bind(this));
    }
    [S._checkFinalized$1]() {
      if (!this.finalized) return;
      dart.throw(new core.StateError.new("Can't modify a finalized Request."));
    }
    toString() {
      return this.method + " " + dart.str(this.url);
    }
  };
  (base_request.BaseRequest.new = function(method, url) {
    this[S._contentLength] = null;
    this[S._persistentConnection] = true;
    this[S._followRedirects] = true;
    this[S._maxRedirects] = 5;
    this[S._finalized] = false;
    this[S.url$2] = url;
    this[S.method] = base_request.BaseRequest._validateMethod(method);
    this[S.headers$1] = T$.LinkedHashMapOfString$String().new({equals: dart.fn((key1, key2) => key1[S$.$toLowerCase]() === key2[S$.$toLowerCase](), T.StringAndStringTobool()), hashCode: dart.fn(key => key[S$.$toLowerCase]()[S$.$hashCode], T.StringToint())});
    ;
  }).prototype = base_request.BaseRequest.prototype;
  dart.addTypeTests(base_request.BaseRequest);
  dart.addTypeCaches(base_request.BaseRequest);
  dart.setMethodSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getMethods(base_request.BaseRequest.__proto__),
    finalize: dart.fnType(byte_stream.ByteStream, []),
    send: dart.fnType(async.Future$(streamed_response.StreamedResponse), []),
    [S._checkFinalized$1]: dart.fnType(dart.void, [])
  }));
  dart.setStaticMethodSignature(base_request.BaseRequest, () => ['_validateMethod']);
  dart.setGetterSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getGetters(base_request.BaseRequest.__proto__),
    contentLength: dart.nullable(core.int),
    persistentConnection: core.bool,
    followRedirects: core.bool,
    maxRedirects: core.int,
    finalized: core.bool
  }));
  dart.setSetterSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getSetters(base_request.BaseRequest.__proto__),
    contentLength: dart.nullable(core.int),
    persistentConnection: core.bool,
    followRedirects: core.bool,
    maxRedirects: core.int
  }));
  dart.setLibraryUri(base_request.BaseRequest, I[262]);
  dart.setFieldSignature(base_request.BaseRequest, () => ({
    __proto__: dart.getFields(base_request.BaseRequest.__proto__),
    method: dart.finalFieldType(core.String),
    url: dart.finalFieldType(core.Uri),
    [S._contentLength]: dart.fieldType(dart.nullable(core.int)),
    [S._persistentConnection]: dart.fieldType(core.bool),
    [S._followRedirects]: dart.fieldType(core.bool),
    [S._maxRedirects]: dart.fieldType(core.int),
    headers: dart.finalFieldType(core.Map$(core.String, core.String)),
    [S._finalized]: dart.fieldType(core.bool)
  }));
  dart.setStaticFieldSignature(base_request.BaseRequest, () => ['_tokenRE']);
  dart.defineExtensionMethods(base_request.BaseRequest, ['toString']);
  dart.defineLazy(base_request.BaseRequest, {
    /*base_request.BaseRequest._tokenRE*/get _tokenRE() {
      return core.RegExp.new("^[\\w!#%&'*+\\-.^`|~]+$");
    }
  }, false);
  request$.Request = class Request extends base_request.BaseRequest {
    get contentLength() {
      return this.bodyBytes[S$.$length];
    }
    set contentLength(value) {
      dart.throw(new core.UnsupportedError.new("Cannot set the contentLength property of " + "non-streaming Request objects."));
    }
    get encoding() {
      if (this[S._contentType] == null || !dart.nullCheck(this[S._contentType]).parameters[S$.$containsKey]("charset")) {
        return this[S._defaultEncoding];
      }
      return utils$5.requiredEncodingForCharset(dart.nullCheck(dart.nullCheck(this[S._contentType]).parameters[S$.$_get]("charset")));
    }
    set encoding(value) {
      this[S._checkFinalized]();
      this[S._defaultEncoding] = value;
      let contentType = this[S._contentType];
      if (contentType == null) return;
      this[S._contentType] = contentType.change({parameters: new (T$.IdentityMapOfString$String()).from(["charset", value.name])});
    }
    get bodyBytes() {
      return this[S._bodyBytes];
    }
    set bodyBytes(value) {
      this[S._checkFinalized]();
      this[S._bodyBytes] = utils$5.toUint8List(value);
    }
    get body() {
      return this.encoding.decode(this.bodyBytes);
    }
    set body(value) {
      this.bodyBytes = this.encoding.encode(value);
      let contentType = this[S._contentType];
      if (contentType == null) {
        this[S._contentType] = new media_type.MediaType.new("text", "plain", new (T$.IdentityMapOfString$String()).from(["charset", this.encoding.name]));
      } else if (!contentType.parameters[S$.$containsKey]("charset")) {
        this[S._contentType] = contentType.change({parameters: new (T$.IdentityMapOfString$String()).from(["charset", this.encoding.name])});
      }
    }
    get bodyFields() {
      let contentType = this[S._contentType];
      if (contentType == null || contentType.mimeType !== "application/x-www-form-urlencoded") {
        dart.throw(new core.StateError.new("Cannot access the body fields of a Request without " + "content-type \"application/x-www-form-urlencoded\"."));
      }
      return core.Uri.splitQueryString(this.body, {encoding: this.encoding});
    }
    set bodyFields(fields) {
      let contentType = this[S._contentType];
      if (contentType == null) {
        this[S._contentType] = new media_type.MediaType.new("application", "x-www-form-urlencoded");
      } else if (contentType.mimeType !== "application/x-www-form-urlencoded") {
        dart.throw(new core.StateError.new("Cannot set the body fields of a Request with " + "content-type \"" + contentType.mimeType + "\"."));
      }
      this.body = utils$5.mapToQuery(fields, {encoding: this.encoding});
    }
    static ['_#new#tearOff'](method, url) {
      return new request$.Request.new(method, url);
    }
    finalize() {
      super.finalize();
      return byte_stream.ByteStream.fromBytes(this.bodyBytes);
    }
    get [S._contentType]() {
      let contentType = this.headers[S$.$_get]("content-type");
      if (contentType == null) return null;
      return media_type.MediaType.parse(contentType);
    }
    set [S._contentType](value) {
      if (value == null) {
        this.headers[S$.$remove]("content-type");
      } else {
        this.headers[S$.$_set]("content-type", dart.toString(value));
      }
    }
    [S._checkFinalized]() {
      if (!this.finalized) return;
      dart.throw(new core.StateError.new("Can't modify a finalized Request."));
    }
  };
  (request$.Request.new = function(method, url) {
    this[S._defaultEncoding] = convert.utf8;
    this[S._bodyBytes] = _native_typed_data.NativeUint8List.new(0);
    request$.Request.__proto__.new.call(this, method, url);
    ;
  }).prototype = request$.Request.prototype;
  dart.addTypeTests(request$.Request);
  dart.addTypeCaches(request$.Request);
  dart.setMethodSignature(request$.Request, () => ({
    __proto__: dart.getMethods(request$.Request.__proto__),
    [S._checkFinalized]: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(request$.Request, () => ({
    __proto__: dart.getGetters(request$.Request.__proto__),
    contentLength: core.int,
    encoding: convert.Encoding,
    bodyBytes: typed_data.Uint8List,
    body: core.String,
    bodyFields: core.Map$(core.String, core.String),
    [S._contentType]: dart.nullable(media_type.MediaType)
  }));
  dart.setSetterSignature(request$.Request, () => ({
    __proto__: dart.getSetters(request$.Request.__proto__),
    encoding: convert.Encoding,
    bodyBytes: core.List$(core.int),
    body: core.String,
    bodyFields: core.Map$(core.String, core.String),
    [S._contentType]: dart.nullable(media_type.MediaType)
  }));
  dart.setLibraryUri(request$.Request, I[263]);
  dart.setFieldSignature(request$.Request, () => ({
    __proto__: dart.getFields(request$.Request.__proto__),
    [S._defaultEncoding]: dart.fieldType(convert.Encoding),
    [S._bodyBytes]: dart.fieldType(typed_data.Uint8List)
  }));
  base_response.BaseResponse = class BaseResponse extends core.Object {
    get request() {
      return this[S.request];
    }
    set request(value) {
      super.request = value;
    }
    get statusCode() {
      return this[S.statusCode];
    }
    set statusCode(value) {
      super.statusCode = value;
    }
    get reasonPhrase() {
      return this[S.reasonPhrase];
    }
    set reasonPhrase(value) {
      super.reasonPhrase = value;
    }
    get contentLength() {
      return this[S.contentLength];
    }
    set contentLength(value) {
      super.contentLength = value;
    }
    get headers() {
      return this[S.headers$2];
    }
    set headers(value) {
      super.headers = value;
    }
    get isRedirect() {
      return this[S.isRedirect];
    }
    set isRedirect(value) {
      super.isRedirect = value;
    }
    get persistentConnection() {
      return this[S.persistentConnection];
    }
    set persistentConnection(value) {
      super.persistentConnection = value;
    }
  };
  (base_response.BaseResponse.new = function(statusCode, opts) {
    let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[433] || CT.C433;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[S.statusCode] = statusCode;
    this[S.contentLength] = contentLength;
    this[S.request] = request;
    this[S.headers$2] = headers;
    this[S.isRedirect] = isRedirect;
    this[S.persistentConnection] = persistentConnection;
    this[S.reasonPhrase] = reasonPhrase;
    if (this.statusCode < 100) {
      dart.throw(new core.ArgumentError.new("Invalid status code " + dart.str(this.statusCode) + "."));
    } else if (this.contentLength != null && dart.nullCheck(this.contentLength) < 0) {
      dart.throw(new core.ArgumentError.new("Invalid content length " + dart.str(this.contentLength) + "."));
    }
  }).prototype = base_response.BaseResponse.prototype;
  dart.addTypeTests(base_response.BaseResponse);
  dart.addTypeCaches(base_response.BaseResponse);
  dart.setLibraryUri(base_response.BaseResponse, I[264]);
  dart.setFieldSignature(base_response.BaseResponse, () => ({
    __proto__: dart.getFields(base_response.BaseResponse.__proto__),
    request: dart.finalFieldType(dart.nullable(base_request.BaseRequest)),
    statusCode: dart.finalFieldType(core.int),
    reasonPhrase: dart.finalFieldType(dart.nullable(core.String)),
    contentLength: dart.finalFieldType(dart.nullable(core.int)),
    headers: dart.finalFieldType(core.Map$(core.String, core.String)),
    isRedirect: dart.finalFieldType(core.bool),
    persistentConnection: dart.finalFieldType(core.bool)
  }));
  response$.Response = class Response extends base_response.BaseResponse {
    get bodyBytes() {
      return this[S.bodyBytes];
    }
    set bodyBytes(value) {
      super.bodyBytes = value;
    }
    get body() {
      return response$._encodingForHeaders(this.headers).decode(this.bodyBytes);
    }
    static ['_#new#tearOff'](body, statusCode, opts) {
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : C[433] || CT.C433;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new response$.Response.new(body, statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
    static ['_#bytes#tearOff'](bodyBytes, statusCode, opts) {
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : null;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : null;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new response$.Response.bytes(bodyBytes, statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
    static fromStream(response) {
      return async.async(response$.Response, function* fromStream() {
        let body = (yield response.stream.toBytes());
        return new response$.Response.bytes(body, response.statusCode, {request: response.request, headers: response.headers, isRedirect: response.isRedirect, persistentConnection: response.persistentConnection, reasonPhrase: response.reasonPhrase});
      });
    }
  };
  (response$.Response.new = function(body, statusCode, opts) {
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[433] || CT.C433;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    response$.Response.bytes.call(this, response$._encodingForHeaders(headers).encode(body), statusCode, {request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
  }).prototype = response$.Response.prototype;
  (response$.Response.bytes = function(bodyBytes, statusCode, opts) {
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[433] || CT.C433;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[S.bodyBytes] = utils$5.toUint8List(bodyBytes);
    response$.Response.__proto__.new.call(this, statusCode, {contentLength: bodyBytes[S$.$length], request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    ;
  }).prototype = response$.Response.prototype;
  dart.addTypeTests(response$.Response);
  dart.addTypeCaches(response$.Response);
  dart.setStaticMethodSignature(response$.Response, () => ['fromStream']);
  dart.setGetterSignature(response$.Response, () => ({
    __proto__: dart.getGetters(response$.Response.__proto__),
    body: core.String
  }));
  dart.setLibraryUri(response$.Response, I[265]);
  dart.setFieldSignature(response$.Response, () => ({
    __proto__: dart.getFields(response$.Response.__proto__),
    bodyBytes: dart.finalFieldType(typed_data.Uint8List)
  }));
  response$._encodingForHeaders = function _encodingForHeaders(headers) {
    return utils$5.encodingForCharset(response$._contentTypeForHeaders(headers).parameters[S$.$_get]("charset"));
  };
  response$._contentTypeForHeaders = function _contentTypeForHeaders(headers) {
    let contentType = headers[S$.$_get]("content-type");
    if (contentType != null) return media_type.MediaType.parse(contentType);
    return new media_type.MediaType.new("application", "octet-stream");
  };
  streamed_request.StreamedRequest = class StreamedRequest extends base_request.BaseRequest {
    get sink() {
      return this[S._controller$2].sink;
    }
    static ['_#new#tearOff'](method, url) {
      return new streamed_request.StreamedRequest.new(method, url);
    }
    finalize() {
      super.finalize();
      return new byte_stream.ByteStream.new(this[S._controller$2].stream);
    }
  };
  (streamed_request.StreamedRequest.new = function(method, url) {
    this[S._controller$2] = T.StreamControllerOfListOfint().new({sync: true});
    streamed_request.StreamedRequest.__proto__.new.call(this, method, url);
    ;
  }).prototype = streamed_request.StreamedRequest.prototype;
  dart.addTypeTests(streamed_request.StreamedRequest);
  dart.addTypeCaches(streamed_request.StreamedRequest);
  dart.setGetterSignature(streamed_request.StreamedRequest, () => ({
    __proto__: dart.getGetters(streamed_request.StreamedRequest.__proto__),
    sink: async.EventSink$(core.List$(core.int))
  }));
  dart.setLibraryUri(streamed_request.StreamedRequest, I[266]);
  dart.setFieldSignature(streamed_request.StreamedRequest, () => ({
    __proto__: dart.getFields(streamed_request.StreamedRequest.__proto__),
    [S._controller$2]: dart.finalFieldType(async.StreamController$(core.List$(core.int)))
  }));
  base_client.BaseClient = class BaseClient extends core.Object {
    head(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return this[S._sendUnstreamed]("HEAD", url, headers);
    }
    get(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return this[S._sendUnstreamed]("GET", url, headers);
    }
    post(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[S._sendUnstreamed]("POST", url, headers, body, encoding);
    }
    put(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[S._sendUnstreamed]("PUT", url, headers, body, encoding);
    }
    patch(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[S._sendUnstreamed]("PATCH", url, headers, body, encoding);
    }
    delete(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let body = opts && 'body' in opts ? opts.body : null;
      let encoding = opts && 'encoding' in opts ? opts.encoding : null;
      return this[S._sendUnstreamed]("DELETE", url, headers, body, encoding);
    }
    read(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return async.async(core.String, (function* read() {
        let response = (yield this.get(url, {headers: headers}));
        this[S._checkResponseSuccess](url, response);
        return response.body;
      }).bind(this));
    }
    readBytes(url, opts) {
      let headers = opts && 'headers' in opts ? opts.headers : null;
      return async.async(typed_data.Uint8List, (function* readBytes() {
        let response = (yield this.get(url, {headers: headers}));
        this[S._checkResponseSuccess](url, response);
        return response.bodyBytes;
      }).bind(this));
    }
    [S._sendUnstreamed](method, url, headers, body = null, encoding = null) {
      return async.async(response$.Response, (function* _sendUnstreamed() {
        let request = new request$.Request.new(method, url);
        if (headers != null) request.headers[S$.$addAll](headers);
        if (encoding != null) request.encoding = encoding;
        if (body != null) {
          if (typeof body == 'string') {
            request.body = body;
          } else if (core.List.is(body)) {
            request.bodyBytes = body[S$.$cast](core.int);
          } else if (core.Map.is(body)) {
            request.bodyFields = body[S$.$cast](core.String, core.String);
          } else {
            dart.throw(new core.ArgumentError.new("Invalid request body \"" + dart.str(body) + "\"."));
          }
        }
        return response$.Response.fromStream(yield this.send(request));
      }).bind(this));
    }
    [S._checkResponseSuccess](url, response) {
      if (response.statusCode < 400) return;
      let message = "Request to " + dart.str(url) + " failed with status " + dart.str(response.statusCode);
      if (response.reasonPhrase != null) {
        message = message + ": " + dart.str(response.reasonPhrase);
      }
      dart.throw(new exception$1.ClientException.new(message + ".", url));
    }
    close() {
    }
  };
  (base_client.BaseClient.new = function() {
    ;
  }).prototype = base_client.BaseClient.prototype;
  dart.addTypeTests(base_client.BaseClient);
  dart.addTypeCaches(base_client.BaseClient);
  base_client.BaseClient[dart.implements] = () => [client$.Client];
  dart.setMethodSignature(base_client.BaseClient, () => ({
    __proto__: dart.getMethods(base_client.BaseClient.__proto__),
    head: dart.fnType(async.Future$(response$.Response), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    get: dart.fnType(async.Future$(response$.Response), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    post: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    put: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    patch: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    delete: dart.fnType(async.Future$(response$.Response), [core.Uri], {body: dart.nullable(core.Object), encoding: dart.nullable(convert.Encoding), headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    read: dart.fnType(async.Future$(core.String), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    readBytes: dart.fnType(async.Future$(typed_data.Uint8List), [core.Uri], {headers: dart.nullable(core.Map$(core.String, core.String))}, {}),
    [S._sendUnstreamed]: dart.fnType(async.Future$(response$.Response), [core.String, core.Uri, dart.nullable(core.Map$(core.String, core.String))], [dart.nullable(core.Object), dart.nullable(convert.Encoding)]),
    [S._checkResponseSuccess]: dart.fnType(dart.void, [core.Uri, response$.Response]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setLibraryUri(base_client.BaseClient, I[267]);
  byte_stream.ByteStream = class ByteStream extends async.StreamView$(core.List$(core.int)) {
    static ['_#new#tearOff'](stream) {
      return new byte_stream.ByteStream.new(stream);
    }
    static fromBytes(bytes) {
      return new byte_stream.ByteStream.new(T$.StreamOfListOfint().value(bytes));
    }
    static ['_#fromBytes#tearOff'](bytes) {
      return byte_stream.ByteStream.fromBytes(bytes);
    }
    toBytes() {
      let completer = T.CompleterOfUint8List().new();
      let sink = new convert._ByteCallbackSink.new(dart.fn(bytes => completer.complete(_native_typed_data.NativeUint8List.fromList(bytes)), T.ListOfintTovoid()));
      this.listen(T.ListOfintTovoid().as(dart.bind(sink, 'add')), {onError: dart.bind(completer, 'completeError'), onDone: dart.bind(sink, 'close'), cancelOnError: true});
      return completer.future;
    }
    bytesToString(encoding = C[434] || CT.C434) {
      return encoding.decodeStream(this);
    }
    toStringStream(encoding = C[434] || CT.C434) {
      return encoding.decoder.bind(this);
    }
  };
  (byte_stream.ByteStream.new = function(stream) {
    byte_stream.ByteStream.__proto__.new.call(this, stream);
    ;
  }).prototype = byte_stream.ByteStream.prototype;
  dart.addTypeTests(byte_stream.ByteStream);
  dart.addTypeCaches(byte_stream.ByteStream);
  dart.setMethodSignature(byte_stream.ByteStream, () => ({
    __proto__: dart.getMethods(byte_stream.ByteStream.__proto__),
    toBytes: dart.fnType(async.Future$(typed_data.Uint8List), []),
    bytesToString: dart.fnType(async.Future$(core.String), [], [convert.Encoding]),
    toStringStream: dart.fnType(async.Stream$(core.String), [], [convert.Encoding])
  }));
  dart.setStaticMethodSignature(byte_stream.ByteStream, () => ['fromBytes']);
  dart.setLibraryUri(byte_stream.ByteStream, I[268]);
  multipart_file.MultipartFile = class MultipartFile extends core.Object {
    get field() {
      return this[S.field$4];
    }
    set field(value) {
      super.field = value;
    }
    get length() {
      return this[S.length];
    }
    set length(value) {
      super.length = value;
    }
    get filename() {
      return this[S.filename];
    }
    set filename(value) {
      super.filename = value;
    }
    get contentType() {
      return this[S.contentType$1];
    }
    set contentType(value) {
      super.contentType = value;
    }
    get isFinalized() {
      return this[S._isFinalized];
    }
    static ['_#new#tearOff'](field, stream, length, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return new multipart_file.MultipartFile.new(field, stream, length, {filename: filename, contentType: contentType});
    }
    static fromBytes(field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let stream = byte_stream.ByteStream.fromBytes(value);
      return new multipart_file.MultipartFile.new(field, stream, value[S$.$length], {filename: filename, contentType: contentType});
    }
    static ['_#fromBytes#tearOff'](field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file.MultipartFile.fromBytes(field, value, {filename: filename, contentType: contentType});
    }
    static fromString(field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      contentType == null ? contentType = new media_type.MediaType.new("text", "plain") : null;
      let encoding = utils$5.encodingForCharset(contentType.parameters[S$.$_get]("charset"), convert.utf8);
      contentType = contentType.change({parameters: new (T$.IdentityMapOfString$String()).from(["charset", encoding.name])});
      return multipart_file.MultipartFile.fromBytes(field, encoding.encode(value), {filename: filename, contentType: contentType});
    }
    static ['_#fromString#tearOff'](field, value, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file.MultipartFile.fromString(field, value, {filename: filename, contentType: contentType});
    }
    static fromPath(field, filePath, opts) {
      let filename = opts && 'filename' in opts ? opts.filename : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      return multipart_file_stub.multipartFileFromPath(field, filePath, {filename: filename, contentType: contentType});
    }
    finalize() {
      if (this.isFinalized) {
        dart.throw(new core.StateError.new("Can't finalize a finalized MultipartFile."));
      }
      this[S._isFinalized] = true;
      return this[S._stream$1];
    }
  };
  (multipart_file.MultipartFile.new = function(field, stream, length, opts) {
    let t343;
    let filename = opts && 'filename' in opts ? opts.filename : null;
    let contentType = opts && 'contentType' in opts ? opts.contentType : null;
    this[S._isFinalized] = false;
    this[S.field$4] = field;
    this[S.length] = length;
    this[S.filename] = filename;
    this[S._stream$1] = utils$5.toByteStream(stream);
    this[S.contentType$1] = (t343 = contentType, t343 == null ? new media_type.MediaType.new("application", "octet-stream") : t343);
    ;
  }).prototype = multipart_file.MultipartFile.prototype;
  dart.addTypeTests(multipart_file.MultipartFile);
  dart.addTypeCaches(multipart_file.MultipartFile);
  dart.setMethodSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getMethods(multipart_file.MultipartFile.__proto__),
    finalize: dart.fnType(byte_stream.ByteStream, [])
  }));
  dart.setStaticMethodSignature(multipart_file.MultipartFile, () => ['fromBytes', 'fromString', 'fromPath']);
  dart.setGetterSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getGetters(multipart_file.MultipartFile.__proto__),
    isFinalized: core.bool
  }));
  dart.setLibraryUri(multipart_file.MultipartFile, I[269]);
  dart.setFieldSignature(multipart_file.MultipartFile, () => ({
    __proto__: dart.getFields(multipart_file.MultipartFile.__proto__),
    field: dart.finalFieldType(core.String),
    length: dart.finalFieldType(core.int),
    filename: dart.finalFieldType(dart.nullable(core.String)),
    contentType: dart.finalFieldType(media_type.MediaType),
    [S._stream$1]: dart.finalFieldType(byte_stream.ByteStream),
    [S._isFinalized]: dart.fieldType(core.bool)
  }));
  multipart_request.MultipartRequest = class MultipartRequest extends base_request.BaseRequest {
    get fields() {
      return this[S.fields$1];
    }
    set fields(value) {
      super.fields = value;
    }
    get files() {
      return this[S.files$2];
    }
    set files(value) {
      super.files = value;
    }
    static ['_#new#tearOff'](method, url) {
      return new multipart_request.MultipartRequest.new(method, url);
    }
    get contentLength() {
      let length = 0;
      this.fields[S$.$forEach](dart.fn((name, value) => {
        length = length + ("--".length + 70 + "\r\n".length + convert.utf8.encode(this[S._headerForField](name, value))[S$.$length] + convert.utf8.encode(value)[S$.$length] + "\r\n".length);
      }, T$.StringAndStringTovoid()));
      for (let file of this.files) {
        length = length + ("--".length + 70 + "\r\n".length + convert.utf8.encode(this[S._headerForFile](file))[S$.$length] + file.length + "\r\n".length);
      }
      return length + "--".length + 70 + "--\r\n".length;
    }
    set contentLength(value) {
      dart.throw(new core.UnsupportedError.new("Cannot set the contentLength property of " + "multipart requests."));
    }
    finalize() {
      let boundary = this[S._boundaryString]();
      this.headers[S$.$_set]("content-type", "multipart/form-data; boundary=" + boundary);
      super.finalize();
      return new byte_stream.ByteStream.new(this[S._finalize](boundary));
    }
    [S._finalize](boundary) {
      return new (T$._AsyncStarImplOfListOfint()).new((function* _finalize(stream) {
        let line = C[435] || CT.C435;
        let separator = convert.utf8.encode("--" + boundary + "\r\n");
        let close = convert.utf8.encode("--" + boundary + "--\r\n");
        for (let field of this.fields[S$0.$entries]) {
          if (stream.add(separator)) return;
          yield;
          if (stream.add(convert.utf8.encode(this[S._headerForField](field.key, field.value)))) return;
          yield;
          if (stream.add(convert.utf8.encode(field.value))) return;
          yield;
          if (stream.add(line)) return;
          yield;
        }
        for (let file of this.files) {
          if (stream.add(separator)) return;
          yield;
          if (stream.add(convert.utf8.encode(this[S._headerForFile](file)))) return;
          yield;
          if (stream.addStream(file.finalize())) return;
          yield;
          if (stream.add(line)) return;
          yield;
        }
        if (stream.add(close)) return;
        yield;
      }).bind(this)).stream;
    }
    [S._headerForField](name, value) {
      let header = "content-disposition: form-data; name=\"" + this[S._browserEncode](name) + "\"";
      if (!utils$5.isPlainAscii(value)) {
        header = header + "\r\n" + "content-type: text/plain; charset=utf-8\r\n" + "content-transfer-encoding: binary";
      }
      return header + "\r\n\r\n";
    }
    [S._headerForFile](file) {
      let header = "content-type: " + dart.str(file.contentType) + "\r\n" + "content-disposition: form-data; name=\"" + this[S._browserEncode](file.field) + "\"";
      if (file.filename != null) {
        header = header + "; filename=\"" + this[S._browserEncode](dart.nullCheck(file.filename)) + "\"";
      }
      return header + "\r\n\r\n";
    }
    [S._browserEncode](value) {
      return value[S$.$replaceAll](multipart_request._newlineRegExp, "%0D%0A")[S$.$replaceAll]("\"", "%22");
    }
    [S._boundaryString]() {
      let prefix = "dart-http-boundary-";
      let list = T$.ListOfint().generate(70 - prefix.length, dart.fn(index => boundary_characters.boundaryCharacters[S$.$_get](multipart_request.MultipartRequest._random.nextInt(boundary_characters.boundaryCharacters[S$.$length])), T.intToint()), {growable: false});
      return prefix + core.String.fromCharCodes(list);
    }
  };
  (multipart_request.MultipartRequest.new = function(method, url) {
    this[S.fields$1] = new (T$.IdentityMapOfString$String()).new();
    this[S.files$2] = T.JSArrayOfMultipartFile().of([]);
    multipart_request.MultipartRequest.__proto__.new.call(this, method, url);
    ;
  }).prototype = multipart_request.MultipartRequest.prototype;
  dart.addTypeTests(multipart_request.MultipartRequest);
  dart.addTypeCaches(multipart_request.MultipartRequest);
  dart.setMethodSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getMethods(multipart_request.MultipartRequest.__proto__),
    [S._finalize]: dart.fnType(async.Stream$(core.List$(core.int)), [core.String]),
    [S._headerForField]: dart.fnType(core.String, [core.String, core.String]),
    [S._headerForFile]: dart.fnType(core.String, [multipart_file.MultipartFile]),
    [S._browserEncode]: dart.fnType(core.String, [core.String]),
    [S._boundaryString]: dart.fnType(core.String, [])
  }));
  dart.setGetterSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getGetters(multipart_request.MultipartRequest.__proto__),
    contentLength: core.int
  }));
  dart.setLibraryUri(multipart_request.MultipartRequest, I[270]);
  dart.setFieldSignature(multipart_request.MultipartRequest, () => ({
    __proto__: dart.getFields(multipart_request.MultipartRequest.__proto__),
    fields: dart.finalFieldType(core.Map$(core.String, core.String)),
    files: dart.finalFieldType(core.List$(multipart_file.MultipartFile))
  }));
  dart.setStaticFieldSignature(multipart_request.MultipartRequest, () => ['_boundaryLength', '_random']);
  dart.defineLazy(multipart_request.MultipartRequest, {
    /*multipart_request.MultipartRequest._boundaryLength*/get _boundaryLength() {
      return 70;
    },
    /*multipart_request.MultipartRequest._random*/get _random() {
      return math.Random.new();
    }
  }, false);
  dart.defineLazy(multipart_request, {
    /*multipart_request._newlineRegExp*/get _newlineRegExp() {
      return core.RegExp.new("\\r\\n|\\r|\\n");
    }
  }, false);
  streamed_response.StreamedResponse = class StreamedResponse extends base_response.BaseResponse {
    get stream() {
      return this[S.stream];
    }
    set stream(value) {
      super.stream = value;
    }
    static ['_#new#tearOff'](stream, statusCode, opts) {
      let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
      let request = opts && 'request' in opts ? opts.request : null;
      let headers = opts && 'headers' in opts ? opts.headers : null;
      let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : null;
      let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : null;
      let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
      return new streamed_response.StreamedResponse.new(stream, statusCode, {contentLength: contentLength, request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    }
  };
  (streamed_response.StreamedResponse.new = function(stream, statusCode, opts) {
    let contentLength = opts && 'contentLength' in opts ? opts.contentLength : null;
    let request = opts && 'request' in opts ? opts.request : null;
    let headers = opts && 'headers' in opts ? opts.headers : C[433] || CT.C433;
    let isRedirect = opts && 'isRedirect' in opts ? opts.isRedirect : false;
    let persistentConnection = opts && 'persistentConnection' in opts ? opts.persistentConnection : true;
    let reasonPhrase = opts && 'reasonPhrase' in opts ? opts.reasonPhrase : null;
    this[S.stream] = utils$5.toByteStream(stream);
    streamed_response.StreamedResponse.__proto__.new.call(this, statusCode, {contentLength: contentLength, request: request, headers: headers, isRedirect: isRedirect, persistentConnection: persistentConnection, reasonPhrase: reasonPhrase});
    ;
  }).prototype = streamed_response.StreamedResponse.prototype;
  dart.addTypeTests(streamed_response.StreamedResponse);
  dart.addTypeCaches(streamed_response.StreamedResponse);
  dart.setLibraryUri(streamed_response.StreamedResponse, I[271]);
  dart.setFieldSignature(streamed_response.StreamedResponse, () => ({
    __proto__: dart.getFields(streamed_response.StreamedResponse.__proto__),
    stream: dart.finalFieldType(byte_stream.ByteStream)
  }));
  task.fbTaskStateToTaskState = function fbTaskStateToTaskState(state) {
    return dart.nullCheck(task._fbTaskStateToTaskState[S$.$_get](state));
  };
  task.fbUploadTaskSnapshotToTaskSnapshot = function fbUploadTaskSnapshotToTaskSnapshot(reference, snapshot) {
    return new task_snapshot_web.TaskSnapshotWeb.new(reference, snapshot);
  };
  dart.defineLazy(task, {
    /*task._fbTaskStateToTaskState*/get _fbTaskStateToTaskState() {
      return new (T.LinkedMapOfTaskState$TaskState()).from([storage.TaskState.CANCELED, task_state.TaskState.canceled, storage.TaskState.ERROR, task_state.TaskState.error, storage.TaskState.PAUSED, task_state.TaskState.paused, storage.TaskState.RUNNING, task_state.TaskState.running, storage.TaskState.SUCCESS, task_state.TaskState.success]);
    },
    set _fbTaskStateToTaskState(value) {}
  }, false);
  list_result_web.ListResultWeb = class ListResultWeb extends platform_interface_list_result.ListResultPlatform {
    static ['_#new#tearOff'](storage, opts) {
      let nextPageToken = opts && 'nextPageToken' in opts ? opts.nextPageToken : null;
      let items = opts && 'items' in opts ? opts.items : null;
      let prefixes = opts && 'prefixes' in opts ? opts.prefixes : null;
      return new list_result_web.ListResultWeb.new(storage, {nextPageToken: nextPageToken, items: items, prefixes: prefixes});
    }
    get items() {
      return this[S._items][S$.$map](platform_interface_reference.ReferencePlatform, dart.bind(dart.nullCheck(this.storage), 'ref'))[S$.$toList]();
    }
    get prefixes() {
      return this[S._prefixes][S$.$map](platform_interface_reference.ReferencePlatform, dart.bind(dart.nullCheck(this.storage), 'ref'))[S$.$toList]();
    }
  };
  (list_result_web.ListResultWeb.new = function(storage, opts) {
    let t343, t343$;
    let nextPageToken = opts && 'nextPageToken' in opts ? opts.nextPageToken : null;
    let items = opts && 'items' in opts ? opts.items : null;
    let prefixes = opts && 'prefixes' in opts ? opts.prefixes : null;
    this[S._items] = (t343 = items, t343 == null ? T$.JSArrayOfString().of([]) : t343);
    this[S._prefixes] = (t343$ = prefixes, t343$ == null ? T$.JSArrayOfString().of([]) : t343$);
    list_result_web.ListResultWeb.__proto__.new.call(this, storage, nextPageToken);
    ;
  }).prototype = list_result_web.ListResultWeb.prototype;
  dart.addTypeTests(list_result_web.ListResultWeb);
  dart.addTypeCaches(list_result_web.ListResultWeb);
  dart.setLibraryUri(list_result_web.ListResultWeb, I[272]);
  dart.setFieldSignature(list_result_web.ListResultWeb, () => ({
    __proto__: dart.getFields(list_result_web.ListResultWeb.__proto__),
    [S._items]: dart.fieldType(core.List$(core.String)),
    [S._prefixes]: dart.fieldType(core.List$(core.String))
  }));
  base.XFileBase = class XFileBase extends core.Object {
    saveTo(path) {
      dart.throw(new core.UnimplementedError.new("saveTo has not been implemented."));
    }
    get path() {
      dart.throw(new core.UnimplementedError.new(".path has not been implemented."));
    }
    get name() {
      dart.throw(new core.UnimplementedError.new(".name has not been implemented."));
    }
    get mimeType() {
      dart.throw(new core.UnimplementedError.new(".mimeType has not been implemented."));
    }
    length() {
      dart.throw(new core.UnimplementedError.new(".length() has not been implemented."));
    }
    readAsString(opts) {
      let encoding = opts && 'encoding' in opts ? opts.encoding : C[434] || CT.C434;
      dart.throw(new core.UnimplementedError.new("readAsString() has not been implemented."));
    }
    readAsBytes() {
      dart.throw(new core.UnimplementedError.new("readAsBytes() has not been implemented."));
    }
    openRead(start = null, end = null) {
      dart.throw(new core.UnimplementedError.new("openRead() has not been implemented."));
    }
    lastModified() {
      dart.throw(new core.UnimplementedError.new("lastModified() has not been implemented."));
    }
  };
  (base.XFileBase.new = function(path) {
    ;
  }).prototype = base.XFileBase.prototype;
  dart.addTypeTests(base.XFileBase);
  dart.addTypeCaches(base.XFileBase);
  dart.setMethodSignature(base.XFileBase, () => ({
    __proto__: dart.getMethods(base.XFileBase.__proto__),
    saveTo: dart.fnType(async.Future$(dart.void), [core.String]),
    length: dart.fnType(async.Future$(core.int), []),
    readAsString: dart.fnType(async.Future$(core.String), [], {encoding: convert.Encoding}, {}),
    readAsBytes: dart.fnType(async.Future$(typed_data.Uint8List), []),
    openRead: dart.fnType(async.Stream$(typed_data.Uint8List), [], [dart.nullable(core.int), dart.nullable(core.int)]),
    lastModified: dart.fnType(async.Future$(core.DateTime), [])
  }));
  dart.setGetterSignature(base.XFileBase, () => ({
    __proto__: dart.getGetters(base.XFileBase.__proto__),
    path: core.String,
    name: core.String,
    mimeType: dart.nullable(core.String)
  }));
  dart.setLibraryUri(base.XFileBase, I[274]);
  html$.XFile = class XFile extends base.XFileBase {
    static ['_#new#tearOff'](path, opts) {
      let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let length = opts && 'length' in opts ? opts.length : null;
      let bytes = opts && 'bytes' in opts ? opts.bytes : null;
      let lastModified = opts && 'lastModified' in opts ? opts.lastModified : null;
      let overrides = opts && 'overrides' in opts ? opts.overrides : null;
      return new html$.XFile.new(path, {mimeType: mimeType, name: name, length: length, bytes: bytes, lastModified: lastModified, overrides: overrides});
    }
    static ['_#fromData#tearOff'](bytes, opts) {
      let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let length = opts && 'length' in opts ? opts.length : null;
      let lastModified = opts && 'lastModified' in opts ? opts.lastModified : null;
      let path = opts && 'path' in opts ? opts.path : null;
      let overrides = opts && 'overrides' in opts ? opts.overrides : null;
      return new html$.XFile.fromData(bytes, {mimeType: mimeType, name: name, length: length, lastModified: lastModified, path: path, overrides: overrides});
    }
    [S._createBlobFromBytes](bytes, mimeType) {
      return mimeType == null ? html.Blob.new([bytes]) : html.Blob.new([bytes], mimeType);
    }
    get [S._path$4]() {
      let t343;
      t343 = this[S.__XFile__path];
      return t343 == null ? dart.throw(new _internal.LateError.fieldNI("_path")) : t343;
    }
    set [S._path$4](_path$35param) {
      this[S.__XFile__path] = _path$35param;
    }
    get [S._target$2]() {
      let t343;
      t343 = this[S.__XFile__target];
      return t343 == null ? dart.throw(new _internal.LateError.fieldNI("_target")) : t343;
    }
    set [S._target$2](_target$35param) {
      this[S.__XFile__target] = _target$35param;
    }
    get [S._hasTestOverrides]() {
      return this[S._overrides$1] != null;
    }
    get mimeType() {
      return this[S._mimeType];
    }
    get name() {
      return this[S._name$3];
    }
    get path() {
      return this[S._path$4];
    }
    lastModified() {
      return async.async(core.DateTime, (function* lastModified() {
        return this[S._lastModified];
      }).bind(this));
    }
    get [S._blob]() {
      return async.async(html.Blob, (function* _blob() {
        if (this[S._browserBlob] != null) {
          return dart.nullCheck(this[S._browserBlob]);
        }
        if (web_helpers.isSafari() && this[S._length] != null && dart.nullCheck(this[S._length]) >= 4294967296) {
          dart.throw(core.Exception.new("Safari cannot handle XFiles larger than 4GB."));
        }
        let request = null;
        function request$35get() {
          let t344;
          t344 = request;
          return t344 == null ? dart.throw(new _internal.LateError.localNI("request")) : t344;
        }
        function request$35set(request$35param) {
          return request = request$35param;
        }
        try {
          request$35set(yield html.HttpRequest.request(this.path, {responseType: "blob"}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (html.ProgressEvent.is(e)) {
            if (e[S$.$type] === "error") {
              dart.throw(core.Exception.new("Could not load Blob from its URL. Has it been revoked?"));
            }
            dart.rethrow(e$);
          } else
            throw e$;
        }
        this[S._browserBlob] = T.BlobN().as(request$35get()[S.$response]);
        if (!(this[S._browserBlob] != null)) dart.assertFailed("The Blob backing this XFile cannot be null!", I[273], 147, 12, "_browserBlob != null");
        return dart.nullCheck(this[S._browserBlob]);
      }).bind(this));
    }
    readAsBytes() {
      return async.async(typed_data.Uint8List, (function* readAsBytes() {
        return this[S._blob].then(typed_data.Uint8List, dart.bind(this, S._blobToByteBuffer));
      }).bind(this));
    }
    length() {
      return async.async(core.int, (function* length() {
        let t347;
        t347 = this[S._length];
        return t347 == null ? (yield this[S._blob])[S$.$size] : t347;
      }).bind(this));
    }
    readAsString(opts) {
      let encoding = opts && 'encoding' in opts ? opts.encoding : C[434] || CT.C434;
      return async.async(core.String, (function* readAsString() {
        return this.readAsBytes().then(core.String, T.ListOfintToString().as(dart.bind(encoding, 'decode')));
      }).bind(this));
    }
    openRead(start = null, end = null) {
      return new (T._AsyncStarImplOfUint8List()).new((function* openRead(stream) {
        let t347, t347$;
        let blob = (yield this[S._blob]);
        let slice = blob[S$.$slice]((t347 = start, t347 == null ? 0 : t347), (t347$ = end, t347$ == null ? blob[S$.$size] : t347$), blob[S$.$type]);
        let convertedSlice = (yield this[S._blobToByteBuffer](slice));
        if (stream.add(convertedSlice)) return;
        yield;
      }).bind(this)).stream;
    }
    [S._blobToByteBuffer](blob) {
      return async.async(typed_data.Uint8List, function* _blobToByteBuffer() {
        let reader = html.FileReader.new();
        reader.readAsArrayBuffer(blob);
        yield reader[S$.$onLoadEnd].first;
        let result = T$.Uint8ListN().as(reader[S$.$result]);
        if (result == null) {
          dart.throw(core.Exception.new("Cannot read bytes from Blob. Is it still available?"));
        }
        return result;
      });
    }
    saveTo(path) {
      return async.async(dart.void, (function* saveTo() {
        let t349, t348, t347;
        this[S._target$2] = web_helpers.ensureInitialized("__x_file_dom_element");
        let element = this[S._hasTestOverrides] ? html.AnchorElement.as((t347 = dart.nullCheck(this[S._overrides$1]), t348 = this.path, t349 = this.name, t347.createAnchorElement(t348, t349))) : web_helpers.createAnchorElement(this.path, this.name);
        this[S._target$2][S$.$children][S$.$clear]();
        web_helpers.addElementToContainerAndClick(this[S._target$2], element);
      }).bind(this));
    }
  };
  (html$.XFile.new = function(path, opts) {
    let t343, t343$;
    let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let length = opts && 'length' in opts ? opts.length : null;
    let bytes = opts && 'bytes' in opts ? opts.bytes : null;
    let lastModified = opts && 'lastModified' in opts ? opts.lastModified : null;
    let overrides = opts && 'overrides' in opts ? opts.overrides : null;
    this[S.__XFile__path] = null;
    this[S._browserBlob] = null;
    this[S.__XFile__target] = null;
    this[S._mimeType] = mimeType;
    this[S.__XFile__path] = path;
    this[S._length] = length;
    this[S._overrides$1] = overrides;
    this[S._lastModified] = (t343 = lastModified, t343 == null ? new core.DateTime.fromMillisecondsSinceEpoch(0) : t343);
    this[S._name$3] = (t343$ = name, t343$ == null ? "" : t343$);
    html$.XFile.__proto__.new.call(this, path);
    if (bytes != null) {
      this[S._browserBlob] = this[S._createBlobFromBytes](bytes, mimeType);
    }
  }).prototype = html$.XFile.prototype;
  (html$.XFile.fromData = function(bytes, opts) {
    let t343, t343$;
    let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let length = opts && 'length' in opts ? opts.length : null;
    let lastModified = opts && 'lastModified' in opts ? opts.lastModified : null;
    let path = opts && 'path' in opts ? opts.path : null;
    let overrides = opts && 'overrides' in opts ? opts.overrides : null;
    this[S.__XFile__path] = null;
    this[S._browserBlob] = null;
    this[S.__XFile__target] = null;
    this[S._mimeType] = mimeType;
    this[S._length] = length;
    this[S._overrides$1] = overrides;
    this[S._lastModified] = (t343 = lastModified, t343 == null ? new core.DateTime.fromMillisecondsSinceEpoch(0) : t343);
    this[S._name$3] = (t343$ = name, t343$ == null ? "" : t343$);
    html$.XFile.__proto__.new.call(this, path);
    if (path == null) {
      this[S._browserBlob] = this[S._createBlobFromBytes](bytes, mimeType);
      this[S._path$4] = html.Url.createObjectUrl(this[S._browserBlob]);
    } else {
      this[S._path$4] = path;
    }
  }).prototype = html$.XFile.prototype;
  dart.addTypeTests(html$.XFile);
  dart.addTypeCaches(html$.XFile);
  dart.setMethodSignature(html$.XFile, () => ({
    __proto__: dart.getMethods(html$.XFile.__proto__),
    [S._createBlobFromBytes]: dart.fnType(html.Blob, [typed_data.Uint8List, dart.nullable(core.String)]),
    [S._blobToByteBuffer]: dart.fnType(async.Future$(typed_data.Uint8List), [html.Blob])
  }));
  dart.setGetterSignature(html$.XFile, () => ({
    __proto__: dart.getGetters(html$.XFile.__proto__),
    [S._path$4]: core.String,
    [S._target$2]: html.Element,
    [S._hasTestOverrides]: core.bool,
    [S._blob]: async.Future$(html.Blob)
  }));
  dart.setSetterSignature(html$.XFile, () => ({
    __proto__: dart.getSetters(html$.XFile.__proto__),
    [S._path$4]: core.String,
    [S._target$2]: html.Element
  }));
  dart.setLibraryUri(html$.XFile, I[275]);
  dart.setFieldSignature(html$.XFile, () => ({
    __proto__: dart.getFields(html$.XFile.__proto__),
    [S._mimeType]: dart.finalFieldType(dart.nullable(core.String)),
    [S._name$3]: dart.finalFieldType(core.String),
    [S.__XFile__path]: dart.fieldType(dart.nullable(core.String)),
    [S._length]: dart.finalFieldType(dart.nullable(core.int)),
    [S._lastModified]: dart.finalFieldType(core.DateTime),
    [S._browserBlob]: dart.fieldType(dart.nullable(html.Blob)),
    [S.__XFile__target]: dart.fieldType(dart.nullable(html.Element)),
    [S._overrides$1]: dart.finalFieldType(dart.nullable(html$.CrossFileTestOverrides))
  }));
  html$.CrossFileTestOverrides = class CrossFileTestOverrides extends core.Object {
    get createAnchorElement() {
      return this[S.createAnchorElement];
    }
    set createAnchorElement(value) {
      this[S.createAnchorElement] = value;
    }
    static ['_#new#tearOff'](opts) {
      let createAnchorElement = opts && 'createAnchorElement' in opts ? opts.createAnchorElement : null;
      return new html$.CrossFileTestOverrides.new({createAnchorElement: createAnchorElement});
    }
  };
  (html$.CrossFileTestOverrides.new = function(opts) {
    let createAnchorElement = opts && 'createAnchorElement' in opts ? opts.createAnchorElement : null;
    this[S.createAnchorElement] = createAnchorElement;
    ;
  }).prototype = html$.CrossFileTestOverrides.prototype;
  dart.addTypeTests(html$.CrossFileTestOverrides);
  dart.addTypeCaches(html$.CrossFileTestOverrides);
  dart.setLibraryUri(html$.CrossFileTestOverrides, I[275]);
  dart.setFieldSignature(html$.CrossFileTestOverrides, () => ({
    __proto__: dart.getFields(html$.CrossFileTestOverrides.__proto__),
    createAnchorElement: dart.fieldType(dart.fnType(html.Element, [core.String, core.String]))
  }));
  dart.defineLazy(html$, {
    /*html$._fourGigabytes*/get _fourGigabytes() {
      return 4294967296;
    }
  }, false);
  lost_data.LostData = class LostData extends core.Object {
    get file() {
      return this[S.file$1];
    }
    set file(value) {
      super.file = value;
    }
    get exception() {
      return this[S.exception$1];
    }
    set exception(value) {
      super.exception = value;
    }
    get type() {
      return this[S.type$9];
    }
    set type(value) {
      super.type = value;
    }
    static ['_#new#tearOff'](opts) {
      let file = opts && 'file' in opts ? opts.file : null;
      let exception = opts && 'exception' in opts ? opts.exception : null;
      let type = opts && 'type' in opts ? opts.type : null;
      return new lost_data.LostData.new({file: file, exception: exception, type: type});
    }
    static ['_#empty#tearOff']() {
      return new lost_data.LostData.empty();
    }
    get isEmpty() {
      return this[S._empty$1];
    }
  };
  (lost_data.LostData.new = function(opts) {
    let file = opts && 'file' in opts ? opts.file : null;
    let exception = opts && 'exception' in opts ? opts.exception : null;
    let type = opts && 'type' in opts ? opts.type : null;
    this[S._empty$1] = false;
    this[S.file$1] = file;
    this[S.exception$1] = exception;
    this[S.type$9] = type;
    ;
  }).prototype = lost_data.LostData.prototype;
  (lost_data.LostData.empty = function() {
    this[S._empty$1] = false;
    this[S.file$1] = null;
    this[S.exception$1] = null;
    this[S.type$9] = null;
    this[S._empty$1] = true;
    ;
  }).prototype = lost_data.LostData.prototype;
  dart.addTypeTests(lost_data.LostData);
  dart.addTypeCaches(lost_data.LostData);
  dart.setGetterSignature(lost_data.LostData, () => ({
    __proto__: dart.getGetters(lost_data.LostData.__proto__),
    isEmpty: core.bool
  }));
  dart.setLibraryUri(lost_data.LostData, I[276]);
  dart.setFieldSignature(lost_data.LostData, () => ({
    __proto__: dart.getFields(lost_data.LostData.__proto__),
    file: dart.finalFieldType(dart.nullable(html$0.PickedFile)),
    exception: dart.finalFieldType(dart.nullable(message_codec.PlatformException)),
    type: dart.finalFieldType(dart.nullable(retrieve_type.RetrieveType)),
    [S._empty$1]: dart.fieldType(core.bool)
  }));
  base$.PickedFileBase = class PickedFileBase extends core.Object {
    get path() {
      dart.throw(new core.UnimplementedError.new(".path has not been implemented."));
    }
    readAsString(opts) {
      let encoding = opts && 'encoding' in opts ? opts.encoding : C[434] || CT.C434;
      dart.throw(new core.UnimplementedError.new("readAsString() has not been implemented."));
    }
    readAsBytes() {
      dart.throw(new core.UnimplementedError.new("readAsBytes() has not been implemented."));
    }
    openRead(start = null, end = null) {
      dart.throw(new core.UnimplementedError.new("openRead() has not been implemented."));
    }
  };
  (base$.PickedFileBase.new = function(path) {
    ;
  }).prototype = base$.PickedFileBase.prototype;
  dart.addTypeTests(base$.PickedFileBase);
  dart.addTypeCaches(base$.PickedFileBase);
  dart.setMethodSignature(base$.PickedFileBase, () => ({
    __proto__: dart.getMethods(base$.PickedFileBase.__proto__),
    readAsString: dart.fnType(async.Future$(core.String), [], {encoding: convert.Encoding}, {}),
    readAsBytes: dart.fnType(async.Future$(typed_data.Uint8List), []),
    openRead: dart.fnType(async.Stream$(typed_data.Uint8List), [], [dart.nullable(core.int), dart.nullable(core.int)])
  }));
  dart.setGetterSignature(base$.PickedFileBase, () => ({
    __proto__: dart.getGetters(base$.PickedFileBase.__proto__),
    path: core.String
  }));
  dart.setLibraryUri(base$.PickedFileBase, I[277]);
  html$0.PickedFile = class PickedFile extends base$.PickedFileBase {
    get path() {
      return this[S.path$3];
    }
    set path(value) {
      super.path = value;
    }
    get [S._initBytes$1]() {
      return this[S._initBytes];
    }
    set [S._initBytes$1](value) {
      super[S._initBytes$1] = value;
    }
    static ['_#new#tearOff'](path, opts) {
      let bytes = opts && 'bytes' in opts ? opts.bytes : null;
      return new html$0.PickedFile.new(path, {bytes: bytes});
    }
    get [S._bytes]() {
      return async.async(typed_data.Uint8List, (function* _bytes() {
        if (this[S._initBytes$1] != null) {
          return T$.FutureOfUint8List().value(new typed_data._UnmodifiableUint8ListView.new(dart.nullCheck(this[S._initBytes$1])));
        }
        return http.readBytes(core.Uri.parse(this.path));
      }).bind(this));
    }
    readAsString(opts) {
      let encoding = opts && 'encoding' in opts ? opts.encoding : C[434] || CT.C434;
      return async.async(core.String, (function* readAsString() {
        return encoding.decode(yield this[S._bytes]);
      }).bind(this));
    }
    readAsBytes() {
      return async.async(typed_data.Uint8List, (function* readAsBytes() {
        return T$.FutureOfUint8List().value(yield this[S._bytes]);
      }).bind(this));
    }
    openRead(start = null, end = null) {
      return new (T._AsyncStarImplOfUint8List()).new((function* openRead(stream) {
        let t347, t347$;
        let bytes = (yield this[S._bytes]);
        if (stream.add(bytes[S$0.$sublist]((t347 = start, t347 == null ? 0 : t347), (t347$ = end, t347$ == null ? bytes[S$.$length] : t347$)))) return;
        yield;
      }).bind(this)).stream;
    }
  };
  (html$0.PickedFile.new = function(path, opts) {
    let bytes = opts && 'bytes' in opts ? opts.bytes : null;
    this[S.path$3] = path;
    this[S._initBytes] = bytes;
    html$0.PickedFile.__proto__.new.call(this, path);
    ;
  }).prototype = html$0.PickedFile.prototype;
  dart.addTypeTests(html$0.PickedFile);
  dart.addTypeCaches(html$0.PickedFile);
  dart.setGetterSignature(html$0.PickedFile, () => ({
    __proto__: dart.getGetters(html$0.PickedFile.__proto__),
    [S._bytes]: async.Future$(typed_data.Uint8List)
  }));
  dart.setLibraryUri(html$0.PickedFile, I[278]);
  dart.setFieldSignature(html$0.PickedFile, () => ({
    __proto__: dart.getFields(html$0.PickedFile.__proto__),
    path: dart.finalFieldType(core.String),
    [S._initBytes$1]: dart.finalFieldType(dart.nullable(typed_data.Uint8List))
  }));
  sprintf.Formatter = class Formatter extends core.Object {
    get fmt_type() {
      return this[S.fmt_type];
    }
    set fmt_type(value) {
      this[S.fmt_type] = value;
    }
    get options() {
      return this[S.options$2];
    }
    set options(value) {
      this[S.options$2] = value;
    }
    static get_padding(count, pad) {
      let padding_piece = pad;
      let padding = new core.StringBuffer.new();
      while (count > 0) {
        if ((count & 1) === 1) {
          padding.write(padding_piece);
        }
        count = count[S$0.$rightShift](1);
        padding_piece = padding_piece + padding_piece;
      }
      return padding.toString();
    }
  };
  (sprintf.Formatter.new = function(fmt_type, options) {
    this[S.fmt_type] = fmt_type;
    this[S.options$2] = options;
    ;
  }).prototype = sprintf.Formatter.prototype;
  dart.addTypeTests(sprintf.Formatter);
  dart.addTypeCaches(sprintf.Formatter);
  dart.setStaticMethodSignature(sprintf.Formatter, () => ['get_padding']);
  dart.setLibraryUri(sprintf.Formatter, I[279]);
  dart.setFieldSignature(sprintf.Formatter, () => ({
    __proto__: dart.getFields(sprintf.Formatter.__proto__),
    fmt_type: dart.fieldType(dart.dynamic),
    options: dart.fieldType(dart.dynamic)
  }));
  sprintf.IntFormatter = class IntFormatter extends sprintf.Formatter {
    static ['_#new#tearOff'](_arg, fmt_type, options) {
      return new sprintf.IntFormatter.new(_arg, fmt_type, options);
    }
    asString() {
      let ret = "";
      let prefix = "";
      let radix = dart.equals(this.fmt_type, "x") ? 16 : dart.equals(this.fmt_type, "o") ? 8 : 10;
      if (this[S._arg] < 0) {
        if (radix === 10) {
          this[S._arg] = this[S._arg][S.$abs]();
          dart.dsend(this.options, '_set', ["sign", "-"]);
        } else {
          this[S._arg] = (9007199254740991 - (~this[S._arg] >>> 0) & 9007199254740991) >>> 0;
        }
      }
      ret = this[S._arg][S$0.$toRadixString](radix);
      if (dart.dtest(dart.dsend(this.options, '_get', ["alternate_form"]))) {
        if (radix === 16 && this[S._arg] !== 0) {
          prefix = "0x";
        } else if (radix === 8 && this[S._arg] !== 0) {
          prefix = "0";
        }
        if (dart.equals(dart.dsend(this.options, '_get', ["sign"]), "+") && radix !== 10) {
          dart.dsend(this.options, '_set', ["sign", ""]);
        }
      }
      if (dart.dtest(dart.dsend(this.options, '_get', ["add_space"])) && dart.equals(dart.dsend(this.options, '_get', ["sign"]), "") && this[S._arg] > -1 && radix === 10) {
        dart.dsend(this.options, '_set', ["sign", " "]);
      }
      if (radix !== 10) {
        dart.dsend(this.options, '_set', ["sign", ""]);
      }
      let padding = "";
      let min_digits = dart.dsend(this.options, '_get', ["precision"]);
      let min_chars = dart.dsend(this.options, '_get', ["width"]);
      let num_length = ret.length;
      let sign_length = dart.dload(dart.dsend(this.options, '_get', ["sign"]), 'length');
      let str_len = 0;
      if (radix === 8 && dart.dtest(dart.dsend(min_chars, '<=', [min_digits]))) {
        num_length = num_length + prefix.length;
      }
      if (dart.dtest(dart.dsend(min_digits, '>', [num_length]))) {
        padding = sprintf.Formatter.get_padding(core.int.as(dart.dsend(min_digits, '-', [num_length])), "0");
        ret = padding + ret;
        num_length = ret.length;
        padding = "";
      }
      str_len = num_length + core.num.as(sign_length) + prefix.length;
      if (dart.dtest(dart.dsend(min_chars, '>', [str_len]))) {
        if (dart.equals(dart.dsend(this.options, '_get', ["padding_char"]), "0") && !dart.dtest(dart.dsend(this.options, '_get', ["left_align"]))) {
          padding = sprintf.Formatter.get_padding(core.int.as(dart.dsend(min_chars, '-', [str_len])), "0");
        } else {
          padding = sprintf.Formatter.get_padding(core.int.as(dart.dsend(min_chars, '-', [str_len])), " ");
        }
      }
      if (dart.dtest(dart.dsend(this.options, '_get', ["left_align"]))) {
        ret = dart.str(dart.dsend(this.options, '_get', ["sign"])) + prefix + ret + padding;
      } else if (dart.equals(dart.dsend(this.options, '_get', ["padding_char"]), "0")) {
        ret = dart.str(dart.dsend(this.options, '_get', ["sign"])) + prefix + padding + ret;
      } else {
        ret = padding + dart.str(dart.dsend(this.options, '_get', ["sign"])) + prefix + ret;
      }
      if (dart.dtest(dart.dsend(this.options, '_get', ["is_upper"]))) {
        ret = ret[S.$toUpperCase]();
      }
      return ret;
    }
  };
  (sprintf.IntFormatter.new = function(_arg, fmt_type, options) {
    this[S._arg] = _arg;
    sprintf.IntFormatter.__proto__.new.call(this, fmt_type, options);
    ;
  }).prototype = sprintf.IntFormatter.prototype;
  dart.addTypeTests(sprintf.IntFormatter);
  dart.addTypeCaches(sprintf.IntFormatter);
  dart.setMethodSignature(sprintf.IntFormatter, () => ({
    __proto__: dart.getMethods(sprintf.IntFormatter.__proto__),
    asString: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(sprintf.IntFormatter, I[279]);
  dart.setFieldSignature(sprintf.IntFormatter, () => ({
    __proto__: dart.getFields(sprintf.IntFormatter.__proto__),
    [S._arg]: dart.fieldType(core.int)
  }));
  dart.setStaticFieldSignature(sprintf.IntFormatter, () => ['MAX_INT']);
  dart.defineLazy(sprintf.IntFormatter, {
    /*sprintf.IntFormatter.MAX_INT*/get MAX_INT() {
      return 9007199254740991;
    }
  }, false);
  sprintf.FloatFormatter = class FloatFormatter extends sprintf.Formatter {
    static ['_#new#tearOff'](_arg, fmt_type, options) {
      return new sprintf.FloatFormatter.new(_arg, fmt_type, options);
    }
    asString() {
      let ret = "";
      if (!this[S._has_init]) {
        return ret;
      }
      if (this[S._output] != null) {
        return dart.nullCheck(this[S._output]);
      }
      if (dart.dtest(dart.dsend(this.options, '_get', ["add_space"])) && dart.equals(dart.dsend(this.options, '_get', ["sign"]), "") && this[S._arg] >= 0) {
        dart.dsend(this.options, '_set', ["sign", " "]);
      }
      if (this[S._arg][S.$isInfinite]) {
        if (this[S._arg][S$0.$isNegative]) {
          dart.dsend(this.options, '_set', ["sign", "-"]);
        }
        ret = "inf";
        dart.dsend(this.options, '_set', ["padding_char", " "]);
      }
      if (this[S._arg][S$0.$isNaN]) {
        ret = "nan";
        dart.dsend(this.options, '_set', ["padding_char", " "]);
      }
      if (dart.equals(dart.dsend(this.options, '_get', ["precision"]), -1)) {
        dart.dsend(this.options, '_set', ["precision", 6]);
      } else if (dart.equals(this.fmt_type, "g") && dart.equals(dart.dsend(this.options, '_get', ["precision"]), 0)) {
        dart.dsend(this.options, '_set', ["precision", 1]);
      }
      if (this[S._is_negative]) {
        dart.dsend(this.options, '_set', ["sign", "-"]);
      }
      if (!(this[S._arg][S.$isInfinite] || this[S._arg][S$0.$isNaN])) {
        if (dart.equals(this.fmt_type, "e")) {
          ret = this.asExponential(core.int.as(dart.dsend(this.options, '_get', ["precision"])), {remove_trailing_zeros: false});
        } else if (dart.equals(this.fmt_type, "f")) {
          ret = this.asFixed(core.int.as(dart.dsend(this.options, '_get', ["precision"])), {remove_trailing_zeros: false});
        } else {
          let _exp = this[S._exponent];
          let sig_digs = dart.dsend(this.options, '_get', ["precision"]);
          if (-4 <= _exp && _exp < core.num.as(dart.dsend(this.options, '_get', ["precision"]))) {
            sig_digs = dart.dsend(sig_digs, '-', [this[S._decimal]]);
            let precision = math.max(core.num, core.num.as(dart.dsend(dart.dsend(dart.dsend(this.options, '_get', ["precision"]), '-', [1]), '-', [_exp])), core.num.as(sig_digs));
            ret = this.asFixed(precision[S$.$toInt](), {remove_trailing_zeros: !dart.dtest(dart.dsend(this.options, '_get', ["alternate_form"]))});
          } else {
            ret = this.asExponential(core.int.as(dart.dsend(dart.dsend(this.options, '_get', ["precision"]), '-', [1])), {remove_trailing_zeros: !dart.dtest(dart.dsend(this.options, '_get', ["alternate_form"]))});
          }
        }
      }
      let min_chars = dart.dsend(this.options, '_get', ["width"]);
      let str_len = ret.length + core.num.as(dart.dload(dart.dsend(this.options, '_get', ["sign"]), 'length'));
      let padding = "";
      if (dart.dtest(dart.dsend(min_chars, '>', [str_len]))) {
        if (dart.equals(dart.dsend(this.options, '_get', ["padding_char"]), "0") && !dart.dtest(dart.dsend(this.options, '_get', ["left_align"]))) {
          padding = sprintf.Formatter.get_padding(core.int.as(dart.dsend(min_chars, '-', [str_len])), "0");
        } else {
          padding = sprintf.Formatter.get_padding(core.int.as(dart.dsend(min_chars, '-', [str_len])), " ");
        }
      }
      if (dart.dtest(dart.dsend(this.options, '_get', ["left_align"]))) {
        ret = dart.str(dart.dsend(this.options, '_get', ["sign"])) + ret + padding;
      } else if (dart.equals(dart.dsend(this.options, '_get', ["padding_char"]), "0")) {
        ret = dart.str(dart.dsend(this.options, '_get', ["sign"])) + padding + ret;
      } else {
        ret = padding + dart.str(dart.dsend(this.options, '_get', ["sign"])) + ret;
      }
      if (dart.dtest(dart.dsend(this.options, '_get', ["is_upper"]))) {
        ret = ret[S.$toUpperCase]();
      }
      return this[S._output] = ret;
    }
    asFixed(precision, opts) {
      let remove_trailing_zeros = opts && 'remove_trailing_zeros' in opts ? opts.remove_trailing_zeros : true;
      let offset = this[S._decimal] + precision - 1;
      let extra_zeroes = precision - (this[S._digits][S$.$length] - offset);
      if (extra_zeroes > 0) {
        this[S._digits][S$.$addAll](sprintf.Formatter.get_padding(extra_zeroes, "0")[S$.$split]("")[S$.$map](core.int, C[436] || CT.C436));
      }
      this[S._round](offset + 1, offset);
      let ret = this[S._digits][S$0.$sublist](0, this[S._decimal])[S$.$fold](core.String, "", dart.fn((i, e) => dart.str(i) + dart.str(e), T.ObjectNAndintToString()));
      let trailing_digits = this[S._digits][S$0.$sublist](this[S._decimal], this[S._decimal] + precision);
      if (remove_trailing_zeros) {
        trailing_digits = this[S._remove_trailing_zeros](trailing_digits);
      }
      let trailing_zeroes = trailing_digits[S$.$fold](core.String, "", dart.fn((i, e) => dart.str(i) + dart.str(e), T.ObjectNAndintToString()));
      if (trailing_zeroes[S$.$isEmpty]) {
        return ret;
      }
      ret = ret + "." + trailing_zeroes;
      return ret;
    }
    asExponential(precision, opts) {
      let remove_trailing_zeros = opts && 'remove_trailing_zeros' in opts ? opts.remove_trailing_zeros : true;
      let offset = this[S._decimal] - this[S._exponent];
      let extra_zeroes = precision - (this[S._digits][S$.$length] - offset) + 1;
      if (extra_zeroes > 0) {
        this[S._digits][S$.$addAll](sprintf.Formatter.get_padding(extra_zeroes, "0")[S$.$split]("")[S$.$map](core.int, C[436] || CT.C436));
      }
      this[S._round](offset + precision, offset);
      let ret = this[S._digits][S$.$_get](offset - 1)[S$.$toString]();
      let trailing_digits = this[S._digits][S$0.$sublist](offset, offset + precision);
      let _exp_str = this[S._exponent][S.$abs]()[S$.$toString]();
      if (this[S._exponent] < 10 && this[S._exponent] > -10) {
        _exp_str = "0" + _exp_str;
      }
      _exp_str = this[S._exponent] < 0 ? "e-" + _exp_str : "e+" + _exp_str;
      if (remove_trailing_zeros) {
        trailing_digits = this[S._remove_trailing_zeros](trailing_digits);
      }
      if (trailing_digits[S$.$isNotEmpty]) {
        ret = ret + ".";
      }
      ret = trailing_digits[S$.$fold](core.String, ret, dart.fn((i, e) => i + dart.str(e), T.StringAndintToString()));
      ret = ret + _exp_str;
      return ret;
    }
    [S._remove_trailing_zeros](trailing_digits) {
      let nzeroes = 0;
      for (let i = trailing_digits[S$.$length] - 1; i >= 0; i = i - 1) {
        if (trailing_digits[S$.$_get](i) === 0) {
          nzeroes = nzeroes + 1;
        } else {
          break;
        }
      }
      return trailing_digits[S$0.$sublist](0, trailing_digits[S$.$length] - nzeroes);
    }
    [S._round](rounding_offset, offset) {
      let carry = 0;
      if (dart.dtest(dart.dsend(rounding_offset, '>=', [this[S._digits][S$.$length]]))) {
        return;
      }
      let d = this[S._digits][S$.$_get](core.int.as(rounding_offset));
      carry = d >= 5 ? 1 : 0;
      this[S._digits][S$.$_set](core.int.as(rounding_offset), d[S$0.$modulo](10));
      rounding_offset = dart.dsend(rounding_offset, '-', [1]);
      while (carry > 0) {
        d = this[S._digits][S$.$_get](core.int.as(rounding_offset)) + carry;
        if (dart.equals(rounding_offset, 0) && d > 9) {
          this[S._digits][S$.$insert](0, 0);
          this[S._decimal] = this[S._decimal] + 1;
          rounding_offset = dart.dsend(rounding_offset, '+', [1]);
        }
        carry = d < 10 ? 0 : 1;
        this[S._digits][S$.$_set](core.int.as(rounding_offset), d[S$0.$modulo](10));
        rounding_offset = dart.dsend(rounding_offset, '-', [1]);
      }
    }
  };
  (sprintf.FloatFormatter.new = function(_arg, fmt_type, options) {
    this[S._digits] = T.JSArrayOfint().of([]);
    this[S._exponent] = 0;
    this[S._decimal] = 0;
    this[S._is_negative] = false;
    this[S._has_init] = false;
    this[S._output] = null;
    this[S._arg] = _arg;
    sprintf.FloatFormatter.__proto__.new.call(this, fmt_type, options);
    if (this[S._arg][S$0.$isNaN]) {
      this[S._has_init] = true;
      return;
    }
    if (this[S._arg][S.$isInfinite]) {
      this[S._is_negative] = this[S._arg][S$0.$isNegative];
      this[S._has_init] = true;
      return;
    }
    this[S._arg] = this[S._arg][S$.$toDouble]();
    if (this[S._arg] < 0) {
      this[S._is_negative] = true;
      this[S._arg] = -this[S._arg];
    }
    let arg_str = this[S._arg] === this[S._arg][S$0.$truncate]() ? this[S._arg][S.$toStringAsFixed](1) : this[S._arg][S$.$toString]();
    let m1 = sprintf.FloatFormatter._number_rx.firstMatch(arg_str);
    if (m1 != null) {
      let int_part = dart.nullCheck(m1.group(1));
      let fraction = dart.nullCheck(m1.group(2));
      this[S._decimal] = int_part.length;
      this[S._digits][S$.$addAll](int_part[S$.$split]("")[S$.$map](core.int, C[436] || CT.C436));
      this[S._digits][S$.$addAll](fraction[S$.$split]("")[S$.$map](core.int, C[436] || CT.C436));
      if (int_part.length === 1) {
        if (int_part === "0") {
          let leading_zeroes_match = sprintf.FloatFormatter._leading_zeroes_rx.firstMatch(fraction);
          if (leading_zeroes_match != null) {
            let zeroes_count = dart.nullCheck(leading_zeroes_match.group(1)).length;
            this[S._exponent] = zeroes_count > 0 ? -(zeroes_count + 1) : zeroes_count - 1;
          } else {
            this[S._exponent] = 0;
          }
        } else {
          this[S._exponent] = 0;
        }
      } else {
        this[S._exponent] = int_part.length - 1;
      }
    } else {
      let m2 = sprintf.FloatFormatter._expo_rx.firstMatch(arg_str);
      if (m2 != null) {
        let int_part = dart.nullCheck(m2.group(1));
        let fraction = dart.nullCheck(m2.group(2));
        this[S._exponent] = core.int.parse(dart.nullCheck(m2.group(3)));
        if (this[S._exponent] > 0) {
          let diff = this[S._exponent] - fraction.length + 1;
          this[S._decimal] = this[S._exponent] + 1;
          this[S._digits][S$.$addAll](int_part[S$.$split]("")[S$.$map](core.int, C[436] || CT.C436));
          this[S._digits][S$.$addAll](fraction[S$.$split]("")[S$.$map](core.int, C[436] || CT.C436));
          this[S._digits][S$.$addAll](sprintf.Formatter.get_padding(diff, "0")[S$.$split]("")[S$.$map](core.int, C[436] || CT.C436));
        } else {
          let diff = int_part.length - this[S._exponent] - 1;
          this[S._decimal] = int_part.length;
          this[S._digits][S$.$addAll](sprintf.Formatter.get_padding(diff, "0")[S$.$split]("")[S$.$map](core.int, C[436] || CT.C436));
          this[S._digits][S$.$addAll](int_part[S$.$split]("")[S$.$map](core.int, C[436] || CT.C436));
          this[S._digits][S$.$addAll](fraction[S$.$split]("")[S$.$map](core.int, C[436] || CT.C436));
        }
      }
    }
    this[S._has_init] = true;
  }).prototype = sprintf.FloatFormatter.prototype;
  dart.addTypeTests(sprintf.FloatFormatter);
  dart.addTypeCaches(sprintf.FloatFormatter);
  dart.setMethodSignature(sprintf.FloatFormatter, () => ({
    __proto__: dart.getMethods(sprintf.FloatFormatter.__proto__),
    asString: dart.fnType(core.String, []),
    asFixed: dart.fnType(core.String, [core.int], {remove_trailing_zeros: core.bool}, {}),
    asExponential: dart.fnType(core.String, [core.int], {remove_trailing_zeros: core.bool}, {}),
    [S._remove_trailing_zeros]: dart.fnType(core.List$(core.int), [core.List$(core.int)]),
    [S._round]: dart.fnType(dart.void, [dart.dynamic, dart.dynamic])
  }));
  dart.setLibraryUri(sprintf.FloatFormatter, I[279]);
  dart.setFieldSignature(sprintf.FloatFormatter, () => ({
    __proto__: dart.getFields(sprintf.FloatFormatter.__proto__),
    [S._arg]: dart.fieldType(core.double),
    [S._digits]: dart.finalFieldType(core.List$(core.int)),
    [S._exponent]: dart.fieldType(core.int),
    [S._decimal]: dart.fieldType(core.int),
    [S._is_negative]: dart.fieldType(core.bool),
    [S._has_init]: dart.fieldType(core.bool),
    [S._output]: dart.fieldType(dart.nullable(core.String))
  }));
  dart.setStaticFieldSignature(sprintf.FloatFormatter, () => ['_number_rx', '_expo_rx', '_leading_zeroes_rx']);
  dart.defineLazy(sprintf.FloatFormatter, {
    /*sprintf.FloatFormatter._number_rx*/get _number_rx() {
      return core.RegExp.new("^[\\-\\+]?(\\d+)\\.(\\d+)$");
    },
    /*sprintf.FloatFormatter._expo_rx*/get _expo_rx() {
      return core.RegExp.new("^[\\-\\+]?(\\d)\\.(\\d+)e([\\-\\+]?\\d+)$");
    },
    /*sprintf.FloatFormatter._leading_zeroes_rx*/get _leading_zeroes_rx() {
      return core.RegExp.new("^(0*)[1-9]+");
    }
  }, false);
  sprintf.StringFormatter = class StringFormatter extends sprintf.Formatter {
    static ['_#new#tearOff'](_arg, fmt_type, options) {
      return new sprintf.StringFormatter.new(_arg, fmt_type, options);
    }
    asString() {
      let ret = dart.toString(this[S._arg]);
      if (dart.dtest(dart.dsend(dart.dsend(this.options, '_get', ["precision"]), '>', [-1])) && dart.dtest(dart.dsend(dart.dsend(this.options, '_get', ["precision"]), '<=', [ret.length]))) {
        ret = ret[S$0.$substring](0, T$.intN().as(dart.dsend(this.options, '_get', ["precision"])));
      }
      if (dart.dtest(dart.dsend(dart.dsend(this.options, '_get', ["width"]), '>', [-1]))) {
        let diff = core.int.as(dart.dsend(dart.dsend(this.options, '_get', ["width"]), '-', [ret.length]));
        if (diff > 0) {
          let padding = sprintf.Formatter.get_padding(diff, core.String.as(dart.dsend(this.options, '_get', ["padding_char"])));
          if (!dart.dtest(dart.dsend(this.options, '_get', ["left_align"]))) {
            ret = padding + ret;
          } else {
            ret = ret + padding;
          }
        }
      }
      return ret;
    }
  };
  (sprintf.StringFormatter.new = function(_arg, fmt_type, options) {
    this[S._arg] = _arg;
    sprintf.StringFormatter.__proto__.new.call(this, fmt_type, options);
    dart.dsend(options, '_set', ["padding_char", " "]);
  }).prototype = sprintf.StringFormatter.prototype;
  dart.addTypeTests(sprintf.StringFormatter);
  dart.addTypeCaches(sprintf.StringFormatter);
  dart.setMethodSignature(sprintf.StringFormatter, () => ({
    __proto__: dart.getMethods(sprintf.StringFormatter.__proto__),
    asString: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(sprintf.StringFormatter, I[279]);
  dart.setFieldSignature(sprintf.StringFormatter, () => ({
    __proto__: dart.getFields(sprintf.StringFormatter.__proto__),
    [S._arg]: dart.fieldType(dart.dynamic)
  }));
  sprintf.PrintFormat = class PrintFormat extends core.Object {
    call(fmt, args) {
      let t347, t347$, t347$0;
      let ret = "";
      let offset = 0;
      let arg_offset = 0;
      if (!core.List.is(args)) {
        dart.throw(new core.ArgumentError.new("Expecting list as second argument"));
      }
      for (let m of sprintf.PrintFormat.specifier.allMatches(fmt)) {
        let _parameter = m._get(1);
        let _flags = dart.nullCheck(m._get(2));
        let _width = m._get(3);
        let _precision = m._get(4);
        let _type = dart.nullCheck(m._get(5));
        let _arg_str = "";
        let _options = new (T$.IdentityMapOfString$Object()).from(["is_upper", false, "width", -1, "precision", -1, "length", -1, "radix", 10, "sign", "", "specifier_type", _type]);
        this[S._parse_flags](_flags)[S$.$forEach](dart.fn((k, v) => {
          _options[S$.$_set](core.String.as(k), core.Object.as(v));
        }, T$.dynamicAnddynamicTovoid()));
        let _arg = _parameter == null ? null : args[S$.$_get](core.int.parse(_parameter) - 1);
        if (_width != null) {
          _options[S$.$_set]("width", core.Object.as(_width === "*" ? args[S$.$_get]((t347 = arg_offset, arg_offset = t347 + 1, t347)) : core.int.parse(_width)));
        }
        if (_precision != null) {
          _options[S$.$_set]("precision", core.Object.as(_precision === "*" ? args[S$.$_get]((t347$ = arg_offset, arg_offset = t347$ + 1, t347$)) : core.int.parse(_precision)));
        }
        if (_arg == null && _type !== "%") {
          _arg = args[S$.$_get]((t347$0 = arg_offset, arg_offset = t347$0 + 1, t347$0));
        }
        _options[S$.$_set]("is_upper", sprintf.PrintFormat.uppercase_rx.hasMatch(_type));
        if (_type === "%") {
          if (_flags[S$.$isNotEmpty] || _width != null || _precision != null) {
            dart.throw(core.Exception.new("\"%\" does not take any flags"));
          }
          _arg_str = "%";
        } else if (this[S._formatters][S$.$containsKey](_type)) {
          _arg_str = dart.nullCheck(this[S._formatters][S$.$_get](_type))(_arg, _options).asString();
        } else {
          dart.throw(new core.ArgumentError.new("Unknown format type " + _type));
        }
        ret = ret + fmt[S$0.$substring](offset, m.start);
        offset = m.end;
        ret = ret + _arg_str;
      }
      return ret = ret + fmt[S$0.$substring](offset);
    }
    register_specifier(specifier, formatter) {
      this[S._formatters][S$.$_set](specifier, formatter);
    }
    unregistier_specifier(specifier) {
      this[S._formatters][S$.$remove](specifier);
    }
    [S._parse_flags](flags) {
      return new _js_helper.LinkedMap.from(["sign", flags[S$.$contains]("+") ? "+" : "", "padding_char", flags[S$.$contains]("0") ? "0" : " ", "add_space", flags[S$.$contains](" "), "left_align", flags[S$.$contains]("-"), "alternate_form", flags[S$.$contains]("#")]);
    }
    static ['_#new#tearOff']() {
      return new sprintf.PrintFormat.new();
    }
  };
  (sprintf.PrintFormat.new = function() {
    this[S._formatters] = new (T.IdentityMapOfString$dynamicAnddynamicToFormatter()).from(["i", dart.fn((arg, options) => new sprintf.IntFormatter.new(core.int.as(arg), "i", options), T.dynamicAnddynamicToIntFormatter()), "d", dart.fn((arg, options) => new sprintf.IntFormatter.new(core.int.as(arg), "d", options), T.dynamicAnddynamicToIntFormatter()), "x", dart.fn((arg, options) => new sprintf.IntFormatter.new(core.int.as(arg), "x", options), T.dynamicAnddynamicToIntFormatter()), "X", dart.fn((arg, options) => new sprintf.IntFormatter.new(core.int.as(arg), "x", options), T.dynamicAnddynamicToIntFormatter()), "o", dart.fn((arg, options) => new sprintf.IntFormatter.new(core.int.as(arg), "o", options), T.dynamicAnddynamicToIntFormatter()), "O", dart.fn((arg, options) => new sprintf.IntFormatter.new(core.int.as(arg), "o", options), T.dynamicAnddynamicToIntFormatter()), "e", dart.fn((arg, options) => new sprintf.FloatFormatter.new(core.double.as(arg), "e", options), T.dynamicAnddynamicToFloatFormatter()), "E", dart.fn((arg, options) => new sprintf.FloatFormatter.new(core.double.as(arg), "e", options), T.dynamicAnddynamicToFloatFormatter()), "f", dart.fn((arg, options) => new sprintf.FloatFormatter.new(core.double.as(arg), "f", options), T.dynamicAnddynamicToFloatFormatter()), "F", dart.fn((arg, options) => new sprintf.FloatFormatter.new(core.double.as(arg), "f", options), T.dynamicAnddynamicToFloatFormatter()), "g", dart.fn((arg, options) => new sprintf.FloatFormatter.new(core.double.as(arg), "g", options), T.dynamicAnddynamicToFloatFormatter()), "G", dart.fn((arg, options) => new sprintf.FloatFormatter.new(core.double.as(arg), "g", options), T.dynamicAnddynamicToFloatFormatter()), "s", dart.fn((arg, options) => new sprintf.StringFormatter.new(arg, "s", options), T.dynamicAnddynamicToStringFormatter())]);
    ;
  }).prototype = sprintf.PrintFormat.prototype;
  dart.addTypeTests(sprintf.PrintFormat);
  dart.addTypeCaches(sprintf.PrintFormat);
  dart.setMethodSignature(sprintf.PrintFormat, () => ({
    __proto__: dart.getMethods(sprintf.PrintFormat.__proto__),
    call: dart.fnType(core.String, [core.String, dart.dynamic]),
    register_specifier: dart.fnType(dart.void, [core.String, dart.fnType(sprintf.Formatter, [dart.dynamic, dart.dynamic])]),
    unregistier_specifier: dart.fnType(dart.void, [core.String]),
    [S._parse_flags]: dart.fnType(core.Map, [core.String])
  }));
  dart.setLibraryUri(sprintf.PrintFormat, I[279]);
  dart.setFieldSignature(sprintf.PrintFormat, () => ({
    __proto__: dart.getFields(sprintf.PrintFormat.__proto__),
    [S._formatters]: dart.finalFieldType(core.Map$(core.String, dart.fnType(sprintf.Formatter, [dart.dynamic, dart.dynamic])))
  }));
  dart.setStaticFieldSignature(sprintf.PrintFormat, () => ['specifier', 'uppercase_rx']);
  dart.defineLazy(sprintf.PrintFormat, {
    /*sprintf.PrintFormat.specifier*/get specifier() {
      return core.RegExp.new("%(?:(\\d+)\\$)?([\\+\\-\\#0 ]*)(\\d+|\\*)?(?:\\.(\\d+|\\*))?([a-z%])", {caseSensitive: false});
    },
    /*sprintf.PrintFormat.uppercase_rx*/get uppercase_rx() {
      return core.RegExp.new("[A-Z]", {caseSensitive: true});
    }
  }, false);
  dart.defineLazy(sprintf, {
    /*sprintf.sprintf*/get sprintf() {
      return new sprintf.PrintFormat.new();
    },
    set sprintf(value) {}
  }, false);
  comment_card.CommentCard = class CommentCard extends framework.StatelessWidget {
    get snap() {
      return this[S.snap$1];
    }
    set snap(value) {
      super.snap = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let snap = opts && 'snap' in opts ? opts.snap : null;
      return new comment_card.CommentCard.new({key: key, snap: snap});
    }
    build(context) {
      return new container.Container.new({padding: C[196] || CT.C196, child: new basic.Row.new({children: T$.JSArrayOfWidget().of([new circle_avatar.CircleAvatar.new({backgroundImage: new _network_image_web.NetworkImage.new(core.String.as(dart.dsend(dart.dsend(this.snap, 'data', []), '_get', ["profilePic"]))), radius: 18}), new basic.Expanded.new({child: new basic.Padding.new({padding: C[437] || CT.C437, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new basic.RichText.new({text: new text_span.TextSpan.new({children: T$.JSArrayOfInlineSpan().of([new text_span.TextSpan.new({text: T$.StringN().as(dart.dsend(dart.dsend(this.snap, 'data', []), '_get', ["name"])), style: C[198] || CT.C198}), new text_span.TextSpan.new({text: " " + dart.str(dart.dsend(dart.dsend(this.snap, 'data', []), '_get', ["text"]))})])})}), new basic.Padding.new({padding: C[202] || CT.C202, child: new text$.Text.new(new date_format.DateFormat.yMMMd().format(core.DateTime.as(dart.dsend(dart.dsend(dart.dsend(this.snap, 'data', []), '_get', ["datePublished"]), 'toDate', []))), {style: C[438] || CT.C438})})])})})}), new container.Container.new({padding: C[398] || CT.C398, child: C[439] || CT.C439})])})});
    }
  };
  (comment_card.CommentCard.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let snap = opts && 'snap' in opts ? opts.snap : null;
    this[S.snap$1] = snap;
    comment_card.CommentCard.__proto__.new.call(this, {key: key});
    ;
  }).prototype = comment_card.CommentCard.prototype;
  dart.addTypeTests(comment_card.CommentCard);
  dart.addTypeCaches(comment_card.CommentCard);
  dart.setMethodSignature(comment_card.CommentCard, () => ({
    __proto__: dart.getMethods(comment_card.CommentCard.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(comment_card.CommentCard, I[280]);
  dart.setFieldSignature(comment_card.CommentCard, () => ({
    __proto__: dart.getFields(comment_card.CommentCard.__proto__),
    snap: dart.finalFieldType(dart.dynamic)
  }));
  extensions['ListNumExtensions|findSmallestIndexWithMinimumValue'] = function ListNumExtensions$124findSmallestIndexWithMinimumValue($this) {
    let index = 0;
    for (let i = 1; i < $this[S$.$length]; i = i + 1) {
      if ($this[S$.$_get](i) < $this[S$.$_get](index)) {
        index = i;
      }
    }
    return index;
  };
  extensions['ListNumExtensions|get#findSmallestIndexWithMinimumValue'] = function ListNumExtensions$124get$35findSmallestIndexWithMinimumValue($this) {
    return dart.fn(() => extensions['ListNumExtensions|findSmallestIndexWithMinimumValue']($this), T.VoidToint());
  };
  dart.defineLazy(constants, {
    /*constants.kZeroGeometry*/get kZeroGeometry() {
      return C[440] || CT.C440;
    }
  }, false);
  sliver_patterned_grid_delegate.SliverPatternGridGeometries = class SliverPatternGridGeometries extends core.Object {
    get tiles() {
      return this[S.tiles$1];
    }
    set tiles(value) {
      super.tiles = value;
    }
    get bounds() {
      return this[S.bounds];
    }
    set bounds(value) {
      super.bounds = value;
    }
    static ['_#new#tearOff'](opts) {
      let tiles = opts && 'tiles' in opts ? opts.tiles : null;
      let bounds = opts && 'bounds' in opts ? opts.bounds : null;
      return new sliver_patterned_grid_delegate.SliverPatternGridGeometries.new({tiles: tiles, bounds: bounds});
    }
  };
  (sliver_patterned_grid_delegate.SliverPatternGridGeometries.new = function(opts) {
    let tiles = opts && 'tiles' in opts ? opts.tiles : null;
    let bounds = opts && 'bounds' in opts ? opts.bounds : null;
    this[S.tiles$1] = tiles;
    this[S.bounds] = bounds;
    if (!(tiles[S$.$length] === bounds[S$.$length])) dart.assertFailed(null, I[228], 13, 15, "tiles.length == bounds.length");
    ;
  }).prototype = sliver_patterned_grid_delegate.SliverPatternGridGeometries.prototype;
  dart.addTypeTests(sliver_patterned_grid_delegate.SliverPatternGridGeometries);
  dart.addTypeCaches(sliver_patterned_grid_delegate.SliverPatternGridGeometries);
  dart.setLibraryUri(sliver_patterned_grid_delegate.SliverPatternGridGeometries, I[229]);
  dart.setFieldSignature(sliver_patterned_grid_delegate.SliverPatternGridGeometries, () => ({
    __proto__: dart.getFields(sliver_patterned_grid_delegate.SliverPatternGridGeometries.__proto__),
    tiles: dart.finalFieldType(core.List$(sliver_grid.SliverGridGeometry)),
    bounds: dart.finalFieldType(core.List$(sliver_grid.SliverGridGeometry))
  }));
  sliver_patterned_grid_delegate._SliverPatternGridLayout = class _SliverPatternGridLayout extends sliver_grid.SliverGridLayout {
    static ['_#new#tearOff'](opts) {
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : null;
      let tiles = opts && 'tiles' in opts ? opts.tiles : null;
      let bounds = opts && 'bounds' in opts ? opts.bounds : null;
      let crossAxisExtent = opts && 'crossAxisExtent' in opts ? opts.crossAxisExtent : null;
      let reverseCrossAxis = opts && 'reverseCrossAxis' in opts ? opts.reverseCrossAxis : false;
      return new sliver_patterned_grid_delegate._SliverPatternGridLayout.new({mainAxisSpacing: mainAxisSpacing, tiles: tiles, bounds: bounds, crossAxisExtent: crossAxisExtent, reverseCrossAxis: reverseCrossAxis});
    }
    computeMaxScrollOffset(childCount) {
      if (childCount === 0) {
        return 0;
      }
      let lastFilledPatternTrailingScrollOffset = (childCount / this.tileCount)[S$0.$truncate]() * this.patternMainAxisExtent;
      if (childCount[S$0.$modulo](this.tileCount) === 0) {
        return lastFilledPatternTrailingScrollOffset - this.mainAxisSpacing;
      }
      let maxIndex = (childCount - 1)[S$0.$modulo](this.tileCount);
      let maxRemainingScrollOffset = this.tiles[S.$take](maxIndex + 1)[S$.$map](core.double, dart.fn(x => x.trailingScrollOffset, T.SliverGridGeometryTodouble()))[S.$reduce](C[408] || CT.C408);
      return lastFilledPatternTrailingScrollOffset + maxRemainingScrollOffset;
    }
    getGeometryForChildIndex(index) {
      let startMainAxisOffset = (index / this.tileCount)[S$0.$truncate]() * this.patternMainAxisExtent;
      let rect = this.tileRectAt(index);
      let realRect = sliver_patterned_grid_delegate['_extension#0|translate'](rect, startMainAxisOffset);
      if (this.reverseCrossAxis) {
        return new sliver_grid.SliverGridGeometry.new({scrollOffset: realRect.scrollOffset, crossAxisOffset: this.crossAxisExtent - realRect.crossAxisOffset - realRect.crossAxisExtent, mainAxisExtent: realRect.mainAxisExtent, crossAxisExtent: realRect.crossAxisExtent});
      }
      return realRect;
    }
    getMinChildIndexForScrollOffset(scrollOffset) {
      let patternCount = (scrollOffset / this.patternMainAxisExtent)[S$0.$truncate]();
      let mainAxisOffset = scrollOffset - patternCount * this.patternMainAxisExtent;
      for (let i = 0; i < this.tileCount; i = i + 1) {
        if (this[S._isRectVisibleAtMainAxisOffset](this.bounds[S$.$_get](i), mainAxisOffset)) {
          return i + patternCount * this.tileCount;
        }
      }
      return 0;
    }
    getMaxChildIndexForScrollOffset(scrollOffset) {
      let patternCount = (scrollOffset / this.patternMainAxisExtent)[S$0.$truncate]();
      let mainAxisOffset = scrollOffset - patternCount * this.patternMainAxisExtent;
      for (let i = this.tileCount - 1; i >= 0; i = i - 1) {
        if (this[S._isRectVisibleAtMainAxisOffset](this.bounds[S$.$_get](i), mainAxisOffset)) {
          return i + patternCount * this.tileCount;
        }
      }
      return 0;
    }
    [S._isRectVisibleAtMainAxisOffset](rect, mainAxisOffset) {
      return rect.scrollOffset <= mainAxisOffset && rect.trailingScrollOffset >= mainAxisOffset - this.mainAxisSpacing;
    }
    tileRectAt(index) {
      return this.tiles[S$.$_get](index[S$0.$modulo](this.tileCount));
    }
  };
  (sliver_patterned_grid_delegate._SliverPatternGridLayout.new = function(opts) {
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : null;
    let tiles = opts && 'tiles' in opts ? opts.tiles : null;
    let bounds = opts && 'bounds' in opts ? opts.bounds : null;
    let crossAxisExtent = opts && 'crossAxisExtent' in opts ? opts.crossAxisExtent : null;
    let reverseCrossAxis = opts && 'reverseCrossAxis' in opts ? opts.reverseCrossAxis : false;
    this.mainAxisSpacing = mainAxisSpacing;
    this.tiles = tiles;
    this.bounds = bounds;
    this.crossAxisExtent = crossAxisExtent;
    this.reverseCrossAxis = reverseCrossAxis;
    this.tileCount = tiles[S$.$length];
    this.patternMainAxisExtent = bounds[S$0.$last].trailingScrollOffset + mainAxisSpacing;
    sliver_patterned_grid_delegate._SliverPatternGridLayout.__proto__.new.call(this);
    ;
  }).prototype = sliver_patterned_grid_delegate._SliverPatternGridLayout.prototype;
  dart.addTypeTests(sliver_patterned_grid_delegate._SliverPatternGridLayout);
  dart.addTypeCaches(sliver_patterned_grid_delegate._SliverPatternGridLayout);
  dart.setMethodSignature(sliver_patterned_grid_delegate._SliverPatternGridLayout, () => ({
    __proto__: dart.getMethods(sliver_patterned_grid_delegate._SliverPatternGridLayout.__proto__),
    computeMaxScrollOffset: dart.fnType(core.double, [core.int]),
    getGeometryForChildIndex: dart.fnType(sliver_grid.SliverGridGeometry, [core.int]),
    getMinChildIndexForScrollOffset: dart.fnType(core.int, [core.double]),
    getMaxChildIndexForScrollOffset: dart.fnType(core.int, [core.double]),
    [S._isRectVisibleAtMainAxisOffset]: dart.fnType(core.bool, [sliver_grid.SliverGridGeometry, core.double]),
    tileRectAt: dart.fnType(sliver_grid.SliverGridGeometry, [core.int])
  }));
  dart.setLibraryUri(sliver_patterned_grid_delegate._SliverPatternGridLayout, I[229]);
  dart.setFieldSignature(sliver_patterned_grid_delegate._SliverPatternGridLayout, () => ({
    __proto__: dart.getFields(sliver_patterned_grid_delegate._SliverPatternGridLayout.__proto__),
    mainAxisSpacing: dart.finalFieldType(core.double),
    crossAxisExtent: dart.finalFieldType(core.double),
    reverseCrossAxis: dart.finalFieldType(core.bool),
    tiles: dart.finalFieldType(core.List$(sliver_grid.SliverGridGeometry)),
    bounds: dart.finalFieldType(core.List$(sliver_grid.SliverGridGeometry)),
    tileCount: dart.finalFieldType(core.int),
    patternMainAxisExtent: dart.finalFieldType(core.double)
  }));
  sliver_patterned_grid_delegate['_extension#0|translate'] = function _extension$350$124translate($this, translation) {
    return new sliver_grid.SliverGridGeometry.new({scrollOffset: $this.scrollOffset + translation, crossAxisOffset: $this.crossAxisOffset, mainAxisExtent: $this.mainAxisExtent, crossAxisExtent: $this.crossAxisExtent});
  };
  sliver_patterned_grid_delegate['_extension#0|get#translate'] = function _extension$350$124get$35translate($this) {
    return dart.fn(translation => sliver_patterned_grid_delegate['_extension#0|translate']($this, translation), T.doubleToSliverGridGeometry());
  };
  uniform_track.UniformTrack = class UniformTrack extends framework.MultiChildRenderObjectWidget {
    get spacing() {
      return this[S.spacing];
    }
    set spacing(value) {
      super.spacing = value;
    }
    get division() {
      return this[S.division];
    }
    set division(value) {
      super.division = value;
    }
    get direction() {
      return this[S.direction];
    }
    set direction(value) {
      super.direction = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let division = opts && 'division' in opts ? opts.division : null;
      let spacing = opts && 'spacing' in opts ? opts.spacing : 0;
      let direction = opts && 'direction' in opts ? opts.direction : null;
      let children = opts && 'children' in opts ? opts.children : null;
      return new uniform_track.UniformTrack.new({key: key, division: division, spacing: spacing, direction: direction, children: children});
    }
    createRenderObject(context) {
      return new uniform_track$.RenderUniformTrack.new({direction: this.direction, division: this.division, spacing: this.spacing});
    }
    updateRenderObject(context, renderObject) {
      let t351;
      uniform_track$.RenderUniformTrack.as(renderObject);
      t351 = renderObject;
      (() => {
        t351.direction = this.direction;
        t351.division = this.division;
        t351.spacing = this.spacing;
        return t351;
      })();
    }
  };
  (uniform_track.UniformTrack.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let division = opts && 'division' in opts ? opts.division : null;
    let spacing = opts && 'spacing' in opts ? opts.spacing : 0;
    let direction = opts && 'direction' in opts ? opts.direction : null;
    let children = opts && 'children' in opts ? opts.children : null;
    this[S.division] = division;
    this[S.spacing] = spacing;
    this[S.direction] = direction;
    if (!(spacing >= 0)) dart.assertFailed(null, I[281], 13, 16, "spacing >= 0");
    if (!(division > 0)) dart.assertFailed(null, I[281], 14, 16, "division > 0");
    if (!(children[S$.$length] <= division)) dart.assertFailed(null, I[281], 15, 16, "children.length <= division");
    uniform_track.UniformTrack.__proto__.new.call(this, {key: key, children: children});
    ;
  }).prototype = uniform_track.UniformTrack.prototype;
  dart.addTypeTests(uniform_track.UniformTrack);
  dart.addTypeCaches(uniform_track.UniformTrack);
  dart.setMethodSignature(uniform_track.UniformTrack, () => ({
    __proto__: dart.getMethods(uniform_track.UniformTrack.__proto__),
    createRenderObject: dart.fnType(uniform_track$.RenderUniformTrack, [framework.BuildContext])
  }));
  dart.setLibraryUri(uniform_track.UniformTrack, I[282]);
  dart.setFieldSignature(uniform_track.UniformTrack, () => ({
    __proto__: dart.getFields(uniform_track.UniformTrack.__proto__),
    spacing: dart.finalFieldType(core.double),
    division: dart.finalFieldType(core.int),
    direction: dart.finalFieldType(basic_types.AxisDirection)
  }));
  staggered_grid$.StaggeredGridDelegate = class StaggeredGridDelegate extends core.Object {};
  (staggered_grid$.StaggeredGridDelegate.new = function() {
    ;
  }).prototype = staggered_grid$.StaggeredGridDelegate.prototype;
  dart.addTypeTests(staggered_grid$.StaggeredGridDelegate);
  dart.addTypeCaches(staggered_grid$.StaggeredGridDelegate);
  dart.setLibraryUri(staggered_grid$.StaggeredGridDelegate, I[244]);
  staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount = class StaggeredGridDelegateWithFixedCrossAxisCount extends staggered_grid$.StaggeredGridDelegate {
    get crossAxisCount() {
      return this[S.crossAxisCount$4];
    }
    set crossAxisCount(value) {
      super.crossAxisCount = value;
    }
    static ['_#new#tearOff'](opts) {
      let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
      return new staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount.new({crossAxisCount: crossAxisCount});
    }
    getCrossAxisCount(crossAxisExtent, crossAxisSpacing) {
      return this.crossAxisCount;
    }
    shouldRelayout(oldDelegate) {
      staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount.as(oldDelegate);
      return oldDelegate.crossAxisCount !== this.crossAxisCount;
    }
  };
  (staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount.new = function(opts) {
    let crossAxisCount = opts && 'crossAxisCount' in opts ? opts.crossAxisCount : null;
    this[S.crossAxisCount$4] = crossAxisCount;
    if (!(crossAxisCount > 0)) dart.assertFailed(null, I[283], 55, 15, "crossAxisCount > 0");
    staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount.__proto__.new.call(this);
    ;
  }).prototype = staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount.prototype;
  dart.addTypeTests(staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount);
  dart.addTypeCaches(staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount);
  dart.setMethodSignature(staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount, () => ({
    __proto__: dart.getMethods(staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount.__proto__),
    getCrossAxisCount: dart.fnType(core.int, [core.double, core.double]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount, I[244]);
  dart.setFieldSignature(staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount, () => ({
    __proto__: dart.getFields(staggered_grid$.StaggeredGridDelegateWithFixedCrossAxisCount.__proto__),
    crossAxisCount: dart.finalFieldType(core.int)
  }));
  staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent = class StaggeredGridDelegateWithMaxCrossAxisExtent extends staggered_grid$.StaggeredGridDelegate {
    get maxCrossAxisExtent() {
      return this[S.maxCrossAxisExtent$2];
    }
    set maxCrossAxisExtent(value) {
      super.maxCrossAxisExtent = value;
    }
    static ['_#new#tearOff'](opts) {
      let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
      return new staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent.new({maxCrossAxisExtent: maxCrossAxisExtent});
    }
    getCrossAxisCount(crossAxisExtent, crossAxisSpacing) {
      return (crossAxisExtent / (this.maxCrossAxisExtent + crossAxisSpacing))[S.$ceil]();
    }
    shouldRelayout(oldDelegate) {
      staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent.as(oldDelegate);
      return oldDelegate.maxCrossAxisExtent !== this.maxCrossAxisExtent;
    }
  };
  (staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent.new = function(opts) {
    let maxCrossAxisExtent = opts && 'maxCrossAxisExtent' in opts ? opts.maxCrossAxisExtent : null;
    this[S.maxCrossAxisExtent$2] = maxCrossAxisExtent;
    if (!(maxCrossAxisExtent > 0)) dart.assertFailed(null, I[283], 94, 15, "maxCrossAxisExtent > 0");
    staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent.__proto__.new.call(this);
    ;
  }).prototype = staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent.prototype;
  dart.addTypeTests(staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent);
  dart.addTypeCaches(staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent);
  dart.setMethodSignature(staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent, () => ({
    __proto__: dart.getMethods(staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent.__proto__),
    getCrossAxisCount: dart.fnType(core.int, [core.double, core.double]),
    shouldRelayout: dart.fnType(core.bool, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent, I[244]);
  dart.setFieldSignature(staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent, () => ({
    __proto__: dart.getFields(staggered_grid$.StaggeredGridDelegateWithMaxCrossAxisExtent.__proto__),
    maxCrossAxisExtent: dart.finalFieldType(core.double)
  }));
  const RenderBox_ContainerRenderObjectMixin$36 = class RenderBox_ContainerRenderObjectMixin extends box.RenderBox {};
  (RenderBox_ContainerRenderObjectMixin$36.new = function() {
    object.ContainerRenderObjectMixin$(box.RenderBox, staggered_grid$.StaggeredGridParentData)[dart.mixinNew].call(this);
    RenderBox_ContainerRenderObjectMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_ContainerRenderObjectMixin$36.prototype;
  dart.applyMixin(RenderBox_ContainerRenderObjectMixin$36, object.ContainerRenderObjectMixin$(box.RenderBox, staggered_grid$.StaggeredGridParentData));
  const RenderBox_RenderBoxContainerDefaultsMixin$36 = class RenderBox_RenderBoxContainerDefaultsMixin extends RenderBox_ContainerRenderObjectMixin$36 {};
  (RenderBox_RenderBoxContainerDefaultsMixin$36.new = function() {
    RenderBox_RenderBoxContainerDefaultsMixin$36.__proto__.new.call(this);
  }).prototype = RenderBox_RenderBoxContainerDefaultsMixin$36.prototype;
  dart.applyMixin(RenderBox_RenderBoxContainerDefaultsMixin$36, box.RenderBoxContainerDefaultsMixin$(box.RenderBox, staggered_grid$.StaggeredGridParentData));
  staggered_grid$.RenderStaggeredGrid = class RenderStaggeredGrid extends RenderBox_RenderBoxContainerDefaultsMixin$36 {
    static ['_#new#tearOff'](opts) {
      let children = opts && 'children' in opts ? opts.children : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : null;
      let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : null;
      let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
      let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
      return new staggered_grid$.RenderStaggeredGrid.new({children: children, delegate: delegate, mainAxisSpacing: mainAxisSpacing, crossAxisSpacing: crossAxisSpacing, axisDirection: axisDirection, textDirection: textDirection});
    }
    get delegate() {
      return this[S._delegate$12];
    }
    set delegate(newDelegate) {
      if (this[S._delegate$12][S$0.$_equals](newDelegate)) {
        return;
      }
      if (!newDelegate[S$.$runtimeType]._equals(this[S._delegate$12][S$.$runtimeType]) || newDelegate.shouldRelayout(this[S._delegate$12])) {
        this.markNeedsLayout();
      }
      this[S._delegate$12] = newDelegate;
    }
    get mainAxisSpacing() {
      return this[S._mainAxisSpacing$1];
    }
    set mainAxisSpacing(value) {
      if (this[S._mainAxisSpacing$1] === value) {
        return;
      }
      this[S._mainAxisSpacing$1] = value;
      this.markNeedsLayout();
    }
    get crossAxisSpacing() {
      return this[S._crossAxisSpacing$1];
    }
    set crossAxisSpacing(value) {
      if (this[S._crossAxisSpacing$1] === value) {
        return;
      }
      this[S._crossAxisSpacing$1] = value;
      this.markNeedsLayout();
    }
    get axisDirection() {
      return this[S._axisDirection];
    }
    set axisDirection(value) {
      if (this[S._axisDirection] === value) {
        return;
      }
      this[S._axisDirection] = value;
      this.markNeedsLayout();
    }
    get mainAxis() {
      return basic_types.axisDirectionToAxis(this[S._axisDirection]);
    }
    get textDirection() {
      return this[S._textDirection];
    }
    set textDirection(value) {
      if (this[S._textDirection] === value) {
        return;
      }
      this[S._textDirection] = value;
      this.markNeedsLayout();
    }
    setupParentData(child) {
      object.RenderObject.as(child);
      if (!staggered_grid$.StaggeredGridParentData.is(child.parentData)) child.parentData = new staggered_grid$.StaggeredGridParentData.new();
    }
    [S._getParentData$1](child) {
      return staggered_grid$.StaggeredGridParentData.as(child.parentData);
    }
    computeMinIntrinsicWidth(height) {
      return this[S._computeIntrinsicWidth](height);
    }
    computeMaxIntrinsicWidth(height) {
      return this[S._computeIntrinsicWidth](height);
    }
    [S._computeIntrinsicWidth](height) {
      return 0;
    }
    computeMinIntrinsicHeight(width) {
      return this[S._computeIntrinsicHeight](width);
    }
    computeMaxIntrinsicHeight(width) {
      return this[S._computeIntrinsicHeight](width);
    }
    [S._computeIntrinsicHeight](width) {
      return 0;
    }
    computeDistanceToActualBaseline(baseline) {
      return this.defaultComputeDistanceToHighestActualBaseline(baseline);
    }
    computeDryLayout(constraints) {
      let size = this[S._computeSize]({constraints: constraints, layoutChild: C[441] || CT.C441});
      return constraints.constrain(size);
    }
    [S._computeSize](opts) {
      let t351, t351$;
      let constraints = opts && 'constraints' in opts ? opts.constraints : null;
      let layoutChild = opts && 'layoutChild' in opts ? opts.layoutChild : null;
      let crossAxisExtent = this.mainAxis === basic_types.Axis.vertical ? constraints.maxWidth : constraints.maxHeight;
      let crossAxisCount = this.delegate.getCrossAxisCount(crossAxisExtent, this.crossAxisSpacing);
      let stride = (crossAxisExtent + this.crossAxisSpacing) / crossAxisCount;
      function computeCrossAxisCellCount(childParentData, crossAxisCount) {
        let t351;
        return math.min(core.int, (t351 = childParentData.crossAxisCellCount, t351 == null ? 1 : t351), crossAxisCount);
      }
      dart.fn(computeCrossAxisCellCount, T.StaggeredGridParentDataAndintToint());
      let offsets = T.ListOfdouble().filled(crossAxisCount, 0);
      let child = this.firstChild;
      while (child != null) {
        let childParentData = this[S._getParentData$1](child);
        let crossAxisCellCount = computeCrossAxisCellCount(childParentData, crossAxisCount);
        let crossAxisExtent = stride * crossAxisCellCount - this.crossAxisSpacing;
        let shouldFitContent = childParentData.mainAxisExtent == null && childParentData.mainAxisCellCount == null;
        let mainAxisExtent = 0;
        if (shouldFitContent) {
          let childConstraints = this.mainAxis === basic_types.Axis.vertical ? new box.BoxConstraints.tightFor({width: crossAxisExtent}) : new box.BoxConstraints.tightFor({height: crossAxisExtent});
          layoutChild(child, childConstraints, {parentUsesSize: true});
          let childSize = child.size;
          mainAxisExtent = this.mainAxis === basic_types.Axis.vertical ? childSize.height : childSize.width;
        } else {
          let mainAxisCellCount = (t351 = childParentData.mainAxisCellCount, t351 == null ? 1 : t351);
          let mainAxisFixedExtent = childParentData.mainAxisExtent;
          mainAxisExtent = (t351$ = mainAxisFixedExtent, t351$ == null ? stride * mainAxisCellCount - this.mainAxisSpacing : t351$);
          childParentData[S._realMainAxisExtent] = mainAxisExtent;
          let childSize = this.mainAxis === basic_types.Axis.vertical ? new ui.Size.new(crossAxisExtent, mainAxisExtent) : new ui.Size.new(mainAxisExtent, crossAxisExtent);
          let childConstraints = new box.BoxConstraints.tight(childSize);
          layoutChild(child, childConstraints);
        }
        let origin = staggered_grid$._findBestCandidate(offsets, crossAxisCellCount);
        let mainAxisOffset = origin.mainAxisOffset;
        let crossAxisOffset = origin.crossAxisIndex * stride;
        let offset = this.mainAxis === basic_types.Axis.vertical ? new ui.Offset.new(crossAxisOffset, mainAxisOffset) : new ui.Offset.new(mainAxisOffset, crossAxisOffset);
        childParentData.offset = offset;
        let nextTileOffset = mainAxisOffset + dart.notNull(mainAxisExtent) + this.mainAxisSpacing;
        for (let i = 0; i < crossAxisCellCount; i = i + 1) {
          offsets[S$.$_set](origin.crossAxisIndex + i, nextTileOffset);
        }
        child = this.childAfter(child);
      }
      let mainAxisExtent = offsets[S.$reduce](C[408] || CT.C408) - this.mainAxisSpacing;
      if (basic_types.axisDirectionIsReversed(this.axisDirection)) {
        child = this.firstChild;
        while (child != null) {
          let childParentData = this[S._getParentData$1](child);
          let offset = childParentData.offset;
          let crossAxisOffset = staggered_grid$['_extension#0|getCrossAxisOffset'](offset, this.mainAxis);
          let mainAxisOffset = mainAxisExtent - staggered_grid$['_extension#0|getMainAxisOffset'](offset, this.mainAxis) - dart.nullCheck(childParentData[S._realMainAxisExtent]);
          let newOffset = this.mainAxis === basic_types.Axis.vertical ? new ui.Offset.new(crossAxisOffset, mainAxisOffset) : new ui.Offset.new(mainAxisOffset, crossAxisOffset);
          childParentData.offset = newOffset;
          child = this.childAfter(child);
        }
      }
      if (this.mainAxis === basic_types.Axis.vertical && this.textDirection === ui.TextDirection.rtl) {
        child = this.firstChild;
        while (child != null) {
          let childParentData = this[S._getParentData$1](child);
          let crossAxisCellCount = computeCrossAxisCellCount(childParentData, crossAxisCount);
          let crossAxisCellExtent = stride * crossAxisCellCount - this.crossAxisSpacing;
          let offset = childParentData.offset;
          let crossAxisOffset = crossAxisExtent - offset.dx - crossAxisCellExtent;
          let mainAxisOffset = offset.dy;
          let newOffset = new ui.Offset.new(crossAxisOffset, mainAxisOffset);
          childParentData.offset = newOffset;
          child = this.childAfter(child);
        }
      }
      let size = this.mainAxis === basic_types.Axis.vertical ? new ui.Size.new(crossAxisExtent, mainAxisExtent) : new ui.Size.new(mainAxisExtent, crossAxisExtent);
      return size;
    }
    performLayout() {
      let requestedSize = this[S._computeSize]({constraints: this.constraints, layoutChild: C[442] || CT.C442});
      this.size = this.constraints.constrain(requestedSize);
      this[S._hasVisualOverflow] = !this.size._equals(requestedSize);
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      return this.defaultHitTestChildren(result, {position: position});
    }
    paint(context, offset) {
      if (this[S._hasVisualOverflow]) {
        context.pushClipRect(this.needsCompositing, offset, ui.Offset.zero['&'](this.size), dart.bind(this, 'defaultPaint'));
      } else {
        this.defaultPaint(context, offset);
      }
    }
  };
  (staggered_grid$.RenderStaggeredGrid.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let delegate = opts && 'delegate' in opts ? opts.delegate : null;
    let mainAxisSpacing = opts && 'mainAxisSpacing' in opts ? opts.mainAxisSpacing : null;
    let crossAxisSpacing = opts && 'crossAxisSpacing' in opts ? opts.crossAxisSpacing : null;
    let axisDirection = opts && 'axisDirection' in opts ? opts.axisDirection : null;
    let textDirection = opts && 'textDirection' in opts ? opts.textDirection : null;
    this[S._hasVisualOverflow] = false;
    if (!(mainAxisSpacing >= 0)) dart.assertFailed(null, I[283], 136, 16, "mainAxisSpacing >= 0");
    if (!(crossAxisSpacing >= 0)) dart.assertFailed(null, I[283], 137, 16, "crossAxisSpacing >= 0");
    this[S._axisDirection] = axisDirection;
    this[S._textDirection] = textDirection;
    this[S._delegate$12] = delegate;
    this[S._mainAxisSpacing$1] = mainAxisSpacing;
    this[S._crossAxisSpacing$1] = crossAxisSpacing;
    staggered_grid$.RenderStaggeredGrid.__proto__.new.call(this);
    this.addAll(children);
  }).prototype = staggered_grid$.RenderStaggeredGrid.prototype;
  dart.addTypeTests(staggered_grid$.RenderStaggeredGrid);
  dart.addTypeCaches(staggered_grid$.RenderStaggeredGrid);
  dart.setMethodSignature(staggered_grid$.RenderStaggeredGrid, () => ({
    __proto__: dart.getMethods(staggered_grid$.RenderStaggeredGrid.__proto__),
    [S._getParentData$1]: dart.fnType(staggered_grid$.StaggeredGridParentData, [box.RenderBox]),
    [S._computeIntrinsicWidth]: dart.fnType(core.double, [core.double]),
    [S._computeIntrinsicHeight]: dart.fnType(core.double, [core.double]),
    [S._computeSize]: dart.fnType(ui.Size, [], {}, {constraints: box.BoxConstraints, layoutChild: dart.fnType(dart.void, [box.RenderBox, box.BoxConstraints], {parentUsesSize: core.bool}, {})})
  }));
  dart.setGetterSignature(staggered_grid$.RenderStaggeredGrid, () => ({
    __proto__: dart.getGetters(staggered_grid$.RenderStaggeredGrid.__proto__),
    delegate: staggered_grid$.StaggeredGridDelegate,
    mainAxisSpacing: core.double,
    crossAxisSpacing: core.double,
    axisDirection: basic_types.AxisDirection,
    mainAxis: basic_types.Axis,
    textDirection: ui.TextDirection
  }));
  dart.setSetterSignature(staggered_grid$.RenderStaggeredGrid, () => ({
    __proto__: dart.getSetters(staggered_grid$.RenderStaggeredGrid.__proto__),
    delegate: staggered_grid$.StaggeredGridDelegate,
    mainAxisSpacing: core.double,
    crossAxisSpacing: core.double,
    axisDirection: basic_types.AxisDirection,
    textDirection: ui.TextDirection
  }));
  dart.setLibraryUri(staggered_grid$.RenderStaggeredGrid, I[244]);
  dart.setFieldSignature(staggered_grid$.RenderStaggeredGrid, () => ({
    __proto__: dart.getFields(staggered_grid$.RenderStaggeredGrid.__proto__),
    [S._delegate$12]: dart.fieldType(staggered_grid$.StaggeredGridDelegate),
    [S._mainAxisSpacing$1]: dart.fieldType(core.double),
    [S._crossAxisSpacing$1]: dart.fieldType(core.double),
    [S._axisDirection]: dart.fieldType(basic_types.AxisDirection),
    [S._textDirection]: dart.fieldType(ui.TextDirection),
    [S._hasVisualOverflow]: dart.fieldType(core.bool)
  }));
  staggered_grid$._TileOrigin = class _TileOrigin extends core.Object {
    get crossAxisIndex() {
      return this[S.crossAxisIndex$1];
    }
    set crossAxisIndex(value) {
      super.crossAxisIndex = value;
    }
    get mainAxisOffset() {
      return this[S.mainAxisOffset];
    }
    set mainAxisOffset(value) {
      super.mainAxisOffset = value;
    }
    static ['_#new#tearOff'](crossAxisIndex, mainAxisOffset) {
      return new staggered_grid$._TileOrigin.new(crossAxisIndex, mainAxisOffset);
    }
  };
  (staggered_grid$._TileOrigin.new = function(crossAxisIndex, mainAxisOffset) {
    this[S.crossAxisIndex$1] = crossAxisIndex;
    this[S.mainAxisOffset] = mainAxisOffset;
    ;
  }).prototype = staggered_grid$._TileOrigin.prototype;
  dart.addTypeTests(staggered_grid$._TileOrigin);
  dart.addTypeCaches(staggered_grid$._TileOrigin);
  dart.setLibraryUri(staggered_grid$._TileOrigin, I[244]);
  dart.setFieldSignature(staggered_grid$._TileOrigin, () => ({
    __proto__: dart.getFields(staggered_grid$._TileOrigin.__proto__),
    crossAxisIndex: dart.finalFieldType(core.int),
    mainAxisOffset: dart.finalFieldType(core.double)
  }));
  staggered_grid$._findBestCandidate = function _findBestCandidate(offsets, crossAxisCount) {
    let length = offsets[S$.$length];
    let bestCandidate = C[443] || CT.C443;
    for (let i = 0; i < length; i = i + 1) {
      let offset = offsets[S$.$_get](i);
      if (staggered_grid$._lessOrNearEqual(bestCandidate.mainAxisOffset, offset)) {
        continue;
      }
      let start = 0;
      let span = 0;
      for (let j = 0; span < crossAxisCount && j < length && length - j >= crossAxisCount - span; j = j + 1) {
        if (staggered_grid$._lessOrNearEqual(offsets[S$.$_get](j), offset)) {
          span = span + 1;
          if (span === crossAxisCount) {
            bestCandidate = new staggered_grid$._TileOrigin.new(start, offset);
          }
        } else {
          start = j + 1;
          span = 0;
        }
      }
    }
    return bestCandidate;
  };
  staggered_grid$._dryLayoutChild = function _dryLayoutChild(child, constraints, opts) {
    let parentUsesSize = opts && 'parentUsesSize' in opts ? opts.parentUsesSize : false;
    child.getDryLayout(constraints);
  };
  staggered_grid$._layoutChild = function _layoutChild(child, constraints, opts) {
    let parentUsesSize = opts && 'parentUsesSize' in opts ? opts.parentUsesSize : false;
    child.layout(constraints, {parentUsesSize: parentUsesSize});
  };
  staggered_grid$._lessOrNearEqual = function _lessOrNearEqual(a, b) {
    return a < b || (a - b)[S.$abs]() < 1e-10;
  };
  staggered_grid$['_extension#0|getCrossAxisOffset'] = function _extension$350$124getCrossAxisOffset($this, direction) {
    return direction === basic_types.Axis.vertical ? $this.dx : $this.dy;
  };
  staggered_grid$['_extension#0|get#getCrossAxisOffset'] = function _extension$350$124get$35getCrossAxisOffset($this) {
    return dart.fn(direction => staggered_grid$['_extension#0|getCrossAxisOffset']($this, direction), T.AxisTodouble());
  };
  staggered_grid$['_extension#0|getMainAxisOffset'] = function _extension$350$124getMainAxisOffset($this, direction) {
    return direction === basic_types.Axis.vertical ? $this.dy : $this.dx;
  };
  staggered_grid$['_extension#0|get#getMainAxisOffset'] = function _extension$350$124get$35getMainAxisOffset($this) {
    return dart.fn(direction => staggered_grid$['_extension#0|getMainAxisOffset']($this, direction), T.AxisTodouble());
  };
  method_channel_aggregate_query.MethodChannelAggregateQuery = class MethodChannelAggregateQuery extends platform_interface_aggregate_query.AggregateQueryPlatform {
    static ['_#new#tearOff'](query, _pigeonParameters, _path, _pigeonApp, _aggregateQueries, _isCollectionGroupQuery) {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(query, _pigeonParameters, _path, _pigeonApp, _aggregateQueries, _isCollectionGroupQuery);
    }
    get(opts) {
      let source = opts && 'source' in opts ? opts.source : null;
      return async.async(platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform, (function* get() {
        let data = (yield method_channel_firestore.MethodChannelFirebaseFirestore.pigeonChannel.aggregateQuery(this[S._pigeonApp], this[S._path$5], this[S._pigeonParameters$1], source, this[S._aggregateQueries$1], this[S._isCollectionGroupQuery]));
        let count = null;
        let sum = T$.JSArrayOfAggregateQueryResponse().of([]);
        let average = T$.JSArrayOfAggregateQueryResponse().of([]);
        for (let query of data) {
          if (query == null) continue;
          switch (query.type) {
            case C[119] || CT.C119:
              {
                count = query.value[S$.$toInt]();
                break;
              }
            case C[120] || CT.C120:
              {
                sum[S$.$add](query);
                break;
              }
            case C[121] || CT.C121:
              {
                average[S$.$add](query);
                break;
              }
          }
        }
        return new platform_interface_aggregate_query_snapshot.AggregateQuerySnapshotPlatform.new({count: count, sum: sum, average: average});
      }).bind(this));
    }
    count() {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this.query, this[S._pigeonParameters$1], this[S._path$5], this[S._pigeonApp], (() => {
        let t355 = T$.ListOfAggregateQuery().of(this[S._aggregateQueries$1]);
        t355.push(new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.count}));
        return t355;
      })(), this[S._isCollectionGroupQuery]);
    }
    sum(field) {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this.query, this[S._pigeonParameters$1], this[S._path$5], this[S._pigeonApp], (() => {
        let t356 = T$.ListOfAggregateQuery().of(this[S._aggregateQueries$1]);
        t356.push(new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.sum, field: field}));
        return t356;
      })(), this[S._isCollectionGroupQuery]);
    }
    average(field) {
      return new method_channel_aggregate_query.MethodChannelAggregateQuery.new(this.query, this[S._pigeonParameters$1], this[S._path$5], this[S._pigeonApp], (() => {
        let t357 = T$.ListOfAggregateQuery().of(this[S._aggregateQueries$1]);
        t357.push(new messages$46pigeon$0.AggregateQuery.new({type: messages$46pigeon$0.AggregateType.average, field: field}));
        return t357;
      })(), this[S._isCollectionGroupQuery]);
    }
  };
  (method_channel_aggregate_query.MethodChannelAggregateQuery.new = function(query, _pigeonParameters, _path, _pigeonApp, _aggregateQueries, _isCollectionGroupQuery) {
    this[S._pigeonParameters$1] = _pigeonParameters;
    this[S._path$5] = _path;
    this[S._pigeonApp] = _pigeonApp;
    this[S._aggregateQueries$1] = _aggregateQueries;
    this[S._isCollectionGroupQuery] = _isCollectionGroupQuery;
    method_channel_aggregate_query.MethodChannelAggregateQuery.__proto__.new.call(this, platform_interface_query.QueryPlatform.as(query));
    ;
  }).prototype = method_channel_aggregate_query.MethodChannelAggregateQuery.prototype;
  dart.addTypeTests(method_channel_aggregate_query.MethodChannelAggregateQuery);
  dart.addTypeCaches(method_channel_aggregate_query.MethodChannelAggregateQuery);
  dart.setLibraryUri(method_channel_aggregate_query.MethodChannelAggregateQuery, I[284]);
  dart.setFieldSignature(method_channel_aggregate_query.MethodChannelAggregateQuery, () => ({
    __proto__: dart.getFields(method_channel_aggregate_query.MethodChannelAggregateQuery.__proto__),
    [S._pigeonApp]: dart.finalFieldType(messages$46pigeon$0.FirestorePigeonFirebaseApp),
    [S._path$5]: dart.finalFieldType(core.String),
    [S._pigeonParameters$1]: dart.finalFieldType(messages$46pigeon$0.PigeonQueryParameters),
    [S._isCollectionGroupQuery]: dart.finalFieldType(core.bool),
    [S._aggregateQueries$1]: dart.finalFieldType(core.List$(messages$46pigeon$0.AggregateQuery))
  }));
  method_channel_document_change.MethodChannelDocumentChange = class MethodChannelDocumentChange extends platform_interface_document_change.DocumentChangePlatform {
    static ['_#new#tearOff'](firestore, documentChange) {
      return new method_channel_document_change.MethodChannelDocumentChange.new(firestore, documentChange);
    }
  };
  (method_channel_document_change.MethodChannelDocumentChange.new = function(firestore, documentChange) {
    method_channel_document_change.MethodChannelDocumentChange.__proto__.new.call(this, documentChange.type, documentChange.oldIndex, documentChange.newIndex, new platform_interface_document_snapshot.DocumentSnapshotPlatform.new(firestore, documentChange.document.path, documentChange.document.data, documentChange.document.metadata));
    ;
  }).prototype = method_channel_document_change.MethodChannelDocumentChange.prototype;
  dart.addTypeTests(method_channel_document_change.MethodChannelDocumentChange);
  dart.addTypeCaches(method_channel_document_change.MethodChannelDocumentChange);
  dart.setLibraryUri(method_channel_document_change.MethodChannelDocumentChange, I[285]);
  auto_id_generator.AutoIdGenerator = class AutoIdGenerator extends core.Object {
    static autoId() {
      let stringBuffer = new core.StringBuffer.new();
      for (let i = 0; i < 20; i = i + 1) {
        stringBuffer.write(auto_id_generator.AutoIdGenerator._AUTO_ID_ALPHABET[S$.$_get](auto_id_generator.AutoIdGenerator._random.nextInt(62)));
      }
      return stringBuffer.toString();
    }
    static ['_#new#tearOff']() {
      return new auto_id_generator.AutoIdGenerator.new();
    }
  };
  (auto_id_generator.AutoIdGenerator.new = function() {
    ;
  }).prototype = auto_id_generator.AutoIdGenerator.prototype;
  dart.addTypeTests(auto_id_generator.AutoIdGenerator);
  dart.addTypeCaches(auto_id_generator.AutoIdGenerator);
  dart.setStaticMethodSignature(auto_id_generator.AutoIdGenerator, () => ['autoId']);
  dart.setLibraryUri(auto_id_generator.AutoIdGenerator, I[286]);
  dart.setStaticFieldSignature(auto_id_generator.AutoIdGenerator, () => ['_AUTO_ID_LENGTH', '_AUTO_ID_ALPHABET', '_random']);
  dart.defineLazy(auto_id_generator.AutoIdGenerator, {
    /*auto_id_generator.AutoIdGenerator._AUTO_ID_LENGTH*/get _AUTO_ID_LENGTH() {
      return 20;
    },
    /*auto_id_generator.AutoIdGenerator._AUTO_ID_ALPHABET*/get _AUTO_ID_ALPHABET() {
      return "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
    },
    /*auto_id_generator.AutoIdGenerator._random*/get _random() {
      return math.Random.new();
    }
  }, false);
  kdialog_handler.KDialogHandler = class KDialogHandler extends core.Object {
    generateCommandLineArguments(dialogTitle, opts) {
      let fileFilter = opts && 'fileFilter' in opts ? opts.fileFilter : "";
      let fileName = opts && 'fileName' in opts ? opts.fileName : "";
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : "";
      let multipleFiles = opts && 'multipleFiles' in opts ? opts.multipleFiles : false;
      let pickDirectory = opts && 'pickDirectory' in opts ? opts.pickDirectory : false;
      let saveFile = opts && 'saveFile' in opts ? opts.saveFile : false;
      let $arguments = T$.JSArrayOfString().of(["--title", dialogTitle]);
      if (saveFile && !pickDirectory) {
        $arguments[S$.$add]("--getsavefilename");
      } else if (!saveFile && !pickDirectory) {
        $arguments[S$.$add]("--getopenfilename");
      } else {
        $arguments[S$.$add]("--getexistingdirectory");
      }
      if (fileName[S$.$isNotEmpty] && initialDirectory[S$.$isNotEmpty]) {
        $arguments[S$.$add](path.join(initialDirectory, fileName));
      } else if (fileName[S$.$isNotEmpty]) {
        $arguments[S$.$add](path.absolute(fileName));
      } else if (initialDirectory[S$.$isNotEmpty]) {
        $arguments[S$.$add](initialDirectory);
      }
      if (!pickDirectory && fileFilter[S$.$isNotEmpty]) {
        if (fileName[S$.$isEmpty] && initialDirectory[S$.$isEmpty]) {
          $arguments[S$.$add](".");
        }
        $arguments[S$.$add](fileFilter);
      }
      if (multipleFiles) {
        $arguments[S$.$addAll](T$.JSArrayOfString().of(["--multiple", "--separate-output"]));
      }
      return $arguments;
    }
    fileTypeToFileFilter(type, allowedExtensions) {
      switch (type) {
        case C[55] || CT.C55:
          {
            return "";
          }
        case C[56] || CT.C56:
          {
            return "Audio File (*.aac *.midi *.mp3 *.ogg *.wav)";
          }
        case C[60] || CT.C60:
          {
            return dart.nullCheck(allowedExtensions)[S$.$map](core.String, dart.fn(ext => ext[S.$toUpperCase](), T$.StringToString()))[S$.$join](" File, ") + " File (*." + allowedExtensions[S$.$join](" *.") + ")";
          }
        case C[57] || CT.C57:
          {
            return "Image File (*.bmp *.gif *.jpeg *.jpg *.png)";
          }
        case C[59] || CT.C59:
          {
            return "Media File (*.avi *.flv *.mkv *.mov *.mp4 *.mpeg *.webm *.wmv *.bmp *.gif *.jpeg *.jpg *.png)";
          }
        case C[58] || CT.C58:
          {
            return "Video File (*.avi *.flv *.mkv *.mov *.mp4 *.mpeg *.webm *.wmv)";
          }
        default:
          {
            dart.throw(core.Exception.new("unknown file type"));
          }
      }
    }
    resultStringToFilePaths(fileSelectionResult) {
      if (fileSelectionResult[S$0.$trim]()[S$.$isEmpty]) {
        return T$.JSArrayOfString().of([]);
      }
      return fileSelectionResult[S$.$split]("\n")[S$.$map](core.String, dart.fn(path => path[S$.$startsWith]("/") ? path : "/" + path, T$.StringToString()))[S$.$toList]();
    }
    static ['_#new#tearOff']() {
      return new kdialog_handler.KDialogHandler.new();
    }
  };
  (kdialog_handler.KDialogHandler.new = function() {
    ;
  }).prototype = kdialog_handler.KDialogHandler.prototype;
  dart.addTypeTests(kdialog_handler.KDialogHandler);
  dart.addTypeCaches(kdialog_handler.KDialogHandler);
  kdialog_handler.KDialogHandler[dart.implements] = () => [dialog_handler.DialogHandler];
  dart.setMethodSignature(kdialog_handler.KDialogHandler, () => ({
    __proto__: dart.getMethods(kdialog_handler.KDialogHandler.__proto__),
    generateCommandLineArguments: dart.fnType(core.List$(core.String), [core.String], {fileFilter: core.String, fileName: core.String, initialDirectory: core.String, multipleFiles: core.bool, pickDirectory: core.bool, saveFile: core.bool}, {}),
    fileTypeToFileFilter: dart.fnType(core.String, [file_picker$.FileType, dart.nullable(core.List$(core.String))]),
    resultStringToFilePaths: dart.fnType(core.List$(core.String), [core.String])
  }));
  dart.setLibraryUri(kdialog_handler.KDialogHandler, I[287]);
  qarma_and_zenity_handler.QarmaAndZenityHandler = class QarmaAndZenityHandler extends core.Object {
    generateCommandLineArguments(dialogTitle, opts) {
      let fileFilter = opts && 'fileFilter' in opts ? opts.fileFilter : "";
      let fileName = opts && 'fileName' in opts ? opts.fileName : "";
      let initialDirectory = opts && 'initialDirectory' in opts ? opts.initialDirectory : "";
      let multipleFiles = opts && 'multipleFiles' in opts ? opts.multipleFiles : false;
      let pickDirectory = opts && 'pickDirectory' in opts ? opts.pickDirectory : false;
      let saveFile = opts && 'saveFile' in opts ? opts.saveFile : false;
      let $arguments = T$.JSArrayOfString().of(["--file-selection", "--title", dialogTitle]);
      if (saveFile) {
        $arguments[S$.$addAll](T$.JSArrayOfString().of(["--save", "--confirm-overwrite"]));
      }
      if (fileName[S$.$isNotEmpty] && initialDirectory[S$.$isNotEmpty]) {
        $arguments[S$.$add]("--filename=" + path.join(initialDirectory, fileName));
      } else if (fileName[S$.$isNotEmpty]) {
        $arguments[S$.$add]("--filename=" + fileName);
      } else if (initialDirectory[S$.$isNotEmpty]) {
        $arguments[S$.$add]("--filename=" + initialDirectory);
      }
      if (fileFilter[S$.$isNotEmpty]) {
        $arguments[S$.$add]("--file-filter=" + fileFilter);
      }
      if (multipleFiles) {
        $arguments[S$.$add]("--multiple");
      }
      if (pickDirectory) {
        $arguments[S$.$add]("--directory");
      }
      return $arguments;
    }
    fileTypeToFileFilter(type, allowedExtensions) {
      switch (type) {
        case C[55] || CT.C55:
          {
            return "";
          }
        case C[56] || CT.C56:
          {
            return "*.aac *.midi *.mp3 *.ogg *.wav";
          }
        case C[60] || CT.C60:
          {
            return "*." + dart.nullCheck(allowedExtensions)[S$.$join](" *.");
          }
        case C[57] || CT.C57:
          {
            return "*.bmp *.gif *.jpeg *.jpg *.png";
          }
        case C[59] || CT.C59:
          {
            return "*.avi *.flv *.mkv *.mov *.mp4 *.mpeg *.webm *.wmv *.bmp *.gif *.jpeg *.jpg *.png";
          }
        case C[58] || CT.C58:
          {
            return "*.avi *.flv *.mkv *.mov *.mp4 *.mpeg *.webm *.wmv";
          }
        default:
          {
            dart.throw(core.Exception.new("unknown file type"));
          }
      }
    }
    resultStringToFilePaths(fileSelectionResult) {
      if (fileSelectionResult[S$0.$trim]()[S$.$isEmpty]) {
        return T$.JSArrayOfString().of([]);
      }
      return fileSelectionResult[S$.$split]("|/")[S$.$map](core.String, dart.fn(path => path[S$.$startsWith]("/") ? path : "/" + path, T$.StringToString()))[S$.$toList]();
    }
    static ['_#new#tearOff']() {
      return new qarma_and_zenity_handler.QarmaAndZenityHandler.new();
    }
  };
  (qarma_and_zenity_handler.QarmaAndZenityHandler.new = function() {
    ;
  }).prototype = qarma_and_zenity_handler.QarmaAndZenityHandler.prototype;
  dart.addTypeTests(qarma_and_zenity_handler.QarmaAndZenityHandler);
  dart.addTypeCaches(qarma_and_zenity_handler.QarmaAndZenityHandler);
  qarma_and_zenity_handler.QarmaAndZenityHandler[dart.implements] = () => [dialog_handler.DialogHandler];
  dart.setMethodSignature(qarma_and_zenity_handler.QarmaAndZenityHandler, () => ({
    __proto__: dart.getMethods(qarma_and_zenity_handler.QarmaAndZenityHandler.__proto__),
    generateCommandLineArguments: dart.fnType(core.List$(core.String), [core.String], {fileFilter: core.String, fileName: core.String, initialDirectory: core.String, multipleFiles: core.bool, pickDirectory: core.bool, saveFile: core.bool}, {}),
    fileTypeToFileFilter: dart.fnType(core.String, [file_picker$.FileType, dart.nullable(core.List$(core.String))]),
    resultStringToFilePaths: dart.fnType(core.List$(core.String), [core.String])
  }));
  dart.setLibraryUri(qarma_and_zenity_handler.QarmaAndZenityHandler, I[288]);
  dart.defineLazy(charcodes, {
    /*charcodes.$lf*/get $lf() {
      return 10;
    },
    /*charcodes.$cr*/get $cr() {
      return 13;
    },
    /*charcodes.$0*/get $0() {
      return 48;
    },
    /*charcodes.$1*/get $1() {
      return 49;
    },
    /*charcodes.$3*/get $3() {
      return 51;
    },
    /*charcodes.$4*/get $4() {
      return 52;
    },
    /*charcodes.$7*/get $7() {
      return 55;
    },
    /*charcodes.$A*/get $A() {
      return 65;
    },
    /*charcodes.$q*/get $q() {
      return 113;
    },
    /*charcodes.$a*/get $a() {
      return 97;
    },
    /*charcodes.$f*/get $f() {
      return 102;
    }
  }, false);
  messages$46pigeon$1.PigeonStorageTaskState = class PigeonStorageTaskState extends core._Enum {
    [S$0._enumToString]() {
      return "PigeonStorageTaskState." + this[S$0._name];
    }
  };
  (messages$46pigeon$1.PigeonStorageTaskState.new = function(index, name) {
    messages$46pigeon$1.PigeonStorageTaskState.__proto__.new.call(this, index, name);
    ;
  }).prototype = messages$46pigeon$1.PigeonStorageTaskState.prototype;
  dart.addTypeTests(messages$46pigeon$1.PigeonStorageTaskState);
  dart.addTypeCaches(messages$46pigeon$1.PigeonStorageTaskState);
  dart.setMethodSignature(messages$46pigeon$1.PigeonStorageTaskState, () => ({
    __proto__: dart.getMethods(messages$46pigeon$1.PigeonStorageTaskState.__proto__),
    [S$0._enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(messages$46pigeon$1.PigeonStorageTaskState, I[289]);
  dart.setStaticFieldSignature(messages$46pigeon$1.PigeonStorageTaskState, () => ['values', 'paused', 'running', 'success', 'canceled', 'error']);
  dart.defineLazy(messages$46pigeon$1.PigeonStorageTaskState, {
    /*messages$46pigeon$1.PigeonStorageTaskState.values*/get values() {
      return C[444] || CT.C444;
    },
    /*messages$46pigeon$1.PigeonStorageTaskState.paused*/get paused() {
      return C[445] || CT.C445;
    },
    /*messages$46pigeon$1.PigeonStorageTaskState.running*/get running() {
      return C[446] || CT.C446;
    },
    /*messages$46pigeon$1.PigeonStorageTaskState.success*/get success() {
      return C[447] || CT.C447;
    },
    /*messages$46pigeon$1.PigeonStorageTaskState.canceled*/get canceled() {
      return C[448] || CT.C448;
    },
    /*messages$46pigeon$1.PigeonStorageTaskState.error*/get error() {
      return C[449] || CT.C449;
    }
  }, false);
  messages$46pigeon$1.PigeonStorageFirebaseApp = class PigeonStorageFirebaseApp extends core.Object {
    get appName() {
      return this[S.appName$3];
    }
    set appName(value) {
      this[S.appName$3] = value;
    }
    get tenantId() {
      return this[S.tenantId$4];
    }
    set tenantId(value) {
      this[S.tenantId$4] = value;
    }
    get bucket() {
      return this[S.bucket$2];
    }
    set bucket(value) {
      this[S.bucket$2] = value;
    }
    static ['_#new#tearOff'](opts) {
      let appName = opts && 'appName' in opts ? opts.appName : null;
      let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      return new messages$46pigeon$1.PigeonStorageFirebaseApp.new({appName: appName, tenantId: tenantId, bucket: bucket});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.appName, this.tenantId, this.bucket]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$1.PigeonStorageFirebaseApp.new({appName: core.String.as(dart.nullCheck(result[S$.$_get](0))), tenantId: T$.StringN().as(result[S$.$_get](1)), bucket: core.String.as(dart.nullCheck(result[S$.$_get](2)))});
    }
  };
  (messages$46pigeon$1.PigeonStorageFirebaseApp.new = function(opts) {
    let appName = opts && 'appName' in opts ? opts.appName : null;
    let tenantId = opts && 'tenantId' in opts ? opts.tenantId : null;
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    this[S.appName$3] = appName;
    this[S.tenantId$4] = tenantId;
    this[S.bucket$2] = bucket;
    ;
  }).prototype = messages$46pigeon$1.PigeonStorageFirebaseApp.prototype;
  dart.addTypeTests(messages$46pigeon$1.PigeonStorageFirebaseApp);
  dart.addTypeCaches(messages$46pigeon$1.PigeonStorageFirebaseApp);
  dart.setMethodSignature(messages$46pigeon$1.PigeonStorageFirebaseApp, () => ({
    __proto__: dart.getMethods(messages$46pigeon$1.PigeonStorageFirebaseApp.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$1.PigeonStorageFirebaseApp, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$1.PigeonStorageFirebaseApp, I[289]);
  dart.setFieldSignature(messages$46pigeon$1.PigeonStorageFirebaseApp, () => ({
    __proto__: dart.getFields(messages$46pigeon$1.PigeonStorageFirebaseApp.__proto__),
    appName: dart.fieldType(core.String),
    tenantId: dart.fieldType(dart.nullable(core.String)),
    bucket: dart.fieldType(core.String)
  }));
  messages$46pigeon$1.PigeonStorageReference = class PigeonStorageReference extends core.Object {
    get bucket() {
      return this[S.bucket$3];
    }
    set bucket(value) {
      this[S.bucket$3] = value;
    }
    get fullPath() {
      return this[S.fullPath];
    }
    set fullPath(value) {
      this[S.fullPath] = value;
    }
    get name() {
      return this[S.name$4];
    }
    set name(value) {
      this[S.name$4] = value;
    }
    static ['_#new#tearOff'](opts) {
      let bucket = opts && 'bucket' in opts ? opts.bucket : null;
      let fullPath = opts && 'fullPath' in opts ? opts.fullPath : null;
      let name = opts && 'name' in opts ? opts.name : null;
      return new messages$46pigeon$1.PigeonStorageReference.new({bucket: bucket, fullPath: fullPath, name: name});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.bucket, this.fullPath, this.name]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$1.PigeonStorageReference.new({bucket: core.String.as(dart.nullCheck(result[S$.$_get](0))), fullPath: core.String.as(dart.nullCheck(result[S$.$_get](1))), name: core.String.as(dart.nullCheck(result[S$.$_get](2)))});
    }
  };
  (messages$46pigeon$1.PigeonStorageReference.new = function(opts) {
    let bucket = opts && 'bucket' in opts ? opts.bucket : null;
    let fullPath = opts && 'fullPath' in opts ? opts.fullPath : null;
    let name = opts && 'name' in opts ? opts.name : null;
    this[S.bucket$3] = bucket;
    this[S.fullPath] = fullPath;
    this[S.name$4] = name;
    ;
  }).prototype = messages$46pigeon$1.PigeonStorageReference.prototype;
  dart.addTypeTests(messages$46pigeon$1.PigeonStorageReference);
  dart.addTypeCaches(messages$46pigeon$1.PigeonStorageReference);
  dart.setMethodSignature(messages$46pigeon$1.PigeonStorageReference, () => ({
    __proto__: dart.getMethods(messages$46pigeon$1.PigeonStorageReference.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$1.PigeonStorageReference, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$1.PigeonStorageReference, I[289]);
  dart.setFieldSignature(messages$46pigeon$1.PigeonStorageReference, () => ({
    __proto__: dart.getFields(messages$46pigeon$1.PigeonStorageReference.__proto__),
    bucket: dart.fieldType(core.String),
    fullPath: dart.fieldType(core.String),
    name: dart.fieldType(core.String)
  }));
  messages$46pigeon$1.PigeonFullMetaData = class PigeonFullMetaData extends core.Object {
    get metadata() {
      return this[S.metadata$3];
    }
    set metadata(value) {
      this[S.metadata$3] = value;
    }
    static ['_#new#tearOff'](opts) {
      let metadata = opts && 'metadata' in opts ? opts.metadata : null;
      return new messages$46pigeon$1.PigeonFullMetaData.new({metadata: metadata});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.metadata]);
    }
    static decode(result) {
      let t360;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$1.PigeonFullMetaData.new({metadata: (t360 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](0)), t360 == null ? null : t360[S$.$cast](T$.StringN(), T$.ObjectN()))});
    }
  };
  (messages$46pigeon$1.PigeonFullMetaData.new = function(opts) {
    let metadata = opts && 'metadata' in opts ? opts.metadata : null;
    this[S.metadata$3] = metadata;
    ;
  }).prototype = messages$46pigeon$1.PigeonFullMetaData.prototype;
  dart.addTypeTests(messages$46pigeon$1.PigeonFullMetaData);
  dart.addTypeCaches(messages$46pigeon$1.PigeonFullMetaData);
  dart.setMethodSignature(messages$46pigeon$1.PigeonFullMetaData, () => ({
    __proto__: dart.getMethods(messages$46pigeon$1.PigeonFullMetaData.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$1.PigeonFullMetaData, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$1.PigeonFullMetaData, I[289]);
  dart.setFieldSignature(messages$46pigeon$1.PigeonFullMetaData, () => ({
    __proto__: dart.getFields(messages$46pigeon$1.PigeonFullMetaData.__proto__),
    metadata: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.Object))))
  }));
  messages$46pigeon$1.PigeonListOptions = class PigeonListOptions extends core.Object {
    get maxResults() {
      return this[S.maxResults$1];
    }
    set maxResults(value) {
      this[S.maxResults$1] = value;
    }
    get pageToken() {
      return this[S.pageToken$1];
    }
    set pageToken(value) {
      this[S.pageToken$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let maxResults = opts && 'maxResults' in opts ? opts.maxResults : null;
      let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
      return new messages$46pigeon$1.PigeonListOptions.new({maxResults: maxResults, pageToken: pageToken});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.maxResults, this.pageToken]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$1.PigeonListOptions.new({maxResults: core.int.as(dart.nullCheck(result[S$.$_get](0))), pageToken: T$.StringN().as(result[S$.$_get](1))});
    }
  };
  (messages$46pigeon$1.PigeonListOptions.new = function(opts) {
    let maxResults = opts && 'maxResults' in opts ? opts.maxResults : null;
    let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
    this[S.maxResults$1] = maxResults;
    this[S.pageToken$1] = pageToken;
    ;
  }).prototype = messages$46pigeon$1.PigeonListOptions.prototype;
  dart.addTypeTests(messages$46pigeon$1.PigeonListOptions);
  dart.addTypeCaches(messages$46pigeon$1.PigeonListOptions);
  dart.setMethodSignature(messages$46pigeon$1.PigeonListOptions, () => ({
    __proto__: dart.getMethods(messages$46pigeon$1.PigeonListOptions.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$1.PigeonListOptions, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$1.PigeonListOptions, I[289]);
  dart.setFieldSignature(messages$46pigeon$1.PigeonListOptions, () => ({
    __proto__: dart.getFields(messages$46pigeon$1.PigeonListOptions.__proto__),
    maxResults: dart.fieldType(core.int),
    pageToken: dart.fieldType(dart.nullable(core.String))
  }));
  messages$46pigeon$1.PigeonSettableMetadata = class PigeonSettableMetadata extends core.Object {
    get cacheControl() {
      return this[S.cacheControl$1];
    }
    set cacheControl(value) {
      this[S.cacheControl$1] = value;
    }
    get contentDisposition() {
      return this[S.contentDisposition$1];
    }
    set contentDisposition(value) {
      this[S.contentDisposition$1] = value;
    }
    get contentEncoding() {
      return this[S.contentEncoding$1];
    }
    set contentEncoding(value) {
      this[S.contentEncoding$1] = value;
    }
    get contentLanguage() {
      return this[S.contentLanguage$1];
    }
    set contentLanguage(value) {
      this[S.contentLanguage$1] = value;
    }
    get contentType() {
      return this[S.contentType$2];
    }
    set contentType(value) {
      this[S.contentType$2] = value;
    }
    get customMetadata() {
      return this[S.customMetadata$1];
    }
    set customMetadata(value) {
      this[S.customMetadata$1] = value;
    }
    static ['_#new#tearOff'](opts) {
      let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
      let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
      let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
      let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
      let contentType = opts && 'contentType' in opts ? opts.contentType : null;
      let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
      return new messages$46pigeon$1.PigeonSettableMetadata.new({cacheControl: cacheControl, contentDisposition: contentDisposition, contentEncoding: contentEncoding, contentLanguage: contentLanguage, contentType: contentType, customMetadata: customMetadata});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.cacheControl, this.contentDisposition, this.contentEncoding, this.contentLanguage, this.contentType, this.customMetadata]);
    }
    static decode(result) {
      let t360;
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$1.PigeonSettableMetadata.new({cacheControl: T$.StringN().as(result[S$.$_get](0)), contentDisposition: T$.StringN().as(result[S$.$_get](1)), contentEncoding: T$.StringN().as(result[S$.$_get](2)), contentLanguage: T$.StringN().as(result[S$.$_get](3)), contentType: T$.StringN().as(result[S$.$_get](4)), customMetadata: (t360 = T$.MapNOfObjectN$ObjectN().as(result[S$.$_get](5)), t360 == null ? null : t360[S$.$cast](T$.StringN(), T$.StringN()))});
    }
  };
  (messages$46pigeon$1.PigeonSettableMetadata.new = function(opts) {
    let cacheControl = opts && 'cacheControl' in opts ? opts.cacheControl : null;
    let contentDisposition = opts && 'contentDisposition' in opts ? opts.contentDisposition : null;
    let contentEncoding = opts && 'contentEncoding' in opts ? opts.contentEncoding : null;
    let contentLanguage = opts && 'contentLanguage' in opts ? opts.contentLanguage : null;
    let contentType = opts && 'contentType' in opts ? opts.contentType : null;
    let customMetadata = opts && 'customMetadata' in opts ? opts.customMetadata : null;
    this[S.cacheControl$1] = cacheControl;
    this[S.contentDisposition$1] = contentDisposition;
    this[S.contentEncoding$1] = contentEncoding;
    this[S.contentLanguage$1] = contentLanguage;
    this[S.contentType$2] = contentType;
    this[S.customMetadata$1] = customMetadata;
    ;
  }).prototype = messages$46pigeon$1.PigeonSettableMetadata.prototype;
  dart.addTypeTests(messages$46pigeon$1.PigeonSettableMetadata);
  dart.addTypeCaches(messages$46pigeon$1.PigeonSettableMetadata);
  dart.setMethodSignature(messages$46pigeon$1.PigeonSettableMetadata, () => ({
    __proto__: dart.getMethods(messages$46pigeon$1.PigeonSettableMetadata.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$1.PigeonSettableMetadata, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$1.PigeonSettableMetadata, I[289]);
  dart.setFieldSignature(messages$46pigeon$1.PigeonSettableMetadata, () => ({
    __proto__: dart.getFields(messages$46pigeon$1.PigeonSettableMetadata.__proto__),
    cacheControl: dart.fieldType(dart.nullable(core.String)),
    contentDisposition: dart.fieldType(dart.nullable(core.String)),
    contentEncoding: dart.fieldType(dart.nullable(core.String)),
    contentLanguage: dart.fieldType(dart.nullable(core.String)),
    contentType: dart.fieldType(dart.nullable(core.String)),
    customMetadata: dart.fieldType(dart.nullable(core.Map$(dart.nullable(core.String), dart.nullable(core.String))))
  }));
  messages$46pigeon$1.PigeonListResult = class PigeonListResult extends core.Object {
    get items() {
      return this[S.items];
    }
    set items(value) {
      this[S.items] = value;
    }
    get pageToken() {
      return this[S.pageToken$2];
    }
    set pageToken(value) {
      this[S.pageToken$2] = value;
    }
    get prefixs() {
      return this[S.prefixs];
    }
    set prefixs(value) {
      this[S.prefixs] = value;
    }
    static ['_#new#tearOff'](opts) {
      let items = opts && 'items' in opts ? opts.items : null;
      let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
      let prefixs = opts && 'prefixs' in opts ? opts.prefixs : null;
      return new messages$46pigeon$1.PigeonListResult.new({items: items, pageToken: pageToken, prefixs: prefixs});
    }
    encode() {
      return T$.JSArrayOfObjectN().of([this.items, this.pageToken, this.prefixs]);
    }
    static decode(result) {
      T$.ListOfObjectN().as(result);
      return new messages$46pigeon$1.PigeonListResult.new({items: dart.nullCheck(T$.ListNOfObjectN().as(result[S$.$_get](0)))[S$.$cast](T.PigeonStorageReferenceN()), pageToken: T$.StringN().as(result[S$.$_get](1)), prefixs: dart.nullCheck(T$.ListNOfObjectN().as(result[S$.$_get](2)))[S$.$cast](T.PigeonStorageReferenceN())});
    }
  };
  (messages$46pigeon$1.PigeonListResult.new = function(opts) {
    let items = opts && 'items' in opts ? opts.items : null;
    let pageToken = opts && 'pageToken' in opts ? opts.pageToken : null;
    let prefixs = opts && 'prefixs' in opts ? opts.prefixs : null;
    this[S.items] = items;
    this[S.pageToken$2] = pageToken;
    this[S.prefixs] = prefixs;
    ;
  }).prototype = messages$46pigeon$1.PigeonListResult.prototype;
  dart.addTypeTests(messages$46pigeon$1.PigeonListResult);
  dart.addTypeCaches(messages$46pigeon$1.PigeonListResult);
  dart.setMethodSignature(messages$46pigeon$1.PigeonListResult, () => ({
    __proto__: dart.getMethods(messages$46pigeon$1.PigeonListResult.__proto__),
    encode: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(messages$46pigeon$1.PigeonListResult, () => ['decode']);
  dart.setLibraryUri(messages$46pigeon$1.PigeonListResult, I[289]);
  dart.setFieldSignature(messages$46pigeon$1.PigeonListResult, () => ({
    __proto__: dart.getFields(messages$46pigeon$1.PigeonListResult.__proto__),
    items: dart.fieldType(core.List$(dart.nullable(messages$46pigeon$1.PigeonStorageReference))),
    pageToken: dart.fieldType(dart.nullable(core.String)),
    prefixs: dart.fieldType(core.List$(dart.nullable(messages$46pigeon$1.PigeonStorageReference)))
  }));
  messages$46pigeon$1._FirebaseStorageHostApiCodec = class _FirebaseStorageHostApiCodec extends message_codecs.StandardMessageCodec {
    static ['_#new#tearOff']() {
      return new messages$46pigeon$1._FirebaseStorageHostApiCodec.new();
    }
    writeValue(buffer, value) {
      if (messages$46pigeon$1.PigeonFullMetaData.is(value)) {
        buffer.putUint8(128);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$1.PigeonListOptions.is(value)) {
        buffer.putUint8(129);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$1.PigeonListResult.is(value)) {
        buffer.putUint8(130);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$1.PigeonSettableMetadata.is(value)) {
        buffer.putUint8(131);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$1.PigeonStorageFirebaseApp.is(value)) {
        buffer.putUint8(132);
        this.writeValue(buffer, value.encode());
      } else if (messages$46pigeon$1.PigeonStorageReference.is(value)) {
        buffer.putUint8(133);
        this.writeValue(buffer, value.encode());
      } else {
        super.writeValue(buffer, value);
      }
    }
    readValueOfType(type, buffer) {
      switch (type) {
        case 128:
          {
            return messages$46pigeon$1.PigeonFullMetaData.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 129:
          {
            return messages$46pigeon$1.PigeonListOptions.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 130:
          {
            return messages$46pigeon$1.PigeonListResult.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 131:
          {
            return messages$46pigeon$1.PigeonSettableMetadata.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 132:
          {
            return messages$46pigeon$1.PigeonStorageFirebaseApp.decode(dart.nullCheck(this.readValue(buffer)));
          }
        case 133:
          {
            return messages$46pigeon$1.PigeonStorageReference.decode(dart.nullCheck(this.readValue(buffer)));
          }
        default:
          {
            return super.readValueOfType(type, buffer);
          }
      }
    }
  };
  (messages$46pigeon$1._FirebaseStorageHostApiCodec.new = function() {
    messages$46pigeon$1._FirebaseStorageHostApiCodec.__proto__.new.call(this);
    ;
  }).prototype = messages$46pigeon$1._FirebaseStorageHostApiCodec.prototype;
  dart.addTypeTests(messages$46pigeon$1._FirebaseStorageHostApiCodec);
  dart.addTypeCaches(messages$46pigeon$1._FirebaseStorageHostApiCodec);
  dart.setLibraryUri(messages$46pigeon$1._FirebaseStorageHostApiCodec, I[289]);
  messages$46pigeon$1.FirebaseStorageHostApi = class FirebaseStorageHostApi extends core.Object {
    static ['_#new#tearOff'](opts) {
      let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
      return new messages$46pigeon$1.FirebaseStorageHostApi.new({binaryMessenger: binaryMessenger});
    }
    getReferencebyPath(arg_app, arg_path, arg_bucket) {
      return async.async(messages$46pigeon$1.PigeonStorageReference, (function* getReferencebyPath() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.getReferencebyPath", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_path, arg_bucket])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T.PigeonStorageReferenceN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    setMaxOperationRetryTime(arg_app, arg_time) {
      return async.async(dart.void, (function* setMaxOperationRetryTime() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.setMaxOperationRetryTime", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_time])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setMaxUploadRetryTime(arg_app, arg_time) {
      return async.async(dart.void, (function* setMaxUploadRetryTime() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.setMaxUploadRetryTime", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_time])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    setMaxDownloadRetryTime(arg_app, arg_time) {
      return async.async(dart.void, (function* setMaxDownloadRetryTime() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.setMaxDownloadRetryTime", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_time])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    useStorageEmulator(arg_app, arg_host, arg_port) {
      return async.async(dart.void, (function* useStorageEmulator() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.useStorageEmulator", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_host, arg_port])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    referenceDelete(arg_app, arg_reference) {
      return async.async(dart.void, (function* referenceDelete() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.referenceDelete", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_reference])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return;
        }
      }).bind(this));
    }
    referenceGetDownloadURL(arg_app, arg_reference) {
      return async.async(core.String, (function* referenceGetDownloadURL() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.referenceGetDownloadURL", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_reference])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    referenceGetMetaData(arg_app, arg_reference) {
      return async.async(messages$46pigeon$1.PigeonFullMetaData, (function* referenceGetMetaData() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.referenceGetMetaData", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_reference])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T.PigeonFullMetaDataN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    referenceList(arg_app, arg_reference, arg_options) {
      return async.async(messages$46pigeon$1.PigeonListResult, (function* referenceList() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.referenceList", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_reference, arg_options])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T.PigeonListResultN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    referenceListAll(arg_app, arg_reference) {
      return async.async(messages$46pigeon$1.PigeonListResult, (function* referenceListAll() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.referenceListAll", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_reference])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T.PigeonListResultN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    referenceGetData(arg_app, arg_reference, arg_maxSize) {
      return async.async(T$.Uint8ListN(), (function* referenceGetData() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.referenceGetData", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_reference, arg_maxSize])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else {
          return T$.Uint8ListN().as(replyList[S$.$_get](0));
        }
      }).bind(this));
    }
    referencePutData(arg_app, arg_reference, arg_data, arg_settableMetaData, arg_handle) {
      return async.async(core.String, (function* referencePutData() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.referencePutData", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_reference, arg_data, arg_settableMetaData, arg_handle])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    referencePutString(arg_app, arg_reference, arg_data, arg_format, arg_settableMetaData, arg_handle) {
      return async.async(core.String, (function* referencePutString() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.referencePutString", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_reference, arg_data, arg_format, arg_settableMetaData, arg_handle])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    referencePutFile(arg_app, arg_reference, arg_filePath, arg_settableMetaData, arg_handle) {
      return async.async(core.String, (function* referencePutFile() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.referencePutFile", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_reference, arg_filePath, arg_settableMetaData, arg_handle])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    referenceDownloadFile(arg_app, arg_reference, arg_filePath, arg_handle) {
      return async.async(core.String, (function* referenceDownloadFile() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.referenceDownloadFile", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_reference, arg_filePath, arg_handle])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.StringN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    referenceUpdateMetadata(arg_app, arg_reference, arg_metadata) {
      return async.async(messages$46pigeon$1.PigeonFullMetaData, (function* referenceUpdateMetadata() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.referenceUpdateMetadata", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_reference, arg_metadata])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T.PigeonFullMetaDataN().as(replyList[S$.$_get](0)));
        }
      }).bind(this));
    }
    taskPause(arg_app, arg_handle) {
      return async.async(T.MapOfStringN$ObjectN(), (function* taskPause() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.taskPause", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_handle])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyList[S$.$_get](0)))[S$.$cast](T$.StringN(), T$.ObjectN());
        }
      }).bind(this));
    }
    taskResume(arg_app, arg_handle) {
      return async.async(T.MapOfStringN$ObjectN(), (function* taskResume() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.taskResume", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_handle])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyList[S$.$_get](0)))[S$.$cast](T$.StringN(), T$.ObjectN());
        }
      }).bind(this));
    }
    taskCancel(arg_app, arg_handle) {
      return async.async(T.MapOfStringN$ObjectN(), (function* taskCancel() {
        let channel = new (T$.BasicMessageChannelOfObjectN()).new("dev.flutter.pigeon.firebase_storage_platform_interface.FirebaseStorageHostApi.taskCancel", messages$46pigeon$1.FirebaseStorageHostApi.codec, {binaryMessenger: this[S._binaryMessenger$3]});
        let replyList = T$.ListNOfObjectN().as(yield channel.send(T$.JSArrayOfObjectN().of([arg_app, arg_handle])));
        if (replyList == null) {
          dart.throw(new message_codec.PlatformException.new({code: "channel-error", message: "Unable to establish connection on channel."}));
        } else if (replyList[S$.$length] > 1) {
          dart.throw(new message_codec.PlatformException.new({code: core.String.as(dart.nullCheck(replyList[S$.$_get](0))), message: T$.StringN().as(replyList[S$.$_get](1)), details: replyList[S$.$_get](2)}));
        } else if (replyList[S$.$_get](0) == null) {
          dart.throw(new message_codec.PlatformException.new({code: "null-error", message: "Host platform returned null value for non-null return value."}));
        } else {
          return dart.nullCheck(T$.MapNOfObjectN$ObjectN().as(replyList[S$.$_get](0)))[S$.$cast](T$.StringN(), T$.ObjectN());
        }
      }).bind(this));
    }
  };
  (messages$46pigeon$1.FirebaseStorageHostApi.new = function(opts) {
    let binaryMessenger = opts && 'binaryMessenger' in opts ? opts.binaryMessenger : null;
    this[S._binaryMessenger$3] = binaryMessenger;
    ;
  }).prototype = messages$46pigeon$1.FirebaseStorageHostApi.prototype;
  dart.addTypeTests(messages$46pigeon$1.FirebaseStorageHostApi);
  dart.addTypeCaches(messages$46pigeon$1.FirebaseStorageHostApi);
  dart.setMethodSignature(messages$46pigeon$1.FirebaseStorageHostApi, () => ({
    __proto__: dart.getMethods(messages$46pigeon$1.FirebaseStorageHostApi.__proto__),
    getReferencebyPath: dart.fnType(async.Future$(messages$46pigeon$1.PigeonStorageReference), [messages$46pigeon$1.PigeonStorageFirebaseApp, core.String, dart.nullable(core.String)]),
    setMaxOperationRetryTime: dart.fnType(async.Future$(dart.void), [messages$46pigeon$1.PigeonStorageFirebaseApp, core.int]),
    setMaxUploadRetryTime: dart.fnType(async.Future$(dart.void), [messages$46pigeon$1.PigeonStorageFirebaseApp, core.int]),
    setMaxDownloadRetryTime: dart.fnType(async.Future$(dart.void), [messages$46pigeon$1.PigeonStorageFirebaseApp, core.int]),
    useStorageEmulator: dart.fnType(async.Future$(dart.void), [messages$46pigeon$1.PigeonStorageFirebaseApp, core.String, core.int]),
    referenceDelete: dart.fnType(async.Future$(dart.void), [messages$46pigeon$1.PigeonStorageFirebaseApp, messages$46pigeon$1.PigeonStorageReference]),
    referenceGetDownloadURL: dart.fnType(async.Future$(core.String), [messages$46pigeon$1.PigeonStorageFirebaseApp, messages$46pigeon$1.PigeonStorageReference]),
    referenceGetMetaData: dart.fnType(async.Future$(messages$46pigeon$1.PigeonFullMetaData), [messages$46pigeon$1.PigeonStorageFirebaseApp, messages$46pigeon$1.PigeonStorageReference]),
    referenceList: dart.fnType(async.Future$(messages$46pigeon$1.PigeonListResult), [messages$46pigeon$1.PigeonStorageFirebaseApp, messages$46pigeon$1.PigeonStorageReference, messages$46pigeon$1.PigeonListOptions]),
    referenceListAll: dart.fnType(async.Future$(messages$46pigeon$1.PigeonListResult), [messages$46pigeon$1.PigeonStorageFirebaseApp, messages$46pigeon$1.PigeonStorageReference]),
    referenceGetData: dart.fnType(async.Future$(dart.nullable(typed_data.Uint8List)), [messages$46pigeon$1.PigeonStorageFirebaseApp, messages$46pigeon$1.PigeonStorageReference, core.int]),
    referencePutData: dart.fnType(async.Future$(core.String), [messages$46pigeon$1.PigeonStorageFirebaseApp, messages$46pigeon$1.PigeonStorageReference, typed_data.Uint8List, messages$46pigeon$1.PigeonSettableMetadata, core.int]),
    referencePutString: dart.fnType(async.Future$(core.String), [messages$46pigeon$1.PigeonStorageFirebaseApp, messages$46pigeon$1.PigeonStorageReference, core.String, core.int, messages$46pigeon$1.PigeonSettableMetadata, core.int]),
    referencePutFile: dart.fnType(async.Future$(core.String), [messages$46pigeon$1.PigeonStorageFirebaseApp, messages$46pigeon$1.PigeonStorageReference, core.String, messages$46pigeon$1.PigeonSettableMetadata, core.int]),
    referenceDownloadFile: dart.fnType(async.Future$(core.String), [messages$46pigeon$1.PigeonStorageFirebaseApp, messages$46pigeon$1.PigeonStorageReference, core.String, core.int]),
    referenceUpdateMetadata: dart.fnType(async.Future$(messages$46pigeon$1.PigeonFullMetaData), [messages$46pigeon$1.PigeonStorageFirebaseApp, messages$46pigeon$1.PigeonStorageReference, messages$46pigeon$1.PigeonSettableMetadata]),
    taskPause: dart.fnType(async.Future$(core.Map$(dart.nullable(core.String), dart.nullable(core.Object))), [messages$46pigeon$1.PigeonStorageFirebaseApp, core.int]),
    taskResume: dart.fnType(async.Future$(core.Map$(dart.nullable(core.String), dart.nullable(core.Object))), [messages$46pigeon$1.PigeonStorageFirebaseApp, core.int]),
    taskCancel: dart.fnType(async.Future$(core.Map$(dart.nullable(core.String), dart.nullable(core.Object))), [messages$46pigeon$1.PigeonStorageFirebaseApp, core.int])
  }));
  dart.setLibraryUri(messages$46pigeon$1.FirebaseStorageHostApi, I[289]);
  dart.setFieldSignature(messages$46pigeon$1.FirebaseStorageHostApi, () => ({
    __proto__: dart.getFields(messages$46pigeon$1.FirebaseStorageHostApi.__proto__),
    [S._binaryMessenger$3]: dart.finalFieldType(dart.nullable(binary_messenger.BinaryMessenger))
  }));
  dart.setStaticFieldSignature(messages$46pigeon$1.FirebaseStorageHostApi, () => ['codec']);
  dart.defineLazy(messages$46pigeon$1.FirebaseStorageHostApi, {
    /*messages$46pigeon$1.FirebaseStorageHostApi.codec*/get codec() {
      return C[450] || CT.C450;
    }
  }, false);
  exception$2.convertPlatformException = function convertPlatformException$0(exception, stackTrace) {
    if (!core.Exception.is(exception) || !message_codec.PlatformException.is(exception)) {
      core.Error.throwWithStackTrace(core.Object.as(exception), stackTrace);
    }
    core.Error.throwWithStackTrace(exception$2.platformExceptionToFirebaseException(exception, stackTrace), stackTrace);
  };
  exception$2.catchFuturePlatformException = function catchFuturePlatformException(T, exception, stackTrace) {
    if (!core.Exception.is(exception) || !message_codec.PlatformException.is(exception)) {
      return async.Future$(T).error(exception, stackTrace);
    }
    return async.Future$(T).error(exception$2.platformExceptionToFirebaseException(exception, stackTrace), stackTrace);
  };
  exception$2.platformExceptionToFirebaseException = function platformExceptionToFirebaseException$(platformException, stackTrace) {
    return new firebase_core_platform_interface.FirebaseException.new({plugin: "firebase_storage", code: platformException.code, message: platformException.message});
  };
  method_channel_reference.MethodChannelReference = class MethodChannelReference extends platform_interface_reference.ReferencePlatform {
    static ['_#new#tearOff'](storage, path) {
      return new method_channel_reference.MethodChannelReference.new(storage, path);
    }
    get pigeonFirebaseApp() {
      return new messages$46pigeon$1.PigeonStorageFirebaseApp.new({appName: this.storage.app.name, bucket: this.storage.bucket});
    }
    get pigeonReference() {
      return new messages$46pigeon$1.PigeonStorageReference.new({bucket: this.storage.bucket, fullPath: this.fullPath, name: this.name});
    }
    delete() {
      return async.async(dart.void, (function* $delete() {
        try {
          yield method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.referenceDelete(this.pigeonFirebaseApp, this.pigeonReference);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getDownloadURL() {
      return async.async(core.String, (function* getDownloadURL() {
        try {
          let url = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.referenceGetDownloadURL(this.pigeonFirebaseApp, this.pigeonReference));
          return url;
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    static convertMetadata(pigeonMetadata) {
      let t362;
      let _metadata = new (T$.IdentityMapOfString$dynamic()).new();
      t362 = pigeonMetadata.metadata;
      t362 == null ? null : t362[S$.$forEach](dart.fn((key, value) => {
        if (key != null) {
          _metadata[S$.$_set](key, value);
        }
      }, T.StringNAndObjectNTovoid()));
      return new full_metadata.FullMetadata.new(_metadata);
    }
    getMetadata() {
      return async.async(full_metadata.FullMetadata, (function* getMetadata() {
        try {
          let metaData = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.referenceGetMetaData(this.pigeonFirebaseApp, this.pigeonReference));
          return method_channel_reference.MethodChannelReference.convertMetadata(metaData);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    static convertOptions(options) {
      let t363;
      if (options == null) {
        return new messages$46pigeon$1.PigeonListOptions.new({maxResults: 1000});
      }
      return new messages$46pigeon$1.PigeonListOptions.new({maxResults: (t363 = options.maxResults, t363 == null ? 1000 : t363), pageToken: options.pageToken});
    }
    convertListReference(pigeonReferenceList) {
      let referencePaths = T$.JSArrayOfString().of([]);
      for (let reference of pigeonReferenceList.items) {
        referencePaths[S$.$add](dart.nullCheck(reference).fullPath);
      }
      let prefixPaths = T$.JSArrayOfString().of([]);
      for (let prefix of pigeonReferenceList.prefixs) {
        prefixPaths[S$.$add](dart.nullCheck(prefix).fullPath);
      }
      return new method_channel_list_result.MethodChannelListResult.new(this.storage, {nextPageToken: pigeonReferenceList.pageToken, items: referencePaths, prefixes: prefixPaths});
    }
    list(options = null) {
      return async.async(platform_interface_list_result.ListResultPlatform, (function* list() {
        try {
          let pigeonOptions = method_channel_reference.MethodChannelReference.convertOptions(options);
          let pigeonReferenceList = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.referenceList(this.pigeonFirebaseApp, this.pigeonReference, pigeonOptions));
          return this.convertListReference(pigeonReferenceList);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    listAll() {
      return async.async(platform_interface_list_result.ListResultPlatform, (function* listAll() {
        try {
          let pigeonReferenceList = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.referenceListAll(this.pigeonFirebaseApp, this.pigeonReference));
          return this.convertListReference(pigeonReferenceList);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    getData(maxSize) {
      return async.async(T$.Uint8ListN(), (function* getData() {
        try {
          return yield method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.referenceGetData(this.pigeonFirebaseApp, this.pigeonReference, maxSize);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    putData(data, metadata = null) {
      let handle = method_channel_firebase_storage.MethodChannelFirebaseStorage.nextMethodChannelHandleId;
      return new method_channel_task.MethodChannelPutTask.new(handle, this.storage, this.fullPath, data, metadata);
    }
    putBlob(data, metadata = null) {
      dart.throw(new core.UnimplementedError.new("putBlob() is not supported on native platforms. Use [put], [putFile] or [putString] instead."));
    }
    putFile(file, metadata = null) {
      let handle = method_channel_firebase_storage.MethodChannelFirebaseStorage.nextMethodChannelHandleId;
      return new method_channel_task.MethodChannelPutFileTask.new(handle, this.storage, this.fullPath, file, metadata);
    }
    putString(data, format, metadata = null) {
      let handle = method_channel_firebase_storage.MethodChannelFirebaseStorage.nextMethodChannelHandleId;
      return new method_channel_task.MethodChannelPutStringTask.new(handle, this.storage, this.fullPath, data, format, metadata);
    }
    convertToPigeonMetaData(data) {
      return new messages$46pigeon$1.PigeonSettableMetadata.new({cacheControl: data.cacheControl, contentDisposition: data.contentDisposition, contentEncoding: data.contentEncoding, contentLanguage: data.contentLanguage, contentType: data.contentType, customMetadata: data.customMetadata});
    }
    updateMetadata(metadata) {
      return async.async(full_metadata.FullMetadata, (function* updateMetadata() {
        try {
          let updatedMetaData = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.referenceUpdateMetadata(this.pigeonFirebaseApp, this.pigeonReference, this.convertToPigeonMetaData(metadata)));
          return method_channel_reference.MethodChannelReference.convertMetadata(updatedMetaData);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            exception$2.convertPlatformException(e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    writeToFile(file) {
      let handle = method_channel_firebase_storage.MethodChannelFirebaseStorage.nextMethodChannelHandleId;
      return new method_channel_task.MethodChannelDownloadTask.new(handle, this.storage, this.fullPath, file);
    }
  };
  (method_channel_reference.MethodChannelReference.new = function(storage, path) {
    method_channel_reference.MethodChannelReference.__proto__.new.call(this, storage, path);
    ;
  }).prototype = method_channel_reference.MethodChannelReference.prototype;
  dart.addTypeTests(method_channel_reference.MethodChannelReference);
  dart.addTypeCaches(method_channel_reference.MethodChannelReference);
  dart.setMethodSignature(method_channel_reference.MethodChannelReference, () => ({
    __proto__: dart.getMethods(method_channel_reference.MethodChannelReference.__proto__),
    convertListReference: dart.fnType(platform_interface_list_result.ListResultPlatform, [messages$46pigeon$1.PigeonListResult]),
    convertToPigeonMetaData: dart.fnType(messages$46pigeon$1.PigeonSettableMetadata, [settable_metadata.SettableMetadata])
  }));
  dart.setStaticMethodSignature(method_channel_reference.MethodChannelReference, () => ['convertMetadata', 'convertOptions']);
  dart.setGetterSignature(method_channel_reference.MethodChannelReference, () => ({
    __proto__: dart.getGetters(method_channel_reference.MethodChannelReference.__proto__),
    pigeonFirebaseApp: messages$46pigeon$1.PigeonStorageFirebaseApp,
    pigeonReference: messages$46pigeon$1.PigeonStorageReference
  }));
  dart.setLibraryUri(method_channel_reference.MethodChannelReference, I[290]);
  browser_client.BrowserClient = class BrowserClient extends base_client.BaseClient {
    get withCredentials() {
      return this[S.withCredentials];
    }
    set withCredentials(value) {
      this[S.withCredentials] = value;
    }
    send(request) {
      return async.async(streamed_response.StreamedResponse, (function* send() {
        let t367;
        if (this[S._isClosed]) {
          dart.throw(new exception$1.ClientException.new("HTTP request failed. Client is already closed.", request.url));
        }
        let bytes = (yield request.finalize().toBytes());
        let xhr = html.HttpRequest.new();
        this[S._xhrs].add(xhr);
        t367 = xhr;
        (() => {
          t367.open(request.method, dart.str(request.url), {async: true});
          t367[S.$responseType] = "arraybuffer";
          t367.withCredentials = this.withCredentials;
          return t367;
        })();
        request.headers[S$.$forEach](dart.bind(xhr, 'setRequestHeader'));
        let completer = T.CompleterOfStreamedResponse().new();
        async.unawaited(xhr[S$.$onLoad].first.then(dart.void, dart.fn(_ => {
          let body = typed_data.ByteBuffer.as(xhr[S.$response])[S.$asUint8List]();
          completer.complete(new streamed_response.StreamedResponse.new(byte_stream.ByteStream.fromBytes(body), dart.nullCheck(xhr.status), {contentLength: body[S$.$length], request: request, headers: xhr[S.$responseHeaders], reasonPhrase: xhr.statusText}));
        }, T.ProgressEventToNull())));
        async.unawaited(xhr[S$.$onError].first.then(dart.void, dart.fn(_ => {
          completer.completeError(new exception$1.ClientException.new("XMLHttpRequest error.", request.url), core.StackTrace.current);
        }, T.ProgressEventToNull())));
        xhr.send(bytes);
        try {
          return yield completer.future;
        } finally {
          this[S._xhrs].remove(xhr);
        }
      }).bind(this));
    }
    close() {
      this[S._isClosed] = true;
      for (let xhr of this[S._xhrs]) {
        xhr.abort();
      }
      this[S._xhrs].clear();
    }
    static ['_#new#tearOff']() {
      return new browser_client.BrowserClient.new();
    }
  };
  (browser_client.BrowserClient.new = function() {
    this[S._xhrs] = T.LinkedHashSetOfHttpRequest().new();
    this[S.withCredentials] = false;
    this[S._isClosed] = false;
    ;
  }).prototype = browser_client.BrowserClient.prototype;
  dart.addTypeTests(browser_client.BrowserClient);
  dart.addTypeCaches(browser_client.BrowserClient);
  dart.setMethodSignature(browser_client.BrowserClient, () => ({
    __proto__: dart.getMethods(browser_client.BrowserClient.__proto__),
    send: dart.fnType(async.Future$(streamed_response.StreamedResponse), [base_request.BaseRequest])
  }));
  dart.setLibraryUri(browser_client.BrowserClient, I[291]);
  dart.setFieldSignature(browser_client.BrowserClient, () => ({
    __proto__: dart.getFields(browser_client.BrowserClient.__proto__),
    [S._xhrs]: dart.finalFieldType(core.Set$(html.HttpRequest)),
    withCredentials: dart.fieldType(core.bool),
    [S._isClosed]: dart.fieldType(core.bool)
  }));
  browser_client.createClient = function createClient() {
    ;
    return new browser_client.BrowserClient.new();
  };
  utils$5.mapToQuery = function mapToQuery(map, opts) {
    let encoding = opts && 'encoding' in opts ? opts.encoding : null;
    let pairs = T.JSArrayOfListOfString().of([]);
    map[S$.$forEach](dart.fn((key, value) => {
      let t367, t367$;
      return pairs[S$.$add](T$.JSArrayOfString().of([core.Uri.encodeQueryComponent(key, {encoding: (t367 = encoding, t367 == null ? convert.utf8 : t367)}), core.Uri.encodeQueryComponent(value, {encoding: (t367$ = encoding, t367$ == null ? convert.utf8 : t367$)})]));
    }, T$.StringAndStringTovoid()));
    return pairs[S$.$map](core.String, dart.fn(pair => pair[S$.$_get](0) + "=" + pair[S$.$_get](1), T.ListOfStringToString()))[S$.$join]("&");
  };
  utils$5.encodingForCharset = function encodingForCharset(charset, fallback = C[451] || CT.C451) {
    let t367;
    if (charset == null) return fallback;
    t367 = convert.Encoding.getByName(charset);
    return t367 == null ? fallback : t367;
  };
  utils$5.requiredEncodingForCharset = function requiredEncodingForCharset(charset) {
    let t367;
    t367 = convert.Encoding.getByName(charset);
    return t367 == null ? dart.throw(new core.FormatException.new("Unsupported encoding \"" + charset + "\".")) : t367;
  };
  utils$5.isPlainAscii = function isPlainAscii(string) {
    return utils$5._asciiOnly.hasMatch(string);
  };
  utils$5.toUint8List = function toUint8List(input) {
    if (typed_data.Uint8List.is(input)) return input;
    if (typed_data.TypedData.is(input)) {
      return typed_data.Uint8List.view(typed_data.TypedData.as(input)[S.$buffer]);
    }
    return _native_typed_data.NativeUint8List.fromList(input);
  };
  utils$5.toByteStream = function toByteStream(stream) {
    if (byte_stream.ByteStream.is(stream)) return stream;
    return new byte_stream.ByteStream.new(stream);
  };
  utils$5.onDone = function onDone(T, stream, onDone) {
    return stream.transform(T, new (async._StreamHandlerTransformer$(T, T)).new({handleDone: dart.fn(sink => {
        sink.close();
        onDone();
      }, dart.fnType(dart.void, [async.EventSink$(T)]))}));
  };
  dart.defineLazy(utils$5, {
    /*utils$5._asciiOnly*/get _asciiOnly() {
      return core.RegExp.new("^[\\x00-\\x7F]+$");
    }
  }, false);
  multipart_file_stub.multipartFileFromPath = function multipartFileFromPath(field, filePath, opts) {
    let filename = opts && 'filename' in opts ? opts.filename : null;
    let contentType = opts && 'contentType' in opts ? opts.contentType : null;
    return dart.throw(new core.UnsupportedError.new("MultipartFile is only supported where dart:io is available."));
  };
  dart.defineLazy(boundary_characters, {
    /*boundary_characters.boundaryCharacters*/get boundaryCharacters() {
      return C[452] || CT.C452;
    }
  }, false);
  task_snapshot_web.TaskSnapshotWeb = class TaskSnapshotWeb extends platform_interface_task_snapshot.TaskSnapshotPlatform {
    static ['_#new#tearOff'](ref, snapshot) {
      return new task_snapshot_web.TaskSnapshotWeb.new(ref, snapshot);
    }
    get bytesTransferred() {
      return this[S._snapshot].bytesTransferred;
    }
    get metadata() {
      return metadata$.fbFullMetadataToFullMetadata(this[S._snapshot].metadata);
    }
    get ref() {
      return this[S._reference$1];
    }
    get state() {
      return task.fbTaskStateToTaskState(this[S._snapshot].state);
    }
    get totalBytes() {
      return this[S._snapshot].totalBytes;
    }
  };
  (task_snapshot_web.TaskSnapshotWeb.new = function(ref, snapshot) {
    this[S._reference$1] = ref;
    this[S._snapshot] = snapshot;
    task_snapshot_web.TaskSnapshotWeb.__proto__.new.call(this, task.fbTaskStateToTaskState(snapshot.state), new (T$.IdentityMapOfString$dynamic()).new());
    ;
  }).prototype = task_snapshot_web.TaskSnapshotWeb.prototype;
  dart.addTypeTests(task_snapshot_web.TaskSnapshotWeb);
  dart.addTypeCaches(task_snapshot_web.TaskSnapshotWeb);
  dart.setGetterSignature(task_snapshot_web.TaskSnapshotWeb, () => ({
    __proto__: dart.getGetters(task_snapshot_web.TaskSnapshotWeb.__proto__),
    metadata: full_metadata.FullMetadata
  }));
  dart.setLibraryUri(task_snapshot_web.TaskSnapshotWeb, I[292]);
  dart.setFieldSignature(task_snapshot_web.TaskSnapshotWeb, () => ({
    __proto__: dart.getFields(task_snapshot_web.TaskSnapshotWeb.__proto__),
    [S._reference$1]: dart.finalFieldType(platform_interface_reference.ReferencePlatform),
    [S._snapshot]: dart.finalFieldType(storage.UploadTaskSnapshot)
  }));
  web_helpers.createAnchorElement = function createAnchorElement(href, suggestedName) {
    let element = html.AnchorElement.new({href: href});
    if (suggestedName == null) {
      element.download = "download";
    } else {
      element.download = suggestedName;
    }
    return element;
  };
  web_helpers.addElementToContainerAndClick = function addElementToContainerAndClick(container, element) {
    container[S$.$children][S$.$add](element);
    element.click();
  };
  web_helpers.ensureInitialized = function ensureInitialized(id) {
    let t367;
    let target = html.querySelector("#" + id);
    if (target == null) {
      let targetElement = (t367 = html.Element.tag("flt-x-file"), (() => {
        t367[S$.$id] = id;
        return t367;
      })());
      dart.nullCheck(html.querySelector("body"))[S$.$children][S$.$add](targetElement);
      target = targetElement;
    }
    return target;
  };
  web_helpers.isSafari = function isSafari() {
    return html.window[S.$navigator][S.$vendor] === "Apple Computer, Inc.";
  };
  digest.Digest = class Digest extends core.Object {
    get bytes() {
      return this[S.bytes$2];
    }
    set bytes(value) {
      super.bytes = value;
    }
    static ['_#new#tearOff'](bytes) {
      return new digest.Digest.new(bytes);
    }
    _equals(other) {
      if (other == null) return false;
      if (digest.Digest.is(other)) {
        let a = this.bytes;
        let b = other.bytes;
        let n = a[S$.$length];
        if (n !== b[S$.$length]) {
          return false;
        }
        let mismatch = 0;
        for (let i = 0; i < n; i = i + 1) {
          mismatch = (mismatch | (a[S$.$_get](i) ^ b[S$.$_get](i)) >>> 0) >>> 0;
        }
        return mismatch === 0;
      }
      return false;
    }
    get hashCode() {
      return core.Object.hashAll(this.bytes);
    }
    toString() {
      return digest._hexEncode(this.bytes);
    }
  };
  (digest.Digest.new = function(bytes) {
    this[S.bytes$2] = bytes;
    ;
  }).prototype = digest.Digest.prototype;
  dart.addTypeTests(digest.Digest);
  dart.addTypeCaches(digest.Digest);
  dart.setLibraryUri(digest.Digest, I[293]);
  dart.setFieldSignature(digest.Digest, () => ({
    __proto__: dart.getFields(digest.Digest.__proto__),
    bytes: dart.finalFieldType(core.List$(core.int))
  }));
  dart.defineExtensionMethods(digest.Digest, ['_equals', 'toString']);
  dart.defineExtensionAccessors(digest.Digest, ['hashCode']);
  digest._hexEncode = function _hexEncode(bytes) {
    let t367, t367$;
    let charCodes = _native_typed_data.NativeUint8List.new(bytes[S$.$length] * 2);
    for (let i = 0, j = 0; i < bytes[S$.$length]; i = i + 1) {
      let byte = bytes[S$.$_get](i);
      charCodes[S$.$_set]((t367 = j, j = t367 + 1, t367), "0123456789abcdef"[S$0.$codeUnitAt](byte >> 4 & 15));
      charCodes[S$.$_set]((t367$ = j, j = t367$ + 1, t367$), "0123456789abcdef"[S$0.$codeUnitAt](byte & 15));
    }
    return core.String.fromCharCodes(charCodes);
  };
  hash.Hash = class Hash extends convert.Converter$(core.List$(core.int), digest.Digest) {
    convert(input) {
      T$.ListOfint().as(input);
      let innerSink = new digest_sink.DigestSink.new();
      let outerSink = this.startChunkedConversion(innerSink);
      outerSink.add(input);
      outerSink.close();
      return innerSink.value;
    }
  };
  (hash.Hash.new = function() {
    hash.Hash.__proto__.new.call(this);
    ;
  }).prototype = hash.Hash.prototype;
  dart.addTypeTests(hash.Hash);
  dart.addTypeCaches(hash.Hash);
  dart.setMethodSignature(hash.Hash, () => ({
    __proto__: dart.getMethods(hash.Hash.__proto__),
    convert: dart.fnType(digest.Digest, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(hash.Hash, I[294]);
  hmac.Hmac = class Hmac extends convert.Converter$(core.List$(core.int), digest.Digest) {
    static ['_#new#tearOff'](hash, key) {
      return new hmac.Hmac.new(hash, key);
    }
    convert(input) {
      T$.ListOfint().as(input);
      let innerSink = new digest_sink.DigestSink.new();
      let outerSink = this.startChunkedConversion(innerSink);
      outerSink.add(input);
      outerSink.close();
      return innerSink.value;
    }
    startChunkedConversion(sink) {
      T.SinkOfDigest().as(sink);
      return new hmac._HmacSink.new(sink, this[S._hash], this[S._key]);
    }
  };
  (hmac.Hmac.new = function(hash, key) {
    this[S._hash] = hash;
    this[S._key] = _native_typed_data.NativeUint8List.new(hash.blockSize);
    hmac.Hmac.__proto__.new.call(this);
    if (key[S$.$length] > this[S._hash].blockSize) key = this[S._hash].convert(key).bytes;
    this[S._key][S$0.$setRange](0, key[S$.$length], key);
  }).prototype = hmac.Hmac.prototype;
  dart.addTypeTests(hmac.Hmac);
  dart.addTypeCaches(hmac.Hmac);
  dart.setMethodSignature(hmac.Hmac, () => ({
    __proto__: dart.getMethods(hmac.Hmac.__proto__),
    convert: dart.fnType(digest.Digest, [dart.nullable(core.Object)]),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(hmac.Hmac, I[295]);
  dart.setFieldSignature(hmac.Hmac, () => ({
    __proto__: dart.getFields(hmac.Hmac.__proto__),
    [S._hash]: dart.finalFieldType(hash.Hash),
    [S._key]: dart.finalFieldType(typed_data.Uint8List)
  }));
  hmac._HmacSink = class _HmacSink extends convert.ByteConversionSink {
    get [S._innerSink]() {
      let t367;
      t367 = this[S.___HmacSink__innerSink];
      return t367 == null ? dart.throw(new _internal.LateError.fieldNI("_innerSink")) : t367;
    }
    set [S._innerSink](_innerSink$35param) {
      if (this[S.___HmacSink__innerSink] == null)
        this[S.___HmacSink__innerSink] = _innerSink$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("_innerSink"));
    }
    static ['_#new#tearOff'](sink, hash, key) {
      return new hmac._HmacSink.new(sink, hash, key);
    }
    add(data) {
      T$.ListOfint().as(data);
      if (this[S._isClosed$1]) dart.throw(new core.StateError.new("HMAC is closed"));
      this[S._innerSink].add(data);
    }
    addSlice(data, start, end, isLast) {
      if (this[S._isClosed$1]) dart.throw(new core.StateError.new("HMAC is closed"));
      this[S._innerSink].addSlice(data, start, end, isLast);
    }
    close() {
      if (this[S._isClosed$1]) return;
      this[S._isClosed$1] = true;
      this[S._innerSink].close();
      this[S._outerSink].add(this[S._innerResultSink].value.bytes);
      this[S._outerSink].close();
    }
  };
  (hmac._HmacSink.new = function(sink, hash, key) {
    this[S._innerResultSink] = new digest_sink.DigestSink.new();
    this[S.___HmacSink__innerSink] = null;
    this[S._isClosed$1] = false;
    this[S._outerSink] = hash.startChunkedConversion(sink);
    hmac._HmacSink.__proto__.new.call(this);
    this[S._innerSink] = hash.startChunkedConversion(this[S._innerResultSink]);
    let padding = _native_typed_data.NativeUint8List.new(key[S$.$length]);
    for (let i = 0; i < padding[S$.$length]; i = i + 1) {
      padding[S$.$_set](i, (92 ^ key[S$.$_get](i)) >>> 0);
    }
    this[S._outerSink].add(padding);
    for (let i = 0; i < padding[S$.$length]; i = i + 1) {
      padding[S$.$_set](i, (54 ^ key[S$.$_get](i)) >>> 0);
    }
    this[S._innerSink].add(padding);
  }).prototype = hmac._HmacSink.prototype;
  dart.addTypeTests(hmac._HmacSink);
  dart.addTypeCaches(hmac._HmacSink);
  dart.setMethodSignature(hmac._HmacSink, () => ({
    __proto__: dart.getMethods(hmac._HmacSink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    addSlice: dart.fnType(dart.void, [core.List$(core.int), core.int, core.int, core.bool]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(hmac._HmacSink, () => ({
    __proto__: dart.getGetters(hmac._HmacSink.__proto__),
    [S._innerSink]: convert.ByteConversionSink
  }));
  dart.setSetterSignature(hmac._HmacSink, () => ({
    __proto__: dart.getSetters(hmac._HmacSink.__proto__),
    [S._innerSink]: convert.ByteConversionSink
  }));
  dart.setLibraryUri(hmac._HmacSink, I[295]);
  dart.setFieldSignature(hmac._HmacSink, () => ({
    __proto__: dart.getFields(hmac._HmacSink.__proto__),
    [S._outerSink]: dart.finalFieldType(convert.ByteConversionSink),
    [S._innerResultSink]: dart.finalFieldType(digest_sink.DigestSink),
    [S.___HmacSink__innerSink]: dart.fieldType(dart.nullable(convert.ByteConversionSink)),
    [S._isClosed$1]: dart.fieldType(core.bool)
  }));
  md5._MD5 = class _MD5 extends hash.Hash {
    get blockSize() {
      return this[S.blockSize];
    }
    set blockSize(value) {
      super.blockSize = value;
    }
    static ['_#_#tearOff']() {
      return new md5._MD5.__();
    }
    startChunkedConversion(sink) {
      T.SinkOfDigest().as(sink);
      return new convert._ByteAdapterSink.new(new md5._MD5Sink.new(sink));
    }
  };
  (md5._MD5.__ = function() {
    this[S.blockSize] = 16 * 4;
    md5._MD5.__proto__.new.call(this);
    ;
  }).prototype = md5._MD5.prototype;
  dart.addTypeTests(md5._MD5);
  dart.addTypeCaches(md5._MD5);
  dart.setMethodSignature(md5._MD5, () => ({
    __proto__: dart.getMethods(md5._MD5.__proto__),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(md5._MD5, I[296]);
  dart.setFieldSignature(md5._MD5, () => ({
    __proto__: dart.getFields(md5._MD5.__proto__),
    blockSize: dart.finalFieldType(core.int)
  }));
  hash_sink.HashSink = class HashSink extends core.Object {
    add(data) {
      T$.ListOfint().as(data);
      if (this[S._isClosed$2]) dart.throw(new core.StateError.new("Hash.add() called after close()."));
      this[S._lengthInBytes] = this[S._lengthInBytes] + data[S$.$length];
      this[S._pendingData].addAll(data);
      this[S._iterate]();
    }
    close() {
      if (this[S._isClosed$2]) return;
      this[S._isClosed$2] = true;
      this[S._finalizeData]();
      this[S._iterate]();
      if (!this[S._pendingData][S$.$isEmpty]) dart.assertFailed(null, I[298], 90, 12, "_pendingData.isEmpty");
      this[S._sink$2].add(new digest.Digest.new(this[S._byteDigest]()));
      this[S._sink$2].close();
    }
    [S._byteDigest]() {
      if (this[S._endian][S$0.$_equals](typed_data.Endian.host)) return this.digest[S.$buffer][S.$asUint8List]();
      let cachedDigest = this.digest;
      let byteDigest = _native_typed_data.NativeUint8List.new(cachedDigest[S.$lengthInBytes]);
      let byteData = byteDigest[S.$buffer][S.$asByteData]();
      for (let i = 0; i < cachedDigest[S$.$length]; i = i + 1) {
        byteData[S.$setUint32](i * 4, cachedDigest[S$.$_get](i));
      }
      return byteDigest;
    }
    [S._iterate]() {
      let pendingDataBytes = this[S._pendingData].buffer[S.$asByteData]();
      let pendingDataChunks = (this[S._pendingData].length / this[S._currentChunk][S.$lengthInBytes])[S$0.$truncate]();
      for (let i = 0; i < pendingDataChunks; i = i + 1) {
        for (let j = 0; j < this[S._currentChunk][S$.$length]; j = j + 1) {
          this[S._currentChunk][S$.$_set](j, pendingDataBytes[S.$getUint32](i * this[S._currentChunk][S.$lengthInBytes] + j * 4, this[S._endian]));
        }
        this.updateHash(this[S._currentChunk]);
      }
      this[S._pendingData][S.$removeRange](0, pendingDataChunks * this[S._currentChunk][S.$lengthInBytes]);
    }
    [S._finalizeData]() {
      this[S._pendingData].add(128);
      let contentsLength = this[S._lengthInBytes] + 1 + this[S._signatureBytes];
      let finalizedLength = this[S._roundUp](contentsLength, this[S._currentChunk][S.$lengthInBytes]);
      for (let i = 0; i < finalizedLength - contentsLength; i = i + 1) {
        this[S._pendingData].add(0);
      }
      if (this[S._lengthInBytes] > 1125899906842623) {
        dart.throw(new core.UnsupportedError.new("Hashing is unsupported for messages with more than 2^53 bits."));
      }
      let lengthInBits = this[S._lengthInBytes] * 8;
      let offset = this[S._pendingData].length + (this[S._signatureBytes] - 8);
      this[S._pendingData].addAll(_native_typed_data.NativeUint8List.new(this[S._signatureBytes]));
      let byteData = this[S._pendingData].buffer[S.$asByteData]();
      let highBits = (lengthInBits / 4294967296)[S$0.$truncate]();
      let lowBits = (lengthInBits & 4294967295) >>> 0;
      if (this[S._endian][S$0.$_equals](typed_data.Endian.big)) {
        byteData[S.$setUint32](offset, highBits, this[S._endian]);
        byteData[S.$setUint32](offset + 4, lowBits, this[S._endian]);
      } else {
        byteData[S.$setUint32](offset, lowBits, this[S._endian]);
        byteData[S.$setUint32](offset + 4, highBits, this[S._endian]);
      }
    }
    [S._roundUp](val, n) {
      return (val + n - 1 & -n) >>> 0;
    }
  };
  (hash_sink.HashSink.new = function(_sink, chunkSizeInWords, opts) {
    let endian = opts && 'endian' in opts ? opts.endian : C[453] || CT.C453;
    let signatureBytes = opts && 'signatureBytes' in opts ? opts.signatureBytes : 8;
    this[S._lengthInBytes] = 0;
    this[S._pendingData] = new typed_buffer.Uint8Buffer.new();
    this[S._isClosed$2] = false;
    this[S._sink$2] = _sink;
    this[S._endian] = endian;
    if (!(signatureBytes >= 8)) dart.assertFailed(null, I[298], 64, 16, "signatureBytes >= 8");
    this[S._signatureBytes] = signatureBytes;
    this[S._currentChunk] = _native_typed_data.NativeUint32List.new(chunkSizeInWords);
    ;
  }).prototype = hash_sink.HashSink.prototype;
  dart.addTypeTests(hash_sink.HashSink);
  dart.addTypeCaches(hash_sink.HashSink);
  hash_sink.HashSink[dart.implements] = () => [core.Sink$(core.List$(core.int))];
  dart.setMethodSignature(hash_sink.HashSink, () => ({
    __proto__: dart.getMethods(hash_sink.HashSink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, []),
    [S._byteDigest]: dart.fnType(typed_data.Uint8List, []),
    [S._iterate]: dart.fnType(dart.void, []),
    [S._finalizeData]: dart.fnType(dart.void, []),
    [S._roundUp]: dart.fnType(core.int, [core.int, core.int])
  }));
  dart.setLibraryUri(hash_sink.HashSink, I[299]);
  dart.setFieldSignature(hash_sink.HashSink, () => ({
    __proto__: dart.getFields(hash_sink.HashSink.__proto__),
    [S._sink$2]: dart.finalFieldType(core.Sink$(digest.Digest)),
    [S._endian]: dart.finalFieldType(typed_data.Endian),
    [S._currentChunk]: dart.finalFieldType(typed_data.Uint32List),
    [S._lengthInBytes]: dart.fieldType(core.int),
    [S._pendingData]: dart.finalFieldType(typed_buffer.Uint8Buffer),
    [S._isClosed$2]: dart.fieldType(core.bool),
    [S._signatureBytes]: dart.finalFieldType(core.int)
  }));
  dart.setStaticFieldSignature(hash_sink.HashSink, () => ['_maxMessageLengthInBytes']);
  dart.defineLazy(hash_sink.HashSink, {
    /*hash_sink.HashSink._maxMessageLengthInBytes*/get _maxMessageLengthInBytes() {
      return 1125899906842623;
    }
  }, false);
  md5._MD5Sink = class _MD5Sink extends hash_sink.HashSink {
    get digest() {
      return this[S.digest];
    }
    set digest(value) {
      super.digest = value;
    }
    static ['_#new#tearOff'](sink) {
      return new md5._MD5Sink.new(sink);
    }
    updateHash(chunk) {
      if (!(chunk[S$.$length] === 16)) dart.assertFailed(null, I[297], 81, 12, "chunk.length == 16");
      let a = this.digest[S$.$_get](0);
      let b = this.digest[S$.$_get](1);
      let c = this.digest[S$.$_get](2);
      let d = this.digest[S$.$_get](3);
      let e = null;
      let f = null;
      for (let i = 0; i < 64; i = i + 1) {
        if (i < 16) {
          e = (b & c | (~b & 4294967295 & d) >>> 0) >>> 0;
          f = i;
        } else if (i < 32) {
          e = (d & b | (~d & 4294967295 & c) >>> 0) >>> 0;
          f = (5 * i + 1)[S$0.$modulo](16);
        } else if (i < 48) {
          e = (b ^ c ^ d) >>> 0;
          f = (3 * i + 5)[S$0.$modulo](16);
        } else {
          e = (c ^ (b | (~d & 4294967295) >>> 0) >>> 0) >>> 0;
          f = (7 * i)[S$0.$modulo](16);
        }
        let temp = d;
        d = c;
        c = b;
        b = utils$6.add32(b, utils$6.rotl32(utils$6.add32(utils$6.add32(a, e), utils$6.add32(md5._noise[S$.$_get](i), chunk[S$.$_get](f))), md5._shiftAmounts[S$.$_get](i)));
        a = temp;
      }
      this.digest[S$.$_set](0, utils$6.add32(a, this.digest[S$.$_get](0)));
      this.digest[S$.$_set](1, utils$6.add32(b, this.digest[S$.$_get](1)));
      this.digest[S$.$_set](2, utils$6.add32(c, this.digest[S$.$_get](2)));
      this.digest[S$.$_set](3, utils$6.add32(d, this.digest[S$.$_get](3)));
    }
  };
  (md5._MD5Sink.new = function(sink) {
    this[S.digest] = _native_typed_data.NativeUint32List.new(4);
    md5._MD5Sink.__proto__.new.call(this, sink, 16, {endian: typed_data.Endian.little});
    this.digest[S$.$_set](0, 1732584193);
    this.digest[S$.$_set](1, 4023233417);
    this.digest[S$.$_set](2, 2562383102);
    this.digest[S$.$_set](3, 271733878);
  }).prototype = md5._MD5Sink.prototype;
  dart.addTypeTests(md5._MD5Sink);
  dart.addTypeCaches(md5._MD5Sink);
  dart.setMethodSignature(md5._MD5Sink, () => ({
    __proto__: dart.getMethods(md5._MD5Sink.__proto__),
    updateHash: dart.fnType(dart.void, [typed_data.Uint32List])
  }));
  dart.setLibraryUri(md5._MD5Sink, I[296]);
  dart.setFieldSignature(md5._MD5Sink, () => ({
    __proto__: dart.getFields(md5._MD5Sink.__proto__),
    digest: dart.finalFieldType(typed_data.Uint32List)
  }));
  dart.defineLazy(md5, {
    /*md5.md5*/get md5() {
      return C[454] || CT.C454;
    },
    /*md5._noise*/get _noise() {
      return C[455] || CT.C455;
    },
    /*md5._shiftAmounts*/get _shiftAmounts() {
      return C[456] || CT.C456;
    }
  }, false);
  sha1._Sha1 = class _Sha1 extends hash.Hash {
    get blockSize() {
      return this[S.blockSize$1];
    }
    set blockSize(value) {
      super.blockSize = value;
    }
    static ['_#_#tearOff']() {
      return new sha1._Sha1.__();
    }
    startChunkedConversion(sink) {
      T.SinkOfDigest().as(sink);
      return new convert._ByteAdapterSink.new(new sha1._Sha1Sink.new(sink));
    }
  };
  (sha1._Sha1.__ = function() {
    this[S.blockSize$1] = 16 * 4;
    sha1._Sha1.__proto__.new.call(this);
    ;
  }).prototype = sha1._Sha1.prototype;
  dart.addTypeTests(sha1._Sha1);
  dart.addTypeCaches(sha1._Sha1);
  dart.setMethodSignature(sha1._Sha1, () => ({
    __proto__: dart.getMethods(sha1._Sha1.__proto__),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sha1._Sha1, I[300]);
  dart.setFieldSignature(sha1._Sha1, () => ({
    __proto__: dart.getFields(sha1._Sha1.__proto__),
    blockSize: dart.finalFieldType(core.int)
  }));
  sha1._Sha1Sink = class _Sha1Sink extends hash_sink.HashSink {
    get digest() {
      return this[S.digest$1];
    }
    set digest(value) {
      super.digest = value;
    }
    static ['_#new#tearOff'](sink) {
      return new sha1._Sha1Sink.new(sink);
    }
    updateHash(chunk) {
      if (!(chunk[S$.$length] === 16)) dart.assertFailed(null, I[301], 58, 12, "chunk.length == 16");
      let a = this.digest[S$.$_get](0);
      let b = this.digest[S$.$_get](1);
      let c = this.digest[S$.$_get](2);
      let d = this.digest[S$.$_get](3);
      let e = this.digest[S$.$_get](4);
      for (let i = 0; i < 80; i = i + 1) {
        if (i < 16) {
          this[S._extended][S$.$_set](i, chunk[S$.$_get](i));
        } else {
          this[S._extended][S$.$_set](i, utils$6.rotl32((this[S._extended][S$.$_get](i - 3) ^ this[S._extended][S$.$_get](i - 8) ^ this[S._extended][S$.$_get](i - 14) ^ this[S._extended][S$.$_get](i - 16)) >>> 0, 1));
        }
        let newA = utils$6.add32(utils$6.add32(utils$6.rotl32(a, 5), e), this[S._extended][S$.$_get](i));
        if (i < 20) {
          newA = utils$6.add32(utils$6.add32(newA, (b & c | (~b & d) >>> 0) >>> 0), 1518500249);
        } else if (i < 40) {
          newA = utils$6.add32(utils$6.add32(newA, (b ^ c ^ d) >>> 0), 1859775393);
        } else if (i < 60) {
          newA = utils$6.add32(utils$6.add32(newA, (b & c | (b & d) >>> 0 | (c & d) >>> 0) >>> 0), 2400959708);
        } else {
          newA = utils$6.add32(utils$6.add32(newA, (b ^ c ^ d) >>> 0), 3395469782);
        }
        e = d;
        d = c;
        c = utils$6.rotl32(b, 30);
        b = a;
        a = (newA & 4294967295) >>> 0;
      }
      this.digest[S$.$_set](0, utils$6.add32(a, this.digest[S$.$_get](0)));
      this.digest[S$.$_set](1, utils$6.add32(b, this.digest[S$.$_get](1)));
      this.digest[S$.$_set](2, utils$6.add32(c, this.digest[S$.$_get](2)));
      this.digest[S$.$_set](3, utils$6.add32(d, this.digest[S$.$_get](3)));
      this.digest[S$.$_set](4, utils$6.add32(e, this.digest[S$.$_get](4)));
    }
  };
  (sha1._Sha1Sink.new = function(sink) {
    this[S.digest$1] = _native_typed_data.NativeUint32List.new(5);
    this[S._extended] = _native_typed_data.NativeUint32List.new(80);
    sha1._Sha1Sink.__proto__.new.call(this, sink, 16);
    this.digest[S$.$_set](0, 1732584193);
    this.digest[S$.$_set](1, 4023233417);
    this.digest[S$.$_set](2, 2562383102);
    this.digest[S$.$_set](3, 271733878);
    this.digest[S$.$_set](4, 3285377520);
  }).prototype = sha1._Sha1Sink.prototype;
  dart.addTypeTests(sha1._Sha1Sink);
  dart.addTypeCaches(sha1._Sha1Sink);
  dart.setMethodSignature(sha1._Sha1Sink, () => ({
    __proto__: dart.getMethods(sha1._Sha1Sink.__proto__),
    updateHash: dart.fnType(dart.void, [typed_data.Uint32List])
  }));
  dart.setLibraryUri(sha1._Sha1Sink, I[300]);
  dart.setFieldSignature(sha1._Sha1Sink, () => ({
    __proto__: dart.getFields(sha1._Sha1Sink.__proto__),
    digest: dart.finalFieldType(typed_data.Uint32List),
    [S._extended]: dart.finalFieldType(typed_data.Uint32List)
  }));
  dart.defineLazy(sha1, {
    /*sha1.sha1*/get sha1() {
      return C[457] || CT.C457;
    }
  }, false);
  sha256._Sha256 = class _Sha256 extends hash.Hash {
    get blockSize() {
      return this[S.blockSize$2];
    }
    set blockSize(value) {
      super.blockSize = value;
    }
    static ['_#_#tearOff']() {
      return new sha256._Sha256.__();
    }
    startChunkedConversion(sink) {
      T.SinkOfDigest().as(sink);
      return new convert._ByteAdapterSink.new(new sha256._Sha256Sink.new(sink));
    }
  };
  (sha256._Sha256.__ = function() {
    this[S.blockSize$2] = 16 * 4;
    sha256._Sha256.__proto__.new.call(this);
    ;
  }).prototype = sha256._Sha256.prototype;
  dart.addTypeTests(sha256._Sha256);
  dart.addTypeCaches(sha256._Sha256);
  dart.setMethodSignature(sha256._Sha256, () => ({
    __proto__: dart.getMethods(sha256._Sha256.__proto__),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sha256._Sha256, I[302]);
  dart.setFieldSignature(sha256._Sha256, () => ({
    __proto__: dart.getFields(sha256._Sha256.__proto__),
    blockSize: dart.finalFieldType(core.int)
  }));
  sha256._Sha224 = class _Sha224 extends hash.Hash {
    get blockSize() {
      return this[S.blockSize$3];
    }
    set blockSize(value) {
      super.blockSize = value;
    }
    static ['_#_#tearOff']() {
      return new sha256._Sha224.__();
    }
    startChunkedConversion(sink) {
      T.SinkOfDigest().as(sink);
      return new convert._ByteAdapterSink.new(new sha256._Sha224Sink.new(sink));
    }
  };
  (sha256._Sha224.__ = function() {
    this[S.blockSize$3] = 16 * 4;
    sha256._Sha224.__proto__.new.call(this);
    ;
  }).prototype = sha256._Sha224.prototype;
  dart.addTypeTests(sha256._Sha224);
  dart.addTypeCaches(sha256._Sha224);
  dart.setMethodSignature(sha256._Sha224, () => ({
    __proto__: dart.getMethods(sha256._Sha224.__proto__),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sha256._Sha224, I[302]);
  dart.setFieldSignature(sha256._Sha224, () => ({
    __proto__: dart.getFields(sha256._Sha224.__proto__),
    blockSize: dart.finalFieldType(core.int)
  }));
  sha256._Sha32BitSink = class _Sha32BitSink extends hash_sink.HashSink {
    [S._rotr32](n, x) {
      return (x[S$0.$rightShift](n) | (x[S.$leftShift](32 - n) & 4294967295) >>> 0) >>> 0;
    }
    [S._ch](x, y, z) {
      return (x & y ^ (~x & 4294967295 & z) >>> 0) >>> 0;
    }
    [S._maj](x, y, z) {
      return (x & y ^ (x & z) >>> 0 ^ (y & z) >>> 0) >>> 0;
    }
    [S._bsig0](x) {
      return (this[S._rotr32](2, x) ^ this[S._rotr32](13, x) ^ this[S._rotr32](22, x)) >>> 0;
    }
    [S._bsig1](x) {
      return (this[S._rotr32](6, x) ^ this[S._rotr32](11, x) ^ this[S._rotr32](25, x)) >>> 0;
    }
    [S._ssig0](x) {
      return (this[S._rotr32](7, x) ^ this[S._rotr32](18, x) ^ x[S$0.$rightShift](3)) >>> 0;
    }
    [S._ssig1](x) {
      return (this[S._rotr32](17, x) ^ this[S._rotr32](19, x) ^ x[S$0.$rightShift](10)) >>> 0;
    }
    updateHash(chunk) {
      if (!(chunk[S$.$length] === 16)) dart.assertFailed(null, I[303], 95, 12, "chunk.length == 16");
      for (let i = 0; i < 16; i = i + 1) {
        this[S._extended$1][S$.$_set](i, chunk[S$.$_get](i));
      }
      for (let i = 16; i < 64; i = i + 1) {
        this[S._extended$1][S$.$_set](i, utils$6.add32(utils$6.add32(this[S._ssig1](this[S._extended$1][S$.$_get](i - 2)), this[S._extended$1][S$.$_get](i - 7)), utils$6.add32(this[S._ssig0](this[S._extended$1][S$.$_get](i - 15)), this[S._extended$1][S$.$_get](i - 16))));
      }
      let a = this[S._digest][S$.$_get](0);
      let b = this[S._digest][S$.$_get](1);
      let c = this[S._digest][S$.$_get](2);
      let d = this[S._digest][S$.$_get](3);
      let e = this[S._digest][S$.$_get](4);
      let f = this[S._digest][S$.$_get](5);
      let g = this[S._digest][S$.$_get](6);
      let h = this[S._digest][S$.$_get](7);
      for (let i = 0; i < 64; i = i + 1) {
        let temp1 = utils$6.add32(utils$6.add32(h, this[S._bsig1](e)), utils$6.add32(this[S._ch](e, f, g), utils$6.add32(sha256._noise[S$.$_get](i), this[S._extended$1][S$.$_get](i))));
        let temp2 = utils$6.add32(this[S._bsig0](a), this[S._maj](a, b, c));
        h = g;
        g = f;
        f = e;
        e = utils$6.add32(d, temp1);
        d = c;
        c = b;
        b = a;
        a = utils$6.add32(temp1, temp2);
      }
      this[S._digest][S$.$_set](0, utils$6.add32(a, this[S._digest][S$.$_get](0)));
      this[S._digest][S$.$_set](1, utils$6.add32(b, this[S._digest][S$.$_get](1)));
      this[S._digest][S$.$_set](2, utils$6.add32(c, this[S._digest][S$.$_get](2)));
      this[S._digest][S$.$_set](3, utils$6.add32(d, this[S._digest][S$.$_get](3)));
      this[S._digest][S$.$_set](4, utils$6.add32(e, this[S._digest][S$.$_get](4)));
      this[S._digest][S$.$_set](5, utils$6.add32(f, this[S._digest][S$.$_get](5)));
      this[S._digest][S$.$_set](6, utils$6.add32(g, this[S._digest][S$.$_get](6)));
      this[S._digest][S$.$_set](7, utils$6.add32(h, this[S._digest][S$.$_get](7)));
    }
  };
  (sha256._Sha32BitSink.new = function(sink, _digest) {
    this[S._extended$1] = _native_typed_data.NativeUint32List.new(64);
    this[S._digest] = _digest;
    sha256._Sha32BitSink.__proto__.new.call(this, sink, 16);
    ;
  }).prototype = sha256._Sha32BitSink.prototype;
  dart.addTypeTests(sha256._Sha32BitSink);
  dart.addTypeCaches(sha256._Sha32BitSink);
  dart.setMethodSignature(sha256._Sha32BitSink, () => ({
    __proto__: dart.getMethods(sha256._Sha32BitSink.__proto__),
    [S._rotr32]: dart.fnType(core.int, [core.int, core.int]),
    [S._ch]: dart.fnType(core.int, [core.int, core.int, core.int]),
    [S._maj]: dart.fnType(core.int, [core.int, core.int, core.int]),
    [S._bsig0]: dart.fnType(core.int, [core.int]),
    [S._bsig1]: dart.fnType(core.int, [core.int]),
    [S._ssig0]: dart.fnType(core.int, [core.int]),
    [S._ssig1]: dart.fnType(core.int, [core.int]),
    updateHash: dart.fnType(dart.void, [typed_data.Uint32List])
  }));
  dart.setLibraryUri(sha256._Sha32BitSink, I[302]);
  dart.setFieldSignature(sha256._Sha32BitSink, () => ({
    __proto__: dart.getFields(sha256._Sha32BitSink.__proto__),
    [S._digest]: dart.finalFieldType(typed_data.Uint32List),
    [S._extended$1]: dart.finalFieldType(typed_data.Uint32List)
  }));
  sha256._Sha256Sink = class _Sha256Sink extends sha256._Sha32BitSink {
    get digest() {
      return this[S._digest];
    }
    static ['_#new#tearOff'](sink) {
      return new sha256._Sha256Sink.new(sink);
    }
  };
  (sha256._Sha256Sink.new = function(sink) {
    sha256._Sha256Sink.__proto__.new.call(this, sink, _native_typed_data.NativeUint32List.fromList(T.JSArrayOfint().of([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225])));
    ;
  }).prototype = sha256._Sha256Sink.prototype;
  dart.addTypeTests(sha256._Sha256Sink);
  dart.addTypeCaches(sha256._Sha256Sink);
  dart.setGetterSignature(sha256._Sha256Sink, () => ({
    __proto__: dart.getGetters(sha256._Sha256Sink.__proto__),
    digest: typed_data.Uint32List
  }));
  dart.setLibraryUri(sha256._Sha256Sink, I[302]);
  sha256._Sha224Sink = class _Sha224Sink extends sha256._Sha32BitSink {
    get digest() {
      return this[S._digest][S.$buffer][S.$asUint32List](0, 7);
    }
    static ['_#new#tearOff'](sink) {
      return new sha256._Sha224Sink.new(sink);
    }
  };
  (sha256._Sha224Sink.new = function(sink) {
    sha256._Sha224Sink.__proto__.new.call(this, sink, _native_typed_data.NativeUint32List.fromList(T.JSArrayOfint().of([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428])));
    ;
  }).prototype = sha256._Sha224Sink.prototype;
  dart.addTypeTests(sha256._Sha224Sink);
  dart.addTypeCaches(sha256._Sha224Sink);
  dart.setGetterSignature(sha256._Sha224Sink, () => ({
    __proto__: dart.getGetters(sha256._Sha224Sink.__proto__),
    digest: typed_data.Uint32List
  }));
  dart.setLibraryUri(sha256._Sha224Sink, I[302]);
  dart.defineLazy(sha256, {
    /*sha256.sha256*/get sha256() {
      return C[458] || CT.C458;
    },
    /*sha256.sha224*/get sha224() {
      return C[459] || CT.C459;
    },
    /*sha256._noise*/get _noise() {
      return C[460] || CT.C460;
    }
  }, false);
  sha512._Sha384 = class _Sha384 extends hash.Hash {
    get blockSize() {
      return this[S.blockSize$4];
    }
    set blockSize(value) {
      super.blockSize = value;
    }
    static ['_#_#tearOff']() {
      return new sha512._Sha384.__();
    }
    startChunkedConversion(sink) {
      T.SinkOfDigest().as(sink);
      return new convert._ByteAdapterSink.new(new sha512_slowsinks.Sha384Sink.new(sink));
    }
  };
  (sha512._Sha384.__ = function() {
    this[S.blockSize$4] = 32 * 4;
    sha512._Sha384.__proto__.new.call(this);
    ;
  }).prototype = sha512._Sha384.prototype;
  dart.addTypeTests(sha512._Sha384);
  dart.addTypeCaches(sha512._Sha384);
  dart.setMethodSignature(sha512._Sha384, () => ({
    __proto__: dart.getMethods(sha512._Sha384.__proto__),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sha512._Sha384, I[304]);
  dart.setFieldSignature(sha512._Sha384, () => ({
    __proto__: dart.getFields(sha512._Sha384.__proto__),
    blockSize: dart.finalFieldType(core.int)
  }));
  sha512._Sha512 = class _Sha512 extends hash.Hash {
    get blockSize() {
      return this[S.blockSize$5];
    }
    set blockSize(value) {
      super.blockSize = value;
    }
    static ['_#_#tearOff']() {
      return new sha512._Sha512.__();
    }
    startChunkedConversion(sink) {
      T.SinkOfDigest().as(sink);
      return new convert._ByteAdapterSink.new(new sha512_slowsinks.Sha512Sink.new(sink));
    }
  };
  (sha512._Sha512.__ = function() {
    this[S.blockSize$5] = 32 * 4;
    sha512._Sha512.__proto__.new.call(this);
    ;
  }).prototype = sha512._Sha512.prototype;
  dart.addTypeTests(sha512._Sha512);
  dart.addTypeCaches(sha512._Sha512);
  dart.setMethodSignature(sha512._Sha512, () => ({
    __proto__: dart.getMethods(sha512._Sha512.__proto__),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sha512._Sha512, I[304]);
  dart.setFieldSignature(sha512._Sha512, () => ({
    __proto__: dart.getFields(sha512._Sha512.__proto__),
    blockSize: dart.finalFieldType(core.int)
  }));
  sha512._Sha512224 = class _Sha512224 extends hash.Hash {
    get blockSize() {
      return this[S.blockSize$6];
    }
    set blockSize(value) {
      super.blockSize = value;
    }
    static ['_#new#tearOff']() {
      return new sha512._Sha512224.new();
    }
    startChunkedConversion(sink) {
      T.SinkOfDigest().as(sink);
      return new convert._ByteAdapterSink.new(new sha512_slowsinks.Sha512224Sink.new(sink));
    }
  };
  (sha512._Sha512224.new = function() {
    this[S.blockSize$6] = 32 * 4;
    sha512._Sha512224.__proto__.new.call(this);
    ;
  }).prototype = sha512._Sha512224.prototype;
  dart.addTypeTests(sha512._Sha512224);
  dart.addTypeCaches(sha512._Sha512224);
  dart.setMethodSignature(sha512._Sha512224, () => ({
    __proto__: dart.getMethods(sha512._Sha512224.__proto__),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sha512._Sha512224, I[304]);
  dart.setFieldSignature(sha512._Sha512224, () => ({
    __proto__: dart.getFields(sha512._Sha512224.__proto__),
    blockSize: dart.finalFieldType(core.int)
  }));
  sha512._Sha512256 = class _Sha512256 extends hash.Hash {
    get blockSize() {
      return this[S.blockSize$7];
    }
    set blockSize(value) {
      super.blockSize = value;
    }
    static ['_#new#tearOff']() {
      return new sha512._Sha512256.new();
    }
    startChunkedConversion(sink) {
      T.SinkOfDigest().as(sink);
      return new convert._ByteAdapterSink.new(new sha512_slowsinks.Sha512256Sink.new(sink));
    }
  };
  (sha512._Sha512256.new = function() {
    this[S.blockSize$7] = 32 * 4;
    sha512._Sha512256.__proto__.new.call(this);
    ;
  }).prototype = sha512._Sha512256.prototype;
  dart.addTypeTests(sha512._Sha512256);
  dart.addTypeCaches(sha512._Sha512256);
  dart.setMethodSignature(sha512._Sha512256, () => ({
    __proto__: dart.getMethods(sha512._Sha512256.__proto__),
    startChunkedConversion: dart.fnType(convert.ByteConversionSink, [dart.nullable(core.Object)])
  }));
  dart.setLibraryUri(sha512._Sha512256, I[304]);
  dart.setFieldSignature(sha512._Sha512256, () => ({
    __proto__: dart.getFields(sha512._Sha512256.__proto__),
    blockSize: dart.finalFieldType(core.int)
  }));
  dart.defineLazy(sha512, {
    /*sha512.sha384*/get sha384() {
      return C[461] || CT.C461;
    },
    /*sha512.sha512*/get sha512() {
      return C[462] || CT.C462;
    },
    /*sha512.sha512224*/get sha512224() {
      return C[463] || CT.C463;
    },
    /*sha512.sha512256*/get sha512256() {
      return C[464] || CT.C464;
    }
  }, false);
  uniform_track$.UniformTrackParentData = class UniformTrackParentData extends box.ContainerBoxParentData$(box.RenderBox) {
    static ['_#new#tearOff']() {
      return new uniform_track$.UniformTrackParentData.new();
    }
  };
  (uniform_track$.UniformTrackParentData.new = function() {
    uniform_track$.UniformTrackParentData.__proto__.new.call(this);
    ;
  }).prototype = uniform_track$.UniformTrackParentData.prototype;
  dart.addTypeTests(uniform_track$.UniformTrackParentData);
  dart.addTypeCaches(uniform_track$.UniformTrackParentData);
  dart.setLibraryUri(uniform_track$.UniformTrackParentData, I[305]);
  const RenderBox_ContainerRenderObjectMixin$36$ = class RenderBox_ContainerRenderObjectMixin extends box.RenderBox {};
  (RenderBox_ContainerRenderObjectMixin$36$.new = function() {
    object.ContainerRenderObjectMixin$(box.RenderBox, uniform_track$.UniformTrackParentData)[dart.mixinNew].call(this);
    RenderBox_ContainerRenderObjectMixin$36$.__proto__.new.call(this);
  }).prototype = RenderBox_ContainerRenderObjectMixin$36$.prototype;
  dart.applyMixin(RenderBox_ContainerRenderObjectMixin$36$, object.ContainerRenderObjectMixin$(box.RenderBox, uniform_track$.UniformTrackParentData));
  const RenderBox_RenderBoxContainerDefaultsMixin$36$ = class RenderBox_RenderBoxContainerDefaultsMixin extends RenderBox_ContainerRenderObjectMixin$36$ {};
  (RenderBox_RenderBoxContainerDefaultsMixin$36$.new = function() {
    RenderBox_RenderBoxContainerDefaultsMixin$36$.__proto__.new.call(this);
  }).prototype = RenderBox_RenderBoxContainerDefaultsMixin$36$.prototype;
  dart.applyMixin(RenderBox_RenderBoxContainerDefaultsMixin$36$, box.RenderBoxContainerDefaultsMixin$(box.RenderBox, uniform_track$.UniformTrackParentData));
  uniform_track$.RenderUniformTrack = class RenderUniformTrack extends RenderBox_RenderBoxContainerDefaultsMixin$36$ {
    static ['_#new#tearOff'](opts) {
      let children = opts && 'children' in opts ? opts.children : null;
      let spacing = opts && 'spacing' in opts ? opts.spacing : 0;
      let division = opts && 'division' in opts ? opts.division : null;
      let direction = opts && 'direction' in opts ? opts.direction : null;
      return new uniform_track$.RenderUniformTrack.new({children: children, spacing: spacing, division: division, direction: direction});
    }
    get spacing() {
      return this[S._spacing];
    }
    set spacing(value) {
      if (!(value >= 0)) dart.assertFailed(null, I[306], 31, 12, "value >= 0");
      if (this[S._spacing] === value) {
        return;
      }
      this[S._spacing] = value;
      this.markNeedsLayout();
    }
    get direction() {
      return this[S._direction];
    }
    set direction(value) {
      if (this[S._direction] === value) {
        return;
      }
      this[S._direction] = value;
      this[S._isHorizontal] = basic_types.axisDirectionToAxis(value) === basic_types.Axis.horizontal;
      this[S._isDirectionReversed] = basic_types.axisDirectionIsReversed(value);
      this.markNeedsLayout();
    }
    get division() {
      return this[S._division];
    }
    set division(value) {
      if (!(value > 0)) dart.assertFailed(null, I[306], 57, 12, "value > 0");
      if (this[S._division] === value) {
        return;
      }
      this[S._division] = value;
      this.markNeedsLayout();
    }
    setupParentData(child) {
      box.RenderBox.as(child);
      if (!uniform_track$.UniformTrackParentData.is(child.parentData)) child.parentData = new uniform_track$.UniformTrackParentData.new();
    }
    [S._getParentData$2](child) {
      return uniform_track$.UniformTrackParentData.as(child.parentData);
    }
    hitTestChildren(result, opts) {
      let position = opts && 'position' in opts ? opts.position : null;
      return this.defaultHitTestChildren(result, {position: position});
    }
    computeDryLayout(constraints) {
      return this[S._computeSize$1](constraints, C[465] || CT.C465);
    }
    [S._computeSize$1](constraints, layoutChild) {
      let mainAxisExtent = this[S._isHorizontal] ? constraints.maxWidth : constraints.maxHeight;
      let childMainAxisExtent = (mainAxisExtent + this.spacing) / this.division - this.spacing;
      let childConstraints = this[S._isHorizontal] ? new box.BoxConstraints.tightFor({width: childMainAxisExtent}) : new box.BoxConstraints.tightFor({height: childMainAxisExtent});
      let child = this.firstChild;
      const getChildCrossAxisExtent = size => {
        return this[S._isHorizontal] ? size.height : size.width;
      };
      dart.fn(getChildCrossAxisExtent, T.SizeTodouble());
      let maxChildCrossAxisExtent = 0;
      while (child != null) {
        let size = layoutChild(child, childConstraints);
        maxChildCrossAxisExtent = math.max(core.double, maxChildCrossAxisExtent, getChildCrossAxisExtent(size));
        child = this.childAfter(child);
      }
      return this.size = constraints.constrain(this[S._isHorizontal] ? new ui.Size.new(mainAxisExtent, maxChildCrossAxisExtent) : new ui.Size.new(maxChildCrossAxisExtent, mainAxisExtent));
    }
    performLayout() {
      this.size = this[S._computeSize$1](this.constraints, C[466] || CT.C466);
      let mainAxisExtent = this[S._isHorizontal] ? this.constraints.maxWidth : this.constraints.maxHeight;
      let childMainAxisExtent = (mainAxisExtent + this.spacing) / this.division - this.spacing;
      let maxChildCrossAxisExtent = this[S._isHorizontal] ? this.size.height : this.size.width;
      const getChildCrossAxisExtent = child => {
        return this[S._isHorizontal] ? child.size.height : child.size.width;
      };
      dart.fn(getChildCrossAxisExtent, T.RenderBoxTodouble());
      let secondPassChildConstraints = this[S._isHorizontal] ? new box.BoxConstraints.tightFor({width: childMainAxisExtent, height: maxChildCrossAxisExtent}) : new box.BoxConstraints.tightFor({height: childMainAxisExtent, width: maxChildCrossAxisExtent});
      let child = this.firstChild;
      let stride = childMainAxisExtent + this.spacing;
      let index = 0;
      const getMainAxisPosition = index => {
        let effectiveIndex = this[S._isDirectionReversed] ? this.division - index - 1 : index;
        return effectiveIndex * stride;
      };
      dart.fn(getMainAxisPosition, T.intTodouble());
      while (child != null) {
        if (getChildCrossAxisExtent(child) !== maxChildCrossAxisExtent) {
          child.layout(secondPassChildConstraints, {parentUsesSize: true});
        }
        let childParentData = this[S._getParentData$2](child);
        let childMainAxisPosition = getMainAxisPosition(index);
        childParentData.offset = this[S._isHorizontal] ? new ui.Offset.new(childMainAxisPosition, 0) : new ui.Offset.new(0, childMainAxisPosition);
        index = index + 1;
        child = childParentData.nextSibling;
      }
    }
    paint(context, offset) {
      this.defaultPaint(context, offset);
    }
  };
  (uniform_track$.RenderUniformTrack.new = function(opts) {
    let children = opts && 'children' in opts ? opts.children : null;
    let spacing = opts && 'spacing' in opts ? opts.spacing : 0;
    let division = opts && 'division' in opts ? opts.division : null;
    let direction = opts && 'direction' in opts ? opts.direction : null;
    if (!(spacing >= 0)) dart.assertFailed(null, I[306], 18, 16, "spacing >= 0");
    if (!(division > 0)) dart.assertFailed(null, I[306], 19, 16, "division > 0");
    this[S._spacing] = spacing;
    this[S._direction] = direction;
    this[S._isHorizontal] = basic_types.axisDirectionToAxis(direction) === basic_types.Axis.horizontal;
    this[S._isDirectionReversed] = basic_types.axisDirectionIsReversed(direction);
    this[S._division] = division;
    uniform_track$.RenderUniformTrack.__proto__.new.call(this);
    this.addAll(children);
  }).prototype = uniform_track$.RenderUniformTrack.prototype;
  dart.addTypeTests(uniform_track$.RenderUniformTrack);
  dart.addTypeCaches(uniform_track$.RenderUniformTrack);
  dart.setMethodSignature(uniform_track$.RenderUniformTrack, () => ({
    __proto__: dart.getMethods(uniform_track$.RenderUniformTrack.__proto__),
    [S._getParentData$2]: dart.fnType(uniform_track$.UniformTrackParentData, [box.RenderBox]),
    [S._computeSize$1]: dart.fnType(ui.Size, [box.BoxConstraints, dart.fnType(ui.Size, [box.RenderBox, box.BoxConstraints])])
  }));
  dart.setGetterSignature(uniform_track$.RenderUniformTrack, () => ({
    __proto__: dart.getGetters(uniform_track$.RenderUniformTrack.__proto__),
    spacing: core.double,
    direction: basic_types.AxisDirection,
    division: core.int
  }));
  dart.setSetterSignature(uniform_track$.RenderUniformTrack, () => ({
    __proto__: dart.getSetters(uniform_track$.RenderUniformTrack.__proto__),
    spacing: core.double,
    direction: basic_types.AxisDirection,
    division: core.int
  }));
  dart.setLibraryUri(uniform_track$.RenderUniformTrack, I[305]);
  dart.setFieldSignature(uniform_track$.RenderUniformTrack, () => ({
    __proto__: dart.getFields(uniform_track$.RenderUniformTrack.__proto__),
    [S._spacing]: dart.fieldType(core.double),
    [S._direction]: dart.fieldType(basic_types.AxisDirection),
    [S._isHorizontal]: dart.fieldType(core.bool),
    [S._isDirectionReversed]: dart.fieldType(core.bool),
    [S._division]: dart.fieldType(core.int)
  }));
  const _is__TypedQueue_default = Symbol('_is__TypedQueue_default');
  typed_queue._TypedQueue$ = dart.generic((E, L) => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$ListOfE = () => (__t$ListOfE = dart.constFn(core.List$(E)))();
    var __t$EN = () => (__t$EN = dart.constFn(dart.nullable(E)))();
    const Object_ListMixin$36 = class Object_ListMixin extends core.Object {};
    (Object_ListMixin$36.new = function() {
    }).prototype = Object_ListMixin$36.prototype;
    dart.applyMixin(Object_ListMixin$36, collection.ListMixin$(E));
    class _TypedQueue extends Object_ListMixin$36 {
      get [S._table$1]() {
        return this[S._table];
      }
      set [S._table$1](value) {
        this[S._table] = value;
      }
      get [S._head$1]() {
        return this[S._head];
      }
      set [S._head$1](value) {
        this[S._head] = value;
      }
      get [S._tail$1]() {
        return this[S._tail];
      }
      set [S._tail$1](value) {
        this[S._tail] = value;
      }
      get length() {
        return (this[S._tail$1] - this[S._head$1] & this[S._table$1][S$.$length] - 1) >>> 0;
      }
      toList(opts) {
        let growable = opts && 'growable' in opts ? opts.growable : true;
        let list = growable ? this[S._createBuffer](this.length) : this[S._createList](this.length);
        this[S._writeToList](list);
        return list;
      }
      cast(T) {
        if (queue_list.QueueList$(T).is(this)) return queue_list.QueueList$(T).as(this);
        dart.throw(new core.UnsupportedError.new(dart.str(this) + " cannot be cast to the desired type."));
      }
      retype(T) {
        return this.cast(T);
      }
      addLast(value) {
        E.as(value);
        this[S._table$1][S$.$_set](this[S._tail$1], value);
        this[S._tail$1] = (this[S._tail$1] + 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        if (this[S._head$1] === this[S._tail$1]) this[S._growAtCapacity]();
      }
      addFirst(value) {
        E.as(value);
        this[S._head$1] = (this[S._head$1] - 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        this[S._table$1][S$.$_set](this[S._head$1], value);
        if (this[S._head$1] === this[S._tail$1]) this[S._growAtCapacity]();
      }
      removeFirst() {
        if (this[S._head$1] === this[S._tail$1]) dart.throw(new core.StateError.new("No element"));
        let result = this[S._table$1][S$.$_get](this[S._head$1]);
        this[S._head$1] = (this[S._head$1] + 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        return result;
      }
      removeLast() {
        if (this[S._head$1] === this[S._tail$1]) dart.throw(new core.StateError.new("No element"));
        this[S._tail$1] = (this[S._tail$1] - 1 & this[S._table$1][S$.$length] - 1) >>> 0;
        return this[S._table$1][S$.$_get](this[S._tail$1]);
      }
      add(value) {
        E.as(value);
        return this.addLast(value);
      }
      set length(value) {
        core.RangeError.checkNotNegative(value, "length");
        let delta = value - this.length;
        if (delta >= 0) {
          let needsToGrow = this[S._table$1][S$.$length] <= value;
          if (needsToGrow) this[S._growTo](value);
          this[S._tail$1] = (this[S._tail$1] + delta & this[S._table$1][S$.$length] - 1) >>> 0;
          if (!needsToGrow) this.fillRange(value - delta, value, this[S._defaultValue]);
        } else {
          this.removeRange(value, this.length);
        }
      }
      _get(index) {
        core.RangeError.checkValidIndex(index, this, null, this.length);
        return this[S._table$1][S$.$_get]((this[S._head$1] + index & this[S._table$1][S$.$length] - 1) >>> 0);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        core.RangeError.checkValidIndex(index, this);
        this[S._table$1][S$.$_set]((this[S._head$1] + index & this[S._table$1][S$.$length] - 1) >>> 0, value);
        return value$;
      }
      removeRange(start, end) {
        let length = this.length;
        core.RangeError.checkValidRange(start, end, length);
        if (start === 0) {
          this[S._head$1] = (this[S._head$1] + end & this[S._table$1][S$.$length] - 1) >>> 0;
          return;
        }
        let elementsAfter = length - end;
        if (elementsAfter === 0) {
          this[S._tail$1] = (this[S._head$1] + start & this[S._table$1][S$.$length] - 1) >>> 0;
          return;
        }
        let removedElements = end - start;
        if (start < elementsAfter) {
          this.setRange(removedElements, end, this);
          this[S._head$1] = (this[S._head$1] + removedElements & this[S._table$1][S$.$length] - 1) >>> 0;
        } else {
          this.setRange(start, length - removedElements, this, end);
          this[S._tail$1] = (this[S._tail$1] - removedElements & this[S._table$1][S$.$length] - 1) >>> 0;
        }
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        core.RangeError.checkValidRange(start, end, this.length);
        if (start === end) return;
        let targetStart = (this[S._head$1] + start & this[S._table$1][S$.$length] - 1) >>> 0;
        let targetEnd = (this[S._head$1] + end & this[S._table$1][S$.$length] - 1) >>> 0;
        let targetIsContiguous = targetStart < targetEnd;
        if (iterable === this) {
          let sourceStart = (this[S._head$1] + skipCount & this[S._table$1][S$.$length] - 1) >>> 0;
          let sourceEnd = (sourceStart + (end - start) & this[S._table$1][S$.$length] - 1) >>> 0;
          if (sourceStart === targetStart) return;
          let sourceIsContiguous = sourceStart < sourceEnd;
          if (targetIsContiguous && sourceIsContiguous) {
            this[S._table$1][S$0.$setRange](targetStart, targetEnd, this[S._table$1], sourceStart);
          } else if (!targetIsContiguous && !sourceIsContiguous) {
            if (sourceStart > targetStart) {
              let startGap = sourceStart - targetStart;
              let firstEnd = this[S._table$1][S$.$length] - startGap;
              this[S._table$1][S$0.$setRange](targetStart, firstEnd, this[S._table$1], sourceStart);
              this[S._table$1][S$0.$setRange](firstEnd, this[S._table$1][S$.$length], this[S._table$1]);
              this[S._table$1][S$0.$setRange](0, targetEnd, this[S._table$1], startGap);
            } else if (sourceEnd < targetEnd) {
              let firstStart = targetEnd - sourceEnd;
              this[S._table$1][S$0.$setRange](firstStart, targetEnd, this[S._table$1]);
              this[S._table$1][S$0.$setRange](0, firstStart, this[S._table$1], this[S._table$1][S$.$length] - firstStart);
              this[S._table$1][S$0.$setRange](targetStart, this[S._table$1][S$.$length], this[S._table$1], sourceStart);
            }
          } else if (sourceStart < targetEnd) {
            if (sourceIsContiguous) {
              this[S._table$1][S$0.$setRange](targetStart, this[S._table$1][S$.$length], this[S._table$1], sourceStart);
              this[S._table$1][S$0.$setRange](0, targetEnd, this[S._table$1], sourceStart + (this[S._table$1][S$.$length] - targetStart));
            } else {
              let firstEnd = this[S._table$1][S$.$length] - sourceStart;
              this[S._table$1][S$0.$setRange](targetStart, firstEnd, this[S._table$1], sourceStart);
              this[S._table$1][S$0.$setRange](firstEnd, targetEnd, this[S._table$1]);
            }
          } else {
            if (sourceIsContiguous) {
              this[S._table$1][S$0.$setRange](0, targetEnd, this[S._table$1], sourceStart + (this[S._table$1][S$.$length] - targetStart));
              this[S._table$1][S$0.$setRange](targetStart, this[S._table$1][S$.$length], this[S._table$1], sourceStart);
            } else {
              let firstStart = targetEnd - sourceEnd;
              this[S._table$1][S$0.$setRange](firstStart, targetEnd, this[S._table$1]);
              this[S._table$1][S$0.$setRange](targetStart, firstStart, this[S._table$1], sourceStart);
            }
          }
        } else if (targetIsContiguous) {
          this[S._table$1][S$0.$setRange](targetStart, targetEnd, iterable, skipCount);
        } else if (__t$ListOfE().is(iterable)) {
          this[S._table$1][S$0.$setRange](targetStart, this[S._table$1][S$.$length], iterable, skipCount);
          this[S._table$1][S$0.$setRange](0, targetEnd, iterable, skipCount + (this[S._table$1][S$.$length] - targetStart));
        } else {
          super.setRange(start, end, iterable, skipCount);
        }
      }
      fillRange(start, end, value = null) {
        __t$EN().as(value);
        let startInTable = (this[S._head$1] + start & this[S._table$1][S$.$length] - 1) >>> 0;
        let endInTable = (this[S._head$1] + end & this[S._table$1][S$.$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          this[S._table$1][S.$fillRange](startInTable, endInTable, value);
        } else {
          this[S._table$1][S.$fillRange](startInTable, this[S._table$1][S$.$length], value);
          this[S._table$1][S.$fillRange](0, endInTable, value);
        }
      }
      sublist(start, end = null) {
        let length = this.length;
        let nonNullEnd = core.RangeError.checkValidRange(start, end, length);
        let list = this[S._createList](nonNullEnd - start);
        this[S._writeToList](list, start, nonNullEnd);
        return list;
      }
      [S._writeToList](target, start = null, end = null) {
        start == null ? start = 0 : null;
        end == null ? end = this.length : null;
        if (!(target[S$.$length] >= dart.notNull(end) - dart.notNull(start))) dart.assertFailed(null, I[307], 278, 12, "target.length >= end - start");
        if (!(dart.notNull(start) <= dart.notNull(end))) dart.assertFailed(null, I[307], 279, 12, "start <= end");
        let elementsToWrite = dart.notNull(end) - dart.notNull(start);
        let startInTable = (this[S._head$1] + dart.notNull(start) & this[S._table$1][S$.$length] - 1) >>> 0;
        let endInTable = (this[S._head$1] + dart.notNull(end) & this[S._table$1][S$.$length] - 1) >>> 0;
        if (startInTable <= endInTable) {
          target[S$0.$setRange](0, elementsToWrite, this[S._table$1], startInTable);
        } else {
          let firstPartSize = this[S._table$1][S$.$length] - startInTable;
          target[S$0.$setRange](0, firstPartSize, this[S._table$1], startInTable);
          target[S$0.$setRange](firstPartSize, firstPartSize + endInTable, this[S._table$1], 0);
        }
        return elementsToWrite;
      }
      [S._growAtCapacity]() {
        if (!(this[S._head$1] === this[S._tail$1])) dart.assertFailed(null, I[307], 297, 12, "_head == _tail");
        let newTable = this[S._createList](this[S._table$1][S$.$length] * 2);
        let partitionPoint = this[S._table$1][S$.$length] - this[S._head$1];
        newTable[S$0.$setRange](0, partitionPoint, this[S._table$1], this[S._head$1]);
        if (partitionPoint !== this[S._table$1][S$.$length]) {
          newTable[S$0.$setRange](partitionPoint, this[S._table$1][S$.$length], this[S._table$1]);
        }
        this[S._head$1] = 0;
        this[S._tail$1] = this[S._table$1][S$.$length];
        this[S._table$1] = newTable;
      }
      [S._growTo](newElementCount) {
        if (!(newElementCount >= this.length)) dart.assertFailed(null, I[307], 316, 12, "newElementCount >= length");
        newElementCount = newElementCount + newElementCount[S$0.$rightShift](1);
        let newTable = this[S._createList](typed_queue._nextPowerOf2(newElementCount));
        this[S._tail$1] = this[S._writeToList](newTable);
        this[S._table$1] = newTable;
        this[S._head$1] = 0;
      }
    }
    (_TypedQueue.new = function(table) {
      this[S._table] = L.as(table);
      this[S._head] = 0;
      this[S._tail] = 0;
      ;
    }).prototype = _TypedQueue.prototype;
    dart.addTypeTests(_TypedQueue);
    _TypedQueue.prototype[_is__TypedQueue_default] = true;
    dart.addTypeCaches(_TypedQueue);
    dart.setMethodSignature(_TypedQueue, () => ({
      __proto__: dart.getMethods(_TypedQueue.__proto__),
      cast: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      [S$.$cast]: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      retype: dart.gFnType(T => [queue_list.QueueList$(T), []], T => [dart.nullable(core.Object)]),
      addLast: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      addFirst: dart.fnType(dart.void, [dart.nullable(core.Object)]),
      removeFirst: dart.fnType(E, []),
      _get: dart.fnType(E, [core.int]),
      [S$.$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [S$.$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      sublist: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [S$0.$sublist]: dart.fnType(L, [core.int], [dart.nullable(core.int)]),
      [S._writeToList]: dart.fnType(core.int, [core.List$(E)], [dart.nullable(core.int), dart.nullable(core.int)]),
      [S._growAtCapacity]: dart.fnType(dart.void, []),
      [S._growTo]: dart.fnType(dart.void, [core.int])
    }));
    dart.setGetterSignature(_TypedQueue, () => ({
      __proto__: dart.getGetters(_TypedQueue.__proto__),
      length: core.int,
      [S$.$length]: core.int
    }));
    dart.setSetterSignature(_TypedQueue, () => ({
      __proto__: dart.getSetters(_TypedQueue.__proto__),
      length: core.int,
      [S$.$length]: core.int
    }));
    dart.setLibraryUri(_TypedQueue, I[308]);
    dart.setFieldSignature(_TypedQueue, () => ({
      __proto__: dart.getFields(_TypedQueue.__proto__),
      [S._table$1]: dart.fieldType(L),
      [S._head$1]: dart.fieldType(core.int),
      [S._tail$1]: dart.fieldType(core.int)
    }));
    dart.defineExtensionMethods(_TypedQueue, [
      'toList',
      'cast',
      'removeLast',
      'add',
      '_get',
      '_set',
      'removeRange',
      'setRange',
      'fillRange',
      'sublist'
    ]);
    dart.defineExtensionAccessors(_TypedQueue, ['length']);
    return _TypedQueue;
  });
  typed_queue._TypedQueue = typed_queue._TypedQueue$();
  dart.addTypeTests(typed_queue._TypedQueue, _is__TypedQueue_default);
  const _is__IntQueue_default = Symbol('_is__IntQueue_default');
  typed_queue._IntQueue$ = dart.generic(L => {
    class _IntQueue extends typed_queue._TypedQueue$(core.int, L) {
      get [S._defaultValue]() {
        return 0;
      }
    }
    (_IntQueue.new = function(queue) {
      _IntQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _IntQueue.prototype;
    dart.addTypeTests(_IntQueue);
    _IntQueue.prototype[_is__IntQueue_default] = true;
    dart.addTypeCaches(_IntQueue);
    dart.setGetterSignature(_IntQueue, () => ({
      __proto__: dart.getGetters(_IntQueue.__proto__),
      [S._defaultValue]: core.int
    }));
    dart.setLibraryUri(_IntQueue, I[308]);
    return _IntQueue;
  });
  typed_queue._IntQueue = typed_queue._IntQueue$();
  dart.addTypeTests(typed_queue._IntQueue, _is__IntQueue_default);
  const _is__FloatQueue_default = Symbol('_is__FloatQueue_default');
  typed_queue._FloatQueue$ = dart.generic(L => {
    class _FloatQueue extends typed_queue._TypedQueue$(core.double, L) {
      get [S._defaultValue]() {
        return 0;
      }
    }
    (_FloatQueue.new = function(queue) {
      _FloatQueue.__proto__.new.call(this, queue);
      ;
    }).prototype = _FloatQueue.prototype;
    dart.addTypeTests(_FloatQueue);
    _FloatQueue.prototype[_is__FloatQueue_default] = true;
    dart.addTypeCaches(_FloatQueue);
    dart.setGetterSignature(_FloatQueue, () => ({
      __proto__: dart.getGetters(_FloatQueue.__proto__),
      [S._defaultValue]: core.double
    }));
    dart.setLibraryUri(_FloatQueue, I[308]);
    return _FloatQueue;
  });
  typed_queue._FloatQueue = typed_queue._FloatQueue$();
  dart.addTypeTests(typed_queue._FloatQueue, _is__FloatQueue_default);
  typed_queue.Uint8Queue = class Uint8Queue extends typed_queue._IntQueue$(typed_data.Uint8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Uint8Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint8Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Uint8Queue.new = function(initialCapacity = null) {
    typed_queue.Uint8Queue.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8Queue.prototype;
  dart.addTypeTests(typed_queue.Uint8Queue);
  dart.addTypeCaches(typed_queue.Uint8Queue);
  typed_queue.Uint8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint8List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint8Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8Queue, I[308]);
  typed_queue.Int8Queue = class Int8Queue extends typed_queue._IntQueue$(typed_data.Int8List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int8Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Int8Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int8Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int8Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Int8Queue.new = function(initialCapacity = null) {
    typed_queue.Int8Queue.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int8Queue.prototype;
  dart.addTypeTests(typed_queue.Int8Queue);
  dart.addTypeCaches(typed_queue.Int8Queue);
  typed_queue.Int8Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int8Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int8List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int8Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int8Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int8Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int8Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int8Queue, I[308]);
  typed_queue.Uint8ClampedQueue = class Uint8ClampedQueue extends typed_queue._IntQueue$(typed_data.Uint8ClampedList) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint8ClampedQueue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Uint8ClampedQueue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint8ClampedQueue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint8ClampedBuffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Uint8ClampedQueue.new = function(initialCapacity = null) {
    typed_queue.Uint8ClampedQueue.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint8ClampedQueue.prototype;
  dart.addTypeTests(typed_queue.Uint8ClampedQueue);
  dart.addTypeCaches(typed_queue.Uint8ClampedQueue);
  typed_queue.Uint8ClampedQueue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint8ClampedQueue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint8ClampedList, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint8ClampedBuffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint8ClampedQueue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint8ClampedQueue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint8ClampedQueue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint8ClampedQueue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint8ClampedQueue, I[308]);
  typed_queue.Uint16Queue = class Uint16Queue extends typed_queue._IntQueue$(typed_data.Uint16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Uint16Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint16Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint16Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Uint16Queue.new = function(initialCapacity = null) {
    typed_queue.Uint16Queue.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint16Queue.prototype;
  dart.addTypeTests(typed_queue.Uint16Queue);
  dart.addTypeCaches(typed_queue.Uint16Queue);
  typed_queue.Uint16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint16Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint16List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint16Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint16Queue, I[308]);
  typed_queue.Int16Queue = class Int16Queue extends typed_queue._IntQueue$(typed_data.Int16List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int16Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Int16Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int16Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int16Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Int16Queue.new = function(initialCapacity = null) {
    typed_queue.Int16Queue.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int16Queue.prototype;
  dart.addTypeTests(typed_queue.Int16Queue);
  dart.addTypeCaches(typed_queue.Int16Queue);
  typed_queue.Int16Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int16Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int16List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int16Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int16Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int16Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int16Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int16Queue, I[308]);
  typed_queue.Uint32Queue = class Uint32Queue extends typed_queue._IntQueue$(typed_data.Uint32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Uint32Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint32Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint32Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Uint32Queue.new = function(initialCapacity = null) {
    typed_queue.Uint32Queue.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint32Queue.prototype;
  dart.addTypeTests(typed_queue.Uint32Queue);
  dart.addTypeCaches(typed_queue.Uint32Queue);
  typed_queue.Uint32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint32Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint32List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint32Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint32Queue, I[308]);
  typed_queue.Int32Queue = class Int32Queue extends typed_queue._IntQueue$(typed_data.Int32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Int32Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int32Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Int32Queue.new = function(initialCapacity = null) {
    typed_queue.Int32Queue.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32Queue.prototype;
  dart.addTypeTests(typed_queue.Int32Queue);
  dart.addTypeCaches(typed_queue.Int32Queue);
  typed_queue.Int32Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int32List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int32Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32Queue, I[308]);
  typed_queue.Uint64Queue = class Uint64Queue extends typed_queue._IntQueue$(typed_data.Uint64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Uint64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Uint64Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Uint64Queue.fromList(elements);
    }
    [S._createList](size) {
      return typed_data.Uint64List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Uint64Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Uint64Queue.new = function(initialCapacity = null) {
    typed_queue.Uint64Queue.__proto__.new.call(this, typed_data.Uint64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Uint64Queue.prototype;
  dart.addTypeTests(typed_queue.Uint64Queue);
  dart.addTypeCaches(typed_queue.Uint64Queue);
  typed_queue.Uint64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Uint64Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Uint64List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Uint64Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Uint64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Uint64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Uint64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Uint64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Uint64Queue, I[308]);
  typed_queue.Int64Queue = class Int64Queue extends typed_queue._IntQueue$(typed_data.Int64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Int64Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int64Queue.fromList(elements);
    }
    [S._createList](size) {
      return typed_data.Int64List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int64Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Int64Queue.new = function(initialCapacity = null) {
    typed_queue.Int64Queue.__proto__.new.call(this, typed_data.Int64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int64Queue.prototype;
  dart.addTypeTests(typed_queue.Int64Queue);
  dart.addTypeCaches(typed_queue.Int64Queue);
  typed_queue.Int64Queue[dart.implements] = () => [queue_list.QueueList$(core.int)];
  dart.setMethodSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int64Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int64List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int64Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.int]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.int))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.int)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int64Queue, I[308]);
  typed_queue.Float32Queue = class Float32Queue extends typed_queue._FloatQueue$(typed_data.Float32List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Float32Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Float32Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Float32Queue.new = function(initialCapacity = null) {
    typed_queue.Float32Queue.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32Queue.prototype;
  dart.addTypeTests(typed_queue.Float32Queue);
  dart.addTypeCaches(typed_queue.Float32Queue);
  typed_queue.Float32Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Float32List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Float32Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.double]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32Queue, I[308]);
  typed_queue.Float64Queue = class Float64Queue extends typed_queue._FloatQueue$(typed_data.Float64List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float64Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Float64Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float64Queue.fromList(elements);
    }
    [S._createList](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Float64Buffer.new(size);
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Float64Queue.new = function(initialCapacity = null) {
    typed_queue.Float64Queue.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float64Queue.prototype;
  dart.addTypeTests(typed_queue.Float64Queue);
  dart.addTypeCaches(typed_queue.Float64Queue);
  typed_queue.Float64Queue[dart.implements] = () => [queue_list.QueueList$(core.double)];
  dart.setMethodSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float64Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Float64List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Float64Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [core.double]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(core.double))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float64Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float64Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float64Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(core.double)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float64Queue, I[308]);
  typed_queue.Int32x4Queue = class Int32x4Queue extends typed_queue._TypedQueue$(typed_data.Int32x4, typed_data.Int32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Int32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Int32x4Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Int32x4Queue.fromList(elements);
    }
    [S._createList](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Int32x4Buffer.new(size);
    }
    get [S._defaultValue]() {
      return typed_queue.Int32x4Queue._zero;
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Int32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Int32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Int32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Int32x4Queue);
  dart.addTypeCaches(typed_queue.Int32x4Queue);
  typed_queue.Int32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Int32x4)];
  dart.setMethodSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Int32x4Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Int32x4List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Int32x4Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [typed_data.Int32x4]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Int32x4))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Int32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Int32x4Queue.__proto__),
    [S._defaultValue]: typed_data.Int32x4,
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Int32x4)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Int32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Int32x4Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Int32x4)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Int32x4Queue, I[308]);
  dart.setStaticFieldSignature(typed_queue.Int32x4Queue, () => ['_zero']);
  dart.defineLazy(typed_queue.Int32x4Queue, {
    /*typed_queue.Int32x4Queue._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_queue.Float32x4Queue = class Float32x4Queue extends typed_queue._TypedQueue$(typed_data.Float32x4, typed_data.Float32x4List) {
    static ['_#new#tearOff'](initialCapacity = null) {
      return new typed_queue.Float32x4Queue.new(initialCapacity);
    }
    static fromList(elements) {
      let t367;
      t367 = new typed_queue.Float32x4Queue.new(elements[S$.$length]);
      return (() => {
        t367.addAll(elements);
        return t367;
      })();
    }
    static ['_#fromList#tearOff'](elements) {
      return typed_queue.Float32x4Queue.fromList(elements);
    }
    [S._createList](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
    [S._createBuffer](size) {
      return new typed_buffer.Float32x4Buffer.new(size);
    }
    get [S._defaultValue]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [S._add$1](element) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[467] || CT.C467, null, [element])));
    }
    get [S._head$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[468] || CT.C468)));
    }
    [S._writeToList$1](target) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[469] || CT.C469, null, [target])));
    }
    [S._grow$1]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[470] || CT.C470, null, [])));
    }
    [S._preGrow$1](newElementCount) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.method(C[471] || CT.C471, null, [newElementCount])));
    }
    get [S._table$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[472] || CT.C472)));
    }
    get [S._tail$2]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[473] || CT.C473)));
    }
    set [S._head$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[474] || CT.C474, value)));
    }
    set [S._table$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[475] || CT.C475, value)));
    }
    set [S._tail$2](value) {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.setter(C[476] || CT.C476, value)));
    }
  };
  (typed_queue.Float32x4Queue.new = function(initialCapacity = null) {
    typed_queue.Float32x4Queue.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(typed_queue._chooseRealInitialCapacity(initialCapacity)));
    ;
  }).prototype = typed_queue.Float32x4Queue.prototype;
  dart.addTypeTests(typed_queue.Float32x4Queue);
  dart.addTypeCaches(typed_queue.Float32x4Queue);
  typed_queue.Float32x4Queue[dart.implements] = () => [queue_list.QueueList$(typed_data.Float32x4)];
  dart.setMethodSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getMethods(typed_queue.Float32x4Queue.__proto__),
    [S._createList]: dart.fnType(typed_data.Float32x4List, [core.int]),
    [S._createBuffer]: dart.fnType(typed_buffer.Float32x4Buffer, [core.int]),
    [S._add$1]: dart.fnType(dart.void, [typed_data.Float32x4]),
    [S._writeToList$1]: dart.fnType(core.int, [core.List$(dart.nullable(typed_data.Float32x4))]),
    [S._grow$1]: dart.fnType(dart.void, []),
    [S._preGrow$1]: dart.fnType(dart.void, [core.int])
  }));
  dart.setStaticMethodSignature(typed_queue.Float32x4Queue, () => ['fromList']);
  dart.setGetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getGetters(typed_queue.Float32x4Queue.__proto__),
    [S._defaultValue]: typed_data.Float32x4,
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Float32x4)),
    [S._tail$2]: core.int
  }));
  dart.setSetterSignature(typed_queue.Float32x4Queue, () => ({
    __proto__: dart.getSetters(typed_queue.Float32x4Queue.__proto__),
    [S._head$2]: core.int,
    [S._table$2]: core.List$(dart.nullable(typed_data.Float32x4)),
    [S._tail$2]: core.int
  }));
  dart.setLibraryUri(typed_queue.Float32x4Queue, I[308]);
  typed_queue._chooseRealInitialCapacity = function _chooseRealInitialCapacity(initialCapacity) {
    if (initialCapacity == null || dart.notNull(initialCapacity) < 16) {
      return 16;
    } else if (!typed_queue._isPowerOf2(initialCapacity)) {
      return typed_queue._nextPowerOf2(initialCapacity);
    } else {
      return initialCapacity;
    }
  };
  typed_queue._isPowerOf2 = function _isPowerOf2(number) {
    return (number & number - 1) === 0;
  };
  typed_queue._nextPowerOf2 = function _nextPowerOf2(number) {
    if (!(number > 0)) dart.assertFailed(null, I[307], 691, 10, "number > 0");
    number = (number << 1 >>> 0) - 1;
    for (;;) {
      let nextNumber = (number & number - 1) >>> 0;
      if (nextNumber === 0) return number;
      number = nextNumber;
    }
  };
  dart.defineLazy(typed_queue, {
    /*typed_queue._defaultInitialCapacity*/get _defaultInitialCapacity() {
      return 16;
    }
  }, false);
  method_channel_list_result.MethodChannelListResult = class MethodChannelListResult extends platform_interface_list_result.ListResultPlatform {
    static ['_#new#tearOff'](storage, opts) {
      let nextPageToken = opts && 'nextPageToken' in opts ? opts.nextPageToken : null;
      let items = opts && 'items' in opts ? opts.items : null;
      let prefixes = opts && 'prefixes' in opts ? opts.prefixes : null;
      return new method_channel_list_result.MethodChannelListResult.new(storage, {nextPageToken: nextPageToken, items: items, prefixes: prefixes});
    }
    get items() {
      return this[S._items$1][S$.$map](method_channel_reference.MethodChannelReference, dart.fn(path => new method_channel_reference.MethodChannelReference.new(dart.nullCheck(this.storage), path), T.StringToMethodChannelReference()))[S$.$toList]();
    }
    get prefixes() {
      return this[S._prefixes$1][S$.$map](method_channel_reference.MethodChannelReference, dart.fn(path => new method_channel_reference.MethodChannelReference.new(dart.nullCheck(this.storage), path), T.StringToMethodChannelReference()))[S$.$toList]();
    }
  };
  (method_channel_list_result.MethodChannelListResult.new = function(storage, opts) {
    let t367, t367$;
    let nextPageToken = opts && 'nextPageToken' in opts ? opts.nextPageToken : null;
    let items = opts && 'items' in opts ? opts.items : null;
    let prefixes = opts && 'prefixes' in opts ? opts.prefixes : null;
    this[S._items$1] = (t367 = items, t367 == null ? T$.JSArrayOfString().of([]) : t367);
    this[S._prefixes$1] = (t367$ = prefixes, t367$ == null ? T$.JSArrayOfString().of([]) : t367$);
    method_channel_list_result.MethodChannelListResult.__proto__.new.call(this, storage, nextPageToken);
    ;
  }).prototype = method_channel_list_result.MethodChannelListResult.prototype;
  dart.addTypeTests(method_channel_list_result.MethodChannelListResult);
  dart.addTypeCaches(method_channel_list_result.MethodChannelListResult);
  dart.setLibraryUri(method_channel_list_result.MethodChannelListResult, I[309]);
  dart.setFieldSignature(method_channel_list_result.MethodChannelListResult, () => ({
    __proto__: dart.getFields(method_channel_list_result.MethodChannelListResult.__proto__),
    [S._items$1]: dart.fieldType(core.List$(core.String)),
    [S._prefixes$1]: dart.fieldType(core.List$(core.String))
  }));
  method_channel_task.MethodChannelTask = class MethodChannelTask extends platform_interface_task.TaskPlatform {
    get storage() {
      return this[S.storage$6];
    }
    set storage(value) {
      super.storage = value;
    }
    static pigeonFirebaseApp(storage) {
      return new messages$46pigeon$1.PigeonStorageFirebaseApp.new({appName: storage.app.name, bucket: storage.bucket});
    }
    convertToPigeonTaskState(state) {
      switch (state) {
        case C[321] || CT.C321:
          {
            return messages$46pigeon$1.PigeonStorageTaskState.canceled;
          }
        case C[322] || CT.C322:
          {
            return messages$46pigeon$1.PigeonStorageTaskState.error;
          }
        case C[318] || CT.C318:
          {
            return messages$46pigeon$1.PigeonStorageTaskState.paused;
          }
        case C[319] || CT.C319:
          {
            return messages$46pigeon$1.PigeonStorageTaskState.running;
          }
        case C[320] || CT.C320:
          {
            return messages$46pigeon$1.PigeonStorageTaskState.success;
          }
      }
    }
    get [S._stackTrace]() {
      let t368;
      t368 = this[S.__MethodChannelTask__stackTrace];
      return t368 == null ? dart.throw(new _internal.LateError.fieldNI("_stackTrace")) : t368;
    }
    set [S._stackTrace](_stackTrace$35param) {
      this[S.__MethodChannelTask__stackTrace] = _stackTrace$35param;
    }
    get [S._stream$2]() {
      let t368;
      t368 = this[S.__MethodChannelTask__stream];
      return t368 == null ? dart.throw(new _internal.LateError.fieldNI("_stream")) : t368;
    }
    set [S._stream$2](_stream$35param) {
      this[S.__MethodChannelTask__stream] = _stream$35param;
    }
    get [S._snapshot$1]() {
      let t368;
      t368 = this[S.__MethodChannelTask__snapshot];
      return t368 == null ? dart.throw(new _internal.LateError.fieldNI("_snapshot")) : t368;
    }
    set [S._snapshot$1](_snapshot$35param) {
      this[S.__MethodChannelTask__snapshot] = _snapshot$35param;
    }
    get snapshotEvents() {
      return this[S._stream$2];
    }
    get snapshot() {
      return this[S._snapshot$1];
    }
    get onComplete() {
      return async.async(platform_interface_task_snapshot.TaskSnapshotPlatform, (function* onComplete() {
        if (this[S._didComplete] && this[S._exception] == null) {
          return T$.FutureOfTaskSnapshotPlatform().value(this.snapshot);
        } else if (this[S._didComplete] && this[S._exception] != null) {
          return exception$2.catchFuturePlatformException(platform_interface_task_snapshot.TaskSnapshotPlatform, dart.nullCheck(this[S._exception]), this[S._stackTrace]);
        } else {
          this[S._stream$2].last;
          this[S._completer] == null ? this[S._completer] = T.CompleterOfTaskSnapshotPlatform().new() : null;
          return dart.nullCheck(this[S._completer]).future;
        }
      }).bind(this));
    }
    pause() {
      return async.async(core.bool, (function* pause() {
        let t368;
        try {
          let data = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.taskPause(method_channel_task.MethodChannelTask.pigeonFirebaseApp(this.storage), this[S._handle]))[S$.$cast](core.String, dart.dynamic);
          let success = (t368 = data[S$.$_get]("status"), t368 == null ? false : t368);
          if (dart.dtest(success)) {
            this[S._snapshot$1] = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(this.storage, task_state.TaskState.paused, T$.LinkedHashMapOfString$dynamic().from(core.Map.as(data[S$.$_get]("snapshot"))));
          }
          return T.FutureOrOfbool().as(success);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            return exception$2.catchFuturePlatformException(core.bool, e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    resume() {
      return async.async(core.bool, (function* resume() {
        let t369;
        try {
          let data = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.taskResume(method_channel_task.MethodChannelTask.pigeonFirebaseApp(this.storage), this[S._handle]))[S$.$cast](core.String, dart.dynamic);
          let success = (t369 = data[S$.$_get]("status"), t369 == null ? false : t369);
          if (dart.dtest(success)) {
            this[S._snapshot$1] = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(this.storage, task_state.TaskState.running, T$.LinkedHashMapOfString$dynamic().from(core.Map.as(data[S$.$_get]("snapshot"))));
          }
          return T.FutureOrOfbool().as(success);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            return exception$2.catchFuturePlatformException(core.bool, e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
    cancel() {
      return async.async(core.bool, (function* cancel() {
        let t370;
        try {
          let data = (yield method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.taskCancel(method_channel_task.MethodChannelTask.pigeonFirebaseApp(this.storage), this[S._handle]))[S$.$cast](core.String, dart.dynamic);
          let success = (t370 = data[S$.$_get]("status"), t370 == null ? false : t370);
          if (dart.dtest(success)) {
            this[S._snapshot$1] = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(this.storage, task_state.TaskState.canceled, T$.LinkedHashMapOfString$dynamic().from(core.Map.as(data[S$.$_get]("snapshot"))));
          }
          return T.FutureOrOfbool().as(success);
        } catch (e$) {
          let e = dart.getThrown(e$);
          let stack = dart.stackTrace(e$);
          if (core.Object.is(e)) {
            return exception$2.catchFuturePlatformException(core.bool, e, stack);
          } else
            throw e$;
        }
      }).bind(this));
    }
  };
  (method_channel_task.MethodChannelTask.new = function(_handle, storage, path, _initialTask) {
    this[S._exception] = null;
    this[S.__MethodChannelTask__stackTrace] = null;
    this[S._didComplete] = false;
    this[S._completer] = null;
    this[S.__MethodChannelTask__stream] = null;
    this[S.__MethodChannelTask__snapshot] = null;
    this[S._handle] = _handle;
    this[S.storage$6] = storage;
    this[S._initialTask] = _initialTask;
    method_channel_task.MethodChannelTask.__proto__.new.call(this);
    const mapNativeStream = () => {
      return new (T._AsyncStarImplOfTaskSnapshotPlatform()).new((function* mapNativeStream(stream) {
        let t367;
        let observerId = (yield this[S._initialTask]);
        let nativePlatformStream = method_channel_firebase_storage.MethodChannelFirebaseStorage.storageTaskChannel(observerId).receiveBroadcastStream();
        try {
          let iter = async.StreamIterator.new(nativePlatformStream);
          try {
            while (yield iter.moveNext()) {
              let events = iter.current;
              {
                let taskState = task_state.TaskState.values[S$.$_get](core.int.as(dart.dsend(events, '_get', ["taskState"])));
                if (this[S._snapshot$1].state !== task_state.TaskState.canceled) {
                  let snapshot = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(this.storage, taskState, T$.LinkedHashMapOfString$dynamic().from(core.Map.as(dart.dsend(events, '_get', ["snapshot"]))));
                  this[S._snapshot$1] = snapshot;
                }
                if (stream.add(this[S._snapshot$1])) return;
                yield;
                if (this.snapshot.state === task_state.TaskState.success) {
                  this[S._didComplete] = true;
                  t367 = this[S._completer];
                  t367 == null ? null : t367.complete(this.snapshot);
                }
              }
            }
          } finally {
            yield iter.cancel();
          }
        } catch (e) {
          let exception = dart.getThrown(e);
          let stack = dart.stackTrace(e);
          if (core.Object.is(exception)) {
            exception$2.convertPlatformException(exception, stack);
          } else
            throw e;
        }
      }).bind(this)).stream;
    };
    dart.fn(mapNativeStream, T$.VoidToStreamOfTaskSnapshotPlatform());
    this[S._stream$2] = mapNativeStream().asBroadcastStream({onListen: dart.fn(sub => sub.resume(), T.StreamSubscriptionOfTaskSnapshotPlatformTovoid()), onCancel: dart.fn(sub => sub.pause(), T.StreamSubscriptionOfTaskSnapshotPlatformTovoid())});
    this[S._snapshot$1] = new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(this.storage, task_state.TaskState.running, new (T$.IdentityMapOfString$dynamic()).from(["path", path, "bytesTransferred", 0, "totalBytes", 1]));
  }).prototype = method_channel_task.MethodChannelTask.prototype;
  dart.addTypeTests(method_channel_task.MethodChannelTask);
  dart.addTypeCaches(method_channel_task.MethodChannelTask);
  dart.setMethodSignature(method_channel_task.MethodChannelTask, () => ({
    __proto__: dart.getMethods(method_channel_task.MethodChannelTask.__proto__),
    convertToPigeonTaskState: dart.fnType(messages$46pigeon$1.PigeonStorageTaskState, [task_state.TaskState])
  }));
  dart.setStaticMethodSignature(method_channel_task.MethodChannelTask, () => ['pigeonFirebaseApp']);
  dart.setGetterSignature(method_channel_task.MethodChannelTask, () => ({
    __proto__: dart.getGetters(method_channel_task.MethodChannelTask.__proto__),
    [S._stackTrace]: core.StackTrace,
    [S._stream$2]: async.Stream$(platform_interface_task_snapshot.TaskSnapshotPlatform),
    [S._snapshot$1]: platform_interface_task_snapshot.TaskSnapshotPlatform
  }));
  dart.setSetterSignature(method_channel_task.MethodChannelTask, () => ({
    __proto__: dart.getSetters(method_channel_task.MethodChannelTask.__proto__),
    [S._stackTrace]: core.StackTrace,
    [S._stream$2]: async.Stream$(platform_interface_task_snapshot.TaskSnapshotPlatform),
    [S._snapshot$1]: platform_interface_task_snapshot.TaskSnapshotPlatform
  }));
  dart.setLibraryUri(method_channel_task.MethodChannelTask, I[310]);
  dart.setFieldSignature(method_channel_task.MethodChannelTask, () => ({
    __proto__: dart.getFields(method_channel_task.MethodChannelTask.__proto__),
    [S._exception]: dart.fieldType(dart.nullable(core.Object)),
    [S.__MethodChannelTask__stackTrace]: dart.fieldType(dart.nullable(core.StackTrace)),
    [S._didComplete]: dart.fieldType(core.bool),
    [S._completer]: dart.fieldType(dart.nullable(async.Completer$(platform_interface_task_snapshot.TaskSnapshotPlatform))),
    [S.__MethodChannelTask__stream]: dart.fieldType(dart.nullable(async.Stream$(platform_interface_task_snapshot.TaskSnapshotPlatform))),
    [S._initialTask]: dart.fieldType(async.Future$(core.String)),
    [S._handle]: dart.finalFieldType(core.int),
    storage: dart.finalFieldType(platform_interface_firebase_storage.FirebaseStoragePlatform),
    [S.__MethodChannelTask__snapshot]: dart.fieldType(dart.nullable(platform_interface_task_snapshot.TaskSnapshotPlatform))
  }));
  method_channel_task.MethodChannelPutFileTask = class MethodChannelPutFileTask extends method_channel_task.MethodChannelTask {
    static ['_#new#tearOff'](handle, storage, path, file, metadata) {
      return new method_channel_task.MethodChannelPutFileTask.new(handle, storage, path, file, metadata);
    }
    static _getTask(handle, storage, path, file, metadata) {
      return method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.referencePutFile(method_channel_task.MethodChannelTask.pigeonFirebaseApp(storage), method_channel_firebase_storage.MethodChannelFirebaseStorage.getPigeonReference(storage.bucket, path, "putFile"), file.path, method_channel_firebase_storage.MethodChannelFirebaseStorage.getPigeonSettableMetaData(metadata), handle);
    }
  };
  (method_channel_task.MethodChannelPutFileTask.new = function(handle, storage, path, file, metadata) {
    method_channel_task.MethodChannelPutFileTask.__proto__.new.call(this, handle, storage, path, method_channel_task.MethodChannelPutFileTask._getTask(handle, storage, path, file, metadata));
    ;
  }).prototype = method_channel_task.MethodChannelPutFileTask.prototype;
  dart.addTypeTests(method_channel_task.MethodChannelPutFileTask);
  dart.addTypeCaches(method_channel_task.MethodChannelPutFileTask);
  dart.setStaticMethodSignature(method_channel_task.MethodChannelPutFileTask, () => ['_getTask']);
  dart.setLibraryUri(method_channel_task.MethodChannelPutFileTask, I[310]);
  method_channel_task.MethodChannelPutStringTask = class MethodChannelPutStringTask extends method_channel_task.MethodChannelTask {
    static ['_#new#tearOff'](handle, storage, path, data, format, metadata) {
      return new method_channel_task.MethodChannelPutStringTask.new(handle, storage, path, data, format, metadata);
    }
    static _getTask(handle, storage, path, data, format, metadata) {
      return method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.referencePutString(method_channel_task.MethodChannelTask.pigeonFirebaseApp(storage), method_channel_firebase_storage.MethodChannelFirebaseStorage.getPigeonReference(storage.bucket, path, "putString"), data, format.index, method_channel_firebase_storage.MethodChannelFirebaseStorage.getPigeonSettableMetaData(metadata), handle);
    }
  };
  (method_channel_task.MethodChannelPutStringTask.new = function(handle, storage, path, data, format, metadata) {
    method_channel_task.MethodChannelPutStringTask.__proto__.new.call(this, handle, storage, path, method_channel_task.MethodChannelPutStringTask._getTask(handle, storage, path, data, format, metadata));
    ;
  }).prototype = method_channel_task.MethodChannelPutStringTask.prototype;
  dart.addTypeTests(method_channel_task.MethodChannelPutStringTask);
  dart.addTypeCaches(method_channel_task.MethodChannelPutStringTask);
  dart.setStaticMethodSignature(method_channel_task.MethodChannelPutStringTask, () => ['_getTask']);
  dart.setLibraryUri(method_channel_task.MethodChannelPutStringTask, I[310]);
  method_channel_task.MethodChannelPutTask = class MethodChannelPutTask extends method_channel_task.MethodChannelTask {
    static ['_#new#tearOff'](handle, storage, path, data, metadata) {
      return new method_channel_task.MethodChannelPutTask.new(handle, storage, path, data, metadata);
    }
    static _getTask(handle, storage, path, data, metadata) {
      return method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.referencePutData(method_channel_task.MethodChannelTask.pigeonFirebaseApp(storage), method_channel_firebase_storage.MethodChannelFirebaseStorage.getPigeonReference(storage.bucket, path, "putData"), data, method_channel_firebase_storage.MethodChannelFirebaseStorage.getPigeonSettableMetaData(metadata), handle);
    }
  };
  (method_channel_task.MethodChannelPutTask.new = function(handle, storage, path, data, metadata) {
    method_channel_task.MethodChannelPutTask.__proto__.new.call(this, handle, storage, path, method_channel_task.MethodChannelPutTask._getTask(handle, storage, path, data, metadata));
    ;
  }).prototype = method_channel_task.MethodChannelPutTask.prototype;
  dart.addTypeTests(method_channel_task.MethodChannelPutTask);
  dart.addTypeCaches(method_channel_task.MethodChannelPutTask);
  dart.setStaticMethodSignature(method_channel_task.MethodChannelPutTask, () => ['_getTask']);
  dart.setLibraryUri(method_channel_task.MethodChannelPutTask, I[310]);
  method_channel_task.MethodChannelDownloadTask = class MethodChannelDownloadTask extends method_channel_task.MethodChannelTask {
    static ['_#new#tearOff'](handle, storage, path, file) {
      return new method_channel_task.MethodChannelDownloadTask.new(handle, storage, path, file);
    }
    static _getTask(handle, storage, path, file) {
      return method_channel_firebase_storage.MethodChannelFirebaseStorage.pigeonChannel.referenceDownloadFile(method_channel_task.MethodChannelTask.pigeonFirebaseApp(storage), method_channel_firebase_storage.MethodChannelFirebaseStorage.getPigeonReference(storage.bucket, path, "writeToFile"), file.path, handle);
    }
  };
  (method_channel_task.MethodChannelDownloadTask.new = function(handle, storage, path, file) {
    method_channel_task.MethodChannelDownloadTask.__proto__.new.call(this, handle, storage, path, method_channel_task.MethodChannelDownloadTask._getTask(handle, storage, path, file));
    ;
  }).prototype = method_channel_task.MethodChannelDownloadTask.prototype;
  dart.addTypeTests(method_channel_task.MethodChannelDownloadTask);
  dart.addTypeCaches(method_channel_task.MethodChannelDownloadTask);
  dart.setStaticMethodSignature(method_channel_task.MethodChannelDownloadTask, () => ['_getTask']);
  dart.setLibraryUri(method_channel_task.MethodChannelDownloadTask, I[310]);
  digest_sink.DigestSink = class DigestSink extends core.Object {
    get value() {
      return dart.nullCheck(this[S._value$2]);
    }
    add(value) {
      digest.Digest.as(value);
      if (this[S._value$2] != null) dart.throw(new core.StateError.new("add may only be called once."));
      this[S._value$2] = value;
    }
    close() {
      if (this[S._value$2] == null) dart.throw(new core.StateError.new("add must be called once."));
    }
    static ['_#new#tearOff']() {
      return new digest_sink.DigestSink.new();
    }
  };
  (digest_sink.DigestSink.new = function() {
    this[S._value$2] = null;
    ;
  }).prototype = digest_sink.DigestSink.prototype;
  dart.addTypeTests(digest_sink.DigestSink);
  dart.addTypeCaches(digest_sink.DigestSink);
  digest_sink.DigestSink[dart.implements] = () => [core.Sink$(digest.Digest)];
  dart.setMethodSignature(digest_sink.DigestSink, () => ({
    __proto__: dart.getMethods(digest_sink.DigestSink.__proto__),
    add: dart.fnType(dart.void, [dart.nullable(core.Object)]),
    close: dart.fnType(dart.void, [])
  }));
  dart.setGetterSignature(digest_sink.DigestSink, () => ({
    __proto__: dart.getGetters(digest_sink.DigestSink.__proto__),
    value: digest.Digest
  }));
  dart.setLibraryUri(digest_sink.DigestSink, I[311]);
  dart.setFieldSignature(digest_sink.DigestSink, () => ({
    __proto__: dart.getFields(digest_sink.DigestSink.__proto__),
    [S._value$2]: dart.fieldType(dart.nullable(digest.Digest))
  }));
  utils$6.add32 = function add32(x, y) {
    return (x + y & 4294967295) >>> 0;
  };
  utils$6.rotl32 = function rotl32(val, shift) {
    let modShift = shift & 31;
    return (val[S.$leftShift](modShift) & 4294967295 | ((val & 4294967295) >>> 0)[S$0.$rightShift](32 - modShift)) >>> 0;
  };
  dart.defineLazy(utils$6, {
    /*utils$6.mask32*/get mask32() {
      return 4294967295;
    },
    /*utils$6.bitsPerByte*/get bitsPerByte() {
      return 8;
    },
    /*utils$6.bytesPerWord*/get bytesPerWord() {
      return 4;
    }
  }, false);
  sha512_slowsinks._Sha64BitSink = class _Sha64BitSink extends hash_sink.HashSink {
    get digest() {
      return typed_data.Uint32List.view(this[S._digest$1][S.$buffer], 0, this.digestBytes);
    }
    [S._shr](bits, word, offset, ret, offsetR) {
      ret[S$.$_set](0 + offsetR, bits < 32 && bits >= 0 ? word[S$.$_get](0 + offset)[S$0.$rightShift](bits) : 0);
      ret[S$.$_set](1 + offsetR, bits > 32 ? word[S$.$_get](0 + offset)[S$0.$rightShift](bits - 32) : bits === 32 ? word[S$.$_get](0 + offset) : bits >= 0 ? (word[S$.$_get](0 + offset)[S.$leftShift](32 - bits) | word[S$.$_get](1 + offset)[S$0.$rightShift](bits)) >>> 0 : 0);
    }
    [S._shl](bits, word, offset, ret, offsetR) {
      ret[S$.$_set](0 + offsetR, bits > 32 ? word[S$.$_get](1 + offset)[S.$leftShift](bits - 32) : bits === 32 ? word[S$.$_get](1 + offset) : bits >= 0 ? (word[S$.$_get](0 + offset)[S.$leftShift](bits) | word[S$.$_get](1 + offset)[S$0.$rightShift](32 - bits)) >>> 0 : 0);
      ret[S$.$_set](1 + offsetR, bits < 32 && bits >= 0 ? word[S$.$_get](1 + offset)[S.$leftShift](bits) : 0);
    }
    [S._or](word1, offset1, word2, offset2, ret, offsetR) {
      ret[S$.$_set](0 + offsetR, (word1[S$.$_get](0 + offset1) | word2[S$.$_get](0 + offset2)) >>> 0);
      ret[S$.$_set](1 + offsetR, (word1[S$.$_get](1 + offset1) | word2[S$.$_get](1 + offset2)) >>> 0);
    }
    [S._xor](word1, offset1, word2, offset2, ret, offsetR) {
      ret[S$.$_set](0 + offsetR, (word1[S$.$_get](0 + offset1) ^ word2[S$.$_get](0 + offset2)) >>> 0);
      ret[S$.$_set](1 + offsetR, (word1[S$.$_get](1 + offset1) ^ word2[S$.$_get](1 + offset2)) >>> 0);
    }
    [S._add$2](word1, offset1, word2, offset2, ret, offsetR) {
      ret[S$.$_set](1 + offsetR, word1[S$.$_get](1 + offset1) + word2[S$.$_get](1 + offset2));
      ret[S$.$_set](0 + offsetR, word1[S$.$_get](0 + offset1) + word2[S$.$_get](0 + offset2) + (ret[S$.$_get](1 + offsetR) < word1[S$.$_get](1 + offset1) ? 1 : 0));
    }
    [S._addTo2](word1, offset1, word2, offset2) {
      let t372, t371, t372$, t371$;
      let addTemp = word1[S$.$_get](1 + offset1);
      t371 = word1;
      t372 = 1 + offset1;
      t371[S$.$_set](t372, t371[S$.$_get](t372) + word2[S$.$_get](1 + offset2));
      t371$ = word1;
      t372$ = 0 + offset1;
      t371$[S$.$_set](t372$, t371$[S$.$_get](t372$) + (word2[S$.$_get](0 + offset2) + (word1[S$.$_get](1 + offset1) < addTemp ? 1 : 0)));
    }
    [S._rotr](bits, word, offset, ret, offsetR) {
      this[S._shr](bits, word, offset, this[S._nums], 0);
      this[S._shl](64 - bits, word, offset, this[S._nums], 2);
      this[S._or](this[S._nums], 0, this[S._nums], 2, ret, offsetR);
    }
    [S._bsig0$1](word, offset, ret, offsetR) {
      this[S._rotr](28, word, offset, this[S._nums], 4);
      this[S._rotr](34, word, offset, this[S._nums], 6);
      this[S._rotr](39, word, offset, this[S._nums], 8);
      this[S._xor](this[S._nums], 6, this[S._nums], 8, this[S._nums], 10);
      this[S._xor](this[S._nums], 4, this[S._nums], 10, ret, offsetR);
    }
    [S._bsig1$1](word, offset, ret, offsetR) {
      this[S._rotr](14, word, offset, this[S._nums], 4);
      this[S._rotr](18, word, offset, this[S._nums], 6);
      this[S._rotr](41, word, offset, this[S._nums], 8);
      this[S._xor](this[S._nums], 6, this[S._nums], 8, this[S._nums], 10);
      this[S._xor](this[S._nums], 4, this[S._nums], 10, ret, offsetR);
    }
    [S._ssig0$1](word, offset, ret, offsetR) {
      this[S._rotr](1, word, offset, this[S._nums], 4);
      this[S._rotr](8, word, offset, this[S._nums], 6);
      this[S._shr](7, word, offset, this[S._nums], 8);
      this[S._xor](this[S._nums], 6, this[S._nums], 8, this[S._nums], 10);
      this[S._xor](this[S._nums], 4, this[S._nums], 10, ret, offsetR);
    }
    [S._ssig1$1](word, offset, ret, offsetR) {
      this[S._rotr](19, word, offset, this[S._nums], 4);
      this[S._rotr](61, word, offset, this[S._nums], 6);
      this[S._shr](6, word, offset, this[S._nums], 8);
      this[S._xor](this[S._nums], 6, this[S._nums], 8, this[S._nums], 10);
      this[S._xor](this[S._nums], 4, this[S._nums], 10, ret, offsetR);
    }
    [S._ch$1](x, offsetX, y, offsetY, z, offsetZ, ret, offsetR) {
      ret[S$.$_set](0 + offsetR, (x[S$.$_get](0 + offsetX) & (y[S$.$_get](0 + offsetY) ^ z[S$.$_get](0 + offsetZ)) >>> 0 ^ z[S$.$_get](0 + offsetZ)) >>> 0);
      ret[S$.$_set](1 + offsetR, (x[S$.$_get](1 + offsetX) & (y[S$.$_get](1 + offsetY) ^ z[S$.$_get](1 + offsetZ)) >>> 0 ^ z[S$.$_get](1 + offsetZ)) >>> 0);
    }
    [S._maj$1](x, offsetX, y, offsetY, z, offsetZ, ret, offsetR) {
      ret[S$.$_set](0 + offsetR, (x[S$.$_get](0 + offsetX) & (y[S$.$_get](0 + offsetY) | z[S$.$_get](0 + offsetZ)) >>> 0 | (y[S$.$_get](0 + offsetY) & z[S$.$_get](0 + offsetZ)) >>> 0) >>> 0);
      ret[S$.$_set](1 + offsetR, (x[S$.$_get](1 + offsetX) & (y[S$.$_get](1 + offsetY) | z[S$.$_get](1 + offsetZ)) >>> 0 | (y[S$.$_get](1 + offsetY) & z[S$.$_get](1 + offsetZ)) >>> 0) >>> 0);
    }
    updateHash(chunk) {
      if (!(chunk[S$.$length] === 32)) dart.assertFailed(null, I[312], 213, 12, "chunk.length == 32");
      for (let i = 0; i < 32; i = i + 1) {
        this[S._extended$2][S$.$_set](i, chunk[S$.$_get](i));
      }
      for (let i = 32; i < 160; i = i + 2) {
        this[S._ssig1$1](this[S._extended$2], i - 2 * 2, this[S._nums], 28);
        this[S._add$2](this[S._nums], 28, this[S._extended$2], i - 7 * 2, this[S._nums], 30);
        this[S._ssig0$1](this[S._extended$2], i - 15 * 2, this[S._nums], 28);
        this[S._add$2](this[S._nums], 28, this[S._extended$2], i - 16 * 2, this[S._nums], 32);
        this[S._add$2](this[S._nums], 30, this[S._nums], 32, this[S._extended$2], i);
      }
      this[S._nums][S$0.$setRange](12, 26 + 2, this[S._digest$1]);
      for (let i = 0; i < 160; i = i + 2) {
        this[S._bsig1$1](this[S._nums], 20, this[S._nums], 28);
        this[S._add$2](this[S._nums], 26, this[S._nums], 28, this[S._nums], 30);
        this[S._ch$1](this[S._nums], 20, this[S._nums], 22, this[S._nums], 24, this[S._nums], 32);
        this[S._add$2](this[S._nums], 30, this[S._nums], 32, this[S._nums], 34);
        this[S._add$2](sha512_slowsinks._noise32, i, this[S._extended$2], i, this[S._nums], 36);
        this[S._add$2](this[S._nums], 34, this[S._nums], 36, this[S._nums], 28);
        this[S._bsig0$1](this[S._nums], 12, this[S._nums], 32);
        this[S._maj$1](this[S._nums], 12, this[S._nums], 14, this[S._nums], 16, this[S._nums], 34);
        this[S._add$2](this[S._nums], 32, this[S._nums], 34, this[S._nums], 30);
        this[S._nums][S$.$_set](26, this[S._nums][S$.$_get](24));
        this[S._nums][S$.$_set](26 + 1, this[S._nums][S$.$_get](24 + 1));
        this[S._nums][S$.$_set](24, this[S._nums][S$.$_get](22));
        this[S._nums][S$.$_set](24 + 1, this[S._nums][S$.$_get](22 + 1));
        this[S._nums][S$.$_set](22, this[S._nums][S$.$_get](20));
        this[S._nums][S$.$_set](22 + 1, this[S._nums][S$.$_get](20 + 1));
        this[S._add$2](this[S._nums], 18, this[S._nums], 28, this[S._nums], 20);
        this[S._nums][S$.$_set](18, this[S._nums][S$.$_get](16));
        this[S._nums][S$.$_set](18 + 1, this[S._nums][S$.$_get](16 + 1));
        this[S._nums][S$.$_set](16, this[S._nums][S$.$_get](14));
        this[S._nums][S$.$_set](16 + 1, this[S._nums][S$.$_get](14 + 1));
        this[S._nums][S$.$_set](14, this[S._nums][S$.$_get](12));
        this[S._nums][S$.$_set](14 + 1, this[S._nums][S$.$_get](12 + 1));
        this[S._add$2](this[S._nums], 28, this[S._nums], 30, this[S._nums], 12);
      }
      this[S._addTo2](this[S._digest$1], 0, this[S._nums], 12);
      this[S._addTo2](this[S._digest$1], 2, this[S._nums], 14);
      this[S._addTo2](this[S._digest$1], 4, this[S._nums], 16);
      this[S._addTo2](this[S._digest$1], 6, this[S._nums], 18);
      this[S._addTo2](this[S._digest$1], 8, this[S._nums], 20);
      this[S._addTo2](this[S._digest$1], 10, this[S._nums], 22);
      this[S._addTo2](this[S._digest$1], 12, this[S._nums], 24);
      this[S._addTo2](this[S._digest$1], 14, this[S._nums], 26);
    }
  };
  (sha512_slowsinks._Sha64BitSink.new = function(sink, _digest) {
    this[S._extended$2] = _native_typed_data.NativeUint32List.new(160);
    this[S._nums] = _native_typed_data.NativeUint32List.new(12 + 16 + 10);
    this[S._digest$1] = _digest;
    sha512_slowsinks._Sha64BitSink.__proto__.new.call(this, sink, 32, {signatureBytes: 16});
    ;
  }).prototype = sha512_slowsinks._Sha64BitSink.prototype;
  dart.addTypeTests(sha512_slowsinks._Sha64BitSink);
  dart.addTypeCaches(sha512_slowsinks._Sha64BitSink);
  dart.setMethodSignature(sha512_slowsinks._Sha64BitSink, () => ({
    __proto__: dart.getMethods(sha512_slowsinks._Sha64BitSink.__proto__),
    [S._shr]: dart.fnType(dart.void, [core.int, typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._shl]: dart.fnType(dart.void, [core.int, typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._or]: dart.fnType(dart.void, [typed_data.Uint32List, core.int, typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._xor]: dart.fnType(dart.void, [typed_data.Uint32List, core.int, typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._add$2]: dart.fnType(dart.void, [typed_data.Uint32List, core.int, typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._addTo2]: dart.fnType(dart.void, [typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._rotr]: dart.fnType(dart.void, [core.int, typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._bsig0$1]: dart.fnType(dart.void, [typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._bsig1$1]: dart.fnType(dart.void, [typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._ssig0$1]: dart.fnType(dart.void, [typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._ssig1$1]: dart.fnType(dart.void, [typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._ch$1]: dart.fnType(dart.void, [typed_data.Uint32List, core.int, typed_data.Uint32List, core.int, typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    [S._maj$1]: dart.fnType(dart.void, [typed_data.Uint32List, core.int, typed_data.Uint32List, core.int, typed_data.Uint32List, core.int, typed_data.Uint32List, core.int]),
    updateHash: dart.fnType(dart.void, [typed_data.Uint32List])
  }));
  dart.setGetterSignature(sha512_slowsinks._Sha64BitSink, () => ({
    __proto__: dart.getGetters(sha512_slowsinks._Sha64BitSink.__proto__),
    digest: typed_data.Uint32List
  }));
  dart.setLibraryUri(sha512_slowsinks._Sha64BitSink, I[313]);
  dart.setFieldSignature(sha512_slowsinks._Sha64BitSink, () => ({
    __proto__: dart.getFields(sha512_slowsinks._Sha64BitSink.__proto__),
    [S._digest$1]: dart.finalFieldType(typed_data.Uint32List),
    [S._extended$2]: dart.finalFieldType(typed_data.Uint32List),
    [S._nums]: dart.finalFieldType(typed_data.Uint32List)
  }));
  dart.setStaticFieldSignature(sha512_slowsinks._Sha64BitSink, () => ['_rotrIndex1', '_rotrIndex2', '_sigIndex1', '_sigIndex2', '_sigIndex3', '_sigIndex4', '_aIndex', '_bIndex', '_cIndex', '_dIndex', '_eIndex', '_fIndex', '_gIndex', '_hIndex', '_tmp1', '_tmp2', '_tmp3', '_tmp4', '_tmp5']);
  dart.defineLazy(sha512_slowsinks._Sha64BitSink, {
    /*sha512_slowsinks._Sha64BitSink._rotrIndex1*/get _rotrIndex1() {
      return 0;
    },
    /*sha512_slowsinks._Sha64BitSink._rotrIndex2*/get _rotrIndex2() {
      return 2;
    },
    /*sha512_slowsinks._Sha64BitSink._sigIndex1*/get _sigIndex1() {
      return 4;
    },
    /*sha512_slowsinks._Sha64BitSink._sigIndex2*/get _sigIndex2() {
      return 6;
    },
    /*sha512_slowsinks._Sha64BitSink._sigIndex3*/get _sigIndex3() {
      return 8;
    },
    /*sha512_slowsinks._Sha64BitSink._sigIndex4*/get _sigIndex4() {
      return 10;
    },
    /*sha512_slowsinks._Sha64BitSink._aIndex*/get _aIndex() {
      return 12;
    },
    /*sha512_slowsinks._Sha64BitSink._bIndex*/get _bIndex() {
      return 14;
    },
    /*sha512_slowsinks._Sha64BitSink._cIndex*/get _cIndex() {
      return 16;
    },
    /*sha512_slowsinks._Sha64BitSink._dIndex*/get _dIndex() {
      return 18;
    },
    /*sha512_slowsinks._Sha64BitSink._eIndex*/get _eIndex() {
      return 20;
    },
    /*sha512_slowsinks._Sha64BitSink._fIndex*/get _fIndex() {
      return 22;
    },
    /*sha512_slowsinks._Sha64BitSink._gIndex*/get _gIndex() {
      return 24;
    },
    /*sha512_slowsinks._Sha64BitSink._hIndex*/get _hIndex() {
      return 26;
    },
    /*sha512_slowsinks._Sha64BitSink._tmp1*/get _tmp1() {
      return 28;
    },
    /*sha512_slowsinks._Sha64BitSink._tmp2*/get _tmp2() {
      return 30;
    },
    /*sha512_slowsinks._Sha64BitSink._tmp3*/get _tmp3() {
      return 32;
    },
    /*sha512_slowsinks._Sha64BitSink._tmp4*/get _tmp4() {
      return 34;
    },
    /*sha512_slowsinks._Sha64BitSink._tmp5*/get _tmp5() {
      return 36;
    }
  }, false);
  sha512_slowsinks.Sha384Sink = class Sha384Sink extends sha512_slowsinks._Sha64BitSink {
    get digestBytes() {
      return this[S.digestBytes];
    }
    set digestBytes(value) {
      super.digestBytes = value;
    }
    static ['_#new#tearOff'](sink) {
      return new sha512_slowsinks.Sha384Sink.new(sink);
    }
  };
  (sha512_slowsinks.Sha384Sink.new = function(sink) {
    this[S.digestBytes] = 12;
    sha512_slowsinks.Sha384Sink.__proto__.new.call(this, sink, _native_typed_data.NativeUint32List.fromList(T.JSArrayOfint().of([3418070365, 3238371032, 1654270250, 914150663, 2438529370, 812702999, 355462360, 4144912697, 1731405415, 4290775857, 2394180231, 1750603025, 3675008525, 1694076839, 1203062813, 3204075428])));
    ;
  }).prototype = sha512_slowsinks.Sha384Sink.prototype;
  dart.addTypeTests(sha512_slowsinks.Sha384Sink);
  dart.addTypeCaches(sha512_slowsinks.Sha384Sink);
  dart.setLibraryUri(sha512_slowsinks.Sha384Sink, I[313]);
  dart.setFieldSignature(sha512_slowsinks.Sha384Sink, () => ({
    __proto__: dart.getFields(sha512_slowsinks.Sha384Sink.__proto__),
    digestBytes: dart.finalFieldType(core.int)
  }));
  sha512_slowsinks.Sha512Sink = class Sha512Sink extends sha512_slowsinks._Sha64BitSink {
    get digestBytes() {
      return this[S.digestBytes$1];
    }
    set digestBytes(value) {
      super.digestBytes = value;
    }
    static ['_#new#tearOff'](sink) {
      return new sha512_slowsinks.Sha512Sink.new(sink);
    }
  };
  (sha512_slowsinks.Sha512Sink.new = function(sink) {
    this[S.digestBytes$1] = 16;
    sha512_slowsinks.Sha512Sink.__proto__.new.call(this, sink, _native_typed_data.NativeUint32List.fromList(T.JSArrayOfint().of([1779033703, 4089235720, 3144134277, 2227873595, 1013904242, 4271175723, 2773480762, 1595750129, 1359893119, 2917565137, 2600822924, 725511199, 528734635, 4215389547, 1541459225, 327033209])));
    ;
  }).prototype = sha512_slowsinks.Sha512Sink.prototype;
  dart.addTypeTests(sha512_slowsinks.Sha512Sink);
  dart.addTypeCaches(sha512_slowsinks.Sha512Sink);
  dart.setLibraryUri(sha512_slowsinks.Sha512Sink, I[313]);
  dart.setFieldSignature(sha512_slowsinks.Sha512Sink, () => ({
    __proto__: dart.getFields(sha512_slowsinks.Sha512Sink.__proto__),
    digestBytes: dart.finalFieldType(core.int)
  }));
  sha512_slowsinks.Sha512224Sink = class Sha512224Sink extends sha512_slowsinks._Sha64BitSink {
    get digestBytes() {
      return this[S.digestBytes$2];
    }
    set digestBytes(value) {
      super.digestBytes = value;
    }
    static ['_#new#tearOff'](sink) {
      return new sha512_slowsinks.Sha512224Sink.new(sink);
    }
  };
  (sha512_slowsinks.Sha512224Sink.new = function(sink) {
    this[S.digestBytes$2] = 7;
    sha512_slowsinks.Sha512224Sink.__proto__.new.call(this, sink, _native_typed_data.NativeUint32List.fromList(T.JSArrayOfint().of([2352822216, 424955298, 1944164710, 2312950998, 502970286, 855612546, 1738396948, 1479516111, 258812777, 2077511080, 2011393907, 79989058, 1067287976, 1780299464, 286451373, 2446758561])));
    ;
  }).prototype = sha512_slowsinks.Sha512224Sink.prototype;
  dart.addTypeTests(sha512_slowsinks.Sha512224Sink);
  dart.addTypeCaches(sha512_slowsinks.Sha512224Sink);
  dart.setLibraryUri(sha512_slowsinks.Sha512224Sink, I[313]);
  dart.setFieldSignature(sha512_slowsinks.Sha512224Sink, () => ({
    __proto__: dart.getFields(sha512_slowsinks.Sha512224Sink.__proto__),
    digestBytes: dart.finalFieldType(core.int)
  }));
  sha512_slowsinks.Sha512256Sink = class Sha512256Sink extends sha512_slowsinks._Sha64BitSink {
    get digestBytes() {
      return this[S.digestBytes$3];
    }
    set digestBytes(value) {
      super.digestBytes = value;
    }
    static ['_#new#tearOff'](sink) {
      return new sha512_slowsinks.Sha512256Sink.new(sink);
    }
  };
  (sha512_slowsinks.Sha512256Sink.new = function(sink) {
    this[S.digestBytes$3] = 8;
    sha512_slowsinks.Sha512256Sink.__proto__.new.call(this, sink, _native_typed_data.NativeUint32List.fromList(T.JSArrayOfint().of([573645204, 4230739756, 2673172387, 3360449730, 596883563, 1867755857, 2520282905, 1497426621, 2519219938, 2827943907, 3193839141, 1401305490, 721525244, 746961066, 246885852, 2177182882])));
    ;
  }).prototype = sha512_slowsinks.Sha512256Sink.prototype;
  dart.addTypeTests(sha512_slowsinks.Sha512256Sink);
  dart.addTypeCaches(sha512_slowsinks.Sha512256Sink);
  dart.setLibraryUri(sha512_slowsinks.Sha512256Sink, I[313]);
  dart.setFieldSignature(sha512_slowsinks.Sha512256Sink, () => ({
    __proto__: dart.getFields(sha512_slowsinks.Sha512256Sink.__proto__),
    digestBytes: dart.finalFieldType(core.int)
  }));
  dart.defineLazy(sha512_slowsinks, {
    /*sha512_slowsinks._noise32*/get _noise32() {
      return _native_typed_data.NativeUint32List.fromList(T.JSArrayOfint().of([1116352408, 3609767458, 1899447441, 602891725, 3049323471, 3964484399, 3921009573, 2173295548, 961987163, 4081628472, 1508970993, 3053834265, 2453635748, 2937671579, 2870763221, 3664609560, 3624381080, 2734883394, 310598401, 1164996542, 607225278, 1323610764, 1426881987, 3590304994, 1925078388, 4068182383, 2162078206, 991336113, 2614888103, 633803317, 3248222580, 3479774868, 3835390401, 2666613458, 4022224774, 944711139, 264347078, 2341262773, 604807628, 2007800933, 770255983, 1495990901, 1249150122, 1856431235, 1555081692, 3175218132, 1996064986, 2198950837, 2554220882, 3999719339, 2821834349, 766784016, 2952996808, 2566594879, 3210313671, 3203337956, 3336571891, 1034457026, 3584528711, 2466948901, 113926993, 3758326383, 338241895, 168717936, 666307205, 1188179964, 773529912, 1546045734, 1294757372, 1522805485, 1396182291, 2643833823, 1695183700, 2343527390, 1986661051, 1014477480, 2177026350, 1206759142, 2456956037, 344077627, 2730485921, 1290863460, 2820302411, 3158454273, 3259730800, 3505952657, 3345764771, 106217008, 3516065817, 3606008344, 3600352804, 1432725776, 4094571909, 1467031594, 275423344, 851169720, 430227734, 3100823752, 506948616, 1363258195, 659060556, 3750685593, 883997877, 3785050280, 958139571, 3318307427, 1322822218, 3812723403, 1537002063, 2003034995, 1747873779, 3602036899, 1955562222, 1575990012, 2024104815, 1125592928, 2227730452, 2716904306, 2361852424, 442776044, 2428436474, 593698344, 2756734187, 3733110249, 3204031479, 2999351573, 3329325298, 3815920427, 3391569614, 3928383900, 3515267271, 566280711, 3940187606, 3454069534, 4118630271, 4000239992, 116418474, 1914138554, 174292421, 2731055270, 289380356, 3203993006, 460393269, 320620315, 685471733, 587496836, 852142971, 1086792851, 1017036298, 365543100, 1126000580, 2618297676, 1288033470, 3409855158, 1501505948, 4234509866, 1607167915, 987167468, 1816402316, 1246189591]));
    }
  }, false);
  const _is_TypedDataBuffer_default = Symbol('_is_TypedDataBuffer_default');
  typed_buffer.TypedDataBuffer$ = dart.generic(E => {
    var __t$IterableOfE = () => (__t$IterableOfE = dart.constFn(core.Iterable$(E)))();
    var __t$TypedDataBufferOfE = () => (__t$TypedDataBufferOfE = dart.constFn(typed_buffer.TypedDataBuffer$(E)))();
    class TypedDataBuffer extends collection.ListBase$(E) {
      get [S._typedBuffer]() {
        return typed_data.TypedData.as(this[S._buffer$1]);
      }
      get length() {
        return this[S._length$1];
      }
      _get(index) {
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        return this[S._buffer$1][S$.$_get](index);
      }
      _set(index, value$) {
        let value = value$;
        E.as(value);
        if (index >= this.length) dart.throw(new core.IndexError.new(index, this));
        this[S._buffer$1][S$.$_set](index, value);
        return value$;
      }
      set length(newLength) {
        if (newLength < this[S._length$1]) {
          let defaultValue = this[S._defaultValue$1];
          for (let i = newLength; i < this[S._length$1]; i = i + 1) {
            this[S._buffer$1][S$.$_set](i, defaultValue);
          }
        } else if (newLength > this[S._buffer$1][S$.$length]) {
          let newBuffer = null;
          if (this[S._buffer$1][S$.$isEmpty]) {
            newBuffer = this[S._createBuffer$1](newLength);
          } else {
            newBuffer = this[S._createBiggerBuffer](newLength);
          }
          newBuffer[S$0.$setRange](0, this[S._length$1], this[S._buffer$1]);
          this[S._buffer$1] = newBuffer;
        }
        this[S._length$1] = newLength;
      }
      [S._add$3](value) {
        let t371;
        if (this[S._length$1] === this[S._buffer$1][S$.$length]) this[S._grow$2](this[S._length$1]);
        this[S._buffer$1][S$.$_set]((t371 = this[S._length$1], this[S._length$1] = t371 + 1, t371), value);
      }
      add(element) {
        E.as(element);
        this[S._add$3](element);
      }
      addAll(values, start = 0, end = null) {
        __t$IterableOfE().as(values);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null && start > dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, null, "end"));
        }
        this[S._addAll](values, start, end);
      }
      insertAll(index, values, start = 0, end = null) {
        let t371;
        __t$IterableOfE().as(values);
        core.RangeError.checkValidIndex(index, this, "index", this[S._length$1] + 1);
        core.RangeError.checkNotNegative(start, "start");
        if (end != null) {
          if (start > dart.notNull(end)) {
            dart.throw(new core.RangeError.range(end, start, null, "end"));
          }
          if (start === end) return;
        }
        if (index === this[S._length$1]) {
          this[S._addAll](values, start, end);
          return;
        }
        if (end == null && core.List.is(values)) {
          end = values[S$.$length];
        }
        if (end != null) {
          this[S._insertKnownLength](index, values, start, end);
          return;
        }
        let writeIndex = this[S._length$1];
        let skipCount = start;
        for (let value of values) {
          if (skipCount > 0) {
            skipCount = skipCount - 1;
            continue;
          }
          if (writeIndex === this[S._buffer$1][S$.$length]) {
            this[S._grow$2](writeIndex);
          }
          this[S._buffer$1][S$.$_set]((t371 = writeIndex, writeIndex = t371 + 1, t371), value);
        }
        if (skipCount > 0) {
          dart.throw(new core.StateError.new("Too few elements"));
        }
        if (end != null && writeIndex < dart.notNull(end)) {
          dart.throw(new core.RangeError.range(end, start, writeIndex, "end"));
        }
        typed_buffer.TypedDataBuffer._reverse(this[S._buffer$1], index, this[S._length$1]);
        typed_buffer.TypedDataBuffer._reverse(this[S._buffer$1], this[S._length$1], writeIndex);
        typed_buffer.TypedDataBuffer._reverse(this[S._buffer$1], index, writeIndex);
        this[S._length$1] = writeIndex;
        return;
      }
      static _reverse(buffer, start, end) {
        end = end - 1;
        while (start < end) {
          let first = buffer[S$.$_get](start);
          let last = buffer[S$.$_get](end);
          buffer[S$.$_set](end, first);
          buffer[S$.$_set](start, last);
          start = start + 1;
          end = end - 1;
        }
      }
      [S._addAll](values, start = 0, end = null) {
        if (core.List.is(values)) end == null ? end = values[S$.$length] : null;
        if (end != null) {
          this[S._insertKnownLength](this[S._length$1], values, start, end);
          return;
        }
        let i = 0;
        for (let value of values) {
          if (i >= start) this.add(value);
          i = i + 1;
        }
        if (i < start) dart.throw(new core.StateError.new("Too few elements"));
      }
      [S._insertKnownLength](index, values, start, end) {
        if (core.List.is(values)) {
          if (start > values[S$.$length] || end > values[S$.$length]) {
            dart.throw(new core.StateError.new("Too few elements"));
          }
        }
        let valuesLength = end - start;
        let newLength = this[S._length$1] + valuesLength;
        this[S._ensureCapacity](newLength);
        this[S._buffer$1][S$0.$setRange](index + valuesLength, this[S._length$1] + valuesLength, this[S._buffer$1], index);
        this[S._buffer$1][S$0.$setRange](index, index + valuesLength, values, start);
        this[S._length$1] = newLength;
      }
      insert(index, element) {
        E.as(element);
        if (index < 0 || index > this[S._length$1]) {
          dart.throw(new core.RangeError.range(index, 0, this[S._length$1]));
        }
        if (this[S._length$1] < this[S._buffer$1][S$.$length]) {
          this[S._buffer$1][S$0.$setRange](index + 1, this[S._length$1] + 1, this[S._buffer$1], index);
          this[S._buffer$1][S$.$_set](index, element);
          this[S._length$1] = this[S._length$1] + 1;
          return;
        }
        let newBuffer = this[S._createBiggerBuffer](null);
        newBuffer[S$0.$setRange](0, index, this[S._buffer$1]);
        newBuffer[S$0.$setRange](index + 1, this[S._length$1] + 1, this[S._buffer$1], index);
        newBuffer[S$.$_set](index, element);
        this[S._length$1] = this[S._length$1] + 1;
        this[S._buffer$1] = newBuffer;
      }
      [S._ensureCapacity](requiredCapacity) {
        if (requiredCapacity <= this[S._buffer$1][S$.$length]) return;
        let newBuffer = this[S._createBiggerBuffer](requiredCapacity);
        newBuffer[S$0.$setRange](0, this[S._length$1], this[S._buffer$1]);
        this[S._buffer$1] = newBuffer;
      }
      [S._createBiggerBuffer](requiredCapacity) {
        let newLength = this[S._buffer$1][S$.$length] * 2;
        if (requiredCapacity != null && dart.notNull(newLength) < dart.notNull(requiredCapacity)) {
          newLength = requiredCapacity;
        } else if (dart.notNull(newLength) < 8) {
          newLength = 8;
        }
        return this[S._createBuffer$1](newLength);
      }
      [S._grow$2](length) {
        let t371;
        this[S._buffer$1] = (t371 = this[S._createBiggerBuffer](null), (() => {
          t371[S$0.$setRange](0, length, this[S._buffer$1]);
          return t371;
        })());
      }
      setRange(start, end, iterable, skipCount = 0) {
        __t$IterableOfE().as(iterable);
        if (end > this[S._length$1]) dart.throw(new core.RangeError.range(end, 0, this[S._length$1]));
        this[S._setRange](start, end, iterable, skipCount);
      }
      [S._setRange](start, end, source, skipCount) {
        if (__t$TypedDataBufferOfE().is(source)) {
          this[S._buffer$1][S$0.$setRange](start, end, source[S._buffer$1], skipCount);
        } else {
          this[S._buffer$1][S$0.$setRange](start, end, source, skipCount);
        }
      }
      get elementSizeInBytes() {
        return this[S._typedBuffer][S.$elementSizeInBytes];
      }
      get lengthInBytes() {
        return this[S._length$1] * this[S._typedBuffer][S.$elementSizeInBytes];
      }
      get offsetInBytes() {
        return this[S._typedBuffer][S.$offsetInBytes];
      }
      get buffer() {
        return this[S._typedBuffer][S.$buffer];
      }
    }
    (TypedDataBuffer.new = function(buffer) {
      this[S._buffer$1] = buffer;
      this[S._length$1] = buffer[S$.$length];
      ;
    }).prototype = TypedDataBuffer.prototype;
    dart.addTypeTests(TypedDataBuffer);
    TypedDataBuffer.prototype[_is_TypedDataBuffer_default] = true;
    dart.addTypeCaches(TypedDataBuffer);
    dart.setMethodSignature(TypedDataBuffer, () => ({
      __proto__: dart.getMethods(TypedDataBuffer.__proto__),
      _get: dart.fnType(E, [core.int]),
      [S$.$_get]: dart.fnType(E, [core.int]),
      _set: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [S$.$_set]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)]),
      [S._add$3]: dart.fnType(dart.void, [E]),
      addAll: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [S$.$addAll]: dart.fnType(dart.void, [dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      insertAll: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [S.$insertAll]: dart.fnType(dart.void, [core.int, dart.nullable(core.Object)], [core.int, dart.nullable(core.int)]),
      [S._addAll]: dart.fnType(dart.void, [core.Iterable$(E)], [core.int, dart.nullable(core.int)]),
      [S._insertKnownLength]: dart.fnType(dart.void, [core.int, core.Iterable$(E), core.int, core.int]),
      [S._ensureCapacity]: dart.fnType(dart.void, [core.int]),
      [S._createBiggerBuffer]: dart.fnType(core.List$(E), [dart.nullable(core.int)]),
      [S._grow$2]: dart.fnType(dart.void, [core.int]),
      [S._setRange]: dart.fnType(dart.void, [core.int, core.int, core.Iterable$(E), core.int])
    }));
    dart.setStaticMethodSignature(TypedDataBuffer, () => ['_reverse']);
    dart.setGetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getGetters(TypedDataBuffer.__proto__),
      [S._typedBuffer]: typed_data.TypedData,
      length: core.int,
      [S$.$length]: core.int,
      elementSizeInBytes: core.int,
      lengthInBytes: core.int,
      offsetInBytes: core.int,
      buffer: typed_data.ByteBuffer
    }));
    dart.setSetterSignature(TypedDataBuffer, () => ({
      __proto__: dart.getSetters(TypedDataBuffer.__proto__),
      length: core.int,
      [S$.$length]: core.int
    }));
    dart.setLibraryUri(TypedDataBuffer, I[314]);
    dart.setFieldSignature(TypedDataBuffer, () => ({
      __proto__: dart.getFields(TypedDataBuffer.__proto__),
      [S._buffer$1]: dart.fieldType(core.List$(E)),
      [S._length$1]: dart.fieldType(core.int)
    }));
    dart.setStaticFieldSignature(TypedDataBuffer, () => ['_initialLength']);
    dart.defineExtensionMethods(TypedDataBuffer, [
      '_get',
      '_set',
      'add',
      'addAll',
      'insertAll',
      'insert',
      'setRange'
    ]);
    dart.defineExtensionAccessors(TypedDataBuffer, ['length']);
    return TypedDataBuffer;
  });
  typed_buffer.TypedDataBuffer = typed_buffer.TypedDataBuffer$();
  dart.defineLazy(typed_buffer.TypedDataBuffer, {
    /*typed_buffer.TypedDataBuffer._initialLength*/get _initialLength() {
      return 8;
    }
  }, false);
  dart.addTypeTests(typed_buffer.TypedDataBuffer, _is_TypedDataBuffer_default);
  typed_buffer._IntBuffer = class _IntBuffer extends typed_buffer.TypedDataBuffer$(core.int) {
    get [S._defaultValue$1]() {
      return 0;
    }
  };
  (typed_buffer._IntBuffer.new = function(buffer) {
    typed_buffer._IntBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._IntBuffer.prototype;
  dart.addTypeTests(typed_buffer._IntBuffer);
  dart.addTypeCaches(typed_buffer._IntBuffer);
  dart.setGetterSignature(typed_buffer._IntBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._IntBuffer.__proto__),
    [S._defaultValue$1]: core.int
  }));
  dart.setLibraryUri(typed_buffer._IntBuffer, I[314]);
  typed_buffer._FloatBuffer = class _FloatBuffer extends typed_buffer.TypedDataBuffer$(core.double) {
    get [S._defaultValue$1]() {
      return 0;
    }
  };
  (typed_buffer._FloatBuffer.new = function(buffer) {
    typed_buffer._FloatBuffer.__proto__.new.call(this, buffer);
    ;
  }).prototype = typed_buffer._FloatBuffer.prototype;
  dart.addTypeTests(typed_buffer._FloatBuffer);
  dart.addTypeCaches(typed_buffer._FloatBuffer);
  dart.setGetterSignature(typed_buffer._FloatBuffer, () => ({
    __proto__: dart.getGetters(typed_buffer._FloatBuffer.__proto__),
    [S._defaultValue$1]: core.double
  }));
  dart.setLibraryUri(typed_buffer._FloatBuffer, I[314]);
  typed_buffer.Uint8Buffer = class Uint8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint8List.new(size);
    }
  };
  (typed_buffer.Uint8Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint8Buffer.__proto__.new.call(this, _native_typed_data.NativeUint8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8Buffer);
  dart.addTypeCaches(typed_buffer.Uint8Buffer);
  dart.setMethodSignature(typed_buffer.Uint8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8Buffer, I[314]);
  typed_buffer.Int8Buffer = class Int8Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int8Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeInt8List.new(size);
    }
  };
  (typed_buffer.Int8Buffer.new = function(initialLength = 0) {
    typed_buffer.Int8Buffer.__proto__.new.call(this, _native_typed_data.NativeInt8List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int8Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int8Buffer);
  dart.addTypeCaches(typed_buffer.Int8Buffer);
  dart.setMethodSignature(typed_buffer.Int8Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int8Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int8List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int8Buffer, I[314]);
  typed_buffer.Uint8ClampedBuffer = class Uint8ClampedBuffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint8ClampedBuffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint8ClampedList.new(size);
    }
  };
  (typed_buffer.Uint8ClampedBuffer.new = function(initialLength = 0) {
    typed_buffer.Uint8ClampedBuffer.__proto__.new.call(this, _native_typed_data.NativeUint8ClampedList.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint8ClampedBuffer.prototype;
  dart.addTypeTests(typed_buffer.Uint8ClampedBuffer);
  dart.addTypeCaches(typed_buffer.Uint8ClampedBuffer);
  dart.setMethodSignature(typed_buffer.Uint8ClampedBuffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint8ClampedBuffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint8ClampedList, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint8ClampedBuffer, I[314]);
  typed_buffer.Uint16Buffer = class Uint16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint16Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint16List.new(size);
    }
  };
  (typed_buffer.Uint16Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint16Buffer.__proto__.new.call(this, _native_typed_data.NativeUint16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint16Buffer);
  dart.addTypeCaches(typed_buffer.Uint16Buffer);
  dart.setMethodSignature(typed_buffer.Uint16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint16Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint16Buffer, I[314]);
  typed_buffer.Int16Buffer = class Int16Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int16Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeInt16List.new(size);
    }
  };
  (typed_buffer.Int16Buffer.new = function(initialLength = 0) {
    typed_buffer.Int16Buffer.__proto__.new.call(this, _native_typed_data.NativeInt16List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int16Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int16Buffer);
  dart.addTypeCaches(typed_buffer.Int16Buffer);
  dart.setMethodSignature(typed_buffer.Int16Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int16Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int16List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int16Buffer, I[314]);
  typed_buffer.Uint32Buffer = class Uint32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint32Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeUint32List.new(size);
    }
  };
  (typed_buffer.Uint32Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint32Buffer.__proto__.new.call(this, _native_typed_data.NativeUint32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint32Buffer);
  dart.addTypeCaches(typed_buffer.Uint32Buffer);
  dart.setMethodSignature(typed_buffer.Uint32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint32Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint32Buffer, I[314]);
  typed_buffer.Int32Buffer = class Int32Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeInt32List.new(size);
    }
  };
  (typed_buffer.Int32Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32Buffer.__proto__.new.call(this, _native_typed_data.NativeInt32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32Buffer);
  dart.addTypeCaches(typed_buffer.Int32Buffer);
  dart.setMethodSignature(typed_buffer.Int32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int32Buffer, I[314]);
  typed_buffer.Uint64Buffer = class Uint64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Uint64Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return typed_data.Uint64List.new(size);
    }
  };
  (typed_buffer.Uint64Buffer.new = function(initialLength = 0) {
    typed_buffer.Uint64Buffer.__proto__.new.call(this, typed_data.Uint64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Uint64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Uint64Buffer);
  dart.addTypeCaches(typed_buffer.Uint64Buffer);
  dart.setMethodSignature(typed_buffer.Uint64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Uint64Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Uint64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Uint64Buffer, I[314]);
  typed_buffer.Int64Buffer = class Int64Buffer extends typed_buffer._IntBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int64Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return typed_data.Int64List.new(size);
    }
  };
  (typed_buffer.Int64Buffer.new = function(initialLength = 0) {
    typed_buffer.Int64Buffer.__proto__.new.call(this, typed_data.Int64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int64Buffer);
  dart.addTypeCaches(typed_buffer.Int64Buffer);
  dart.setMethodSignature(typed_buffer.Int64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int64Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Int64Buffer, I[314]);
  typed_buffer.Float32Buffer = class Float32Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeFloat32List.new(size);
    }
  };
  (typed_buffer.Float32Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat32List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32Buffer);
  dart.addTypeCaches(typed_buffer.Float32Buffer);
  dart.setMethodSignature(typed_buffer.Float32Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Float32List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float32Buffer, I[314]);
  typed_buffer.Float64Buffer = class Float64Buffer extends typed_buffer._FloatBuffer {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float64Buffer.new(initialLength);
    }
    [S._createBuffer$1](size) {
      return _native_typed_data.NativeFloat64List.new(size);
    }
  };
  (typed_buffer.Float64Buffer.new = function(initialLength = 0) {
    typed_buffer.Float64Buffer.__proto__.new.call(this, _native_typed_data.NativeFloat64List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float64Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float64Buffer);
  dart.addTypeCaches(typed_buffer.Float64Buffer);
  dart.setMethodSignature(typed_buffer.Float64Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float64Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Float64List, [core.int])
  }));
  dart.setLibraryUri(typed_buffer.Float64Buffer, I[314]);
  typed_buffer.Int32x4Buffer = class Int32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Int32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Int32x4Buffer.new(initialLength);
    }
    get [S._defaultValue$1]() {
      return typed_buffer.Int32x4Buffer._zero;
    }
    [S._createBuffer$1](size) {
      return new _native_typed_data.NativeInt32x4List.new(size);
    }
  };
  (typed_buffer.Int32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Int32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeInt32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Int32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Int32x4Buffer);
  dart.addTypeCaches(typed_buffer.Int32x4Buffer);
  dart.setMethodSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Int32x4Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Int32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Int32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Int32x4Buffer.__proto__),
    [S._defaultValue$1]: typed_data.Int32x4
  }));
  dart.setLibraryUri(typed_buffer.Int32x4Buffer, I[314]);
  dart.setStaticFieldSignature(typed_buffer.Int32x4Buffer, () => ['_zero']);
  dart.defineLazy(typed_buffer.Int32x4Buffer, {
    /*typed_buffer.Int32x4Buffer._zero*/get _zero() {
      return new _native_typed_data.NativeInt32x4.new(0, 0, 0, 0);
    }
  }, false);
  typed_buffer.Float32x4Buffer = class Float32x4Buffer extends typed_buffer.TypedDataBuffer$(typed_data.Float32x4) {
    static ['_#new#tearOff'](initialLength = 0) {
      return new typed_buffer.Float32x4Buffer.new(initialLength);
    }
    get [S._defaultValue$1]() {
      return new _native_typed_data.NativeFloat32x4.zero();
    }
    [S._createBuffer$1](size) {
      return new _native_typed_data.NativeFloat32x4List.new(size);
    }
  };
  (typed_buffer.Float32x4Buffer.new = function(initialLength = 0) {
    typed_buffer.Float32x4Buffer.__proto__.new.call(this, new _native_typed_data.NativeFloat32x4List.new(initialLength));
    ;
  }).prototype = typed_buffer.Float32x4Buffer.prototype;
  dart.addTypeTests(typed_buffer.Float32x4Buffer);
  dart.addTypeCaches(typed_buffer.Float32x4Buffer);
  dart.setMethodSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getMethods(typed_buffer.Float32x4Buffer.__proto__),
    [S._createBuffer$1]: dart.fnType(typed_data.Float32x4List, [core.int])
  }));
  dart.setGetterSignature(typed_buffer.Float32x4Buffer, () => ({
    __proto__: dart.getGetters(typed_buffer.Float32x4Buffer.__proto__),
    [S._defaultValue$1]: typed_data.Float32x4
  }));
  dart.setLibraryUri(typed_buffer.Float32x4Buffer, I[314]);
  method_channel_task_snapshot.MethodChannelTaskSnapshot = class MethodChannelTaskSnapshot extends platform_interface_task_snapshot.TaskSnapshotPlatform {
    get storage() {
      return this[S.storage$7];
    }
    set storage(value) {
      super.storage = value;
    }
    static ['_#new#tearOff'](storage, state, _data) {
      return new method_channel_task_snapshot.MethodChannelTaskSnapshot.new(storage, state, _data);
    }
    get ref() {
      return new method_channel_reference.MethodChannelReference.new(this.storage, core.String.as(this[S._data$6][S$.$_get]("path")));
    }
  };
  (method_channel_task_snapshot.MethodChannelTaskSnapshot.new = function(storage, state, _data) {
    this[S.storage$7] = storage;
    this[S._data$6] = _data;
    method_channel_task_snapshot.MethodChannelTaskSnapshot.__proto__.new.call(this, state, _data);
    ;
  }).prototype = method_channel_task_snapshot.MethodChannelTaskSnapshot.prototype;
  dart.addTypeTests(method_channel_task_snapshot.MethodChannelTaskSnapshot);
  dart.addTypeCaches(method_channel_task_snapshot.MethodChannelTaskSnapshot);
  dart.setLibraryUri(method_channel_task_snapshot.MethodChannelTaskSnapshot, I[315]);
  dart.setFieldSignature(method_channel_task_snapshot.MethodChannelTaskSnapshot, () => ({
    __proto__: dart.getFields(method_channel_task_snapshot.MethodChannelTaskSnapshot.__proto__),
    storage: dart.finalFieldType(platform_interface_firebase_storage.FirebaseStoragePlatform),
    [S._data$6]: dart.finalFieldType(core.Map$(core.String, dart.dynamic))
  }));
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:firebase_auth/firebase_auth.dart": firebase_auth,
    "package:firebase_core/firebase_core.dart": firebase_core,
    "package:provider/provider.dart": provider,
    "file:///zapp/project/lib/provider/user_provider.dart": user_provider,
    "file:///zapp/project/lib/responsive/mobile_screen_layout.dart": mobile_screen_layout,
    "file:///zapp/project/lib/screens/login_screen.dart": login_screen,
    "package:cloud_firestore_web/cloud_firestore_web.dart": cloud_firestore_web,
    "package:file_picker/_internal/file_picker_web.dart": file_picker_web,
    "package:firebase_auth_web/firebase_auth_web.dart": firebase_auth_web,
    "package:firebase_core_web/firebase_core_web.dart": firebase_core_web,
    "package:firebase_storage_web/firebase_storage_web.dart": firebase_storage_web,
    "package:image_picker_for_web/image_picker_for_web.dart": image_picker_for_web,
    "package:firebase_auth_platform_interface/firebase_auth_platform_interface.dart": firebase_auth_platform_interface,
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart": firebase_core_platform_interface,
    "package:provider/src/async_provider.dart": async_provider,
    "package:provider/src/change_notifier_provider.dart": change_notifier_provider,
    "package:provider/src/consumer.dart": consumer,
    "package:provider/src/listenable_provider.dart": listenable_provider,
    "package:provider/src/provider.dart": provider$,
    "package:provider/src/proxy_provider.dart": proxy_provider,
    "package:provider/src/reassemble_handler.dart": reassemble_handler,
    "package:provider/src/selector.dart": selector$,
    "package:provider/src/value_listenable_provider.dart": value_listenable_provider,
    "file:///zapp/project/lib/model/user.dart": user$,
    "file:///zapp/project/lib/resources/auth_methods.dart": auth_methods,
    "file:///zapp/project/lib/utils/colors.dart": colors$0,
    "file:///zapp/project/lib/utils/global_variable.dart": global_variable,
    "file:///zapp/project/lib/utils/utils.dart": utils,
    "file:///zapp/project/lib/screens/signup_screen.dart": signup_screen,
    "package:cloud_firestore_platform_interface/cloud_firestore_platform_interface.dart": cloud_firestore_platform_interface,
    "package:cloud_firestore_web/src/internals.dart": internals,
    "package:cloud_firestore_web/src/load_bundle_task_web.dart": load_bundle_task_web,
    "package:cloud_firestore_web/src/utils/web_utils.dart": web_utils,
    "package:firebase_core_web/firebase_core_web_interop.dart": firebase_core_web_interop,
    "package:cloud_firestore_web/src/collection_reference_web.dart": collection_reference_web,
    "package:cloud_firestore_web/src/document_reference_web.dart": document_reference_web,
    "package:cloud_firestore_web/src/field_value_factory_web.dart": field_value_factory_web,
    "package:cloud_firestore_web/src/interop/firestore.dart": firestore$,
    "package:cloud_firestore_web/src/query_web.dart": query_web,
    "package:cloud_firestore_web/src/transaction_web.dart": transaction_web,
    "package:cloud_firestore_web/src/write_batch_web.dart": write_batch_web,
    "package:file_picker/file_picker.dart": file_picker,
    "package:firebase_auth_web/src/firebase_auth_web_multi_factor.dart": firebase_auth_web_multi_factor,
    "package:firebase_auth_web/src/interop/utils/utils.dart": utils$,
    "package:firebase_auth_web/src/utils/web_utils.dart": web_utils$,
    "package:firebase_auth_web/src/firebase_auth_web_confirmation_result.dart": firebase_auth_web_confirmation_result,
    "package:firebase_auth_web/src/firebase_auth_web_recaptcha_verifier_factory.dart": firebase_auth_web_recaptcha_verifier_factory,
    "package:firebase_auth_web/src/firebase_auth_web_user.dart": firebase_auth_web_user,
    "package:firebase_auth_web/src/firebase_auth_web_user_credential.dart": firebase_auth_web_user_credential,
    "package:firebase_auth_web/src/interop/auth.dart": auth$,
    "package:firebase_auth_web/src/interop/multi_factor.dart": multi_factor,
    "package:firebase_core_web/src/interop/js.dart": js$,
    "package:firebase_core_web/src/interop/core.dart": core$,
    "package:firebase_storage_web/src/firebase_storage_web.dart": firebase_storage_web$,
    "package:image_picker_platform_interface/image_picker_platform_interface.dart": image_picker_platform_interface,
    "package:mime/mime.dart": mime,
    "package:image_picker_for_web/src/image_resizer.dart": image_resizer,
    "package:firebase_auth_platform_interface/src/action_code_info.dart": action_code_info,
    "package:firebase_auth_platform_interface/src/action_code_settings.dart": action_code_settings,
    "package:firebase_auth_platform_interface/src/additional_user_info.dart": additional_user_info,
    "package:firebase_auth_platform_interface/src/auth_credential.dart": auth_credential,
    "package:firebase_auth_platform_interface/src/auth_provider.dart": auth_provider,
    "package:firebase_auth_platform_interface/src/firebase_auth_exception.dart": firebase_auth_exception,
    "package:firebase_auth_platform_interface/src/firebase_auth_multi_factor_exception.dart": firebase_auth_multi_factor_exception,
    "package:firebase_auth_platform_interface/src/id_token_result.dart": id_token_result,
    "package:firebase_auth_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_confirmation_result.dart": platform_interface_confirmation_result,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_firebase_auth.dart": platform_interface_firebase_auth,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_multi_factor.dart": platform_interface_multi_factor,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart": platform_interface_recaptcha_verifier_factory,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user.dart": platform_interface_user,
    "package:firebase_auth_platform_interface/src/platform_interface/platform_interface_user_credential.dart": platform_interface_user_credential,
    "package:firebase_auth_platform_interface/src/providers/apple_auth.dart": apple_auth,
    "package:firebase_auth_platform_interface/src/providers/email_auth.dart": email_auth,
    "package:firebase_auth_platform_interface/src/providers/facebook_auth.dart": facebook_auth,
    "package:firebase_auth_platform_interface/src/providers/github_auth.dart": github_auth,
    "package:firebase_auth_platform_interface/src/providers/google_auth.dart": google_auth,
    "package:firebase_auth_platform_interface/src/providers/microsoft_auth.dart": microsoft_auth,
    "package:firebase_auth_platform_interface/src/providers/oauth.dart": oauth,
    "package:firebase_auth_platform_interface/src/providers/phone_auth.dart": phone_auth,
    "package:firebase_auth_platform_interface/src/providers/saml_auth.dart": saml_auth,
    "package:firebase_auth_platform_interface/src/providers/twitter_auth.dart": twitter_auth,
    "package:firebase_auth_platform_interface/src/providers/yahoo_auth.dart": yahoo_auth,
    "package:firebase_auth_platform_interface/src/types.dart": types,
    "package:firebase_auth_platform_interface/src/user_info.dart": user_info,
    "package:firebase_auth_platform_interface/src/user_metadata.dart": user_metadata,
    "package:firebase_core_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon$,
    "package:plugin_platform_interface/plugin_platform_interface.dart": plugin_platform_interface,
    "package:firebase_core_platform_interface/src/pigeon/mocks.dart": mocks,
    "package:firebase_core_platform_interface/src/pigeon/test_api.dart": test_api,
    "package:nested/nested.dart": nested,
    "package:cloud_firestore/cloud_firestore.dart": cloud_firestore,
    "file:///zapp/project/lib/resources/storage_methods.dart": storage_methods,
    "file:///zapp/project/lib/screens/add_post_screen.dart": add_post_screen,
    "file:///zapp/project/lib/screens/feed_screen.dart": feed_screen,
    "file:///zapp/project/lib/screens/profile_screen.dart": profile_screen,
    "file:///zapp/project/lib/screens/search_screen.dart": search_screen,
    "package:image_picker/image_picker.dart": image_picker,
    "package:cloud_firestore_platform_interface/src/internal/pointer.dart": pointer,
    "package:cloud_firestore_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon$0,
    "package:cloud_firestore_platform_interface/src/blob.dart": blob,
    "package:cloud_firestore_platform_interface/src/field_path.dart": field_path,
    "package:cloud_firestore_platform_interface/src/field_path_type.dart": field_path_type,
    "package:cloud_firestore_platform_interface/src/filters.dart": filters,
    "package:cloud_firestore_platform_interface/src/geo_point.dart": geo_point,
    "package:cloud_firestore_platform_interface/src/get_options.dart": get_options,
    "package:cloud_firestore_platform_interface/src/load_bundle_task_state.dart": load_bundle_task_state,
    "package:cloud_firestore_platform_interface/src/persistence_settings.dart": persistence_settings,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_aggregate_query.dart": platform_interface_aggregate_query,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_aggregate_query_snapshot.dart": platform_interface_aggregate_query_snapshot,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_collection_reference.dart": platform_interface_collection_reference,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_change.dart": platform_interface_document_change,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_reference.dart": platform_interface_document_reference,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_document_snapshot.dart": platform_interface_document_snapshot,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value.dart": platform_interface_field_value,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_field_value_factory.dart": platform_interface_field_value_factory,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_firestore.dart": platform_interface_firestore,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_index_definitions.dart": platform_interface_index_definitions,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task.dart": platform_interface_load_bundle_task,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_load_bundle_task_snapshot.dart": platform_interface_load_bundle_task_snapshot,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query.dart": platform_interface_query,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_query_snapshot.dart": platform_interface_query_snapshot,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_transaction.dart": platform_interface_transaction,
    "package:cloud_firestore_platform_interface/src/platform_interface/platform_interface_write_batch.dart": platform_interface_write_batch,
    "package:cloud_firestore_platform_interface/src/platform_interface/utils/load_bundle_task_state.dart": load_bundle_task_state$,
    "package:cloud_firestore_platform_interface/src/set_options.dart": set_options,
    "package:cloud_firestore_platform_interface/src/settings.dart": settings,
    "package:cloud_firestore_platform_interface/src/snapshot_metadata.dart": snapshot_metadata,
    "package:cloud_firestore_platform_interface/src/timestamp.dart": timestamp,
    "package:_flutterfire_internals/_flutterfire_internals.dart": _flutterfire_internals,
    "package:cloud_firestore_web/src/interop/firestore_interop.dart": firestore_interop,
    "package:cloud_firestore_web/src/utils/decode_utility.dart": decode_utility,
    "package:firebase_core_web/src/interop/utils/es6_interop.dart": es6_interop,
    "package:firebase_core_web/src/interop/utils/func.dart": func,
    "package:firebase_core_web/src/interop/utils/js.dart": js$0,
    "package:firebase_core_web/src/interop/utils/js_interop.dart": js_interop,
    "package:firebase_core_web/src/interop/utils/utils.dart": utils$0,
    "package:cloud_firestore_web/src/utils/encode_utility.dart": encode_utility,
    "package:cloud_firestore_web/src/field_value_web.dart": field_value_web,
    "package:cloud_firestore_web/src/interop/utils/utils.dart": utils$1,
    "package:cloud_firestore_web/src/aggregate_query_web.dart": aggregate_query_web,
    "package:file_picker/src/file_picker.dart": file_picker$,
    "package:file_picker/src/platform_file.dart": platform_file,
    "package:file_picker/src/file_picker_result.dart": file_picker_result,
    "package:firebase_auth_web/src/interop/window_interop.dart": window_interop,
    "package:http_parser/http_parser.dart": http_parser,
    "package:firebase_auth_web/src/interop/auth_interop.dart": auth_interop,
    "package:firebase_core_web/src/interop/app.dart": app$,
    "package:firebase_core_web/src/interop/core_interop.dart": core_interop,
    "package:firebase_core_web/src/interop/app_interop.dart": app_interop,
    "package:firebase_storage_platform_interface/firebase_storage_platform_interface.dart": firebase_storage_platform_interface,
    "package:firebase_storage_web/src/interop/storage.dart": storage,
    "package:firebase_storage_web/src/reference_web.dart": reference_web,
    "package:firebase_storage_web/src/utils/errors.dart": errors,
    "package:cross_file/cross_file.dart": cross_file,
    "package:image_picker_platform_interface/src/platform_interface/image_picker_platform.dart": image_picker_platform,
    "package:image_picker_platform_interface/src/types/types.dart": types$,
    "package:mime/src/mime_multipart_transformer.dart": mime_multipart_transformer,
    "package:mime/src/mime_shared.dart": mime_shared,
    "package:mime/src/mime_type.dart": mime_type,
    "package:image_picker_for_web/src/image_resizer_utils.dart": image_resizer_utils,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_firebase_auth.dart": method_channel_firebase_auth,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_multi_factor.dart": method_channel_multi_factor,
    "package:firebase_storage/firebase_storage.dart": firebase_storage,
    "package:uuid/uuid.dart": uuid,
    "file:///zapp/project/lib/resources/firestore_methods.dart": firestore_methods,
    "file:///zapp/project/lib/utils/dimensions.dart": dimensions,
    "file:///zapp/project/lib/widgets/post_card.dart": post_card,
    "file:///zapp/project/lib/widgets/follow_button.dart": follow_button,
    "package:flutter_staggered_grid_view/flutter_staggered_grid_view.dart": flutter_staggered_grid_view,
    "package:cloud_firestore_platform_interface/src/method_channel/utils/firestore_message_codec.dart": firestore_message_codec,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value_factory.dart": method_channel_field_value_factory,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_firestore.dart": method_channel_firestore,
    "package:_flutterfire_internals/src/exception.dart": exception$,
    "package:file_picker/src/file_picker_io.dart": file_picker_io,
    "package:file_picker/src/file_picker_macos.dart": file_picker_macos,
    "package:file_picker/src/linux/file_picker_linux.dart": file_picker_linux,
    "package:file_picker/src/windows/stub.dart": stub,
    "package:http_parser/src/authentication_challenge.dart": authentication_challenge,
    "package:http_parser/src/case_insensitive_map.dart": case_insensitive_map,
    "package:http_parser/src/chunked_coding.dart": chunked_coding,
    "package:http_parser/src/http_date.dart": http_date,
    "package:http_parser/src/media_type.dart": media_type,
    "package:firebase_storage_platform_interface/src/full_metadata.dart": full_metadata,
    "package:firebase_storage_platform_interface/src/list_options.dart": list_options,
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_firebase_storage.dart": platform_interface_firebase_storage,
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_list_result.dart": platform_interface_list_result,
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_reference.dart": platform_interface_reference,
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_task.dart": platform_interface_task,
    "package:firebase_storage_platform_interface/src/platform_interface/platform_interface_task_snapshot.dart": platform_interface_task_snapshot,
    "package:firebase_storage_platform_interface/src/put_string_format.dart": put_string_format,
    "package:firebase_storage_platform_interface/src/settable_metadata.dart": settable_metadata,
    "package:firebase_storage_platform_interface/src/task_state.dart": task_state,
    "package:firebase_storage_web/src/interop/storage_interop.dart": storage_interop,
    "package:http/http.dart": http,
    "package:firebase_storage_web/src/utils/metadata.dart": metadata$,
    "package:firebase_storage_web/src/task_web.dart": task_web,
    "package:firebase_storage_web/src/utils/list.dart": list,
    "package:firebase_storage_web/src/utils/metadata_cache.dart": metadata_cache,
    "package:cross_file/src/x_file.dart": x_file,
    "package:image_picker_platform_interface/src/method_channel/method_channel_image_picker.dart": method_channel_image_picker,
    "package:image_picker_platform_interface/src/types/camera_delegate.dart": camera_delegate,
    "package:image_picker_platform_interface/src/types/camera_device.dart": camera_device,
    "package:image_picker_platform_interface/src/types/image_options.dart": image_options,
    "package:image_picker_platform_interface/src/types/image_source.dart": image_source,
    "package:image_picker_platform_interface/src/types/lost_data_response.dart": lost_data_response,
    "package:image_picker_platform_interface/src/types/media_options.dart": media_options,
    "package:image_picker_platform_interface/src/types/media_selection_type.dart": media_selection_type,
    "package:image_picker_platform_interface/src/types/multi_image_picker_options.dart": multi_image_picker_options,
    "package:image_picker_platform_interface/src/types/picked_file/picked_file.dart": picked_file,
    "package:image_picker_platform_interface/src/types/retrieve_type.dart": retrieve_type,
    "package:mime/src/bound_multipart_stream.dart": bound_multipart_stream,
    "package:mime/src/char_code.dart": char_code,
    "package:mime/src/default_extension_map.dart": default_extension_map,
    "package:mime/src/magic_number.dart": magic_number,
    "package:firebase_auth_platform_interface/src/method_channel/utils/convert_auth_provider.dart": convert_auth_provider,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user.dart": method_channel_user,
    "package:firebase_auth_platform_interface/src/method_channel/method_channel_user_credential.dart": method_channel_user_credential,
    "package:firebase_auth_platform_interface/src/method_channel/utils/exception.dart": exception$0,
    "package:firebase_auth_platform_interface/src/method_channel/utils/pigeon_helper.dart": pigeon_helper,
    "package:firebase_storage/src/utils.dart": utils$2,
    "package:uuid/data.dart": data,
    "package:uuid/rng.dart": rng$,
    "package:uuid/validation.dart": validation,
    "package:uuid/enums.dart": enums,
    "package:uuid/parsing.dart": parsing,
    "package:uuid/uuid_value.dart": uuid_value,
    "package:uuid/v1.dart": v1,
    "package:uuid/v4.dart": v4,
    "package:uuid/v5.dart": v5,
    "package:uuid/v6.dart": v6,
    "package:uuid/v7.dart": v7,
    "package:uuid/v8.dart": v8,
    "file:///zapp/project/lib/model/post.dart": post$,
    "file:///zapp/project/lib/screens/comments_screen.dart": comments_screen,
    "file:///zapp/project/lib/widgets/like_animation.dart": like_animation,
    "package:flutter_staggered_grid_view/src/layouts/quilted.dart": quilted,
    "package:flutter_staggered_grid_view/src/layouts/staired.dart": staired,
    "package:flutter_staggered_grid_view/src/layouts/woven.dart": woven,
    "package:flutter_staggered_grid_view/src/rendering/sliver_masonry_grid.dart": sliver_masonry_grid,
    "package:flutter_staggered_grid_view/src/rendering/sliver_simple_grid_delegate.dart": sliver_simple_grid_delegate,
    "package:flutter_staggered_grid_view/src/widgets/aligned_grid_view.dart": aligned_grid_view,
    "package:flutter_staggered_grid_view/src/widgets/masonry_grid_view.dart": masonry_grid_view,
    "package:flutter_staggered_grid_view/src/widgets/sliver_aligned_grid.dart": sliver_aligned_grid,
    "package:flutter_staggered_grid_view/src/widgets/sliver_masonry_grid.dart": sliver_masonry_grid$,
    "package:flutter_staggered_grid_view/src/widgets/staggered_grid.dart": staggered_grid,
    "package:flutter_staggered_grid_view/src/widgets/staggered_grid_tile.dart": staggered_grid_tile,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_field_value.dart": method_channel_field_value,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query.dart": method_channel_query,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_load_bundle_task.dart": method_channel_load_bundle_task,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_query_snapshot.dart": method_channel_query_snapshot,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_collection_reference.dart": method_channel_collection_reference,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_reference.dart": method_channel_document_reference,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_transaction.dart": method_channel_transaction,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_write_batch.dart": method_channel_write_batch,
    "package:cloud_firestore_platform_interface/src/method_channel/utils/exception.dart": exception,
    "package:file_picker/src/utils.dart": utils$3,
    "package:file_picker/src/linux/dialog_handler.dart": dialog_handler,
    "package:http_parser/src/scan.dart": scan,
    "package:http_parser/src/utils.dart": utils$4,
    "package:http_parser/src/chunked_coding/decoder.dart": decoder,
    "package:http_parser/src/chunked_coding/encoder.dart": encoder,
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_firebase_storage.dart": method_channel_firebase_storage,
    "package:firebase_storage_platform_interface/src/internal/pointer.dart": pointer$,
    "package:http/src/client.dart": client$,
    "package:http/src/exception.dart": exception$1,
    "package:http/src/request.dart": request$,
    "package:http/src/response.dart": response$,
    "package:http/src/streamed_request.dart": streamed_request,
    "package:http/src/base_client.dart": base_client,
    "package:http/src/base_request.dart": base_request,
    "package:http/src/base_response.dart": base_response,
    "package:http/src/byte_stream.dart": byte_stream,
    "package:http/src/multipart_file.dart": multipart_file,
    "package:http/src/multipart_request.dart": multipart_request,
    "package:http/src/streamed_response.dart": streamed_response,
    "package:firebase_storage_web/src/utils/task.dart": task,
    "package:firebase_storage_web/src/list_result_web.dart": list_result_web,
    "package:cross_file/src/types/html.dart": html$,
    "package:image_picker_platform_interface/src/types/picked_file/lost_data.dart": lost_data,
    "package:image_picker_platform_interface/src/types/picked_file/html.dart": html$0,
    "package:crypto/crypto.dart": crypto,
    "package:sprintf/sprintf.dart": sprintf,
    "file:///zapp/project/lib/widgets/comment_card.dart": comment_card,
    "package:flutter_staggered_grid_view/src/foundation/extensions.dart": extensions,
    "package:flutter_staggered_grid_view/src/foundation/constants.dart": constants,
    "package:flutter_staggered_grid_view/src/layouts/sliver_patterned_grid_delegate.dart": sliver_patterned_grid_delegate,
    "package:flutter_staggered_grid_view/src/widgets/uniform_track.dart": uniform_track,
    "package:flutter_staggered_grid_view/src/rendering/staggered_grid.dart": staggered_grid$,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_aggregate_query.dart": method_channel_aggregate_query,
    "package:cloud_firestore_platform_interface/src/method_channel/method_channel_document_change.dart": method_channel_document_change,
    "package:cloud_firestore_platform_interface/src/method_channel/utils/auto_id_generator.dart": auto_id_generator,
    "package:file_picker/src/linux/kdialog_handler.dart": kdialog_handler,
    "package:file_picker/src/linux/qarma_and_zenity_handler.dart": qarma_and_zenity_handler,
    "package:typed_data/typed_data.dart": typed_data$,
    "package:http_parser/src/chunked_coding/charcodes.dart": charcodes,
    "package:firebase_storage_platform_interface/src/pigeon/messages.pigeon.dart": messages$46pigeon$1,
    "package:firebase_storage_platform_interface/src/method_channel/utils/exception.dart": exception$2,
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_reference.dart": method_channel_reference,
    "package:http/src/browser_client.dart": browser_client,
    "package:http/src/utils.dart": utils$5,
    "package:http/src/multipart_file_stub.dart": multipart_file_stub,
    "package:http/src/boundary_characters.dart": boundary_characters,
    "package:firebase_storage_web/src/task_snapshot_web.dart": task_snapshot_web,
    "package:cross_file/src/web_helpers/web_helpers.dart": web_helpers,
    "package:cross_file/src/types/base.dart": base,
    "package:image_picker_platform_interface/src/types/picked_file/base.dart": base$,
    "package:crypto/src/digest.dart": digest,
    "package:crypto/src/hash.dart": hash,
    "package:crypto/src/hmac.dart": hmac,
    "package:crypto/src/md5.dart": md5,
    "package:crypto/src/sha1.dart": sha1,
    "package:crypto/src/sha256.dart": sha256,
    "package:crypto/src/sha512.dart": sha512,
    "package:flutter_staggered_grid_view/src/rendering/uniform_track.dart": uniform_track$,
    "package:typed_data/src/typed_queue.dart": typed_queue,
    "package:typed_data/typed_buffers.dart": typed_buffers,
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_list_result.dart": method_channel_list_result,
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_task.dart": method_channel_task,
    "package:crypto/src/digest_sink.dart": digest_sink,
    "package:crypto/src/hash_sink.dart": hash_sink,
    "package:crypto/src/utils.dart": utils$6,
    "package:crypto/src/sha512_slowsinks.dart": sha512_slowsinks,
    "package:typed_data/src/typed_buffer.dart": typed_buffer,
    "package:firebase_storage_platform_interface/src/method_channel/method_channel_task_snapshot.dart": method_channel_task_snapshot
  }, {
    "package:firebase_auth/firebase_auth.dart": ["src/confirmation_result.dart", "src/firebase_auth.dart", "src/multi_factor.dart", "src/recaptcha_verifier.dart", "src/user.dart", "src/user_credential.dart"],
    "package:firebase_core/firebase_core.dart": ["src/firebase_app.dart", "src/firebase.dart"],
    "package:firebase_core_web/firebase_core_web.dart": ["src/firebase_app_web.dart", "src/firebase_core_web.dart", "src/firebase_sdk_version.dart"],
    "package:firebase_core_platform_interface/firebase_core_platform_interface.dart": ["src/firebase_core_exceptions.dart", "src/firebase_exception.dart", "src/firebase_options.dart", "src/method_channel/method_channel_firebase.dart", "src/method_channel/method_channel_firebase_app.dart", "src/platform_interface/platform_interface_firebase.dart", "src/platform_interface/platform_interface_firebase_app.dart", "src/platform_interface/platform_interface_firebase_plugin.dart"],
    "package:provider/src/provider.dart": ["deferred_inherited_provider.dart", "devtool.dart", "inherited_provider.dart"],
    "package:cloud_firestore/cloud_firestore.dart": ["src/aggregate_query.dart", "src/aggregate_query_snapshot.dart", "src/collection_reference.dart", "src/document_change.dart", "src/document_reference.dart", "src/document_snapshot.dart", "src/field_value.dart", "src/filters.dart", "src/firestore.dart", "src/load_bundle_task.dart", "src/load_bundle_task_snapshot.dart", "src/query.dart", "src/query_document_snapshot.dart", "src/query_snapshot.dart", "src/snapshot_metadata.dart", "src/transaction.dart", "src/utils/codec_utility.dart", "src/write_batch.dart"],
    "package:firebase_storage/firebase_storage.dart": ["src/firebase_storage.dart", "src/list_result.dart", "src/reference.dart", "src/task.dart", "src/task_snapshot.dart"],
    "package:sprintf/sprintf.dart": ["src/formatters/Formatter.dart", "src/formatters/int_formatter.dart", "src/formatters/float_formatter.dart", "src/formatters/string_formatter.dart", "src/sprintf_impl.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/confirmation_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/platform_interface/platform_interface_firebase_plugin.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/firebase_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/firebase_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/firebase_auth_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/recaptcha_verifier.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth-4.16.0/lib/src/user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core-2.24.2/lib/src/firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core-2.24.2/lib/src/firebase.dart","/zapp/project/lib/provider/user_provider.dart","/zapp/project/lib/responsive/mobile_screen_layout.dart","/zapp/project/lib/screens/login_screen.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/cloud_firestore_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/src/file_picker.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/_internal/file_picker_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_firebase_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/firebase_auth_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/platform_interface/platform_interface_firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_app_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_core_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/platform_interface/platform_interface_firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/firebase_core_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/firebase_sdk_version.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/platform_interface/image_picker_platform.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_for_web-3.0.1/lib/image_picker_for_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/firebase_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/method_channel/method_channel_firebase.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/method_channel/method_channel_firebase_app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/firebase_core_exceptions.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/firebase_core_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/deferred_inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/async_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/listenable_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/change_notifier_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/consumer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/devtool.dart","/workspace/build/dart-sdk/packages/flutter/lib/src/widgets/framework.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/proxy_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/reassemble_handler.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/selector.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/value_listenable_provider.dart","/zapp/project/lib/model/user.dart","/zapp/project/lib/resources/auth_methods.dart","/zapp/project/lib/utils/colors.dart","/zapp/project/lib/utils/global_variable.dart","/zapp/project/lib/utils/utils.dart","/zapp/project/lib/screens/signup_screen.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/cloud_firestore_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/internals.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_load_bundle_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/load_bundle_task_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/utils/web_utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/query_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/collection_reference_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_document_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/document_reference_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_field_value_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/field_value_factory_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/utils/js.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/interop/firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_transaction.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/transaction_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_write_batch.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/write_batch_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/utils/web_utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_confirmation_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_confirmation_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_recaptcha_verifier_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_recaptcha_verifier_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/platform_interface/platform_interface_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/firebase_auth_web_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/interop/auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/interop/multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/js.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/core.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/platform_interface/platform_interface_firebase_storage.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/firebase_storage_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_for_web-3.0.1/lib/src/image_resizer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/action_code_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/action_code_settings.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/additional_user_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/auth_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/auth_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/firebase_auth_multi_factor_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/id_token_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/apple_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/oauth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/email_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/facebook_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/github_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/google_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/microsoft_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/phone_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/saml_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/twitter_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/providers/yahoo_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/types.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/user_info.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/user_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/pigeon/mocks.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_platform_interface-5.0.0/lib/src/pigeon/test_api.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/aggregate_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/aggregate_query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/collection_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/document_change.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/document_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/document_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_field_value.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/field_value.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/filters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/filters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/load_bundle_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/load_bundle_task_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/query_document_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/snapshot_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/transaction.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/utils/codec_utility.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore-4.14.0/lib/src/write_batch.dart","/zapp/project/lib/resources/storage_methods.dart","/zapp/project/lib/screens/add_post_screen.dart","/zapp/project/lib/screens/feed_screen.dart","/zapp/project/lib/screens/profile_screen.dart","/zapp/project/lib/screens/search_screen.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker-1.0.4/lib/image_picker.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/internal/pointer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/utils/firestore_message_codec.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/blob.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/field_path.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/field_path_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/geo_point.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/get_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/load_bundle_task_state.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/persistence_settings.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_aggregate_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_aggregate_query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_collection_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_document_change.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_document_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_index_definitions.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_load_bundle_task_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/platform_interface_query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/platform_interface/utils/load_bundle_task_state.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/set_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/settings.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/snapshot_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/timestamp.dart","/zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.16/lib/_flutterfire_internals.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/utils/decode_utility.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/utils/js_interop.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/utils/encode_utility.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/field_value_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/interop/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_web-3.9.0/lib/src/aggregate_query_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/src/platform_file.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/src/file_picker_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_web-5.8.13/lib/src/interop/auth_interop.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_core_web-2.10.0/lib/src/interop/app.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/interop/storage.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/platform_interface/platform_interface_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/reference_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/utils/errors.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/types.dart","/zapp/pub/.pub_cache/hosted/pub.dev/mime-1.0.4/lib/src/mime_shared.dart","/zapp/pub/.pub_cache/hosted/pub.dev/mime-1.0.4/lib/src/mime_multipart_transformer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/mime-1.0.4/lib/src/mime_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_for_web-3.0.1/lib/src/image_resizer_utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/method_channel_firebase_auth.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/method_channel_multi_factor.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage-11.6.0/lib/src/firebase_storage.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage-11.6.0/lib/src/list_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage-11.6.0/lib/src/reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage-11.6.0/lib/src/task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage-11.6.0/lib/src/task_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/uuid.dart","/zapp/project/lib/resources/firestore_methods.dart","/zapp/project/lib/utils/dimensions.dart","/zapp/project/lib/widgets/post_card.dart","/zapp/project/lib/widgets/follow_button.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_field_value_factory.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_firestore.dart","/zapp/pub/.pub_cache/hosted/pub.dev/_flutterfire_internals-1.3.16/lib/src/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/src/file_picker_io.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/src/file_picker_macos.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/src/linux/file_picker_linux.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/src/windows/stub.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/authentication_challenge.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/case_insensitive_map.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/http_date.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/media_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/full_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/list_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/platform_interface/platform_interface_list_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/platform_interface/platform_interface_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/platform_interface/platform_interface_task_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/put_string_format.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/settable_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/task_state.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/http.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/utils/metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/task_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/utils/list.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/utils/metadata_cache.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/method_channel/method_channel_image_picker.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/camera_delegate.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/camera_device.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/image_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/image_source.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/lost_data_response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/media_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/media_selection_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/multi_image_picker_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/retrieve_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/mime-1.0.4/lib/src/bound_multipart_stream.dart","/zapp/pub/.pub_cache/hosted/pub.dev/mime-1.0.4/lib/src/char_code.dart","/zapp/pub/.pub_cache/hosted/pub.dev/mime-1.0.4/lib/src/default_extension_map.dart","/zapp/pub/.pub_cache/hosted/pub.dev/mime-1.0.4/lib/src/magic_number.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/utils/convert_auth_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/method_channel_user.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/method_channel_user_credential.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/utils/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_auth_platform_interface-7.0.9/lib/src/method_channel/utils/pigeon_helper.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage-11.6.0/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/data.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/rng.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/validation.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/enums.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/parsing.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/uuid_value.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/v1.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/v4.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/v5.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/v6.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/v7.dart","/zapp/pub/.pub_cache/hosted/pub.dev/uuid-4.1.0/lib/v8.dart","/zapp/project/lib/model/post.dart","/zapp/project/lib/screens/comments_screen.dart","/zapp/project/lib/widgets/like_animation.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/layouts/quilted.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/layouts/staired.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/layouts/sliver_patterned_grid_delegate.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/layouts/woven.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/rendering/sliver_masonry_grid.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/rendering/sliver_simple_grid_delegate.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/widgets/aligned_grid_view.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/widgets/masonry_grid_view.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/widgets/sliver_aligned_grid.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/widgets/sliver_masonry_grid.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/widgets/staggered_grid.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/rendering/staggered_grid.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/widgets/staggered_grid_tile.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_field_value.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_load_bundle_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_query_snapshot.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_collection_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_document_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_transaction.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_write_batch.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/utils/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/src/linux/dialog_handler.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/scan.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/decoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/encoder.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/method_channel/method_channel_firebase_storage.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/internal/pointer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/streamed_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/base_client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/byte_stream.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_file.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_request.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/streamed_response.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/utils/task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/list_result_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cross_file-0.3.3+6/lib/src/types/base.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cross_file-0.3.3+6/lib/src/types/html.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/picked_file/lost_data.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/picked_file/base.dart","/zapp/pub/.pub_cache/hosted/pub.dev/image_picker_platform_interface-2.9.1/lib/src/types/picked_file/html.dart","/zapp/pub/.pub_cache/hosted/pub.dev/sprintf-7.0.0/lib/src/formatters/Formatter.dart","/zapp/pub/.pub_cache/hosted/pub.dev/sprintf-7.0.0/lib/src/formatters/int_formatter.dart","/zapp/pub/.pub_cache/hosted/pub.dev/sprintf-7.0.0/lib/src/formatters/float_formatter.dart","/zapp/pub/.pub_cache/hosted/pub.dev/sprintf-7.0.0/lib/src/formatters/string_formatter.dart","/zapp/pub/.pub_cache/hosted/pub.dev/sprintf-7.0.0/lib/src/sprintf_impl.dart","/zapp/pub/.pub_cache/hosted/pub.dev/sprintf-7.0.0/lib/sprintf.dart","/zapp/project/lib/widgets/comment_card.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/foundation/extensions.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/foundation/constants.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/widgets/uniform_track.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_aggregate_query.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/method_channel_document_change.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cloud_firestore_platform_interface-6.1.0/lib/src/method_channel/utils/auto_id_generator.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/src/linux/kdialog_handler.dart","/zapp/pub/.pub_cache/hosted/pub.dev/file_picker-5.3.1/lib/src/linux/qarma_and_zenity_handler.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http_parser-4.0.2/lib/src/chunked_coding/charcodes.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/pigeon/messages.pigeon.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/method_channel/utils/exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/method_channel/method_channel_reference.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/browser_client.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/multipart_file_stub.dart","/zapp/pub/.pub_cache/hosted/pub.dev/http-0.13.6/lib/src/boundary_characters.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_web-3.6.17/lib/src/task_snapshot_web.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cross_file-0.3.3+6/lib/src/web_helpers/web_helpers.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/digest.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/hash.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/hmac.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/md5.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/hash_sink.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/sha1.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/sha256.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/sha512.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_staggered_grid_view-0.7.0/lib/src/rendering/uniform_track.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_queue.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/method_channel/method_channel_list_result.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/method_channel/method_channel_task.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/digest_sink.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/crypto-3.0.3/lib/src/sha512_slowsinks.dart","/zapp/pub/.pub_cache/hosted/pub.dev/typed_data-1.3.2/lib/src/typed_buffer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/firebase_storage_platform_interface-5.1.3/lib/src/method_channel/method_channel_task_snapshot.dart"],"names":[],"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T;QACA;QACA;QACA;QACA;QACG;QACK;QACR;QACa;QACb;QAC6B;QAE1B;IAbM;IACT;IACA;IAYgB,2BAAE,uCACjB,QAAQ,2BACgB,sBAAsB,wBACxB,oBAAoB,sBACtB,kBAAkB;AAExC,qEACO,GAAG,mBACS,eAAe,WACvB,OAAO,cACJ,UAAU,WACb,OAAO,WACP,OAAO,cACJ,UAAU,WACb,OAAO,eACH,WAAW,uBACe,OAAnB,kBAAkB,EAAlB,eAAsB,AAAS,QAAD,yCAC/B,iBAAiB,2BACX,uBAAuB,iBACjC,aAAa,gBACd,YAAY;;EAC3B;;;QAkBA;QACA;QACA;QACa;QACZ;QACS;QACV;QACe;QACN;QACgB;QACzB;QACA;QACA;QACA;QACA;QACA;QACG;QACH;QACa;QACgB;QAE1B;QACH;IAdS;IAGT;IACA;IAWgB,2BAAE,0CACjB,WAAW,eACC,SAAS,0BACG,sBAAsB,wBACxB,oBAAoB,sBACtB,kBAAkB;AAExC,qEACO,GAAG,mBACS,eAAe,WACvB,OAAO,cACJ,UAAU,WACb,OAAO,WACP,OAAO,cACJ,UAAU,WACb,OAAO,eACH,WAAW,uBACe,OAAnB,kBAAkB,EAAlB,eAAsB,SAAS,6BAChC,iBAAiB,2BACX,uBAAuB,iBACjC,aAAa,gBACd,YAAY;;EAC3B;;QASA;QACA;QACA;QACa;QACZ;QACS;QACV;QACe;QACN;QACA;QACT;QACA;QACG;QACH;QACa;QACgB;QAE1B;QACH;IAVS;IACA;IACT;IACA;AAQF,qEACQ,GAAG,mBACS,eAAe,WACvB,OAAO,cACJ,UAAU,WACb,OAAO,WACP,OAAO,cACJ,UAAU,WACb,OAAO,eACH,WAAW,sBACJ,kBAAkB,qBACnB,iBAAiB,2BACX,uBAAuB,iBACjC,aAAa,gBACd,YAAY;;EAC3B;;;QAkBA;QACA;QACA;QACa;QACZ;QACS;QACV;QACe;QACP;QACR;QACA;QACyB;QACzB;QACA;QACA;QACA;QACG;QACH;QACa;QACgB;QAE1B;QACH;IAbA;IACA;IAaY,yBAAE,qGACG,cAAc;IAEf,2BAAE,0CACjB,WAAW,eACC,SAAS,0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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    firebase_auth: firebase_auth,
    firebase_core: firebase_core,
    provider: provider,
    zapp__project__lib__provider__user_provider: user_provider,
    zapp__project__lib__responsive__mobile_screen_layout: mobile_screen_layout,
    zapp__project__lib__screens__login_screen: login_screen,
    cloud_firestore_web: cloud_firestore_web,
    _internal__file_picker_web: file_picker_web,
    firebase_auth_web: firebase_auth_web,
    firebase_core_web: firebase_core_web,
    firebase_storage_web: firebase_storage_web,
    image_picker_for_web: image_picker_for_web,
    firebase_auth_platform_interface: firebase_auth_platform_interface,
    firebase_core_platform_interface: firebase_core_platform_interface,
    src__async_provider: async_provider,
    src__change_notifier_provider: change_notifier_provider,
    src__consumer: consumer,
    src__listenable_provider: listenable_provider,
    src__provider: provider$,
    src__proxy_provider: proxy_provider,
    src__reassemble_handler: reassemble_handler,
    src__selector: selector$,
    src__value_listenable_provider: value_listenable_provider,
    zapp__project__lib__model__user: user$,
    zapp__project__lib__resources__auth_methods: auth_methods,
    zapp__project__lib__utils__colors: colors$0,
    zapp__project__lib__utils__global_variable: global_variable,
    zapp__project__lib__utils__utils: utils,
    zapp__project__lib__screens__signup_screen: signup_screen,
    cloud_firestore_platform_interface: cloud_firestore_platform_interface,
    src__internals: internals,
    src__load_bundle_task_web: load_bundle_task_web,
    src__utils__web_utils: web_utils,
    firebase_core_web_interop: firebase_core_web_interop,
    src__collection_reference_web: collection_reference_web,
    src__document_reference_web: document_reference_web,
    src__field_value_factory_web: field_value_factory_web,
    src__interop__firestore: firestore$,
    src__query_web: query_web,
    src__transaction_web: transaction_web,
    src__write_batch_web: write_batch_web,
    file_picker: file_picker,
    src__firebase_auth_web_multi_factor: firebase_auth_web_multi_factor,
    src__interop__utils__utils: utils$,
    src__utils__web_utils: web_utils$,
    src__firebase_auth_web_confirmation_result: firebase_auth_web_confirmation_result,
    src__firebase_auth_web_recaptcha_verifier_factory: firebase_auth_web_recaptcha_verifier_factory,
    src__firebase_auth_web_user: firebase_auth_web_user,
    src__firebase_auth_web_user_credential: firebase_auth_web_user_credential,
    src__interop__auth: auth$,
    src__interop__multi_factor: multi_factor,
    src__interop__js: js$,
    src__interop__core: core$,
    src__firebase_storage_web: firebase_storage_web$,
    image_picker_platform_interface: image_picker_platform_interface,
    mime: mime,
    src__image_resizer: image_resizer,
    src__action_code_info: action_code_info,
    src__action_code_settings: action_code_settings,
    src__additional_user_info: additional_user_info,
    src__auth_credential: auth_credential,
    src__auth_provider: auth_provider,
    src__firebase_auth_exception: firebase_auth_exception,
    src__firebase_auth_multi_factor_exception: firebase_auth_multi_factor_exception,
    src__id_token_result: id_token_result,
    src__pigeon__messages$46pigeon: messages$46pigeon,
    src__platform_interface__platform_interface_confirmation_result: platform_interface_confirmation_result,
    src__platform_interface__platform_interface_firebase_auth: platform_interface_firebase_auth,
    src__platform_interface__platform_interface_multi_factor: platform_interface_multi_factor,
    src__platform_interface__platform_interface_recaptcha_verifier_factory: platform_interface_recaptcha_verifier_factory,
    src__platform_interface__platform_interface_user: platform_interface_user,
    src__platform_interface__platform_interface_user_credential: platform_interface_user_credential,
    src__providers__apple_auth: apple_auth,
    src__providers__email_auth: email_auth,
    src__providers__facebook_auth: facebook_auth,
    src__providers__github_auth: github_auth,
    src__providers__google_auth: google_auth,
    src__providers__microsoft_auth: microsoft_auth,
    src__providers__oauth: oauth,
    src__providers__phone_auth: phone_auth,
    src__providers__saml_auth: saml_auth,
    src__providers__twitter_auth: twitter_auth,
    src__providers__yahoo_auth: yahoo_auth,
    src__types: types,
    src__user_info: user_info,
    src__user_metadata: user_metadata,
    src__pigeon__messages$46pigeon: messages$46pigeon$,
    plugin_platform_interface: plugin_platform_interface,
    src__pigeon__mocks: mocks,
    src__pigeon__test_api: test_api,
    nested: nested,
    cloud_firestore: cloud_firestore,
    zapp__project__lib__resources__storage_methods: storage_methods,
    zapp__project__lib__screens__add_post_screen: add_post_screen,
    zapp__project__lib__screens__feed_screen: feed_screen,
    zapp__project__lib__screens__profile_screen: profile_screen,
    zapp__project__lib__screens__search_screen: search_screen,
    image_picker: image_picker,
    src__internal__pointer: pointer,
    src__pigeon__messages$46pigeon: messages$46pigeon$0,
    src__blob: blob,
    src__field_path: field_path,
    src__field_path_type: field_path_type,
    src__filters: filters,
    src__geo_point: geo_point,
    src__get_options: get_options,
    src__load_bundle_task_state: load_bundle_task_state,
    src__persistence_settings: persistence_settings,
    src__platform_interface__platform_interface_aggregate_query: platform_interface_aggregate_query,
    src__platform_interface__platform_interface_aggregate_query_snapshot: platform_interface_aggregate_query_snapshot,
    src__platform_interface__platform_interface_collection_reference: platform_interface_collection_reference,
    src__platform_interface__platform_interface_document_change: platform_interface_document_change,
    src__platform_interface__platform_interface_document_reference: platform_interface_document_reference,
    src__platform_interface__platform_interface_document_snapshot: platform_interface_document_snapshot,
    src__platform_interface__platform_interface_field_value: platform_interface_field_value,
    src__platform_interface__platform_interface_field_value_factory: platform_interface_field_value_factory,
    src__platform_interface__platform_interface_firestore: platform_interface_firestore,
    src__platform_interface__platform_interface_index_definitions: platform_interface_index_definitions,
    src__platform_interface__platform_interface_load_bundle_task: platform_interface_load_bundle_task,
    src__platform_interface__platform_interface_load_bundle_task_snapshot: platform_interface_load_bundle_task_snapshot,
    src__platform_interface__platform_interface_query: platform_interface_query,
    src__platform_interface__platform_interface_query_snapshot: platform_interface_query_snapshot,
    src__platform_interface__platform_interface_transaction: platform_interface_transaction,
    src__platform_interface__platform_interface_write_batch: platform_interface_write_batch,
    src__platform_interface__utils__load_bundle_task_state: load_bundle_task_state$,
    src__set_options: set_options,
    src__settings: settings,
    src__snapshot_metadata: snapshot_metadata,
    src__timestamp: timestamp,
    _flutterfire_internals: _flutterfire_internals,
    src__interop__firestore_interop: firestore_interop,
    src__utils__decode_utility: decode_utility,
    src__interop__utils__es6_interop: es6_interop,
    src__interop__utils__func: func,
    src__interop__utils__js: js$0,
    src__interop__utils__js_interop: js_interop,
    src__interop__utils__utils: utils$0,
    src__utils__encode_utility: encode_utility,
    src__field_value_web: field_value_web,
    src__interop__utils__utils: utils$1,
    src__aggregate_query_web: aggregate_query_web,
    src__file_picker: file_picker$,
    src__platform_file: platform_file,
    src__file_picker_result: file_picker_result,
    src__interop__window_interop: window_interop,
    http_parser: http_parser,
    src__interop__auth_interop: auth_interop,
    src__interop__app: app$,
    src__interop__core_interop: core_interop,
    src__interop__app_interop: app_interop,
    firebase_storage_platform_interface: firebase_storage_platform_interface,
    src__interop__storage: storage,
    src__reference_web: reference_web,
    src__utils__errors: errors,
    cross_file: cross_file,
    src__platform_interface__image_picker_platform: image_picker_platform,
    src__types__types: types$,
    src__mime_multipart_transformer: mime_multipart_transformer,
    src__mime_shared: mime_shared,
    src__mime_type: mime_type,
    src__image_resizer_utils: image_resizer_utils,
    src__method_channel__method_channel_firebase_auth: method_channel_firebase_auth,
    src__method_channel__method_channel_multi_factor: method_channel_multi_factor,
    firebase_storage: firebase_storage,
    uuid: uuid,
    zapp__project__lib__resources__firestore_methods: firestore_methods,
    zapp__project__lib__utils__dimensions: dimensions,
    zapp__project__lib__widgets__post_card: post_card,
    zapp__project__lib__widgets__follow_button: follow_button,
    flutter_staggered_grid_view: flutter_staggered_grid_view,
    src__method_channel__utils__firestore_message_codec: firestore_message_codec,
    src__method_channel__method_channel_field_value_factory: method_channel_field_value_factory,
    src__method_channel__method_channel_firestore: method_channel_firestore,
    src__exception: exception$,
    src__file_picker_io: file_picker_io,
    src__file_picker_macos: file_picker_macos,
    src__linux__file_picker_linux: file_picker_linux,
    src__windows__stub: stub,
    src__authentication_challenge: authentication_challenge,
    src__case_insensitive_map: case_insensitive_map,
    src__chunked_coding: chunked_coding,
    src__http_date: http_date,
    src__media_type: media_type,
    src__full_metadata: full_metadata,
    src__list_options: list_options,
    src__platform_interface__platform_interface_firebase_storage: platform_interface_firebase_storage,
    src__platform_interface__platform_interface_list_result: platform_interface_list_result,
    src__platform_interface__platform_interface_reference: platform_interface_reference,
    src__platform_interface__platform_interface_task: platform_interface_task,
    src__platform_interface__platform_interface_task_snapshot: platform_interface_task_snapshot,
    src__put_string_format: put_string_format,
    src__settable_metadata: settable_metadata,
    src__task_state: task_state,
    src__interop__storage_interop: storage_interop,
    http: http,
    src__utils__metadata: metadata$,
    src__task_web: task_web,
    src__utils__list: list,
    src__utils__metadata_cache: metadata_cache,
    src__x_file: x_file,
    src__method_channel__method_channel_image_picker: method_channel_image_picker,
    src__types__camera_delegate: camera_delegate,
    src__types__camera_device: camera_device,
    src__types__image_options: image_options,
    src__types__image_source: image_source,
    src__types__lost_data_response: lost_data_response,
    src__types__media_options: media_options,
    src__types__media_selection_type: media_selection_type,
    src__types__multi_image_picker_options: multi_image_picker_options,
    src__types__picked_file__picked_file: picked_file,
    src__types__retrieve_type: retrieve_type,
    src__bound_multipart_stream: bound_multipart_stream,
    src__char_code: char_code,
    src__default_extension_map: default_extension_map,
    src__magic_number: magic_number,
    src__method_channel__utils__convert_auth_provider: convert_auth_provider,
    src__method_channel__method_channel_user: method_channel_user,
    src__method_channel__method_channel_user_credential: method_channel_user_credential,
    src__method_channel__utils__exception: exception$0,
    src__method_channel__utils__pigeon_helper: pigeon_helper,
    src__utils: utils$2,
    data: data,
    rng: rng$,
    validation: validation,
    enums: enums,
    parsing: parsing,
    uuid_value: uuid_value,
    v1: v1,
    v4: v4,
    v5: v5,
    v6: v6,
    v7: v7,
    v8: v8,
    zapp__project__lib__model__post: post$,
    zapp__project__lib__screens__comments_screen: comments_screen,
    zapp__project__lib__widgets__like_animation: like_animation,
    src__layouts__quilted: quilted,
    src__layouts__staired: staired,
    src__layouts__woven: woven,
    src__rendering__sliver_masonry_grid: sliver_masonry_grid,
    src__rendering__sliver_simple_grid_delegate: sliver_simple_grid_delegate,
    src__widgets__aligned_grid_view: aligned_grid_view,
    src__widgets__masonry_grid_view: masonry_grid_view,
    src__widgets__sliver_aligned_grid: sliver_aligned_grid,
    src__widgets__sliver_masonry_grid: sliver_masonry_grid$,
    src__widgets__staggered_grid: staggered_grid,
    src__widgets__staggered_grid_tile: staggered_grid_tile,
    src__method_channel__method_channel_field_value: method_channel_field_value,
    src__method_channel__method_channel_query: method_channel_query,
    src__method_channel__method_channel_load_bundle_task: method_channel_load_bundle_task,
    src__method_channel__method_channel_query_snapshot: method_channel_query_snapshot,
    src__method_channel__method_channel_collection_reference: method_channel_collection_reference,
    src__method_channel__method_channel_document_reference: method_channel_document_reference,
    src__method_channel__method_channel_transaction: method_channel_transaction,
    src__method_channel__method_channel_write_batch: method_channel_write_batch,
    src__method_channel__utils__exception: exception,
    src__utils: utils$3,
    src__linux__dialog_handler: dialog_handler,
    src__scan: scan,
    src__utils: utils$4,
    src__chunked_coding__decoder: decoder,
    src__chunked_coding__encoder: encoder,
    src__method_channel__method_channel_firebase_storage: method_channel_firebase_storage,
    src__internal__pointer: pointer$,
    src__client: client$,
    src__exception: exception$1,
    src__request: request$,
    src__response: response$,
    src__streamed_request: streamed_request,
    src__base_client: base_client,
    src__base_request: base_request,
    src__base_response: base_response,
    src__byte_stream: byte_stream,
    src__multipart_file: multipart_file,
    src__multipart_request: multipart_request,
    src__streamed_response: streamed_response,
    src__utils__task: task,
    src__list_result_web: list_result_web,
    src__types__html: html$,
    src__types__picked_file__lost_data: lost_data,
    src__types__picked_file__html: html$0,
    crypto: crypto,
    sprintf: sprintf,
    zapp__project__lib__widgets__comment_card: comment_card,
    src__foundation__extensions: extensions,
    src__foundation__constants: constants,
    src__layouts__sliver_patterned_grid_delegate: sliver_patterned_grid_delegate,
    src__widgets__uniform_track: uniform_track,
    src__rendering__staggered_grid: staggered_grid$,
    src__method_channel__method_channel_aggregate_query: method_channel_aggregate_query,
    src__method_channel__method_channel_document_change: method_channel_document_change,
    src__method_channel__utils__auto_id_generator: auto_id_generator,
    src__linux__kdialog_handler: kdialog_handler,
    src__linux__qarma_and_zenity_handler: qarma_and_zenity_handler,
    typed_data: typed_data$,
    src__chunked_coding__charcodes: charcodes,
    src__pigeon__messages$46pigeon: messages$46pigeon$1,
    src__method_channel__utils__exception: exception$2,
    src__method_channel__method_channel_reference: method_channel_reference,
    src__browser_client: browser_client,
    src__utils: utils$5,
    src__multipart_file_stub: multipart_file_stub,
    src__boundary_characters: boundary_characters,
    src__task_snapshot_web: task_snapshot_web,
    src__web_helpers__web_helpers: web_helpers,
    src__types__base: base,
    src__types__picked_file__base: base$,
    src__digest: digest,
    src__hash: hash,
    src__hmac: hmac,
    src__md5: md5,
    src__sha1: sha1,
    src__sha256: sha256,
    src__sha512: sha512,
    src__rendering__uniform_track: uniform_track$,
    src__typed_queue: typed_queue,
    typed_buffers: typed_buffers,
    src__method_channel__method_channel_list_result: method_channel_list_result,
    src__method_channel__method_channel_task: method_channel_task,
    src__digest_sink: digest_sink,
    src__hash_sink: hash_sink,
    src__utils: utils$6,
    src__sha512_slowsinks: sha512_slowsinks,
    src__typed_buffer: typed_buffer,
    src__method_channel__method_channel_task_snapshot: method_channel_task_snapshot
  };
}));

//# sourceMappingURL=main.js.map
